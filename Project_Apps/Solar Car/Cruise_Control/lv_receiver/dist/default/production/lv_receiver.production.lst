

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Nov 27 00:01:29 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 1.44
    35                           ; Generated 14/09/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F26K80 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  0007E8                     __pidataCOMRAM:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _delayVal
    74  0007E8  0800               	dw	2048
    75                           
    76                           	psect	nvCOMRAM
    77  00003F                     __pnvCOMRAM:
    78                           	opt stack 0
    79  00003F                     _TMR1_InterruptHandler:
    80                           	opt stack 0
    81  00003F                     	ds	2
    82  000041                     _timer1ReloadVal:
    83                           	opt stack 0
    84  000041                     	ds	2
    85  0000                     _BRGCON3	set	3653
    86  0000                     _BRGCON2	set	3652
    87  0000                     _BRGCON1	set	3651
    88  0000                     _RXF5SIDL	set	3829
    89  0000                     _RXF5SIDH	set	3828
    90  0000                     _RXF5EIDL	set	3831
    91  0000                     _RXF5EIDH	set	3830
    92  0000                     _RXF4SIDL	set	3825
    93  0000                     _RXF4SIDH	set	3824
    94  0000                     _RXF4EIDL	set	3827
    95  0000                     _RXF4EIDH	set	3826
    96  0000                     _RXF3SIDL	set	3821
    97  0000                     _RXF3SIDH	set	3820
    98  0000                     _RXF3EIDL	set	3823
    99  0000                     _RXF3EIDH	set	3822
   100  0000                     _RXF2SIDL	set	3817
   101  0000                     _RXF2SIDH	set	3816
   102  0000                     _RXF2EIDL	set	3819
   103  0000                     _RXF2EIDH	set	3818
   104  0000                     _RXF1SIDL	set	3813
   105  0000                     _RXF1SIDH	set	3812
   106  0000                     _RXF1EIDL	set	3815
   107  0000                     _RXF1EIDH	set	3814
   108  0000                     _RXF0SIDL	set	3809
   109  0000                     _RXF0SIDH	set	3808
   110  0000                     _RXF0EIDL	set	3811
   111  0000                     _RXF0EIDH	set	3810
   112  0000                     _RXM1SIDL	set	3837
   113  0000                     _RXM1SIDH	set	3836
   114  0000                     _RXM1EIDL	set	3839
   115  0000                     _RXM1EIDH	set	3838
   116  0000                     _RXM0SIDL	set	3833
   117  0000                     _RXM0SIDH	set	3832
   118  0000                     _RXM0EIDL	set	3835
   119  0000                     _RXM0EIDH	set	3834
   120  0000                     _WPUB	set	3931
   121  0000                     _ANCON1	set	3932
   122  0000                     _ANCON0	set	3933
   123  0000                     _RXB1D7	set	3901
   124  0000                     _RXB1D6	set	3900
   125  0000                     _RXB1D5	set	3899
   126  0000                     _RXB1D4	set	3898
   127  0000                     _RXB1D3	set	3897
   128  0000                     _RXB1D2	set	3896
   129  0000                     _RXB1D1	set	3895
   130  0000                     _RXB1D0	set	3894
   131  0000                     _RXB1DLC	set	3893
   132  0000                     _RXB1SIDH	set	3889
   133  0000                     _RXB1EIDL	set	3892
   134  0000                     _RXB1EIDH	set	3891
   135  0000                     _RXB1SIDL	set	3890
   136  0000                     _RXB1CONbits	set	3888
   137  0000                     _TXB2D7	set	3853
   138  0000                     _TXB2D6	set	3852
   139  0000                     _TXB2D5	set	3851
   140  0000                     _TXB2D4	set	3850
   141  0000                     _TXB2D3	set	3849
   142  0000                     _TXB2D2	set	3848
   143  0000                     _TXB2D1	set	3847
   144  0000                     _TXB2D0	set	3846
   145  0000                     _TXB2DLC	set	3845
   146  0000                     _TXB2SIDL	set	3842
   147  0000                     _TXB2SIDH	set	3841
   148  0000                     _TXB2EIDL	set	3844
   149  0000                     _TXB2EIDH	set	3843
   150  0000                     _TXB2CONbits	set	3840
   151  0000                     _TXB1D7	set	3869
   152  0000                     _TXB1D6	set	3868
   153  0000                     _TXB1D5	set	3867
   154  0000                     _TXB1D4	set	3866
   155  0000                     _TXB1D3	set	3865
   156  0000                     _TXB1D2	set	3864
   157  0000                     _TXB1D1	set	3863
   158  0000                     _TXB1D0	set	3862
   159  0000                     _TXB1DLC	set	3861
   160  0000                     _TXB1SIDL	set	3858
   161  0000                     _TXB1SIDH	set	3857
   162  0000                     _TXB1EIDL	set	3860
   163  0000                     _TXB1EIDH	set	3859
   164  0000                     _TXB1CONbits	set	3856
   165  0000                     _TXB0D7	set	3885
   166  0000                     _TXB0D6	set	3884
   167  0000                     _TXB0D5	set	3883
   168  0000                     _TXB0D4	set	3882
   169  0000                     _TXB0D3	set	3881
   170  0000                     _TXB0D2	set	3880
   171  0000                     _TXB0D1	set	3879
   172  0000                     _TXB0D0	set	3878
   173  0000                     _TXB0DLC	set	3877
   174  0000                     _TXB0SIDL	set	3874
   175  0000                     _TXB0SIDH	set	3873
   176  0000                     _TXB0EIDL	set	3876
   177  0000                     _TXB0EIDH	set	3875
   178  0000                     _TXB0CONbits	set	3872
   179  0000                     _T1GCONbits	set	4010
   180  0000                     _T1CONbits	set	4045
   181  0000                     _TMR1L	set	4046
   182  0000                     _TMR1H	set	4047
   183  0000                     _T1GCON	set	4010
   184  0000                     _T1CON	set	4045
   185  0000                     _PIR1bits	set	3998
   186  0000                     _PIE1bits	set	3997
   187  0000                     _INTCONbits	set	4082
   188  0000                     _RCONbits	set	4048
   189  0000                     _TRISC	set	3988
   190  0000                     _TRISB	set	3987
   191  0000                     _TRISA	set	3986
   192  0000                     _LATC	set	3979
   193  0000                     _LATB	set	3978
   194  0000                     _LATA	set	3977
   195  0000                     _LATCbits	set	3979
   196  0000                     _LATBbits	set	3978
   197  0000                     _COMSTATbits	set	3953
   198  0000                     _RXB0D7	set	3949
   199  0000                     _RXB0D6	set	3948
   200  0000                     _RXB0D5	set	3947
   201  0000                     _RXB0D4	set	3946
   202  0000                     _RXB0D3	set	3945
   203  0000                     _RXB0D2	set	3944
   204  0000                     _RXB0D1	set	3943
   205  0000                     _RXB0D0	set	3942
   206  0000                     _RXB0DLC	set	3941
   207  0000                     _RXB0SIDH	set	3937
   208  0000                     _RXB0EIDL	set	3940
   209  0000                     _RXB0EIDH	set	3939
   210  0000                     _RXB0SIDL	set	3938
   211  0000                     _RXB0CONbits	set	3936
   212  0000                     _PIE5bits	set	3958
   213  0000                     _ECANCON	set	3954
   214  0000                     _CANSTAT	set	3950
   215  0000                     _CANCON	set	3951
   216  0000                     _PIR5bits	set	3959
   217  0000                     _REFOCON	set	3994
   218  0000                     _OSCTUNE	set	3995
   219  0000                     _OSCCON2	set	4050
   220  0000                     _OSCCON	set	4051
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  00070E                     __pcinit:
   226                           	opt stack 0
   227  00070E                     start_initialization:
   228                           	opt stack 0
   229  00070E                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Initialize objects allocated to COMRAM (2 bytes)
   233                           ; load TBLPTR registers with __pidataCOMRAM
   234  00070E  0EE8               	movlw	low __pidataCOMRAM
   235  000710  6EF6               	movwf	tblptrl,c
   236  000712  0E07               	movlw	high __pidataCOMRAM
   237  000714  6EF7               	movwf	tblptrh,c
   238  000716  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   239  000718  6EF8               	movwf	tblptru,c
   240  00071A  0009               	tblrd		*+	;fetch initializer
   241  00071C  CFF5 F043          	movff	tablat,__pdataCOMRAM
   242  000720  0009               	tblrd		*+	;fetch initializer
   243  000722  CFF5 F044          	movff	tablat,__pdataCOMRAM+1
   244                           
   245                           ; Clear objects allocated to COMRAM (16 bytes)
   246  000726  EE00  F02F         	lfsr	0,__pbssCOMRAM
   247  00072A  0E10               	movlw	16
   248  00072C                     clear_0:
   249  00072C  6AEE               	clrf	postinc0,c
   250  00072E  06E8               	decf	wreg,f,c
   251  000730  E1FD               	bnz	clear_0
   252  000732                     end_of_initialization:
   253                           	opt stack 0
   254  000732                     __end_of__initialization:
   255                           	opt stack 0
   256  000732  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   257  000734  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   258  000736  0E00               	movlw	low (__Lmediumconst shr (0+16))
   259  000738  6EF8               	movwf	tblptru,c
   260  00073A  0100               	movlb	0
   261  00073C  EFE4  F003         	goto	_main	;jump to C main() function
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           
   269                           	psect	bssCOMRAM
   270  00002F                     __pbssCOMRAM:
   271                           	opt stack 0
   272  00002F                     _ctr:
   273                           	opt stack 0
   274  00002F                     	ds	2
   275  000031                     _msg_r:
   276                           	opt stack 0
   277  000031                     	ds	14
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285                           	psect	dataCOMRAM
   286  000043                     __pdataCOMRAM:
   287                           	opt stack 0
   288  000043                     _delayVal:
   289                           	opt stack 0
   290  000043                     	ds	2
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           
   298                           	psect	cstackBANK0
   299  000060                     __pcstackBANK0:
   300                           	opt stack 0
   301  000060                     ??_ECAN_Initialize:
   302  000060                     TMR1_SetInterruptHandler@InterruptHandler:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x0
   306  000060                     	ds	2
   307  000062                     ??_TMR1_Initialize:
   308  000062                     
   309                           ; 1 bytes @ 0x2
   310  000062                     	ds	2
   311  000064                     tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           ; 1 bytes @ 0x4
   319                           
   320                           	psect	cstackCOMRAM
   321  000001                     __pcstackCOMRAM:
   322                           	opt stack 0
   323  000001                     ?_convertReg2ExtendedCANid:
   324                           	opt stack 0
   325  000001                     ?_convertReg2StandardCANid:
   326                           	opt stack 0
   327  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   328                           	opt stack 0
   329  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x0
   333  000001                     	ds	1
   334  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338  000002                     	ds	1
   339  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x2
   343  000003                     	ds	2
   344  000005                     ??_convertReg2ExtendedCANid:
   345  000005                     ??_convertReg2StandardCANid:
   346                           
   347                           ; 1 bytes @ 0x4
   348  000005                     	ds	2
   349  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x6
   353  000007                     	ds	1
   354  000008                     convertReg2StandardCANid@returnValue:
   355                           	opt stack 0
   356                           
   357                           ; 4 bytes @ 0x7
   358  000008                     	ds	1
   359  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x8
   363  000009                     	ds	1
   364  00000A                     convertReg2ExtendedCANid@returnValue:
   365                           	opt stack 0
   366                           
   367                           ; 4 bytes @ 0x9
   368  00000A                     	ds	2
   369  00000C                     convertReg2StandardCANid@ConvertedID:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0xB
   373  00000C                     	ds	2
   374  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378  00000E                     	ds	1
   379  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0xE
   383  00000F                     	ds	1
   384  000010                     convertReg2ExtendedCANid@ConvertedID:
   385                           	opt stack 0
   386                           
   387                           ; 4 bytes @ 0xF
   388  000010                     	ds	4
   389  000014                     CAN_receive@tempCanMsg:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x13
   393  000014                     	ds	2
   394  000016                     CAN_receive@returnValue:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x15
   398  000016                     	ds	1
   399  000017                     handleCAN@msg:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x16
   403  000017                     	ds	2
   404  000019                     ??_handleCAN:
   405                           
   406                           ; 1 bytes @ 0x18
   407  000019                     	ds	4
   408  00001D                     ??_INTERRUPT_InterruptManager:
   409                           
   410                           ; 1 bytes @ 0x1C
   411  00001D                     	ds	18
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           
   419 ;;
   420 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   421 ;;
   422 ;; *************** function _main *****************
   423 ;; Defined at:
   424 ;;		line 61 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels required when called:    8
   444 ;; This function calls:
   445 ;;		_SYSTEM_Initialize
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text0
   452  0007C8                     __ptext0:
   453                           	opt stack 0
   454  0007C8                     _main:
   455                           	opt stack 23
   456                           
   457                           ;main.c: 65: PIE5bits.RXB0IE = 1;
   458                           
   459                           ;incstack = 0
   460  0007C8  8076               	bsf	3958,0,c	;volatile
   461                           
   462                           ;main.c: 66: PIE5bits.RXB1IE = 1;
   463  0007CA  8276               	bsf	3958,1,c	;volatile
   464                           
   465                           ;main.c: 69: SYSTEM_Initialize();
   466  0007CC  ECC8  F003         	call	_SYSTEM_Initialize	;wreg free
   467                           
   468                           ;main.c: 90: (INTCONbits.GIE = 1);
   469  0007D0  8EF2               	bsf	intcon,7,c	;volatile
   470                           
   471                           ;main.c: 96: (INTCONbits.PEIE = 1);
   472  0007D2  8CF2               	bsf	intcon,6,c	;volatile
   473  0007D4                     l507:
   474                           
   475                           ;main.c: 102: {
   476  0007D4  D7FF               	goto	l507
   477  0007D6                     __end_of_main:
   478                           	opt stack 0
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           intcon	equ	0xFF2
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           
   487 ;; *************** function _SYSTEM_Initialize *****************
   488 ;; Defined at:
   489 ;;		line 111 in file "mcc_generated_files/mcc.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    7
   510 ;; This function calls:
   511 ;;		_ECAN_Initialize
   512 ;;		_INTERRUPT_Initialize
   513 ;;		_OSCILLATOR_Initialize
   514 ;;		_PIN_MANAGER_Initialize
   515 ;;		_TMR1_Initialize
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  000790                     __ptext1:
   523                           	opt stack 0
   524  000790                     _SYSTEM_Initialize:
   525                           	opt stack 23
   526                           
   527                           ;mcc.c: 114: INTERRUPT_Initialize();
   528                           
   529                           ;incstack = 0
   530  000790  ECF2  F003         	call	_INTERRUPT_Initialize	;wreg free
   531                           
   532                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   533  000794  ECB5  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   534                           
   535                           ;mcc.c: 116: OSCILLATOR_Initialize();
   536  000798  ECD3  F003         	call	_OSCILLATOR_Initialize	;wreg free
   537                           
   538                           ;mcc.c: 117: TMR1_Initialize();
   539  00079C  EC69  F003         	call	_TMR1_Initialize	;wreg free
   540                           
   541                           ;mcc.c: 118: ECAN_Initialize();
   542  0007A0  ECD0  F002         	call	_ECAN_Initialize	;wreg free
   543  0007A4  0012               	return		;funcret
   544  0007A6                     __end_of_SYSTEM_Initialize:
   545                           	opt stack 0
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           intcon	equ	0xFF2
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554 ;; *************** function _TMR1_Initialize *****************
   555 ;; Defined at:
   556 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   574 ;;Total ram usage:        2 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    6
   577 ;; This function calls:
   578 ;;		_TMR1_SetInterruptHandler
   579 ;;		_TMR1_StartTimer
   580 ;; This function is called by:
   581 ;;		_SYSTEM_Initialize
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text2
   586  0006D2                     __ptext2:
   587                           	opt stack 0
   588  0006D2                     _TMR1_Initialize:
   589                           	opt stack 23
   590                           
   591                           ;tmr1.c: 68: T1CON = 0xA0;
   592                           
   593                           ;incstack = 0
   594  0006D2  0EA0               	movlw	160
   595  0006D4  6ECD               	movwf	4045,c	;volatile
   596                           
   597                           ;tmr1.c: 71: T1GCON = 0x00;
   598  0006D6  0E00               	movlw	0
   599  0006D8  6EAA               	movwf	4010,c	;volatile
   600                           
   601                           ;tmr1.c: 74: TMR1H = 0xFF;
   602  0006DA  68CF               	setf	4047,c	;volatile
   603                           
   604                           ;tmr1.c: 77: TMR1L = 0xF8;
   605  0006DC  0EF8               	movlw	248
   606  0006DE  6ECE               	movwf	4046,c	;volatile
   607                           
   608                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
   609  0006E0  50CE               	movf	4046,w,c	;volatile
   610  0006E2  CFCF F062          	movff	4047,??_TMR1_Initialize	;volatile
   611  0006E6  0100               	movlb	0	; () banked
   612  0006E8  6B63               	clrf	(??_TMR1_Initialize+1)& (0+255),b
   613  0006EA  C062  F063         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
   614  0006EE  6B62               	clrf	??_TMR1_Initialize& (0+255),b
   615  0006F0  1162               	iorwf	??_TMR1_Initialize& (0+255),w,b
   616  0006F2  6E41               	movwf	_timer1ReloadVal,c	;volatile
   617  0006F4  5163               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
   618  0006F6  6E42               	movwf	_timer1ReloadVal+1,c	;volatile
   619                           
   620                           ; BSR set to: 0
   621                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   622  0006F8  909E               	bcf	3998,0,c	;volatile
   623                           
   624                           ; BSR set to: 0
   625                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   626  0006FA  809D               	bsf	3997,0,c	;volatile
   627                           
   628                           ; BSR set to: 0
   629                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
   630  0006FC  0EEA               	movlw	low _TMR1_DefaultInterruptHandler
   631  0006FE  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
   632  000700  0E07               	movlw	high _TMR1_DefaultInterruptHandler
   633  000702  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
   634  000704  ECEB  F003         	call	_TMR1_SetInterruptHandler	;wreg free
   635                           
   636                           ;tmr1.c: 92: TMR1_StartTimer();
   637  000708  ECF0  F003         	call	_TMR1_StartTimer	;wreg free
   638  00070C  0012               	return		;funcret
   639  00070E                     __end_of_TMR1_Initialize:
   640                           	opt stack 0
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           intcon	equ	0xFF2
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           
   649 ;; *************** function _TMR1_StartTimer *****************
   650 ;; Defined at:
   651 ;;		line 95 in file "mcc_generated_files/tmr1.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		None
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   669 ;;Total ram usage:        0 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; Hardware stack levels required when called:    5
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_TMR1_Initialize
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text3
   680  0007E0                     __ptext3:
   681                           	opt stack 0
   682  0007E0                     _TMR1_StartTimer:
   683                           	opt stack 23
   684                           
   685                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
   686                           
   687                           ;incstack = 0
   688  0007E0  80CD               	bsf	4045,0,c	;volatile
   689  0007E2  0012               	return		;funcret
   690  0007E4                     __end_of_TMR1_StartTimer:
   691                           	opt stack 0
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           intcon	equ	0xFF2
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           
   700 ;; *************** function _TMR1_SetInterruptHandler *****************
   701 ;; Defined at:
   702 ;;		line 176 in file "mcc_generated_files/tmr1.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
   705 ;;		 -> TMR1_DefaultInterruptHandler(1), 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   717 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   721 ;;Total ram usage:        2 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    5
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_TMR1_Initialize
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text4
   732  0007D6                     __ptext4:
   733                           	opt stack 0
   734  0007D6                     _TMR1_SetInterruptHandler:
   735                           	opt stack 23
   736                           
   737                           ;tmr1.c: 177: TMR1_InterruptHandler = InterruptHandler;
   738                           
   739                           ;incstack = 0
   740  0007D6  C060  F03F         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   741  0007DA  C061  F040         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   742  0007DE  0012               	return		;funcret
   743  0007E0                     __end_of_TMR1_SetInterruptHandler:
   744                           	opt stack 0
   745                           tblptru	equ	0xFF8
   746                           tblptrh	equ	0xFF7
   747                           tblptrl	equ	0xFF6
   748                           tablat	equ	0xFF5
   749                           intcon	equ	0xFF2
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           
   753 ;; *************** function _PIN_MANAGER_Initialize *****************
   754 ;; Defined at:
   755 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    5
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_SYSTEM_Initialize
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text5
   784  00076A                     __ptext5:
   785                           	opt stack 0
   786  00076A                     _PIN_MANAGER_Initialize:
   787                           	opt stack 24
   788                           
   789                           ;pin_manager.c: 57: LATA = 0x00;
   790                           
   791                           ;incstack = 0
   792  00076A  0E00               	movlw	0
   793  00076C  6E89               	movwf	3977,c	;volatile
   794                           
   795                           ;pin_manager.c: 58: LATB = 0x00;
   796  00076E  0E00               	movlw	0
   797  000770  6E8A               	movwf	3978,c	;volatile
   798                           
   799                           ;pin_manager.c: 59: LATC = 0x01;
   800  000772  0E01               	movlw	1
   801  000774  6E8B               	movwf	3979,c	;volatile
   802                           
   803                           ;pin_manager.c: 64: TRISA = 0xAF;
   804  000776  0EAF               	movlw	175
   805  000778  6E92               	movwf	3986,c	;volatile
   806                           
   807                           ;pin_manager.c: 65: TRISB = 0xF8;
   808  00077A  0EF8               	movlw	248
   809  00077C  6E93               	movwf	3987,c	;volatile
   810                           
   811                           ;pin_manager.c: 66: TRISC = 0xB1;
   812  00077E  0EB1               	movlw	177
   813  000780  6E94               	movwf	3988,c	;volatile
   814                           
   815                           ;pin_manager.c: 71: ANCON0 = 0x0D;
   816  000782  0E0D               	movlw	13
   817  000784  010F               	movlb	15	; () banked
   818  000786  6F5D               	movwf	93,b	;volatile
   819                           
   820                           ;pin_manager.c: 72: ANCON1 = 0x02;
   821  000788  0E02               	movlw	2
   822  00078A  6F5C               	movwf	92,b	;volatile
   823                           
   824                           ; BSR set to: 15
   825                           ;pin_manager.c: 77: WPUB = 0xFF;
   826  00078C  695B               	setf	91,b	;volatile
   827                           
   828                           ; BSR set to: 15
   829  00078E  0012               	return		;funcret
   830  000790                     __end_of_PIN_MANAGER_Initialize:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           intcon	equ	0xFF2
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           
   840 ;; *************** function _OSCILLATOR_Initialize *****************
   841 ;; Defined at:
   842 ;;		line 121 in file "mcc_generated_files/mcc.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, status,2
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    5
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_SYSTEM_Initialize
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text6
   871  0007A6                     __ptext6:
   872                           	opt stack 0
   873  0007A6                     _OSCILLATOR_Initialize:
   874                           	opt stack 24
   875                           
   876                           ;mcc.c: 124: OSCCON = 0x60;
   877                           
   878                           ; BSR set to: 15
   879                           ;incstack = 0
   880  0007A6  0E60               	movlw	96
   881  0007A8  6ED3               	movwf	4051,c	;volatile
   882                           
   883                           ;mcc.c: 126: OSCCON2 = 0x00;
   884  0007AA  0E00               	movlw	0
   885  0007AC  6ED2               	movwf	4050,c	;volatile
   886                           
   887                           ;mcc.c: 128: OSCTUNE = 0x00;
   888  0007AE  0E00               	movlw	0
   889  0007B0  6E9B               	movwf	3995,c	;volatile
   890                           
   891                           ;mcc.c: 130: REFOCON = 0x00;
   892  0007B2  0E00               	movlw	0
   893  0007B4  6E9A               	movwf	3994,c	;volatile
   894  0007B6  0012               	return		;funcret
   895  0007B8                     __end_of_OSCILLATOR_Initialize:
   896                           	opt stack 0
   897                           tblptru	equ	0xFF8
   898                           tblptrh	equ	0xFF7
   899                           tblptrl	equ	0xFF6
   900                           tablat	equ	0xFF5
   901                           intcon	equ	0xFF2
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905 ;; *************** function _INTERRUPT_Initialize *****************
   906 ;; Defined at:
   907 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		None
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    5
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_SYSTEM_Initialize
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text7
   936  0007E4                     __ptext7:
   937                           	opt stack 0
   938  0007E4                     _INTERRUPT_Initialize:
   939                           	opt stack 24
   940                           
   941                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
   942                           
   943                           ;incstack = 0
   944  0007E4  9ED0               	bcf	4048,7,c	;volatile
   945  0007E6  0012               	return		;funcret
   946  0007E8                     __end_of_INTERRUPT_Initialize:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           intcon	equ	0xFF2
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           
   956 ;; *************** function _ECAN_Initialize *****************
   957 ;; Defined at:
   958 ;;		line 77 in file "mcc_generated_files/ecan.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;Total ram usage:        1 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    5
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_SYSTEM_Initialize
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text8
   987  0005A0                     __ptext8:
   988                           	opt stack 0
   989  0005A0                     _ECAN_Initialize:
   990                           	opt stack 24
   991                           
   992                           ;ecan.c: 79: CANCON = 0x80;
   993                           
   994                           ;incstack = 0
   995  0005A0  0E80               	movlw	128
   996  0005A2  6E6F               	movwf	3951,c	;volatile
   997  0005A4  506E               	movf	3950,w,c	;volatile
   998  0005A6  0BE0               	andlw	224
   999  0005A8  0A80               	xorlw	128
  1000  0005AA  A4D8               	btfss	status,2,c
  1001  0005AC  D7FB               	goto	l267
  1002                           
  1003                           ;ecan.c: 85: ECANCON = 0x00;
  1004  0005AE  0E00               	movlw	0
  1005  0005B0  6E72               	movwf	3954,c	;volatile
  1006                           
  1007                           ;ecan.c: 102: RXM0EIDH = 0x00;
  1008  0005B2  0E00               	movlw	0
  1009  0005B4  010E               	movlb	14	; () banked
  1010  0005B6  6FFA               	movwf	250,b	;volatile
  1011                           
  1012                           ;ecan.c: 103: RXM0EIDL = 0x00;
  1013  0005B8  0E00               	movlw	0
  1014  0005BA  6FFB               	movwf	251,b	;volatile
  1015                           
  1016                           ;ecan.c: 104: RXM0SIDH = 0x00;
  1017  0005BC  0E00               	movlw	0
  1018  0005BE  6FF8               	movwf	248,b	;volatile
  1019                           
  1020                           ;ecan.c: 105: RXM0SIDL = 0x00;
  1021  0005C0  0E00               	movlw	0
  1022  0005C2  6FF9               	movwf	249,b	;volatile
  1023                           
  1024                           ; BSR set to: 14
  1025                           ;ecan.c: 107: RXM1EIDH = 0xFF;
  1026  0005C4  69FE               	setf	254,b	;volatile
  1027                           
  1028                           ; BSR set to: 14
  1029                           ;ecan.c: 108: RXM1EIDL = 0xFF;
  1030  0005C6  69FF               	setf	255,b	;volatile
  1031                           
  1032                           ; BSR set to: 14
  1033                           ;ecan.c: 109: RXM1SIDH = 0xFF;
  1034  0005C8  69FC               	setf	252,b	;volatile
  1035                           
  1036                           ; BSR set to: 14
  1037                           ;ecan.c: 110: RXM1SIDL = 0xFF;
  1038  0005CA  69FD               	setf	253,b	;volatile
  1039                           
  1040                           ;ecan.c: 116: RXF0EIDH = 0x00;
  1041  0005CC  0E00               	movlw	0
  1042  0005CE  6FE2               	movwf	226,b	;volatile
  1043                           
  1044                           ;ecan.c: 117: RXF0EIDL = 0x00;
  1045  0005D0  0E00               	movlw	0
  1046  0005D2  6FE3               	movwf	227,b	;volatile
  1047                           
  1048                           ;ecan.c: 118: RXF0SIDH = 0x88;
  1049  0005D4  0E88               	movlw	136
  1050  0005D6  6FE0               	movwf	224,b	;volatile
  1051                           
  1052                           ;ecan.c: 119: RXF0SIDL = 0x80;
  1053  0005D8  0E80               	movlw	128
  1054  0005DA  6FE1               	movwf	225,b	;volatile
  1055                           
  1056                           ;ecan.c: 121: RXF1EIDH = 0x00;
  1057  0005DC  0E00               	movlw	0
  1058  0005DE  6FE6               	movwf	230,b	;volatile
  1059                           
  1060                           ;ecan.c: 122: RXF1EIDL = 0x00;
  1061  0005E0  0E00               	movlw	0
  1062  0005E2  6FE7               	movwf	231,b	;volatile
  1063                           
  1064                           ;ecan.c: 123: RXF1SIDH = 0xCC;
  1065  0005E4  0ECC               	movlw	204
  1066  0005E6  6FE4               	movwf	228,b	;volatile
  1067                           
  1068                           ;ecan.c: 124: RXF1SIDL = 0xC0;
  1069  0005E8  0EC0               	movlw	192
  1070  0005EA  6FE5               	movwf	229,b	;volatile
  1071                           
  1072                           ;ecan.c: 126: RXF2EIDH = 0x00;
  1073  0005EC  0E00               	movlw	0
  1074  0005EE  6FEA               	movwf	234,b	;volatile
  1075                           
  1076                           ;ecan.c: 127: RXF2EIDL = 0x00;
  1077  0005F0  0E00               	movlw	0
  1078  0005F2  6FEB               	movwf	235,b	;volatile
  1079                           
  1080                           ;ecan.c: 128: RXF2SIDH = 0x00;
  1081  0005F4  0E00               	movlw	0
  1082  0005F6  6FE8               	movwf	232,b	;volatile
  1083                           
  1084                           ;ecan.c: 129: RXF2SIDL = 0x00;
  1085  0005F8  0E00               	movlw	0
  1086  0005FA  6FE9               	movwf	233,b	;volatile
  1087                           
  1088                           ;ecan.c: 131: RXF3EIDH = 0x00;
  1089  0005FC  0E00               	movlw	0
  1090  0005FE  6FEE               	movwf	238,b	;volatile
  1091                           
  1092                           ;ecan.c: 132: RXF3EIDL = 0x00;
  1093  000600  0E00               	movlw	0
  1094  000602  6FEF               	movwf	239,b	;volatile
  1095                           
  1096                           ;ecan.c: 133: RXF3SIDH = 0x00;
  1097  000604  0E00               	movlw	0
  1098  000606  6FEC               	movwf	236,b	;volatile
  1099                           
  1100                           ;ecan.c: 134: RXF3SIDL = 0x00;
  1101  000608  0E00               	movlw	0
  1102  00060A  6FED               	movwf	237,b	;volatile
  1103                           
  1104                           ;ecan.c: 136: RXF4EIDH = 0x00;
  1105  00060C  0E00               	movlw	0
  1106  00060E  6FF2               	movwf	242,b	;volatile
  1107                           
  1108                           ;ecan.c: 137: RXF4EIDL = 0x00;
  1109  000610  0E00               	movlw	0
  1110  000612  6FF3               	movwf	243,b	;volatile
  1111                           
  1112                           ;ecan.c: 138: RXF4SIDH = 0x00;
  1113  000614  0E00               	movlw	0
  1114  000616  6FF0               	movwf	240,b	;volatile
  1115                           
  1116                           ;ecan.c: 139: RXF4SIDL = 0x00;
  1117  000618  0E00               	movlw	0
  1118  00061A  6FF1               	movwf	241,b	;volatile
  1119                           
  1120                           ;ecan.c: 141: RXF5EIDH = 0x00;
  1121  00061C  0E00               	movlw	0
  1122  00061E  6FF6               	movwf	246,b	;volatile
  1123                           
  1124                           ;ecan.c: 142: RXF5EIDL = 0x00;
  1125  000620  0E00               	movlw	0
  1126  000622  6FF7               	movwf	247,b	;volatile
  1127                           
  1128                           ;ecan.c: 143: RXF5SIDH = 0x00;
  1129  000624  0E00               	movlw	0
  1130  000626  6FF4               	movwf	244,b	;volatile
  1131                           
  1132                           ;ecan.c: 144: RXF5SIDL = 0x00;
  1133  000628  0E00               	movlw	0
  1134  00062A  6FF5               	movwf	245,b	;volatile
  1135                           
  1136                           ;ecan.c: 159: BRGCON1 = 0x00;
  1137  00062C  0E00               	movlw	0
  1138  00062E  6F43               	movwf	67,b	;volatile
  1139                           
  1140                           ;ecan.c: 160: BRGCON2 = 0x98;
  1141  000630  0E98               	movlw	152
  1142  000632  6F44               	movwf	68,b	;volatile
  1143                           
  1144                           ;ecan.c: 161: BRGCON3 = 0x01;
  1145  000634  0E01               	movlw	1
  1146  000636  6F45               	movwf	69,b	;volatile
  1147                           
  1148                           ;ecan.c: 163: CANCON = 0x00;
  1149  000638  0E00               	movlw	0
  1150  00063A  6E6F               	movwf	3951,c	;volatile
  1151  00063C                     
  1152                           ; BSR set to: 14
  1153                           
  1154                           ; BSR set to: 14
  1155  00063C  CF6E F060          	movff	3950,??_ECAN_Initialize	;volatile
  1156  000640  0EE0               	movlw	224
  1157  000642  0100               	movlb	0	; () banked
  1158  000644  1760               	andwf	??_ECAN_Initialize& (0+255),f,b
  1159  000646  B4D8               	btfsc	status,2,c
  1160  000648  0012               	return	
  1161  00064A  D7F8               	goto	l270
  1162  00064C                     __end_of_ECAN_Initialize:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function _INTERRUPT_InterruptManager *****************
  1174 ;; Defined at:
  1175 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1191 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1193 ;;Total ram usage:       18 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    4
  1196 ;; This function calls:
  1197 ;;		_ECAN_ISR_ECAN_RXBI
  1198 ;;		_TMR1_ISR
  1199 ;; This function is called by:
  1200 ;;		Interrupt level 2
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	intcode
  1205  000008                     __pintcode:
  1206                           	opt stack 0
  1207  000008                     _INTERRUPT_InterruptManager:
  1208                           	opt stack 23
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;incstack = 0
  1212  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1213  00000A  CFFA F01D          	movff	pclath,??_INTERRUPT_InterruptManager
  1214  00000E  CFFB F01E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1215  000012  CFE9 F01F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1216  000016  CFEA F020          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1217  00001A  CFE1 F021          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1218  00001E  CFE2 F022          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1219  000022  CFD9 F023          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1220  000026  CFDA F024          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1221  00002A  CFF3 F025          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1222  00002E  CFF4 F026          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1223  000032  CFF6 F027          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1224  000036  CFF7 F028          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1225  00003A  CFF8 F029          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1226  00003E  CFF5 F02A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1227  000042  C045  F02B         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1228  000046  C046  F02C         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1229  00004A  C047  F02D         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1230  00004E  C048  F02E         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1231                           
  1232                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE5bits.RXB0IE == 1 && PIR5bits.RX
      +                          B0IF == 1)
  1233  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1234  000054  A076               	btfss	3958,0,c	;volatile
  1235  000056  D005               	goto	i2l426
  1236  000058  A077               	btfss	3959,0,c	;volatile
  1237  00005A  D003               	goto	i2l426
  1238                           
  1239                           ;interrupt_manager.c: 61: {
  1240                           ;interrupt_manager.c: 62: ECAN_ISR_ECAN_RXBI();
  1241  00005C  ECDC  F003         	call	_ECAN_ISR_ECAN_RXBI	;wreg free
  1242                           
  1243                           ;interrupt_manager.c: 63: }
  1244  000060  D006               	goto	i2l428
  1245  000062                     i2l426:
  1246                           
  1247                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  1248  000062  BCF2               	btfsc	intcon,6,c	;volatile
  1249  000064  A09D               	btfss	3997,0,c	;volatile
  1250  000066  D003               	goto	i2l428
  1251  000068  B09E               	btfsc	3998,0,c	;volatile
  1252                           
  1253                           ;interrupt_manager.c: 65: {
  1254                           ;interrupt_manager.c: 66: TMR1_ISR();
  1255  00006A  ECA0  F003         	call	_TMR1_ISR	;wreg free
  1256  00006E                     i2l428:
  1257                           
  1258                           ;interrupt_manager.c: 68: else
  1259                           ;interrupt_manager.c: 69: {
  1260  00006E  C02E  F048         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1261  000072  C02D  F047         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1262  000076  C02C  F046         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1263  00007A  C02B  F045         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1264  00007E  C02A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1265  000082  C029  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1266  000086  C028  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1267  00008A  C027  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1268  00008E  C026  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1269  000092  C025  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1270  000096  C024  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1271  00009A  C023  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1272  00009E  C022  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1273  0000A2  C021  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1274  0000A6  C020  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1275  0000AA  C01F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1276  0000AE  C01E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1277  0000B2  C01D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1278  0000B6  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1279  0000B8  0011               	retfie		f
  1280  0000BA                     __end_of_INTERRUPT_InterruptManager:
  1281                           	opt stack 0
  1282                           pclatu	equ	0xFFB
  1283                           pclath	equ	0xFFA
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           fsr0h	equ	0xFEA
  1293                           fsr0l	equ	0xFE9
  1294                           wreg	equ	0xFE8
  1295                           fsr1h	equ	0xFE2
  1296                           fsr1l	equ	0xFE1
  1297                           fsr2h	equ	0xFDA
  1298                           fsr2l	equ	0xFD9
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _TMR1_ISR *****************
  1302 ;; Defined at:
  1303 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    1
  1324 ;; This function calls:
  1325 ;;		Absolute function
  1326 ;;		_TMR1_DefaultInterruptHandler
  1327 ;; This function is called by:
  1328 ;;		_INTERRUPT_InterruptManager
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text10
  1333  000740                     __ptext10:
  1334                           	opt stack 0
  1335  000740                     _TMR1_ISR:
  1336                           	opt stack 25
  1337                           
  1338                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
  1339                           
  1340                           ;incstack = 0
  1341  000740  909E               	bcf	3998,0,c	;volatile
  1342                           
  1343                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
  1344  000742  5042               	movf	_timer1ReloadVal+1,w,c	;volatile
  1345  000744  6ECF               	movwf	4047,c	;volatile
  1346                           
  1347                           ;tmr1.c: 167: TMR1L = timer1ReloadVal;
  1348  000746  C041  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  1349                           
  1350                           ;tmr1.c: 169: if(TMR1_InterruptHandler)
  1351  00074A  503F               	movf	_TMR1_InterruptHandler,w,c
  1352  00074C  1040               	iorwf	_TMR1_InterruptHandler+1,w,c
  1353  00074E  B4D8               	btfsc	status,2,c
  1354  000750  0012               	return	
  1355                           
  1356                           ;tmr1.c: 170: {
  1357                           ;tmr1.c: 171: TMR1_InterruptHandler();
  1358  000752  D801               	call	i2u22_48
  1359  000754  0012               	return	
  1360  000756                     i2u22_48:
  1361  000756  0005               	push	
  1362  000758  6EFA               	movwf	pclath,c
  1363  00075A  503F               	movf	_TMR1_InterruptHandler,w,c
  1364  00075C  6EFD               	movwf	tosl,c
  1365  00075E  5040               	movf	_TMR1_InterruptHandler+1,w,c
  1366  000760  6EFE               	movwf	tosh,c
  1367  000762  50F8               	movf	tblptru,w,c
  1368  000764  6EFF               	movwf	tosu,c
  1369  000766  50FA               	movf	pclath,w,c
  1370  000768  0012               	return		;indir
  1371  00076A                     __end_of_TMR1_ISR:
  1372                           	opt stack 0
  1373                           tosu	equ	0xFFF
  1374                           tosh	equ	0xFFE
  1375                           tosl	equ	0xFFD
  1376                           pclatu	equ	0xFFB
  1377                           pclath	equ	0xFFA
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           prodh	equ	0xFF4
  1383                           prodl	equ	0xFF3
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           fsr0h	equ	0xFEA
  1387                           fsr0l	equ	0xFE9
  1388                           wreg	equ	0xFE8
  1389                           fsr1h	equ	0xFE2
  1390                           fsr1l	equ	0xFE1
  1391                           fsr2h	equ	0xFDA
  1392                           fsr2l	equ	0xFD9
  1393                           status	equ	0xFD8
  1394                           
  1395 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  1396 ;; Defined at:
  1397 ;;		line 180 in file "mcc_generated_files/tmr1.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		None
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_TMR1_Initialize
  1421 ;;		_TMR1_ISR
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text11
  1426  0007EA                     __ptext11:
  1427                           	opt stack 0
  1428  0007EA                     _TMR1_DefaultInterruptHandler:
  1429                           	opt stack 25
  1430                           
  1431                           ;incstack = 0
  1432  0007EA  0012               	return		;funcret
  1433  0007EC                     __end_of_TMR1_DefaultInterruptHandler:
  1434                           	opt stack 0
  1435                           tosu	equ	0xFFF
  1436                           tosh	equ	0xFFE
  1437                           tosl	equ	0xFFD
  1438                           pclatu	equ	0xFFB
  1439                           pclath	equ	0xFFA
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           prodh	equ	0xFF4
  1445                           prodl	equ	0xFF3
  1446                           intcon	equ	0xFF2
  1447                           postinc0	equ	0xFEE
  1448                           fsr0h	equ	0xFEA
  1449                           fsr0l	equ	0xFE9
  1450                           wreg	equ	0xFE8
  1451                           fsr1h	equ	0xFE2
  1452                           fsr1l	equ	0xFE1
  1453                           fsr2h	equ	0xFDA
  1454                           fsr2l	equ	0xFD9
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _ECAN_ISR_ECAN_RXBI *****************
  1458 ;; Defined at:
  1459 ;;		line 68 in file "mcc_generated_files/ecan.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    3
  1480 ;; This function calls:
  1481 ;;		_handleCAN
  1482 ;; This function is called by:
  1483 ;;		_INTERRUPT_InterruptManager
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text12
  1488  0007B8                     __ptext12:
  1489                           	opt stack 0
  1490  0007B8                     _ECAN_ISR_ECAN_RXBI:
  1491                           	opt stack 23
  1492                           
  1493                           ;ecan.c: 70: handleCAN(&msg_r);
  1494                           
  1495                           ;incstack = 0
  1496  0007B8  0E31               	movlw	low _msg_r
  1497  0007BA  6E17               	movwf	handleCAN@msg,c
  1498  0007BC  0E00               	movlw	high _msg_r
  1499  0007BE  6E18               	movwf	handleCAN@msg+1,c
  1500  0007C0  EC71  F001         	call	_handleCAN	;wreg free
  1501                           
  1502                           ;ecan.c: 73: PIR5bits.RXB0IF = 0;
  1503  0007C4  9077               	bcf	3959,0,c	;volatile
  1504  0007C6  0012               	return		;funcret
  1505  0007C8                     __end_of_ECAN_ISR_ECAN_RXBI:
  1506                           	opt stack 0
  1507                           tosu	equ	0xFFF
  1508                           tosh	equ	0xFFE
  1509                           tosl	equ	0xFFD
  1510                           pclatu	equ	0xFFB
  1511                           pclath	equ	0xFFA
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           intcon	equ	0xFF2
  1519                           postinc0	equ	0xFEE
  1520                           fsr0h	equ	0xFEA
  1521                           fsr0l	equ	0xFE9
  1522                           wreg	equ	0xFE8
  1523                           fsr1h	equ	0xFE2
  1524                           fsr1l	equ	0xFE1
  1525                           fsr2h	equ	0xFDA
  1526                           fsr2l	equ	0xFD9
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _handleCAN *****************
  1530 ;; Defined at:
  1531 ;;		line 449 in file "mcc_generated_files/ecan.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  msg             2   22[COMRAM] PTR struct .
  1534 ;;		 -> msg_r(14), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;Total ram usage:        6 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    2
  1553 ;; This function calls:
  1554 ;;		_CAN_receive
  1555 ;; This function is called by:
  1556 ;;		_ECAN_ISR_ECAN_RXBI
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text13
  1561  0002E2                     __ptext13:
  1562                           	opt stack 0
  1563  0002E2                     _handleCAN:
  1564                           	opt stack 23
  1565                           
  1566                           ;ecan.c: 450: CAN_receive(msg);
  1567                           
  1568                           ;incstack = 0
  1569  0002E2  C017  F014         	movff	handleCAN@msg,CAN_receive@tempCanMsg
  1570  0002E6  C018  F015         	movff	handleCAN@msg+1,CAN_receive@tempCanMsg+1
  1571  0002EA  EC5F  F000         	call	_CAN_receive	;wreg free
  1572                           
  1573                           ;ecan.c: 451: switch(msg->frame.id){
  1574  0002EE  D084               	goto	i2l327
  1575  0002F0                     
  1576                           ;ecan.c: 453: if(msg->frame.data0==0){ do { LATBbits.LATB2 = 0; } while(0);}
  1577  0002F0  EE20 F006          	lfsr	2,6
  1578  0002F4  5017               	movf	handleCAN@msg,w,c
  1579  0002F6  26D9               	addwf	fsr2l,f,c
  1580  0002F8  5018               	movf	handleCAN@msg+1,w,c
  1581  0002FA  22DA               	addwfc	fsr2h,f,c
  1582  0002FC  50DF               	movf	indf2,w,c
  1583  0002FE  A4D8               	btfss	status,2,c
  1584  000300  D002               	goto	i2l329
  1585  000302  948A               	bcf	3978,2,c	;volatile
  1586  000304  0012               	return	
  1587  000306                     i2l329:
  1588                           
  1589                           ;ecan.c: 454: else if(msg->frame.data0==1){do { LATBbits.LATB2 = 1; } while(0);}
  1590  000306  EE20 F006          	lfsr	2,6
  1591  00030A  5017               	movf	handleCAN@msg,w,c
  1592  00030C  26D9               	addwf	fsr2l,f,c
  1593  00030E  5018               	movf	handleCAN@msg+1,w,c
  1594  000310  22DA               	addwfc	fsr2h,f,c
  1595  000312  04DE               	decf	postinc2,w,c
  1596  000314  A4D8               	btfss	status,2,c
  1597  000316  0012               	return	
  1598  000318  848A               	bsf	3978,2,c	;volatile
  1599                           
  1600                           ;ecan.c: 455: break;
  1601  00031A  0012               	return	
  1602  00031C                     
  1603                           ;ecan.c: 458: if(msg->frame.data0==0){ do { LATBbits.LATB1 = 0; } while(0);}
  1604  00031C  EE20 F006          	lfsr	2,6
  1605  000320  5017               	movf	handleCAN@msg,w,c
  1606  000322  26D9               	addwf	fsr2l,f,c
  1607  000324  5018               	movf	handleCAN@msg+1,w,c
  1608  000326  22DA               	addwfc	fsr2h,f,c
  1609  000328  50DF               	movf	indf2,w,c
  1610  00032A  A4D8               	btfss	status,2,c
  1611  00032C  D002               	goto	i2l338
  1612  00032E  928A               	bcf	3978,1,c	;volatile
  1613  000330  0012               	return	
  1614  000332                     i2l338:
  1615                           
  1616                           ;ecan.c: 459: else if(msg->frame.data0==1){do { LATBbits.LATB1 = 1; } while(0);}
  1617  000332  EE20 F006          	lfsr	2,6
  1618  000336  5017               	movf	handleCAN@msg,w,c
  1619  000338  26D9               	addwf	fsr2l,f,c
  1620  00033A  5018               	movf	handleCAN@msg+1,w,c
  1621  00033C  22DA               	addwfc	fsr2h,f,c
  1622  00033E  04DE               	decf	postinc2,w,c
  1623  000340  A4D8               	btfss	status,2,c
  1624  000342  0012               	return	
  1625  000344  828A               	bsf	3978,1,c	;volatile
  1626                           
  1627                           ;ecan.c: 460: break;
  1628  000346  0012               	return	
  1629  000348                     
  1630                           ;ecan.c: 463: if(msg->frame.data0==0){ do { LATCbits.LATC3 = 0; } while(0);}
  1631  000348  EE20 F006          	lfsr	2,6
  1632  00034C  5017               	movf	handleCAN@msg,w,c
  1633  00034E  26D9               	addwf	fsr2l,f,c
  1634  000350  5018               	movf	handleCAN@msg+1,w,c
  1635  000352  22DA               	addwfc	fsr2h,f,c
  1636  000354  50DF               	movf	indf2,w,c
  1637  000356  A4D8               	btfss	status,2,c
  1638  000358  D002               	goto	i2l346
  1639  00035A  968B               	bcf	3979,3,c	;volatile
  1640  00035C  0012               	return	
  1641  00035E                     i2l346:
  1642                           
  1643                           ;ecan.c: 464: else if(msg->frame.data0==1){do { LATCbits.LATC3 = 1; } while(0);}
  1644  00035E  EE20 F006          	lfsr	2,6
  1645  000362  5017               	movf	handleCAN@msg,w,c
  1646  000364  26D9               	addwf	fsr2l,f,c
  1647  000366  5018               	movf	handleCAN@msg+1,w,c
  1648  000368  22DA               	addwfc	fsr2h,f,c
  1649  00036A  04DE               	decf	postinc2,w,c
  1650  00036C  A4D8               	btfss	status,2,c
  1651  00036E  0012               	return	
  1652  000370  868B               	bsf	3979,3,c	;volatile
  1653                           
  1654                           ;ecan.c: 465: break;
  1655  000372  0012               	return	
  1656  000374                     
  1657                           ;ecan.c: 468: if(msg->frame.data0==0){ do { LATCbits.LATC1 = 0; } while(0);}
  1658  000374  EE20 F006          	lfsr	2,6
  1659  000378  5017               	movf	handleCAN@msg,w,c
  1660  00037A  26D9               	addwf	fsr2l,f,c
  1661  00037C  5018               	movf	handleCAN@msg+1,w,c
  1662  00037E  22DA               	addwfc	fsr2h,f,c
  1663  000380  50DF               	movf	indf2,w,c
  1664  000382  A4D8               	btfss	status,2,c
  1665  000384  D002               	goto	i2l354
  1666  000386  928B               	bcf	3979,1,c	;volatile
  1667  000388  0012               	return	
  1668  00038A                     i2l354:
  1669                           
  1670                           ;ecan.c: 469: else if(msg->frame.data0==1){do { LATCbits.LATC1 = 1; } while(0);}
  1671  00038A  EE20 F006          	lfsr	2,6
  1672  00038E  5017               	movf	handleCAN@msg,w,c
  1673  000390  26D9               	addwf	fsr2l,f,c
  1674  000392  5018               	movf	handleCAN@msg+1,w,c
  1675  000394  22DA               	addwfc	fsr2h,f,c
  1676  000396  04DE               	decf	postinc2,w,c
  1677  000398  A4D8               	btfss	status,2,c
  1678  00039A  0012               	return	
  1679  00039C  828B               	bsf	3979,1,c	;volatile
  1680                           
  1681                           ;ecan.c: 470: break;
  1682  00039E  0012               	return	
  1683  0003A0                     
  1684                           ;ecan.c: 473: if(msg->frame.data0==0){ do { LATCbits.LATC2 = 0; } while(0);}
  1685  0003A0  EE20 F006          	lfsr	2,6
  1686  0003A4  5017               	movf	handleCAN@msg,w,c
  1687  0003A6  26D9               	addwf	fsr2l,f,c
  1688  0003A8  5018               	movf	handleCAN@msg+1,w,c
  1689  0003AA  22DA               	addwfc	fsr2h,f,c
  1690  0003AC  50DF               	movf	indf2,w,c
  1691  0003AE  A4D8               	btfss	status,2,c
  1692  0003B0  D002               	goto	i2l362
  1693  0003B2  948B               	bcf	3979,2,c	;volatile
  1694  0003B4  0012               	return	
  1695  0003B6                     i2l362:
  1696                           
  1697                           ;ecan.c: 474: else if(msg->frame.data0==1){do { LATCbits.LATC2 = 1; } while(0);}
  1698  0003B6  EE20 F006          	lfsr	2,6
  1699  0003BA  5017               	movf	handleCAN@msg,w,c
  1700  0003BC  26D9               	addwf	fsr2l,f,c
  1701  0003BE  5018               	movf	handleCAN@msg+1,w,c
  1702  0003C0  22DA               	addwfc	fsr2h,f,c
  1703  0003C2  04DE               	decf	postinc2,w,c
  1704  0003C4  A4D8               	btfss	status,2,c
  1705  0003C6  0012               	return	
  1706  0003C8  848B               	bsf	3979,2,c	;volatile
  1707                           
  1708                           ;ecan.c: 475: break;
  1709  0003CA  0012               	return	
  1710  0003CC                     
  1711                           ;ecan.c: 478: if(msg->frame.data0==0){ do { LATBbits.LATB0 = 0; } while(0);}
  1712  0003CC  EE20 F006          	lfsr	2,6
  1713  0003D0  5017               	movf	handleCAN@msg,w,c
  1714  0003D2  26D9               	addwf	fsr2l,f,c
  1715  0003D4  5018               	movf	handleCAN@msg+1,w,c
  1716  0003D6  22DA               	addwfc	fsr2h,f,c
  1717  0003D8  50DF               	movf	indf2,w,c
  1718  0003DA  A4D8               	btfss	status,2,c
  1719  0003DC  D002               	goto	i2l370
  1720  0003DE  908A               	bcf	3978,0,c	;volatile
  1721  0003E0  0012               	return	
  1722  0003E2                     i2l370:
  1723                           
  1724                           ;ecan.c: 479: else if(msg->frame.data0==1){do { LATBbits.LATB0 = 1; } while(0);}
  1725  0003E2  EE20 F006          	lfsr	2,6
  1726  0003E6  5017               	movf	handleCAN@msg,w,c
  1727  0003E8  26D9               	addwf	fsr2l,f,c
  1728  0003EA  5018               	movf	handleCAN@msg+1,w,c
  1729  0003EC  22DA               	addwfc	fsr2h,f,c
  1730  0003EE  04DE               	decf	postinc2,w,c
  1731  0003F0  A4D8               	btfss	status,2,c
  1732  0003F2  0012               	return	
  1733  0003F4  808A               	bsf	3978,0,c	;volatile
  1734                           
  1735                           ;ecan.c: 484: }
  1736                           
  1737                           ;ecan.c: 482: break;
  1738                           
  1739                           ;ecan.c: 481: default:
  1740                           
  1741                           ;ecan.c: 480: break;
  1742  0003F6  0012               	return	
  1743  0003F8                     i2l327:
  1744  0003F8  EE20 F001          	lfsr	2,1
  1745  0003FC  5017               	movf	handleCAN@msg,w,c
  1746  0003FE  26D9               	addwf	fsr2l,f,c
  1747  000400  5018               	movf	handleCAN@msg+1,w,c
  1748  000402  22DA               	addwfc	fsr2h,f,c
  1749  000404  CFDE F019          	movff	postinc2,??_handleCAN
  1750  000408  CFDE F01A          	movff	postinc2,??_handleCAN+1
  1751  00040C  CFDE F01B          	movff	postinc2,??_handleCAN+2
  1752  000410  CFDE F01C          	movff	postinc2,??_handleCAN+3
  1753                           
  1754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1755                           ; Switch size 1, requested type "space"
  1756                           ; Number of cases is 1, Range of values is 0 to 0
  1757                           ; switch strategies available:
  1758                           ; Name         Instructions Cycles
  1759                           ; simple_byte            4     3 (average)
  1760                           ;	Chosen strategy is simple_byte
  1761  000414  501C               	movf	??_handleCAN+3,w,c
  1762  000416  0A00               	xorlw	0	; case 0
  1763  000418  A4D8               	btfss	status,2,c
  1764  00041A  0012               	return	
  1765  00041C  D018               	goto	i2l2024
  1766  00041E                     i2l2022:
  1767                           
  1768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1769                           ; Switch size 1, requested type "space"
  1770                           ; Number of cases is 1, Range of values is 0 to 0
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte            4     3 (average)
  1774                           ;	Chosen strategy is simple_byte
  1775  00041E  501A               	movf	??_handleCAN+1,w,c
  1776  000420  0A00               	xorlw	0	; case 0
  1777  000422  A4D8               	btfss	status,2,c
  1778  000424  0012               	return	
  1779                           
  1780                           ; Switch size 1, requested type "space"
  1781                           ; Number of cases is 6, Range of values is 1 to 6
  1782                           ; switch strategies available:
  1783                           ; Name         Instructions Cycles
  1784                           ; simple_byte           19    10 (average)
  1785                           ;	Chosen strategy is simple_byte
  1786  000426  5019               	movf	??_handleCAN,w,c
  1787  000428  0A01               	xorlw	1	; case 1
  1788  00042A  B4D8               	btfsc	status,2,c
  1789  00042C  D761               	goto	i2l328
  1790  00042E  0A03               	xorlw	3	; case 2
  1791  000430  B4D8               	btfsc	status,2,c
  1792  000432  D774               	goto	i2l337
  1793  000434  0A01               	xorlw	1	; case 3
  1794  000436  B4D8               	btfsc	status,2,c
  1795  000438  D787               	goto	i2l345
  1796  00043A  0A07               	xorlw	7	; case 4
  1797  00043C  B4D8               	btfsc	status,2,c
  1798  00043E  D79A               	goto	i2l353
  1799  000440  0A01               	xorlw	1	; case 5
  1800  000442  B4D8               	btfsc	status,2,c
  1801  000444  D7AD               	goto	i2l361
  1802  000446  0A03               	xorlw	3	; case 6
  1803  000448  A4D8               	btfss	status,2,c
  1804  00044A  0012               	return	
  1805  00044C  D7BF               	goto	i2l369
  1806  00044E                     i2l2024:
  1807                           
  1808                           ; Switch size 1, requested type "space"
  1809                           ; Number of cases is 1, Range of values is 0 to 0
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; simple_byte            4     3 (average)
  1813                           ;	Chosen strategy is simple_byte
  1814  00044E  501B               	movf	??_handleCAN+2,w,c
  1815  000450  0A00               	xorlw	0	; case 0
  1816  000452  A4D8               	btfss	status,2,c
  1817  000454  0012               	return	
  1818  000456  D7E3               	goto	i2l2022
  1819  000458                     __end_of_handleCAN:
  1820                           	opt stack 0
  1821                           tosu	equ	0xFFF
  1822                           tosh	equ	0xFFE
  1823                           tosl	equ	0xFFD
  1824                           pclatu	equ	0xFFB
  1825                           pclath	equ	0xFFA
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           fsr0h	equ	0xFEA
  1835                           fsr0l	equ	0xFE9
  1836                           wreg	equ	0xFE8
  1837                           fsr1h	equ	0xFE2
  1838                           fsr1l	equ	0xFE1
  1839                           indf2	equ	0xFDF
  1840                           postinc2	equ	0xFDE
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _CAN_receive *****************
  1846 ;; Defined at:
  1847 ;;		line 256 in file "mcc_generated_files/ecan.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  1850 ;;		 -> msg_r(14), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  returnValue     1   21[COMRAM] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      unsigned char 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1866 ;;Total ram usage:        3 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    1
  1869 ;; This function calls:
  1870 ;;		_convertReg2ExtendedCANid
  1871 ;;		_convertReg2StandardCANid
  1872 ;; This function is called by:
  1873 ;;		_handleCAN
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text14
  1878  0000BE                     __ptext14:
  1879                           	opt stack 0
  1880  0000BE                     _CAN_receive:
  1881                           	opt stack 23
  1882                           
  1883                           ;ecan.c: 257: unsigned char returnValue = 0;
  1884                           
  1885                           ;incstack = 0
  1886  0000BE  0E00               	movlw	0
  1887  0000C0  6E16               	movwf	CAN_receive@returnValue,c
  1888                           
  1889                           ;ecan.c: 261: {
  1890                           ;ecan.c: 264: if (RXB0CONbits.RXFUL != 0)
  1891  0000C2  AE60               	btfss	3936,7,c	;volatile
  1892  0000C4  D083               	goto	i2l289
  1893                           
  1894                           ;ecan.c: 265: {
  1895                           ;ecan.c: 266: if ((RXB0SIDL & 0x08) == 0x08)
  1896  0000C6  A662               	btfss	3938,3,c	;volatile
  1897  0000C8  D01E               	goto	i2l290
  1898                           
  1899                           ;ecan.c: 267: {
  1900                           ;ecan.c: 269: tempCanMsg->frame.idType = (unsigned char) 2;
  1901  0000CA  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1902  0000CE  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1903  0000D2  0E02               	movlw	2
  1904  0000D4  6EDF               	movwf	indf2,c
  1905                           
  1906                           ;ecan.c: 270: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  1907  0000D6  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  1908  0000DA  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  1909  0000DE  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  1910  0000E2  5063               	movf	3939,w,c	;volatile
  1911  0000E4  EC2C  F002         	call	_convertReg2ExtendedCANid
  1912  0000E8  EE20 F001          	lfsr	2,1
  1913  0000EC  5014               	movf	CAN_receive@tempCanMsg,w,c
  1914  0000EE  26D9               	addwf	fsr2l,f,c
  1915  0000F0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1916  0000F2  22DA               	addwfc	fsr2h,f,c
  1917  0000F4  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  1918  0000F8  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  1919  0000FC  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  1920  000100  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  1921                           
  1922                           ;ecan.c: 271: } else {
  1923  000104  D019               	goto	i2l291
  1924  000106                     i2l290:
  1925                           
  1926                           ;ecan.c: 273: tempCanMsg->frame.idType = (unsigned char) 1;
  1927  000106  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1928  00010A  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1929  00010E  0E01               	movlw	1
  1930  000110  6EDF               	movwf	indf2,c
  1931                           
  1932                           ;ecan.c: 274: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  1933  000112  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  1934  000116  5061               	movf	3937,w,c	;volatile
  1935  000118  EC26  F003         	call	_convertReg2StandardCANid
  1936  00011C  EE20 F001          	lfsr	2,1
  1937  000120  5014               	movf	CAN_receive@tempCanMsg,w,c
  1938  000122  26D9               	addwf	fsr2l,f,c
  1939  000124  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1940  000126  22DA               	addwfc	fsr2h,f,c
  1941  000128  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  1942  00012C  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  1943  000130  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  1944  000134  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  1945  000138                     i2l291:
  1946                           
  1947                           ;ecan.c: 275: }
  1948                           ;ecan.c: 277: tempCanMsg->frame.dlc = RXB0DLC;
  1949  000138  EE20 F005          	lfsr	2,5
  1950  00013C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1951  00013E  26D9               	addwf	fsr2l,f,c
  1952  000140  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1953  000142  22DA               	addwfc	fsr2h,f,c
  1954  000144  CF65 FFDF          	movff	3941,indf2	;volatile
  1955                           
  1956                           ;ecan.c: 278: tempCanMsg->frame.data0 = RXB0D0;
  1957  000148  EE20 F006          	lfsr	2,6
  1958  00014C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1959  00014E  26D9               	addwf	fsr2l,f,c
  1960  000150  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1961  000152  22DA               	addwfc	fsr2h,f,c
  1962  000154  CF66 FFDF          	movff	3942,indf2	;volatile
  1963                           
  1964                           ;ecan.c: 279: tempCanMsg->frame.data1 = RXB0D1;
  1965  000158  EE20 F007          	lfsr	2,7
  1966  00015C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1967  00015E  26D9               	addwf	fsr2l,f,c
  1968  000160  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1969  000162  22DA               	addwfc	fsr2h,f,c
  1970  000164  CF67 FFDF          	movff	3943,indf2	;volatile
  1971                           
  1972                           ;ecan.c: 280: tempCanMsg->frame.data2 = RXB0D2;
  1973  000168  EE20 F008          	lfsr	2,8
  1974  00016C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1975  00016E  26D9               	addwf	fsr2l,f,c
  1976  000170  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1977  000172  22DA               	addwfc	fsr2h,f,c
  1978  000174  CF68 FFDF          	movff	3944,indf2	;volatile
  1979                           
  1980                           ;ecan.c: 281: tempCanMsg->frame.data3 = RXB0D3;
  1981  000178  EE20 F009          	lfsr	2,9
  1982  00017C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1983  00017E  26D9               	addwf	fsr2l,f,c
  1984  000180  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1985  000182  22DA               	addwfc	fsr2h,f,c
  1986  000184  CF69 FFDF          	movff	3945,indf2	;volatile
  1987                           
  1988                           ;ecan.c: 282: tempCanMsg->frame.data4 = RXB0D4;
  1989  000188  EE20 F00A          	lfsr	2,10
  1990  00018C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1991  00018E  26D9               	addwf	fsr2l,f,c
  1992  000190  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  1993  000192  22DA               	addwfc	fsr2h,f,c
  1994  000194  CF6A FFDF          	movff	3946,indf2	;volatile
  1995                           
  1996                           ;ecan.c: 283: tempCanMsg->frame.data5 = RXB0D5;
  1997  000198  EE20 F00B          	lfsr	2,11
  1998  00019C  5014               	movf	CAN_receive@tempCanMsg,w,c
  1999  00019E  26D9               	addwf	fsr2l,f,c
  2000  0001A0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2001  0001A2  22DA               	addwfc	fsr2h,f,c
  2002  0001A4  CF6B FFDF          	movff	3947,indf2	;volatile
  2003                           
  2004                           ;ecan.c: 284: tempCanMsg->frame.data6 = RXB0D6;
  2005  0001A8  EE20 F00C          	lfsr	2,12
  2006  0001AC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2007  0001AE  26D9               	addwf	fsr2l,f,c
  2008  0001B0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2009  0001B2  22DA               	addwfc	fsr2h,f,c
  2010  0001B4  CF6C FFDF          	movff	3948,indf2	;volatile
  2011                           
  2012                           ;ecan.c: 285: tempCanMsg->frame.data7 = RXB0D7;
  2013  0001B8  EE20 F00D          	lfsr	2,13
  2014  0001BC  5014               	movf	CAN_receive@tempCanMsg,w,c
  2015  0001BE  26D9               	addwf	fsr2l,f,c
  2016  0001C0  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2017  0001C2  22DA               	addwfc	fsr2h,f,c
  2018  0001C4  CF6D FFDF          	movff	3949,indf2	;volatile
  2019                           
  2020                           ;ecan.c: 286: RXB0CONbits.RXFUL = 0;
  2021  0001C8  9E60               	bcf	3936,7,c	;volatile
  2022  0001CA  D087               	goto	i2l1742
  2023  0001CC                     i2l289:
  2024  0001CC  010F               	movlb	15	; () banked
  2025  0001CE  AF30               	btfss	48,7,b	;volatile
  2026  0001D0  D086               	goto	i2l293
  2027                           
  2028                           ; BSR set to: 15
  2029                           ;ecan.c: 289: {
  2030                           ;ecan.c: 290: if ((RXB1SIDL & 0x08) == 0x08)
  2031  0001D2  A732               	btfss	50,3,b	;volatile
  2032  0001D4  D01E               	goto	i2l294
  2033                           
  2034                           ; BSR set to: 15
  2035                           ;ecan.c: 291: {
  2036                           ;ecan.c: 293: tempCanMsg->frame.idType = (unsigned char) 2;
  2037  0001D6  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2038  0001DA  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2039  0001DE  0E02               	movlw	2
  2040  0001E0  6EDF               	movwf	indf2,c
  2041                           
  2042                           ; BSR set to: 15
  2043                           ;ecan.c: 294: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  2044  0001E2  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2045  0001E6  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2046  0001EA  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2047  0001EE  5133               	movf	51,w,b	;volatile
  2048  0001F0  EC2C  F002         	call	_convertReg2ExtendedCANid
  2049  0001F4  EE20 F001          	lfsr	2,1
  2050  0001F8  5014               	movf	CAN_receive@tempCanMsg,w,c
  2051  0001FA  26D9               	addwf	fsr2l,f,c
  2052  0001FC  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2053  0001FE  22DA               	addwfc	fsr2h,f,c
  2054  000200  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2055  000204  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2056  000208  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2057  00020C  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2058                           
  2059                           ;ecan.c: 295: }
  2060  000210  D01A               	goto	i2l295
  2061  000212                     i2l294:
  2062                           
  2063                           ;ecan.c: 296: else
  2064                           ;ecan.c: 297: {
  2065                           ;ecan.c: 299: tempCanMsg->frame.idType = (unsigned char) 1;
  2066  000212  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2067  000216  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2068  00021A  0E01               	movlw	1
  2069  00021C  6EDF               	movwf	indf2,c
  2070                           
  2071                           ;ecan.c: 300: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  2072  00021E  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2073  000222  010F               	movlb	15	; () banked
  2074  000224  5131               	movf	49,w,b	;volatile
  2075  000226  EC26  F003         	call	_convertReg2StandardCANid
  2076  00022A  EE20 F001          	lfsr	2,1
  2077  00022E  5014               	movf	CAN_receive@tempCanMsg,w,c
  2078  000230  26D9               	addwf	fsr2l,f,c
  2079  000232  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2080  000234  22DA               	addwfc	fsr2h,f,c
  2081  000236  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2082  00023A  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2083  00023E  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2084  000242  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2085  000246                     i2l295:
  2086                           
  2087                           ;ecan.c: 301: }
  2088                           ;ecan.c: 303: tempCanMsg->frame.dlc = RXB1DLC;
  2089  000246  EE20 F005          	lfsr	2,5
  2090  00024A  5014               	movf	CAN_receive@tempCanMsg,w,c
  2091  00024C  26D9               	addwf	fsr2l,f,c
  2092  00024E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2093  000250  22DA               	addwfc	fsr2h,f,c
  2094  000252  CF35 FFDF          	movff	3893,indf2	;volatile
  2095                           
  2096                           ;ecan.c: 304: tempCanMsg->frame.data0 = RXB1D0;
  2097  000256  EE20 F006          	lfsr	2,6
  2098  00025A  5014               	movf	CAN_receive@tempCanMsg,w,c
  2099  00025C  26D9               	addwf	fsr2l,f,c
  2100  00025E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2101  000260  22DA               	addwfc	fsr2h,f,c
  2102  000262  CF36 FFDF          	movff	3894,indf2	;volatile
  2103                           
  2104                           ;ecan.c: 305: tempCanMsg->frame.data1 = RXB1D1;
  2105  000266  EE20 F007          	lfsr	2,7
  2106  00026A  5014               	movf	CAN_receive@tempCanMsg,w,c
  2107  00026C  26D9               	addwf	fsr2l,f,c
  2108  00026E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2109  000270  22DA               	addwfc	fsr2h,f,c
  2110  000272  CF37 FFDF          	movff	3895,indf2	;volatile
  2111                           
  2112                           ;ecan.c: 306: tempCanMsg->frame.data2 = RXB1D2;
  2113  000276  EE20 F008          	lfsr	2,8
  2114  00027A  5014               	movf	CAN_receive@tempCanMsg,w,c
  2115  00027C  26D9               	addwf	fsr2l,f,c
  2116  00027E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2117  000280  22DA               	addwfc	fsr2h,f,c
  2118  000282  CF38 FFDF          	movff	3896,indf2	;volatile
  2119                           
  2120                           ;ecan.c: 307: tempCanMsg->frame.data3 = RXB1D3;
  2121  000286  EE20 F009          	lfsr	2,9
  2122  00028A  5014               	movf	CAN_receive@tempCanMsg,w,c
  2123  00028C  26D9               	addwf	fsr2l,f,c
  2124  00028E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2125  000290  22DA               	addwfc	fsr2h,f,c
  2126  000292  CF39 FFDF          	movff	3897,indf2	;volatile
  2127                           
  2128                           ;ecan.c: 308: tempCanMsg->frame.data4 = RXB1D4;
  2129  000296  EE20 F00A          	lfsr	2,10
  2130  00029A  5014               	movf	CAN_receive@tempCanMsg,w,c
  2131  00029C  26D9               	addwf	fsr2l,f,c
  2132  00029E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2133  0002A0  22DA               	addwfc	fsr2h,f,c
  2134  0002A2  CF3A FFDF          	movff	3898,indf2	;volatile
  2135                           
  2136                           ;ecan.c: 309: tempCanMsg->frame.data5 = RXB1D5;
  2137  0002A6  EE20 F00B          	lfsr	2,11
  2138  0002AA  5014               	movf	CAN_receive@tempCanMsg,w,c
  2139  0002AC  26D9               	addwf	fsr2l,f,c
  2140  0002AE  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2141  0002B0  22DA               	addwfc	fsr2h,f,c
  2142  0002B2  CF3B FFDF          	movff	3899,indf2	;volatile
  2143                           
  2144                           ;ecan.c: 310: tempCanMsg->frame.data6 = RXB1D6;
  2145  0002B6  EE20 F00C          	lfsr	2,12
  2146  0002BA  5014               	movf	CAN_receive@tempCanMsg,w,c
  2147  0002BC  26D9               	addwf	fsr2l,f,c
  2148  0002BE  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2149  0002C0  22DA               	addwfc	fsr2h,f,c
  2150  0002C2  CF3C FFDF          	movff	3900,indf2	;volatile
  2151                           
  2152                           ;ecan.c: 311: tempCanMsg->frame.data7 = RXB1D7;
  2153  0002C6  EE20 F00D          	lfsr	2,13
  2154  0002CA  5014               	movf	CAN_receive@tempCanMsg,w,c
  2155  0002CC  26D9               	addwf	fsr2l,f,c
  2156  0002CE  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2157  0002D0  22DA               	addwfc	fsr2h,f,c
  2158  0002D2  CF3D FFDF          	movff	3901,indf2	;volatile
  2159                           
  2160                           ;ecan.c: 312: RXB1CONbits.RXFUL = 0;
  2161  0002D6  010F               	movlb	15	; () banked
  2162  0002D8  9F30               	bcf	48,7,b	;volatile
  2163  0002DA                     i2l1742:
  2164                           
  2165                           ; BSR set to: 15
  2166                           ;ecan.c: 313: returnValue = 1;
  2167  0002DA  0E01               	movlw	1
  2168  0002DC  6E16               	movwf	CAN_receive@returnValue,c
  2169  0002DE                     i2l293:
  2170                           
  2171                           ;ecan.c: 314: }
  2172                           ;ecan.c: 317: PIR5bits.RXB1IF = 0;
  2173                           
  2174                           ; BSR set to: 15
  2175                           
  2176                           ; BSR set to: 15
  2177  0002DE  9277               	bcf	3959,1,c	;volatile
  2178  0002E0  0012               	return	
  2179  0002E2                     __end_of_CAN_receive:
  2180                           	opt stack 0
  2181                           tosu	equ	0xFFF
  2182                           tosh	equ	0xFFE
  2183                           tosl	equ	0xFFD
  2184                           pclatu	equ	0xFFB
  2185                           pclath	equ	0xFFA
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           intcon	equ	0xFF2
  2193                           postinc0	equ	0xFEE
  2194                           fsr0h	equ	0xFEA
  2195                           fsr0l	equ	0xFE9
  2196                           wreg	equ	0xFE8
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           indf2	equ	0xFDF
  2200                           postinc2	equ	0xFDE
  2201                           fsr2h	equ	0xFDA
  2202                           fsr2l	equ	0xFD9
  2203                           status	equ	0xFD8
  2204                           
  2205 ;; *************** function _convertReg2StandardCANid *****************
  2206 ;; Defined at:
  2207 ;;		line 402 in file "mcc_generated_files/ecan.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  tempRXBn_SID    1    wreg     unsigned char 
  2210 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  2213 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  2214 ;;  returnValue     4    7[COMRAM] unsigned long 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  4    0[COMRAM] unsigned long 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;Total ram usage:       15 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_CAN_receive
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text15
  2238  00064C                     __ptext15:
  2239                           	opt stack 0
  2240  00064C                     _convertReg2StandardCANid:
  2241                           	opt stack 23
  2242                           
  2243                           ;incstack = 0
  2244                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  2245  00064C  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  2246                           
  2247                           ;ecan.c: 403: unsigned long returnValue = 0;
  2248  00064E  0E00               	movlw	0
  2249  000650  6E08               	movwf	convertReg2StandardCANid@returnValue,c
  2250  000652  0E00               	movlw	0
  2251  000654  6E09               	movwf	convertReg2StandardCANid@returnValue+1,c
  2252  000656  0E00               	movlw	0
  2253  000658  6E0A               	movwf	convertReg2StandardCANid@returnValue+2,c
  2254  00065A  0E00               	movlw	0
  2255  00065C  6E0B               	movwf	convertReg2StandardCANid@returnValue+3,c
  2256                           
  2257                           ;ecan.c: 404: unsigned long ConvertedID;
  2258                           ;ecan.c: 408: ConvertedID = (tempRXBn_SIDH << 3);
  2259  00065E  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  2260  000660  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  2261  000662  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  2262  000664  90D8               	bcf	status,0,c
  2263  000666  3605               	rlcf	??_convertReg2StandardCANid,f,c
  2264  000668  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  2265  00066A  90D8               	bcf	status,0,c
  2266  00066C  3605               	rlcf	??_convertReg2StandardCANid,f,c
  2267  00066E  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  2268  000670  90D8               	bcf	status,0,c
  2269  000672  3605               	rlcf	??_convertReg2StandardCANid,f,c
  2270  000674  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  2271  000676  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  2272  00067A  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  2273  00067E  0E00               	movlw	0
  2274  000680  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  2275  000682  0EFF               	movlw	-1
  2276  000684  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  2277  000686  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  2278                           
  2279                           ;ecan.c: 409: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  2280  000688  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  2281  00068C  0E05               	movlw	5
  2282  00068E  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  2283  000690                     i2u43_45:
  2284  000690  90D8               	bcf	status,0,c
  2285  000692  3205               	rrcf	??_convertReg2StandardCANid,f,c
  2286  000694  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  2287  000696  D7FC               	goto	i2u43_45
  2288  000698  5005               	movf	??_convertReg2StandardCANid,w,c
  2289  00069A  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  2290  00069C  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  2291  00069E  0E00               	movlw	0
  2292  0006A0  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  2293  0006A2  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  2294  0006A4  0E00               	movlw	0
  2295  0006A6  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  2296  0006A8  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  2297  0006AA  0E00               	movlw	0
  2298  0006AC  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  2299  0006AE  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  2300                           
  2301                           ;ecan.c: 410: returnValue = ConvertedID;
  2302  0006B0  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  2303  0006B4  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  2304  0006B8  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  2305  0006BC  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  2306                           
  2307                           ;ecan.c: 411: return (returnValue);
  2308  0006C0  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  2309  0006C4  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  2310  0006C8  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  2311  0006CC  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  2312  0006D0  0012               	return	
  2313  0006D2                     __end_of_convertReg2StandardCANid:
  2314                           	opt stack 0
  2315                           tosu	equ	0xFFF
  2316                           tosh	equ	0xFFE
  2317                           tosl	equ	0xFFD
  2318                           pclatu	equ	0xFFB
  2319                           pclath	equ	0xFFA
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           prodh	equ	0xFF4
  2325                           prodl	equ	0xFF3
  2326                           intcon	equ	0xFF2
  2327                           postinc0	equ	0xFEE
  2328                           fsr0h	equ	0xFEA
  2329                           fsr0l	equ	0xFE9
  2330                           wreg	equ	0xFE8
  2331                           fsr1h	equ	0xFE2
  2332                           fsr1l	equ	0xFE1
  2333                           indf2	equ	0xFDF
  2334                           postinc2	equ	0xFDE
  2335                           fsr2h	equ	0xFDA
  2336                           fsr2l	equ	0xFD9
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _convertReg2ExtendedCANid *****************
  2340 ;; Defined at:
  2341 ;;		line 382 in file "mcc_generated_files/ecan.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  tempRXBn_EID    1    wreg     unsigned char 
  2344 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  2345 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  2346 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  2349 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  2350 ;;  returnValue     4    9[COMRAM] unsigned long 
  2351 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  2352 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  4    0[COMRAM] unsigned long 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;Total ram usage:       19 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_CAN_receive
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text16
  2376  000458                     __ptext16:
  2377                           	opt stack 0
  2378  000458                     _convertReg2ExtendedCANid:
  2379                           	opt stack 23
  2380                           
  2381                           ;incstack = 0
  2382                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  2383  000458  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  2384                           
  2385                           ;ecan.c: 383: unsigned long returnValue = 0;
  2386  00045A  0E00               	movlw	0
  2387  00045C  6E0A               	movwf	convertReg2ExtendedCANid@returnValue,c
  2388  00045E  0E00               	movlw	0
  2389  000460  6E0B               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  2390  000462  0E00               	movlw	0
  2391  000464  6E0C               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  2392  000466  0E00               	movlw	0
  2393  000468  6E0D               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  2394                           
  2395                           ;ecan.c: 384: unsigned long ConvertedID = 0;
  2396  00046A  0E00               	movlw	0
  2397  00046C  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2398  00046E  0E00               	movlw	0
  2399  000470  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2400  000472  0E00               	movlw	0
  2401  000474  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2402  000476  0E00               	movlw	0
  2403  000478  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2404                           
  2405                           ;ecan.c: 385: unsigned char CAN_standardLo_ID_lo2bits;
  2406                           ;ecan.c: 386: unsigned char CAN_standardLo_ID_hi3bits;
  2407                           ;ecan.c: 388: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  2408  00047A  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2409  00047C  0B03               	andlw	3
  2410  00047E  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  2411                           
  2412                           ;ecan.c: 389: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  2413  000480  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2414  000482  42E8               	rrncf	wreg,f,c
  2415  000484  0B07               	andlw	7
  2416  000486  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  2417                           
  2418                           ;ecan.c: 390: ConvertedID = (tempRXBn_SIDH << 3);
  2419  000488  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  2420  00048A  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  2421  00048C  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  2422  00048E  90D8               	bcf	status,0,c
  2423  000490  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  2424  000492  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2425  000494  90D8               	bcf	status,0,c
  2426  000496  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  2427  000498  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2428  00049A  90D8               	bcf	status,0,c
  2429  00049C  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  2430  00049E  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2431  0004A0  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2432  0004A4  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2433  0004A8  0E00               	movlw	0
  2434  0004AA  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  2435  0004AC  0EFF               	movlw	-1
  2436  0004AE  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2437  0004B0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2438                           
  2439                           ;ecan.c: 391: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  2440  0004B2  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  2441  0004B4  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2442  0004B6  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2443  0004B8  0E00               	movlw	0
  2444  0004BA  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2445  0004BC  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2446  0004BE  0E00               	movlw	0
  2447  0004C0  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2448  0004C2  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2449  0004C4  0E00               	movlw	0
  2450  0004C6  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2451  0004C8  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2452                           
  2453                           ;ecan.c: 392: ConvertedID = (ConvertedID << 2);
  2454  0004CA  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  2455  0004CE  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  2456  0004D2  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  2457  0004D6  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  2458  0004DA  0E02               	movlw	2
  2459  0004DC                     i2u42_45:
  2460  0004DC  90D8               	bcf	status,0,c
  2461  0004DE  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  2462  0004E0  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2463  0004E2  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  2464  0004E4  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  2465  0004E6  2EE8               	decfsz	wreg,f,c
  2466  0004E8  D7F9               	goto	i2u42_45
  2467  0004EA  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2468  0004EE  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2469  0004F2  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2470  0004F6  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2471                           
  2472                           ;ecan.c: 393: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  2473  0004FA  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  2474  0004FC  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2475  0004FE  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2476  000500  0E00               	movlw	0
  2477  000502  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2478  000504  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2479  000506  0E00               	movlw	0
  2480  000508  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2481  00050A  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2482  00050C  0E00               	movlw	0
  2483  00050E  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2484  000510  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2485                           
  2486                           ;ecan.c: 394: ConvertedID = (ConvertedID << 8);
  2487  000512  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2488  000516  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2489  00051A  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2490  00051E  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2491  000520  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2492  000524  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2493  000528  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2494  00052C  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2495                           
  2496                           ;ecan.c: 395: ConvertedID = ConvertedID + tempRXBn_EIDH;
  2497  000530  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  2498  000532  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2499  000534  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2500  000536  0E00               	movlw	0
  2501  000538  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2502  00053A  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2503  00053C  0E00               	movlw	0
  2504  00053E  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2505  000540  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2506  000542  0E00               	movlw	0
  2507  000544  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2508  000546  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2509                           
  2510                           ;ecan.c: 396: ConvertedID = (ConvertedID << 8);
  2511  000548  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2512  00054C  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2513  000550  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2514  000554  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2515  000556  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2516  00055A  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2517  00055E  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2518  000562  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2519                           
  2520                           ;ecan.c: 397: ConvertedID = ConvertedID + tempRXBn_EIDL;
  2521  000566  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  2522  000568  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2523  00056A  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2524  00056C  0E00               	movlw	0
  2525  00056E  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2526  000570  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2527  000572  0E00               	movlw	0
  2528  000574  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2529  000576  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2530  000578  0E00               	movlw	0
  2531  00057A  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2532  00057C  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2533                           
  2534                           ;ecan.c: 398: returnValue = ConvertedID;
  2535  00057E  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  2536  000582  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  2537  000586  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  2538  00058A  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  2539                           
  2540                           ;ecan.c: 399: return (returnValue);
  2541  00058E  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  2542  000592  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  2543  000596  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  2544  00059A  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  2545  00059E  0012               	return	
  2546  0005A0                     __end_of_convertReg2ExtendedCANid:
  2547                           	opt stack 0
  2548  0000                     tosu	equ	0xFFF
  2549                           tosh	equ	0xFFE
  2550                           tosl	equ	0xFFD
  2551                           pclatu	equ	0xFFB
  2552                           pclath	equ	0xFFA
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodh	equ	0xFF4
  2558                           prodl	equ	0xFF3
  2559                           intcon	equ	0xFF2
  2560                           postinc0	equ	0xFEE
  2561                           fsr0h	equ	0xFEA
  2562                           fsr0l	equ	0xFE9
  2563                           wreg	equ	0xFE8
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           indf2	equ	0xFDF
  2567                           postinc2	equ	0xFDE
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           tosu	equ	0xFFF
  2572                           tosh	equ	0xFFE
  2573                           tosl	equ	0xFFD
  2574                           pclatu	equ	0xFFB
  2575                           pclath	equ	0xFFA
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodh	equ	0xFF4
  2581                           prodl	equ	0xFF3
  2582                           intcon	equ	0xFF2
  2583                           postinc0	equ	0xFEE
  2584                           fsr0h	equ	0xFEA
  2585                           fsr0l	equ	0xFE9
  2586                           wreg	equ	0xFE8
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8
  2594                           
  2595                           	psect	text17
  2596  000000                     __ptext17:
  2597                           	opt stack 0
  2598                           tosu	equ	0xFFF
  2599                           tosh	equ	0xFFE
  2600                           tosl	equ	0xFFD
  2601                           pclatu	equ	0xFFB
  2602                           pclath	equ	0xFFA
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           intcon	equ	0xFF2
  2610                           postinc0	equ	0xFEE
  2611                           fsr0h	equ	0xFEA
  2612                           fsr0l	equ	0xFE9
  2613                           wreg	equ	0xFE8
  2614                           fsr1h	equ	0xFE2
  2615                           fsr1l	equ	0xFE1
  2616                           indf2	equ	0xFDF
  2617                           postinc2	equ	0xFDE
  2618                           fsr2h	equ	0xFDA
  2619                           fsr2l	equ	0xFD9
  2620                           status	equ	0xFD8
  2621                           
  2622                           	psect	rparam
  2623  0000                     tosu	equ	0xFFF
  2624                           tosh	equ	0xFFE
  2625                           tosl	equ	0xFFD
  2626                           pclatu	equ	0xFFB
  2627                           pclath	equ	0xFFA
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           prodh	equ	0xFF4
  2633                           prodl	equ	0xFF3
  2634                           intcon	equ	0xFF2
  2635                           postinc0	equ	0xFEE
  2636                           fsr0h	equ	0xFEA
  2637                           fsr0l	equ	0xFE9
  2638                           wreg	equ	0xFE8
  2639                           fsr1h	equ	0xFE2
  2640                           fsr1l	equ	0xFE1
  2641                           indf2	equ	0xFDF
  2642                           postinc2	equ	0xFDE
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647                           	psect	temp
  2648  000045                     btemp:
  2649                           	opt stack 0
  2650  000045                     	ds	1
  2651  0000                     int$flags	set	btemp
  2652  0000                     wtemp6	set	btemp+1
  2653                           tosu	equ	0xFFF
  2654                           tosh	equ	0xFFE
  2655                           tosl	equ	0xFFD
  2656                           pclatu	equ	0xFFB
  2657                           pclath	equ	0xFFA
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           prodh	equ	0xFF4
  2663                           prodl	equ	0xFF3
  2664                           intcon	equ	0xFF2
  2665                           postinc0	equ	0xFEE
  2666                           fsr0h	equ	0xFEA
  2667                           fsr0l	equ	0xFE9
  2668                           wreg	equ	0xFE8
  2669                           fsr1h	equ	0xFE2
  2670                           fsr1l	equ	0xFE1
  2671                           indf2	equ	0xFDF
  2672                           postinc2	equ	0xFDE
  2673                           fsr2h	equ	0xFDA
  2674                           fsr2l	equ	0xFD9
  2675                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         16
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      68
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    handleCAN@msg	PTR struct . size(2) Largest target is 14
		 -> msg_r(COMRAM[14]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> msg_r(COMRAM[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ECAN_ISR_ECAN_RXBI->_handleCAN
    _handleCAN->_CAN_receive
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     121
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                    _ECAN_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0    2128
                                             28 COMRAM    18    18      0
                 _ECAN_ISR_ECAN_RXBI
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ECAN_ISR_ECAN_RXBI                                   0     0      0    2128
                          _handleCAN
 ---------------------------------------------------------------------------------
 (6) _handleCAN                                            6     4      2    2128
                                             22 COMRAM     6     4      2
                        _CAN_receive
 ---------------------------------------------------------------------------------
 (7) _CAN_receive                                          3     1      2    1744
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (8) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (8) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ECAN_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_ISR_ECAN_RXBI
     _handleCAN
       _CAN_receive
         _convertReg2ExtendedCANid
         _convertReg2StandardCANid
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4       4       5        2.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      44       1       72.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48       6        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Nov 27 00:01:29 2017

                         __size_of_ECAN_Initialize 00AC                                        __CFG_BORV$0 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l270 063C                                                l267 05A4  
                                              l507 07D4                                       __CFG_CPB$OFF 000000  
                                     __CFG_CPD$OFF 000000                                    _timer1ReloadVal 0041  
                                              _ctr 002F                                                tosl 000FFD  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0005  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _WPUB 000F5B  
                                             _main 07C8                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               fsr2h 000FDA  
                                             fsr0l 000FE9                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 0045                                               prodh 000FF4  
                                             prodl 000FF3                                               start 00BA  
                                    __CFG_IESO$OFF 000000                         ??_TMR1_SetInterruptHandler 0062  
                                     ___param_bank 000000                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 07B8                                              ?_main 0001  
                                  _TMR1_StartTimer 07E0                                              _T1CON 000FCD  
                                            i2l327 03F8                                              i2l328 02F0  
                                            i2l361 03A0                                              i2l353 0374  
                                            i2l345 0348                                              i2l337 031C  
                                            i2l329 0306                                              i2l290 0106  
                                            i2l370 03E2                                              i2l362 03B6  
                                            i2l354 038A                                              i2l346 035E  
                                            i2l338 0332                                              i2l426 0062  
                                            i2l291 0138                                              i2l428 006E  
                                            i2l293 02DE                                              i2l294 0212  
                                            i2l295 0246                                              i2l289 01CC  
                                            i2l369 03CC                                              _TMR1H 000FCF  
                                            _TMR1L 000FCE                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0014  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                 __end_of_TMR1_ISR 076A                                      __CFG_WRTB$OFF 000000  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                   __CFG_EBTRB$OFF 000000                                              _msg_r 0031  
                          __end_of_TMR1_Initialize 070E                                     __CFG_BOREN$OFF 000000  
                                            pclath 000FFA                                              tablat 000FF5  
              convertReg2ExtendedCANid@ConvertedID 0010                                              status 000FD8  
                                            wtemp6 0046                                     __CFG_MCLRE$OFF 000000  
                                  __initialization 070E                               __size_of_CAN_receive 0224  
                                     __end_of_main 07D6                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_main 0064                                      __activetblptr 000002  
                                   __CFG_RETEN$OFF 000000                                  ??_ECAN_Initialize 0060  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                             _T1GCON 000FAA  
                                           i2l2022 041E                                    __CFG_BBSIZ$BB2K 000000  
                                           i2l2024 044E                                             i2l1742 02DA  
                                   __CFG_WDTEN$OFF 000000                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                   __CFG_WDTPS$128 000000                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                     __CFG_XINST$OFF 000000  
             __end_of_TMR1_DefaultInterruptHandler 07EC              __size_of_TMR1_DefaultInterruptHandler 0002  
                     _TMR1_DefaultInterruptHandler 07EA                            __end_of_TMR1_StartTimer 07E4  
                                   __CFG_STVREN$ON 000000                         __end_of_ECAN_ISR_ECAN_RXBI 07C8  
                                           clear_0 072C                                       __pdataCOMRAM 0043  
                 __end_of_convertReg2StandardCANid 06D2                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
         TMR1_SetInterruptHandler@InterruptHandler 0060                      __size_of_INTERRUPT_Initialize 0004  
                                 ?_TMR1_Initialize 0001                                  _SYSTEM_Initialize 0790  
                                       __accesstop 0060                            __end_of__initialization 0732  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid 0458  
                           CAN_receive@returnValue 0016                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                ??_SYSTEM_Initialize 0064  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                               __size_of_handleCAN 0176              convertReg2StandardCANid@tempRXBn_SIDH 0007  
            convertReg2StandardCANid@tempRXBn_SIDL 0001                          __end_of_SYSTEM_Initialize 07A6  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 003F  
                                 ?_TMR1_StartTimer 0001                                         ??_TMR1_ISR 0001  
                                          _ECANCON 000F72                                            _CANSTAT 000F6E  
                                          _BRGCON1 000E43                                            _BRGCON2 000E44  
                                          _BRGCON3 000E45                                   __CFG_CANMX$PORTC 000000  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                          i2u22_48 0756                                            i2u42_45 04DC  
                                          _RXB0DLC 000F65                                            i2u43_45 0690  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                  __end_of_handleCAN 0458  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 0001                                    _ECAN_Initialize 05A0  
                                          __pcinit 070E                                            __ramtop 0F00  
                                          __ptext0 07C8                                            __ptext1 0790  
                                          __ptext2 06D2                                            __ptext3 07E0  
                                          __ptext4 07D6                                            __ptext5 076A  
                                          __ptext6 07A6                                            __ptext7 07E4  
                                          __ptext8 05A0                     ??_TMR1_DefaultInterruptHandler 0001  
                                        _T1CONbits 000FCD                              _OSCILLATOR_Initialize 07A6  
                __size_of_TMR1_SetInterruptHandler 000A                           ??_PIN_MANAGER_Initialize 0060  
                        ?_TMR1_SetInterruptHandler 0060                                  __CFG_MSSPMSK$MSK5 000000  
                       __size_of_SYSTEM_Initialize 0016                               end_of_initialization 0732  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0016  
                                          postinc0 000FEE                                            postinc2 000FDE  
                                 __CFG_FOSC$INTIO2 000000                         ??_convertReg2ExtendedCANid 0005  
                               _ECAN_ISR_ECAN_RXBI 07B8                                ?_ECAN_ISR_ECAN_RXBI 0001  
                          __end_of_ECAN_Initialize 064C                       __end_of_INTERRUPT_Initialize 07E8  
                              __end_of_CAN_receive 02E2                                      __pidataCOMRAM 07E8  
                                __size_of_TMR1_ISR 002A                               ??_ECAN_ISR_ECAN_RXBI 001D  
                           ?_OSCILLATOR_Initialize 0001                                start_initialization 070E  
                  __size_of_PIN_MANAGER_Initialize 0026                convertReg2StandardCANid@returnValue 0008  
                         __size_of_TMR1_Initialize 003C                                        __pbssCOMRAM 002F  
                                    __pcstackBANK0 0060                                        _CAN_receive 00BE  
                                 ?_ECAN_Initialize 0001                             _PIN_MANAGER_Initialize 076A  
                                        __pintcode 0008                                          _handleCAN 02E2  
                 __end_of_TMR1_SetInterruptHandler 07E0                       ??_INTERRUPT_InterruptManager 001D  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                 __end_of_convertReg2ExtendedCANid 05A0                               _INTERRUPT_Initialize 07E4  
                                         _LATBbits 000F8A                                           _LATCbits 000F8B  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
              __size_of_INTERRUPT_InterruptManager 00B2                                           _PIR1bits 000F9E  
                                         _PIR5bits 000F77                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                       ?_handleCAN 0017                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _TMR1_ISR 0740  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                ??_TMR1_Initialize 0062                                   __CFG_SOSCSEL$DIG 000000  
                            ?_INTERRUPT_Initialize 0001                           _convertReg2StandardCANid 064C  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0002              convertReg2ExtendedCANid@tempRXBn_SIDL 0003  
                                         __Hrparam 0000                                           __Lrparam 0000  
                          ??_OSCILLATOR_Initialize 0060                           _TMR1_SetInterruptHandler 07D6  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F                              _TMR1_InterruptHandler 003F  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E                                           _delayVal 0043  
                                         __ptext10 0740                                           __ptext11 07EA  
                                         __ptext12 07B8                                           __ptext13 02E2  
                                       _T1GCONbits 000FAA                                           __ptext14 00BE  
                                         __ptext15 064C                                           __ptext16 0458  
                                         __ptext17 0000                                  ??_TMR1_StartTimer 0060  
              convertReg2StandardCANid@ConvertedID 000C                                      __size_of_main 000E  
                                     handleCAN@msg 0017                convertReg2ExtendedCANid@returnValue 000A  
                __size_of_convertReg2ExtendedCANid 0148                                        ??_handleCAN 0019  
                        ?_convertReg2ExtendedCANid 0001                                           int$flags 0045  
               __end_of_INTERRUPT_InterruptManager 00BA                         _INTERRUPT_InterruptManager 0008  
                              __CFG_INTOSCSEL$HIGH 000000                        __size_of_ECAN_ISR_ECAN_RXBI 0010  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                             ??_INTERRUPT_Initialize 0060  
                                         intlevel2 0000                            ?_PIN_MANAGER_Initialize 0001  
                                      _TXB0CONbits 000F20                                       ?_CAN_receive 0014  
                                      _TXB1CONbits 000F10                                        _TXB2CONbits 000F00  
                   __end_of_PIN_MANAGER_Initialize 0790                                __CFG_BORPWR$ZPBORMV 000000  
                                  _TMR1_Initialize 06D2  
