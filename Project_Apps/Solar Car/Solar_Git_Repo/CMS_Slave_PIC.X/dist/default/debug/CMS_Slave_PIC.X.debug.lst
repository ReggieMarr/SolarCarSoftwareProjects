

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 26 21:56:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 1.45
    57                           ; Generated 16/11/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K80 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  00195A                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _length
    96  00195A  01                 	db	1
    97                           
    98                           	psect	idataBANK0
    99  001956                     __pidataBANK0:
   100                           	opt stack 0
   101                           
   102                           ;initializer for _address
   103  001956  0005               	dw	5
   104                           
   105                           	psect	nvCOMRAM
   106  000044                     __pnvCOMRAM:
   107                           	opt stack 0
   108  000044                     _timer1ReloadVal:
   109                           	opt stack 0
   110  000044                     	ds	2
   111  000046                     _eusart1TxBufferRemaining:
   112                           	opt stack 0
   113  000046                     	ds	1
   114                           
   115                           	psect	nvBANK0
   116  0000B2                     __pnvBANK0:
   117                           	opt stack 0
   118  0000B2                     _TMR1_InterruptHandler:
   119                           	opt stack 0
   120  0000B2                     	ds	2
   121  0000B4                     _EUSART1_RxDefaultInterruptHandler:
   122                           	opt stack 0
   123  0000B4                     	ds	2
   124  0000B6                     _EUSART1_TxDefaultInterruptHandler:
   125                           	opt stack 0
   126  0000B6                     	ds	2
   127  0000                     _BRGCON3	set	3653
   128  0000                     _BRGCON2	set	3652
   129  0000                     _BRGCON1	set	3651
   130  0000                     _RXF5SIDL	set	3829
   131  0000                     _RXF5SIDH	set	3828
   132  0000                     _RXF5EIDL	set	3831
   133  0000                     _RXF5EIDH	set	3830
   134  0000                     _RXF4SIDL	set	3825
   135  0000                     _RXF4SIDH	set	3824
   136  0000                     _RXF4EIDL	set	3827
   137  0000                     _RXF4EIDH	set	3826
   138  0000                     _RXF3SIDL	set	3821
   139  0000                     _RXF3SIDH	set	3820
   140  0000                     _RXF3EIDL	set	3823
   141  0000                     _RXF3EIDH	set	3822
   142  0000                     _RXF2SIDL	set	3817
   143  0000                     _RXF2SIDH	set	3816
   144  0000                     _RXF2EIDL	set	3819
   145  0000                     _RXF2EIDH	set	3818
   146  0000                     _RXF1SIDL	set	3813
   147  0000                     _RXF1SIDH	set	3812
   148  0000                     _RXF1EIDL	set	3815
   149  0000                     _RXF1EIDH	set	3814
   150  0000                     _RXF0SIDL	set	3809
   151  0000                     _RXF0SIDH	set	3808
   152  0000                     _RXF0EIDL	set	3811
   153  0000                     _RXF0EIDH	set	3810
   154  0000                     _RXM1SIDL	set	3837
   155  0000                     _RXM1SIDH	set	3836
   156  0000                     _RXM1EIDL	set	3839
   157  0000                     _RXM1EIDH	set	3838
   158  0000                     _RXM0SIDL	set	3833
   159  0000                     _RXM0SIDH	set	3832
   160  0000                     _RXM0EIDL	set	3835
   161  0000                     _RXM0EIDH	set	3834
   162  0000                     _CCPR5H	set	3913
   163  0000                     _CCPR5L	set	3912
   164  0000                     _CCP5CON	set	3911
   165  0000                     _CCPR2H	set	3922
   166  0000                     _CCPR2L	set	3921
   167  0000                     _CCP2CON	set	3920
   168  0000                     _WPUB	set	3931
   169  0000                     _ANCON1	set	3932
   170  0000                     _ANCON0	set	3933
   171  0000                     _RXB1D7	set	3901
   172  0000                     _RXB1D6	set	3900
   173  0000                     _RXB1D5	set	3899
   174  0000                     _RXB1D4	set	3898
   175  0000                     _RXB1D3	set	3897
   176  0000                     _RXB1D2	set	3896
   177  0000                     _RXB1D1	set	3895
   178  0000                     _RXB1D0	set	3894
   179  0000                     _RXB1DLC	set	3893
   180  0000                     _RXB1SIDH	set	3889
   181  0000                     _RXB1EIDL	set	3892
   182  0000                     _RXB1EIDH	set	3891
   183  0000                     _RXB1SIDL	set	3890
   184  0000                     _RXB1CONbits	set	3888
   185  0000                     _TXB2D7	set	3853
   186  0000                     _TXB2D6	set	3852
   187  0000                     _TXB2D5	set	3851
   188  0000                     _TXB2D4	set	3850
   189  0000                     _TXB2D3	set	3849
   190  0000                     _TXB2D2	set	3848
   191  0000                     _TXB2D1	set	3847
   192  0000                     _TXB2D0	set	3846
   193  0000                     _TXB2DLC	set	3845
   194  0000                     _TXB2SIDL	set	3842
   195  0000                     _TXB2SIDH	set	3841
   196  0000                     _TXB2EIDL	set	3844
   197  0000                     _TXB2EIDH	set	3843
   198  0000                     _TXB2CONbits	set	3840
   199  0000                     _TXB1D7	set	3869
   200  0000                     _TXB1D6	set	3868
   201  0000                     _TXB1D5	set	3867
   202  0000                     _TXB1D4	set	3866
   203  0000                     _TXB1D3	set	3865
   204  0000                     _TXB1D2	set	3864
   205  0000                     _TXB1D1	set	3863
   206  0000                     _TXB1D0	set	3862
   207  0000                     _TXB1DLC	set	3861
   208  0000                     _TXB1SIDL	set	3858
   209  0000                     _TXB1SIDH	set	3857
   210  0000                     _TXB1EIDL	set	3860
   211  0000                     _TXB1EIDH	set	3859
   212  0000                     _TXB1CONbits	set	3856
   213  0000                     _TXB0D7	set	3885
   214  0000                     _TXB0D6	set	3884
   215  0000                     _TXB0D5	set	3883
   216  0000                     _TXB0D4	set	3882
   217  0000                     _TXB0D3	set	3881
   218  0000                     _TXB0D2	set	3880
   219  0000                     _TXB0D1	set	3879
   220  0000                     _TXB0D0	set	3878
   221  0000                     _TXB0DLC	set	3877
   222  0000                     _TXB0SIDL	set	3874
   223  0000                     _TXB0SIDH	set	3873
   224  0000                     _TXB0EIDL	set	3876
   225  0000                     _TXB0EIDH	set	3875
   226  0000                     _TXB0CONbits	set	3872
   227  0000                     _LATBbits	set	3978
   228  0000                     _CCPTMRSbits	set	3993
   229  0000                     _T2CONbits	set	4042
   230  0000                     _T2CON	set	4042
   231  0000                     _TMR2	set	4044
   232  0000                     _PR2	set	4043
   233  0000                     _T1GCONbits	set	4010
   234  0000                     _T1CONbits	set	4045
   235  0000                     _T1CON	set	4045
   236  0000                     _TMR1L	set	4046
   237  0000                     _TMR1H	set	4047
   238  0000                     _T1GCON	set	4010
   239  0000                     _RCREG1	set	4014
   240  0000                     _RCSTA1bits	set	4011
   241  0000                     _TXREG1	set	4013
   242  0000                     _TXSTA1bits	set	4012
   243  0000                     _SPBRGH1	set	3965
   244  0000                     _SPBRG1	set	4015
   245  0000                     _TXSTA1	set	4012
   246  0000                     _RCSTA1	set	4011
   247  0000                     _BAUDCON1	set	4007
   248  0000                     _SSPBUF	set	4041
   249  0000                     _SSPCON2bits	set	4037
   250  0000                     _SSPCON1bits	set	4038
   251  0000                     _SSPADD	set	4040
   252  0000                     _SSPCON1	set	4038
   253  0000                     _SSPSTAT	set	4039
   254  0000                     _REFOCON	set	3994
   255  0000                     _OSCTUNE	set	3995
   256  0000                     _OSCCON2	set	4050
   257  0000                     _OSCCON	set	4051
   258  0000                     _PIR1bits	set	3998
   259  0000                     _PIE1bits	set	3997
   260  0000                     _PIR2bits	set	4001
   261  0000                     _PIE2bits	set	4000
   262  0000                     _RCONbits	set	4048
   263  0000                     _INTCONbits	set	4082
   264  0000                     _INTCON2bits	set	4081
   265  0000                     _TRISC	set	3988
   266  0000                     _TRISB	set	3987
   267  0000                     _TRISA	set	3986
   268  0000                     _LATC	set	3979
   269  0000                     _LATB	set	3978
   270  0000                     _LATA	set	3977
   271  0000                     _COMSTATbits	set	3953
   272  0000                     _RXB0D7	set	3949
   273  0000                     _RXB0D6	set	3948
   274  0000                     _RXB0D5	set	3947
   275  0000                     _RXB0D4	set	3946
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D2	set	3944
   278  0000                     _RXB0D1	set	3943
   279  0000                     _RXB0D0	set	3942
   280  0000                     _RXB0DLC	set	3941
   281  0000                     _RXB0SIDH	set	3937
   282  0000                     _RXB0EIDL	set	3940
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0SIDL	set	3938
   285  0000                     _RXB0CONbits	set	3936
   286  0000                     _PIE5bits	set	3958
   287  0000                     _PIR5bits	set	3959
   288  0000                     _CIOCON	set	3952
   289  0000                     _ECANCON	set	3954
   290  0000                     _CANSTAT	set	3950
   291  0000                     _CANCON	set	3951
   292                           
   293                           	psect	smallconst
   294  000F00                     __psmallconst:
   295                           	opt stack 0
   296  000F00  00                 	db	0
   297  000F01                     STR_2:
   298  000F01  30                 	db	48	;'0'
   299  000F02  31                 	db	49	;'1'
   300  000F03  32                 	db	50	;'2'
   301  000F04  33                 	db	51	;'3'
   302  000F05  34                 	db	52	;'4'
   303  000F06  35                 	db	53	;'5'
   304  000F07  36                 	db	54	;'6'
   305  000F08  37                 	db	55	;'7'
   306  000F09  38                 	db	56	;'8'
   307  000F0A  39                 	db	57	;'9'
   308  000F0B  00                 	db	0
   309  000F0C                     STR_3:
   310  000F0C  57                 	db	87	;'W'
   311  000F0D  6F                 	db	111	;'o'
   312  000F0E  72                 	db	114	;'r'
   313  000F0F  6B                 	db	107	;'k'
   314  000F10  65                 	db	101	;'e'
   315  000F11  64                 	db	100	;'d'
   316  000F12  21                 	db	33
   317  000F13  00                 	db	0
   318  000F14                     STR_1:
   319  000F14  43                 	db	67	;'C'
   320  000F15  75                 	db	117	;'u'
   321  000F16  72                 	db	114	;'r'
   322  000F17  72                 	db	114	;'r'
   323  000F18  65                 	db	101	;'e'
   324  000F19  6E                 	db	110	;'n'
   325  000F1A  74                 	db	116	;'t'
   326  000F1B  00                 	db	0
   327                           
   328                           ; #config settings
   329  000F1C  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           	psect	cinit
   332  0015A4                     __pcinit:
   333                           	opt stack 0
   334  0015A4                     start_initialization:
   335                           	opt stack 0
   336  0015A4                     __initialization:
   337                           	opt stack 0
   338                           
   339                           ; Initialize objects allocated to BANK0 (2 bytes)
   340                           ; load TBLPTR registers with __pidataBANK0
   341  0015A4  0E56               	movlw	low __pidataBANK0
   342  0015A6  6EF6               	movwf	tblptrl,c
   343  0015A8  0E19               	movlw	high __pidataBANK0
   344  0015AA  6EF7               	movwf	tblptrh,c
   345  0015AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   346  0015AE  6EF8               	movwf	tblptru,c
   347  0015B0  0009               	tblrd		*+	;fetch initializer
   348  0015B2  CFF5 F0B8          	movff	tablat,__pdataBANK0
   349  0015B6  0009               	tblrd		*+	;fetch initializer
   350  0015B8  CFF5 F0B9          	movff	tablat,__pdataBANK0+1
   351                           
   352                           ; Initialize objects allocated to COMRAM (1 bytes)
   353                           ; load TBLPTR registers with __pidataCOMRAM
   354  0015BC  0E5A               	movlw	low __pidataCOMRAM
   355  0015BE  6EF6               	movwf	tblptrl,c
   356  0015C0  0E19               	movlw	high __pidataCOMRAM
   357  0015C2  6EF7               	movwf	tblptrh,c
   358  0015C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   359  0015C6  6EF8               	movwf	tblptru,c
   360  0015C8  0009               	tblrd		*+	;fetch initializer
   361  0015CA  CFF5 F047          	movff	tablat,__pdataCOMRAM
   362                           
   363                           ; Clear objects allocated to BANK0 (60 bytes)
   364  0015CE  EE00  F060         	lfsr	0,__pbssBANK0
   365  0015D2  0E3C               	movlw	60
   366  0015D4                     clear_0:
   367  0015D4  6AEE               	clrf	postinc0,c
   368  0015D6  06E8               	decf	wreg,f,c
   369  0015D8  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to COMRAM (31 bytes)
   372  0015DA  EE00  F025         	lfsr	0,__pbssCOMRAM
   373  0015DE  0E1F               	movlw	31
   374  0015E0                     clear_1:
   375  0015E0  6AEE               	clrf	postinc0,c
   376  0015E2  06E8               	decf	wreg,f,c
   377  0015E4  E1FD               	bnz	clear_1
   378  0015E6                     end_of_initialization:
   379                           	opt stack 0
   380  0015E6                     __end_of__initialization:
   381                           	opt stack 0
   382  0015E6  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   383  0015E8  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   384  0015EA  0100               	movlb	0
   385  0015EC  EFD4  F008         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           
   393                           	psect	bssCOMRAM
   394  000025                     __pbssCOMRAM:
   395                           	opt stack 0
   396  000025                     _i2c_object:
   397                           	opt stack 0
   398  000025                     	ds	7
   399  00002C                     	ds	2
   400  00002E                     I2C_ISR@pi2c_buf_ptr:
   401                           	opt stack 0
   402  00002E                     	ds	2
   403  000030                     _p_i2c_current:
   404                           	opt stack 0
   405  000030                     	ds	2
   406  000032                     _p_i2c_trb_current:
   407                           	opt stack 0
   408  000032                     	ds	2
   409  000034                     	ds	1
   410  000035                     	ds	1
   411  000036                     	ds	1
   412  000037                     	ds	1
   413  000038                     	ds	1
   414  000039                     _eusart1RxCount:
   415                           	opt stack 0
   416  000039                     	ds	1
   417  00003A                     _eusart1RxTail:
   418                           	opt stack 0
   419  00003A                     	ds	1
   420  00003B                     _eusart1RxHead:
   421                           	opt stack 0
   422  00003B                     	ds	1
   423  00003C                     _eusart1TxTail:
   424                           	opt stack 0
   425  00003C                     	ds	1
   426  00003D                     _eusart1TxHead:
   427                           	opt stack 0
   428  00003D                     	ds	1
   429  00003E                     I2C_ISR@i2c_10bit_address_restart:
   430                           	opt stack 0
   431  00003E                     	ds	1
   432  00003F                     I2C_ISR@i2c_bytes_left:
   433                           	opt stack 0
   434  00003F                     	ds	1
   435  000040                     _i2c_trb_count:
   436                           	opt stack 0
   437  000040                     	ds	1
   438  000041                     _i2c_state:
   439                           	opt stack 0
   440  000041                     	ds	1
   441  000042                     I2C_ISR@i2c_address:
   442                           	opt stack 0
   443  000042                     	ds	2
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           
   451                           	psect	dataCOMRAM
   452  000047                     __pdataCOMRAM:
   453                           	opt stack 0
   454  000047                     	ds	1
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           
   462                           	psect	bssBANK0
   463  000060                     __pbssBANK0:
   464                           	opt stack 0
   465  000060                     _I2C_Recv:
   466                           	opt stack 0
   467  000060                     	ds	21
   468  000075                     	ds	8
   469  00007D                     _eusart1RxBuffer:
   470                           	opt stack 0
   471  00007D                     	ds	8
   472  000085                     _eusart1TxBuffer:
   473                           	opt stack 0
   474  000085                     	ds	8
   475  00008D                     I2C_MasterRead@trBlock:
   476                           	opt stack 0
   477  00008D                     	ds	5
   478  000092                     I2C_MasterWrite@trBlock:
   479                           	opt stack 0
   480  000092                     	ds	5
   481  000097                     _i2c_tr_queue:
   482                           	opt stack 0
   483  000097                     	ds	5
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           
   491                           	psect	dataBANK0
   492  0000B8                     __pdataBANK0:
   493                           	opt stack 0
   494  0000B8                     	ds	2
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	cstackBANK0
   503  00009C                     __pcstackBANK0:
   504                           	opt stack 0
   505  00009C                     I2C_MasterWrite@pdata:
   506                           	opt stack 0
   507  00009C                     I2C_MasterRead@pdata:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x0
   511  00009C                     	ds	2
   512  00009E                     I2C_MasterWrite@length:
   513                           	opt stack 0
   514  00009E                     I2C_MasterRead@length:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2
   518  00009E                     	ds	1
   519  00009F                     I2C_MasterWrite@address:
   520                           	opt stack 0
   521  00009F                     I2C_MasterRead@address:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x3
   525  00009F                     	ds	2
   526  0000A1                     I2C_MasterWrite@pflag:
   527                           	opt stack 0
   528  0000A1                     I2C_MasterRead@pflag:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x5
   532  0000A1                     	ds	2
   533  0000A3                     ??_mccSendI2C:
   534  0000A3                     ??_mccReceiveI2C:
   535                           
   536                           ; 1 bytes @ 0x7
   537  0000A3                     	ds	1
   538  0000A4                     mccSendI2C@timeOut:
   539                           	opt stack 0
   540  0000A4                     mccReceiveI2C@timeOut:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x8
   544  0000A4                     	ds	2
   545  0000A6                     mccSendI2C@sendFlag:
   546                           	opt stack 0
   547  0000A6                     mccReceiveI2C@sendFlag:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0xA
   551  0000A6                     	ds	1
   552  0000A7                     ??_main:
   553                           
   554                           ; 1 bytes @ 0xB
   555  0000A7                     	ds	2
   556  0000A9                     main@sync_mode:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xD
   560  0000A9                     	ds	1
   561  0000AA                     main@slew:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0xE
   565  0000AA                     	ds	1
   566  0000AB                     main@add1:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0xF
   570  0000AB                     	ds	1
   571  0000AC                     main@sendFlag:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x10
   575  0000AC                     	ds	1
   576  0000AD                     main@dataMCC:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x11
   580  0000AD                     	ds	2
   581  0000AF                     main@readData:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x13
   585  0000AF                     	ds	2
   586  0000B1                     main@w:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x15
   590  0000B1                     	ds	1
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           
   598                           	psect	cstackCOMRAM
   599  000001                     __pcstackCOMRAM:
   600                           	opt stack 0
   601  000001                     ??_I2C_Stop:
   602  000001                     TMR1_WriteTimer@timerVal:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x0
   606  000001                     	ds	2
   607  000003                     I2C_Stop@completion_code:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x2
   611  000003                     	ds	1
   612  000004                     ??_I2C_ISR:
   613                           
   614                           ; 1 bytes @ 0x3
   615  000004                     	ds	2
   616  000006                     ??_INTERRUPT_InterruptManager:
   617                           
   618                           ; 1 bytes @ 0x5
   619  000006                     	ds	18
   620  000018                     ??_ECAN_Initialize:
   621  000018                     ?_strlen:
   622                           	opt stack 0
   623  000018                     I2C_WaitForLastPacketToComplete@count:
   624                           	opt stack 0
   625  000018                     I2C_MasterReadTRBBuild@ptrb:
   626                           	opt stack 0
   627  000018                     I2C_MasterWriteTRBBuild@ptrb:
   628                           	opt stack 0
   629  000018                     EUSART1_SetTxInterruptHandler@interruptHandler:
   630                           	opt stack 0
   631  000018                     EUSART1_SetRxInterruptHandler@interruptHandler:
   632                           	opt stack 0
   633  000018                     TMR1_SetInterruptHandler@InterruptHandler:
   634                           	opt stack 0
   635  000018                     strlen@s:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x17
   639  000018                     	ds	2
   640  00001A                     ??_TMR1_Initialize:
   641  00001A                     ??_strlen:
   642  00001A                     I2C_MasterTRBInsert@ptrb_list:
   643                           	opt stack 0
   644  00001A                     I2C_MasterReadTRBBuild@pdata:
   645                           	opt stack 0
   646  00001A                     I2C_MasterWriteTRBBuild@pdata:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x19
   650  00001A                     	ds	2
   651  00001C                     I2C_MasterReadTRBBuild@length:
   652                           	opt stack 0
   653  00001C                     I2C_MasterWriteTRBBuild@length:
   654                           	opt stack 0
   655  00001C                     I2C_MasterTRBInsert@pflag:
   656                           	opt stack 0
   657  00001C                     strlen@cp:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x1B
   661  00001C                     	ds	1
   662  00001D                     I2C_MasterReadTRBBuild@address:
   663                           	opt stack 0
   664  00001D                     I2C_MasterWriteTRBBuild@address:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x1C
   668  00001D                     	ds	1
   669  00001E                     
   670                           ; 1 bytes @ 0x1D
   671  00001E                     	ds	1
   672  00001F                     ??_I2C_MasterWriteTRBBuild:
   673  00001F                     ??_I2C_MasterReadTRBBuild:
   674  00001F                     I2C_MasterTRBInsert@count:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1E
   678  00001F                     	ds	2
   679  000021                     mccSendI2C@dataToSend:
   680                           	opt stack 0
   681  000021                     mccReceiveI2C@dataToSend:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x20
   685  000021                     	ds	2
   686  000023                     mccSendI2C@address:
   687                           	opt stack 0
   688  000023                     mccReceiveI2C@address:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x22
   692  000023                     	ds	2
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           postinc0	equ	0xFEE
   698                           wreg	equ	0xFE8
   699                           
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 65 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  readData        2   19[BANK0 ] PTR volatile unsigned ch
   710 ;;		 -> STR_2(11), 
   711 ;;  dataMCC         2   17[BANK0 ] PTR unsigned char 
   712 ;;		 -> STR_1(8), 
   713 ;;  w               1   21[BANK0 ] unsigned char 
   714 ;;  sendFlag        1   16[BANK0 ] enum E15711
   715 ;;  add1            1   15[BANK0 ] unsigned char 
   716 ;;  slew            1   14[BANK0 ] unsigned char 
   717 ;;  sync_mode       1   13[BANK0 ] unsigned char 
   718 ;;  length          1    0        unsigned char 
   719 ;;  status          1    0        unsigned char 
   720 ;;  data            1    0        unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;Total ram usage:       11 bytes
   735 ;; Hardware stack levels required when called:    7
   736 ;; This function calls:
   737 ;;		_SYSTEM_Initialize
   738 ;;		_mccReceiveI2C
   739 ;;		_mccSendI2C
   740 ;; This function is called by:
   741 ;;		Startup code after reset
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text0
   746  0011A8                     __ptext0:
   747                           	opt stack 0
   748  0011A8                     _main:
   749                           	opt stack 24
   750                           
   751                           ;main.c: 68: SYSTEM_Initialize();
   752                           
   753                           ;incstack = 0
   754  0011A8  EC21  F00C         	call	_SYSTEM_Initialize	;wreg free
   755                           
   756                           ;main.c: 75: (INTCONbits.GIE = 1);
   757  0011AC  8EF2               	bsf	intcon,7,c	;volatile
   758                           
   759                           ;main.c: 81: (INTCONbits.PEIE = 1);
   760  0011AE  8CF2               	bsf	intcon,6,c	;volatile
   761                           
   762                           ;main.c: 89: unsigned char sync_mode=0, slew=0, add1,w,data,status,length;
   763  0011B0  0E00               	movlw	0
   764  0011B2  0100               	movlb	0	; () banked
   765  0011B4  6FA9               	movwf	main@sync_mode& (0+255),b
   766                           
   767                           ; BSR set to: 0
   768  0011B6  0E00               	movlw	0
   769  0011B8  6FAA               	movwf	main@slew& (0+255),b
   770                           
   771                           ; BSR set to: 0
   772                           ;main.c: 91: for(w=0;w<20;w++)
   773  0011BA  0E00               	movlw	0
   774  0011BC  6FB1               	movwf	main@w& (0+255),b
   775  0011BE                     l3280:
   776                           
   777                           ; BSR set to: 0
   778  0011BE  0E13               	movlw	19
   779  0011C0  65B1               	cpfsgt	main@w& (0+255),b
   780  0011C2  D001               	goto	l812
   781  0011C4  D00C               	goto	u2150
   782  0011C6                     l812:
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 92: I2C_Recv[w]=0;
   786                           
   787                           ; BSR set to: 0
   788  0011C6  51B1               	movf	main@w& (0+255),w,b
   789  0011C8  0D01               	mullw	1
   790  0011CA  0E60               	movlw	low _I2C_Recv
   791  0011CC  24F3               	addwf	prodl,w,c
   792  0011CE  6ED9               	movwf	fsr2l,c
   793  0011D0  0E00               	movlw	high _I2C_Recv
   794  0011D2  20F4               	addwfc	prodh,w,c
   795  0011D4  6EDA               	movwf	fsr2h,c
   796  0011D6  0E00               	movlw	0
   797  0011D8  6EDF               	movwf	indf2,c
   798                           
   799                           ; BSR set to: 0
   800  0011DA  2BB1               	incf	main@w& (0+255),f,b
   801  0011DC  D7F0               	goto	l3280
   802  0011DE                     u2150:
   803                           
   804                           ; BSR set to: 0
   805                           ;main.c: 93: add1=0x8;
   806                           
   807                           ; BSR set to: 0
   808  0011DE  0E08               	movlw	8
   809  0011E0  6FAB               	movwf	main@add1& (0+255),b
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 94: uint8_t *dataMCC = "Current";
   813  0011E2  0E14               	movlw	low STR_1
   814  0011E4  6FAD               	movwf	main@dataMCC& (0+255),b
   815  0011E6  0E0F               	movlw	high STR_1
   816  0011E8  6FAE               	movwf	(main@dataMCC+1)& (0+255),b
   817                           
   818                           ; BSR set to: 0
   819                           ;main.c: 95: volatile uint8_t *readData = "0123456789";
   820  0011EA  0E01               	movlw	low STR_2
   821  0011EC  6FAF               	movwf	main@readData& (0+255),b
   822  0011EE  0E0F               	movlw	high STR_2
   823  0011F0  6FB0               	movwf	(main@readData+1)& (0+255),b
   824                           
   825                           ;main.c: 96: I2C_MESSAGE_STATUS sendFlag = I2C_MESSAGE_PENDING;
   826  0011F2  0E02               	movlw	2
   827  0011F4  6FAC               	movwf	main@sendFlag& (0+255),b
   828  0011F6                     
   829                           ;main.c: 98: {
   830                           ;main.c: 102: if(readData[0] == 'O' && readData[1] == 'K')
   831                           
   832                           ; BSR set to: 0
   833  0011F6  C0AF  FFF6         	movff	main@readData,tblptrl
   834  0011FA  C0B0  FFF7         	movff	main@readData+1,tblptrh
   835  0011FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   836  0011FE  6AF8               	clrf	tblptru,c
   837  001200                     	endif
   838  001200                     	if	0	;tblptru may be non-zero
   839  001200                     	endif
   840  001200  0008               	tblrd		*
   841  001202  50F5               	movf	tablat,w,c
   842  001204  0A4F               	xorlw	79
   843  001206  A4D8               	btfss	status,2,c
   844  001208  D01B               	goto	l815
   845  00120A  0E01               	movlw	1
   846  00120C  0100               	movlb	0	; () banked
   847  00120E  25AF               	addwf	main@readData& (0+255),w,b
   848  001210  6FA7               	movwf	??_main& (0+255),b
   849  001212  0E00               	movlw	0
   850  001214  21B0               	addwfc	(main@readData+1)& (0+255),w,b
   851  001216  6FA8               	movwf	(??_main+1)& (0+255),b
   852  001218  C0A7  FFF6         	movff	??_main,tblptrl
   853  00121C  C0A8  FFF7         	movff	??_main+1,tblptrh
   854  001220                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   855  001220  6AF8               	clrf	tblptru,c
   856  001222                     	endif
   857  001222                     	if	0	;tblptru may be non-zero
   858  001222                     	endif
   859  001222  0008               	tblrd		*
   860  001224  50F5               	movf	tablat,w,c
   861  001226  0A4B               	xorlw	75
   862  001228  A4D8               	btfss	status,2,c
   863  00122A  D00A               	goto	l815
   864                           
   865                           ; BSR set to: 0
   866                           ;main.c: 103: {
   867                           ;main.c: 104: mccSendI2C("Worked!",8);
   868  00122C  0E0C               	movlw	low STR_3
   869  00122E  6E21               	movwf	mccSendI2C@dataToSend,c
   870  001230  0E0F               	movlw	high STR_3
   871  001232  6E22               	movwf	mccSendI2C@dataToSend+1,c
   872  001234  0E00               	movlw	0
   873  001236  6E24               	movwf	mccSendI2C@address+1,c
   874  001238  0E08               	movlw	8
   875  00123A  6E23               	movwf	mccSendI2C@address,c
   876  00123C  EC90  F009         	call	_mccSendI2C	;wreg free
   877  001240                     l815:
   878                           
   879                           ;main.c: 105: }
   880                           ;main.c: 107: mccSendI2C(dataMCC,8);
   881  001240  C0AD  F021         	movff	main@dataMCC,mccSendI2C@dataToSend
   882  001244  C0AE  F022         	movff	main@dataMCC+1,mccSendI2C@dataToSend+1
   883  001248  0E00               	movlw	0
   884  00124A  6E24               	movwf	mccSendI2C@address+1,c
   885  00124C  0E08               	movlw	8
   886  00124E  6E23               	movwf	mccSendI2C@address,c
   887  001250  EC90  F009         	call	_mccSendI2C	;wreg free
   888                           
   889                           ;main.c: 109: mccReceiveI2C(readData,8);
   890  001254  C0AF  F021         	movff	main@readData,mccReceiveI2C@dataToSend
   891  001258  C0B0  F022         	movff	main@readData+1,mccReceiveI2C@dataToSend+1
   892  00125C  0E00               	movlw	0
   893  00125E  6E24               	movwf	mccReceiveI2C@address+1,c
   894  001260  0E08               	movlw	8
   895  001262  6E23               	movwf	mccReceiveI2C@address,c
   896  001264  ECE0  F009         	call	_mccReceiveI2C	;wreg free
   897  001268  D7C6               	goto	l814
   898  00126A                     __end_of_main:
   899                           	opt stack 0
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           prodh	equ	0xFF4
   905                           prodl	equ	0xFF3
   906                           intcon	equ	0xFF2
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           indf2	equ	0xFDF
   910                           fsr2h	equ	0xFDA
   911                           fsr2l	equ	0xFD9
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _mccSendI2C *****************
   915 ;; Defined at:
   916 ;;		line 115 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  dataToSend      2   32[COMRAM] PTR unsigned char 
   919 ;;		 -> STR_3(8), STR_1(8), 
   920 ;;  address         2   34[COMRAM] unsigned int 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  timeOut         2    8[BANK0 ] int 
   923 ;;  sendFlag        1   10[BANK0 ] enum E15711
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;Total ram usage:        8 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    6
   940 ;; This function calls:
   941 ;;		_I2C_MasterWrite
   942 ;;		_strlen
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text1
   949  001320                     __ptext1:
   950                           	opt stack 0
   951  001320                     _mccSendI2C:
   952                           	opt stack 24
   953                           
   954                           ;main.c: 117: I2C_MESSAGE_STATUS sendFlag = I2C_MESSAGE_PENDING;
   955                           
   956                           ;incstack = 0
   957  001320  0E02               	movlw	2
   958  001322  0100               	movlb	0	; () banked
   959  001324  6FA6               	movwf	mccSendI2C@sendFlag& (0+255),b
   960                           
   961                           ; BSR set to: 0
   962                           
   963                           ; BSR set to: 0
   964                           
   965                           ;main.c: 118: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
   966  001326  A88A               	btfss	3978,4,c	;volatile
   967  001328  D002               	goto	u1910
   968  00132A  0E01               	movlw	1
   969  00132C  D001               	goto	u1916
   970  00132E                     u1910:
   971  00132E  0E00               	movlw	0
   972  001330                     u1916:
   973  001330  0AFF               	xorlw	255
   974  001332  6FA3               	movwf	??_mccSendI2C& (0+255),b
   975  001334  3BA3               	swapf	??_mccSendI2C& (0+255),f,b
   976  001336  508A               	movf	3978,w,c	;volatile
   977  001338  19A3               	xorwf	??_mccSendI2C& (0+255),w,b
   978  00133A  0BEF               	andlw	-17
   979  00133C  19A3               	xorwf	??_mccSendI2C& (0+255),w,b
   980  00133E  6E8A               	movwf	3978,c	;volatile
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 119: int timeOut = 0;
   984                           
   985                           ; BSR set to: 0
   986  001340  0E00               	movlw	0
   987  001342  6FA5               	movwf	(mccSendI2C@timeOut+1)& (0+255),b
   988  001344  0E00               	movlw	0
   989  001346  6FA4               	movwf	mccSendI2C@timeOut& (0+255),b
   990  001348                     
   991                           ; BSR set to: 0
   992                           ;main.c: 121: {
   993                           ;main.c: 122: if(sendFlag == I2C_MESSAGE_COMPLETE || timeOut == 10)
   994                           
   995                           ; BSR set to: 0
   996  001348  51A6               	movf	mccSendI2C@sendFlag& (0+255),w,b
   997  00134A  B4D8               	btfsc	status,2,c
   998  00134C  0012               	return	
   999                           
  1000                           ; BSR set to: 0
  1001  00134E  0E0A               	movlw	10
  1002  001350  19A4               	xorwf	mccSendI2C@timeOut& (0+255),w,b
  1003  001352  11A5               	iorwf	(mccSendI2C@timeOut+1)& (0+255),w,b
  1004  001354  B4D8               	btfsc	status,2,c
  1005  001356  0012               	return	
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;main.c: 126: else
  1009                           ;main.c: 127: {
  1010                           ;main.c: 128: timeOut++;
  1011                           
  1012                           ; BSR set to: 0
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 125: }
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;main.c: 123: {
  1019                           ;main.c: 124: break;
  1020  001358  4BA4               	infsnz	mccSendI2C@timeOut& (0+255),f,b
  1021  00135A  2BA5               	incf	(mccSendI2C@timeOut+1)& (0+255),f,b
  1022                           
  1023                           ; BSR set to: 0
  1024                           
  1025                           ; BSR set to: 0
  1026                           
  1027                           ;main.c: 129: }
  1028                           ;main.c: 130: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
  1029                           
  1030                           ; BSR set to: 0
  1031  00135C  A88A               	btfss	3978,4,c	;volatile
  1032  00135E  D002               	goto	u1940
  1033  001360  0E01               	movlw	1
  1034  001362  D001               	goto	u1946
  1035  001364                     u1940:
  1036  001364  0E00               	movlw	0
  1037  001366                     u1946:
  1038  001366  0AFF               	xorlw	255
  1039  001368  6FA3               	movwf	??_mccSendI2C& (0+255),b
  1040  00136A  3BA3               	swapf	??_mccSendI2C& (0+255),f,b
  1041  00136C  508A               	movf	3978,w,c	;volatile
  1042  00136E  19A3               	xorwf	??_mccSendI2C& (0+255),w,b
  1043  001370  0BEF               	andlw	-17
  1044  001372  19A3               	xorwf	??_mccSendI2C& (0+255),w,b
  1045  001374  6E8A               	movwf	3978,c	;volatile
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;main.c: 131: _delay((unsigned long)((60)*(4000000/4000.0)));
  1049  001376  0E4E               	movlw	78
  1050  001378  0100               	movlb	0	; () banked
  1051  00137A  6FA3               	movwf	??_mccSendI2C& (0+255),b
  1052  00137C  0EEB               	movlw	235
  1053  00137E                     u2187:
  1054  00137E  2EE8               	decfsz	wreg,f,c
  1055  001380  D7FE               	bra	u2187
  1056  001382  2FA3               	decfsz	??_mccSendI2C& (0+255),f,b
  1057  001384  D7FC               	bra	u2187
  1058                           
  1059                           ;main.c: 132: I2C_MasterWrite(dataToSend,strlen(dataToSend),8,&sendFlag);
  1060  001386  C021  F09C         	movff	mccSendI2C@dataToSend,I2C_MasterWrite@pdata
  1061  00138A  C022  F09D         	movff	mccSendI2C@dataToSend+1,I2C_MasterWrite@pdata+1
  1062  00138E  C021  F018         	movff	mccSendI2C@dataToSend,strlen@s
  1063  001392  C022  F019         	movff	mccSendI2C@dataToSend+1,strlen@s+1
  1064  001396  EC8A  F00B         	call	_strlen	;wreg free
  1065  00139A  5018               	movf	?_strlen,w,c
  1066  00139C  0100               	movlb	0	; () banked
  1067  00139E  6F9E               	movwf	I2C_MasterWrite@length& (0+255),b
  1068  0013A0  0E00               	movlw	0
  1069  0013A2  6FA0               	movwf	(I2C_MasterWrite@address+1)& (0+255),b
  1070  0013A4  0E08               	movlw	8
  1071  0013A6  6F9F               	movwf	I2C_MasterWrite@address& (0+255),b
  1072  0013A8  0EA6               	movlw	low mccSendI2C@sendFlag
  1073  0013AA  6FA1               	movwf	I2C_MasterWrite@pflag& (0+255),b
  1074  0013AC  0E00               	movlw	high mccSendI2C@sendFlag
  1075  0013AE  6FA2               	movwf	(I2C_MasterWrite@pflag+1)& (0+255),b
  1076  0013B0  EC1E  F00B         	call	_I2C_MasterWrite	;wreg free
  1077                           
  1078                           ;main.c: 134: }
  1079                           ;main.c: 135: while(sendFlag == I2C_MESSAGE_PENDING);
  1080  0013B4  0E02               	movlw	2
  1081  0013B6  0100               	movlb	0	; () banked
  1082  0013B8  19A6               	xorwf	mccSendI2C@sendFlag& (0+255),w,b
  1083  0013BA  A4D8               	btfss	status,2,c
  1084  0013BC  0012               	return	
  1085  0013BE  D7C4               	goto	l823
  1086  0013C0                     __end_of_mccSendI2C:
  1087                           	opt stack 0
  1088                           tblptru	equ	0xFF8
  1089                           tblptrh	equ	0xFF7
  1090                           tblptrl	equ	0xFF6
  1091                           tablat	equ	0xFF5
  1092                           prodh	equ	0xFF4
  1093                           prodl	equ	0xFF3
  1094                           intcon	equ	0xFF2
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           indf2	equ	0xFDF
  1098                           fsr2h	equ	0xFDA
  1099                           fsr2l	equ	0xFD9
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _I2C_MasterWrite *****************
  1103 ;; Defined at:
  1104 ;;		line 598 in file "mcc_generated_files/i2c.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  1107 ;;		 -> STR_3(8), STR_1(8), 
  1108 ;;  length          1    2[BANK0 ] unsigned char 
  1109 ;;  address         2    3[BANK0 ] unsigned int 
  1110 ;;  pflag           2    5[BANK0 ] PTR enum E15702
  1111 ;;		 -> mccSendI2C@sendFlag(1), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1123 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;Total ram usage:        7 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    5
  1130 ;; This function calls:
  1131 ;;		_I2C_MasterTRBInsert
  1132 ;;		_I2C_MasterWriteTRBBuild
  1133 ;; This function is called by:
  1134 ;;		_mccSendI2C
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text2
  1139  00163C                     __ptext2:
  1140                           	opt stack 0
  1141  00163C                     _I2C_MasterWrite:
  1142                           	opt stack 24
  1143                           
  1144                           ;i2c.c: 604: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
  1145                           ;i2c.c: 607: if (i2c_object.trStatus.s.full != 1)
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;incstack = 0
  1149  00163C  B029               	btfsc	_i2c_object+4,0,c
  1150  00163E  D01C               	goto	l513
  1151                           
  1152                           ;i2c.c: 608: {
  1153                           ;i2c.c: 609: I2C_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  1154  001640  0E92               	movlw	low I2C_MasterWrite@trBlock
  1155  001642  6E18               	movwf	I2C_MasterWriteTRBBuild@ptrb,c
  1156  001644  0E00               	movlw	high I2C_MasterWrite@trBlock
  1157  001646  6E19               	movwf	I2C_MasterWriteTRBBuild@ptrb+1,c
  1158  001648  C09C  F01A         	movff	I2C_MasterWrite@pdata,I2C_MasterWriteTRBBuild@pdata
  1159  00164C  C09D  F01B         	movff	I2C_MasterWrite@pdata+1,I2C_MasterWriteTRBBuild@pdata+1
  1160  001650  C09E  F01C         	movff	I2C_MasterWrite@length,I2C_MasterWriteTRBBuild@length
  1161  001654  C09F  F01D         	movff	I2C_MasterWrite@address,I2C_MasterWriteTRBBuild@address
  1162  001658  C0A0  F01E         	movff	I2C_MasterWrite@address+1,I2C_MasterWriteTRBBuild@address+1
  1163  00165C  EC68  F00B         	call	_I2C_MasterWriteTRBBuild	;wreg free
  1164                           
  1165                           ;i2c.c: 610: I2C_MasterTRBInsert(1, &trBlock, pflag);
  1166  001660  0E92               	movlw	low I2C_MasterWrite@trBlock
  1167  001662  6E1A               	movwf	I2C_MasterTRBInsert@ptrb_list,c
  1168  001664  0E00               	movlw	high I2C_MasterWrite@trBlock
  1169  001666  6E1B               	movwf	I2C_MasterTRBInsert@ptrb_list+1,c
  1170  001668  C0A1  F01C         	movff	I2C_MasterWrite@pflag,I2C_MasterTRBInsert@pflag
  1171  00166C  C0A2  F01D         	movff	I2C_MasterWrite@pflag+1,I2C_MasterTRBInsert@pflag+1
  1172  001670  0E01               	movlw	1
  1173  001672  EC30  F00A         	call	_I2C_MasterTRBInsert
  1174                           
  1175                           ;i2c.c: 611: }
  1176  001676  0012               	return	
  1177  001678                     l513:
  1178                           
  1179                           ;i2c.c: 612: else
  1180                           ;i2c.c: 613: {
  1181                           ;i2c.c: 614: *pflag = I2C_MESSAGE_FAIL;
  1182  001678  C0A1  FFD9         	movff	I2C_MasterWrite@pflag,fsr2l
  1183  00167C  C0A2  FFDA         	movff	I2C_MasterWrite@pflag+1,fsr2h
  1184  001680  0E01               	movlw	1
  1185  001682  6EDF               	movwf	indf2,c
  1186  001684  0012               	return	
  1187  001686                     __end_of_I2C_MasterWrite:
  1188                           	opt stack 0
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           prodh	equ	0xFF4
  1194                           prodl	equ	0xFF3
  1195                           intcon	equ	0xFF2
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           indf2	equ	0xFDF
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _I2C_MasterWriteTRBBuild *****************
  1204 ;; Defined at:
  1205 ;;		line 726 in file "mcc_generated_files/i2c.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  ptrb            2   23[COMRAM] PTR struct .
  1208 ;;		 -> I2C_MasterWrite@trBlock(5), 
  1209 ;;  pdata           2   25[COMRAM] PTR unsigned char 
  1210 ;;		 -> STR_3(8), STR_1(8), 
  1211 ;;  length          1   27[COMRAM] unsigned char 
  1212 ;;  address         2   28[COMRAM] unsigned int 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1224 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1228 ;;Total ram usage:        9 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_I2C_MasterWrite
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text3
  1239  0016D0                     __ptext3:
  1240                           	opt stack 0
  1241  0016D0                     _I2C_MasterWriteTRBBuild:
  1242                           	opt stack 25
  1243                           
  1244                           ;i2c.c: 732: ptrb->address = address << 1;
  1245                           
  1246                           ;incstack = 0
  1247  0016D0  C01D  F01F         	movff	I2C_MasterWriteTRBBuild@address,??_I2C_MasterWriteTRBBuild
  1248  0016D4  C01E  F020         	movff	I2C_MasterWriteTRBBuild@address+1,??_I2C_MasterWriteTRBBuild+1
  1249  0016D8  90D8               	bcf	status,0,c
  1250  0016DA  361F               	rlcf	??_I2C_MasterWriteTRBBuild,f,c
  1251  0016DC  3620               	rlcf	??_I2C_MasterWriteTRBBuild+1,f,c
  1252  0016DE  C018  FFD9         	movff	I2C_MasterWriteTRBBuild@ptrb,fsr2l
  1253  0016E2  C019  FFDA         	movff	I2C_MasterWriteTRBBuild@ptrb+1,fsr2h
  1254  0016E6  C01F  FFDE         	movff	??_I2C_MasterWriteTRBBuild,postinc2
  1255  0016EA  C020  FFDD         	movff	??_I2C_MasterWriteTRBBuild+1,postdec2
  1256                           
  1257                           ;i2c.c: 733: ptrb->length = length;
  1258  0016EE  EE20 F002          	lfsr	2,2
  1259  0016F2  5018               	movf	I2C_MasterWriteTRBBuild@ptrb,w,c
  1260  0016F4  26D9               	addwf	fsr2l,f,c
  1261  0016F6  5019               	movf	I2C_MasterWriteTRBBuild@ptrb+1,w,c
  1262  0016F8  22DA               	addwfc	fsr2h,f,c
  1263  0016FA  C01C  FFDF         	movff	I2C_MasterWriteTRBBuild@length,indf2
  1264                           
  1265                           ;i2c.c: 734: ptrb->pbuffer = pdata;
  1266  0016FE  EE20 F003          	lfsr	2,3
  1267  001702  5018               	movf	I2C_MasterWriteTRBBuild@ptrb,w,c
  1268  001704  26D9               	addwf	fsr2l,f,c
  1269  001706  5019               	movf	I2C_MasterWriteTRBBuild@ptrb+1,w,c
  1270  001708  22DA               	addwfc	fsr2h,f,c
  1271  00170A  C01A  FFDE         	movff	I2C_MasterWriteTRBBuild@pdata,postinc2
  1272  00170E  C01B  FFDD         	movff	I2C_MasterWriteTRBBuild@pdata+1,postdec2
  1273  001712  0012               	return		;funcret
  1274  001714                     __end_of_I2C_MasterWriteTRBBuild:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           prodh	equ	0xFF4
  1281                           prodl	equ	0xFF3
  1282                           intcon	equ	0xFF2
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           indf2	equ	0xFDF
  1286                           postinc2	equ	0xFDE
  1287                           postdec2	equ	0xFDD
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _mccReceiveI2C *****************
  1293 ;; Defined at:
  1294 ;;		line 138 in file "main.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  dataToSend      2   32[COMRAM] PTR volatile unsigned ch
  1297 ;;		 -> STR_2(11), 
  1298 ;;  address         2   34[COMRAM] unsigned int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  timeOut         2    8[BANK0 ] int 
  1301 ;;  sendFlag        1   10[BANK0 ] enum E15711
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;Total ram usage:        8 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    6
  1318 ;; This function calls:
  1319 ;;		_I2C_MasterRead
  1320 ;;		_strlen
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text4
  1327  0013C0                     __ptext4:
  1328                           	opt stack 0
  1329  0013C0                     _mccReceiveI2C:
  1330                           	opt stack 24
  1331                           
  1332                           ;main.c: 140: I2C_MESSAGE_STATUS sendFlag = I2C_MESSAGE_PENDING;
  1333                           
  1334                           ;incstack = 0
  1335  0013C0  0E02               	movlw	2
  1336  0013C2  0100               	movlb	0	; () banked
  1337  0013C4  6FA6               	movwf	mccReceiveI2C@sendFlag& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340                           
  1341                           ; BSR set to: 0
  1342                           
  1343                           ;main.c: 141: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
  1344  0013C6  A88A               	btfss	3978,4,c	;volatile
  1345  0013C8  D002               	goto	u1960
  1346  0013CA  0E01               	movlw	1
  1347  0013CC  D001               	goto	u1966
  1348  0013CE                     u1960:
  1349  0013CE  0E00               	movlw	0
  1350  0013D0                     u1966:
  1351  0013D0  0AFF               	xorlw	255
  1352  0013D2  6FA3               	movwf	??_mccReceiveI2C& (0+255),b
  1353  0013D4  3BA3               	swapf	??_mccReceiveI2C& (0+255),f,b
  1354  0013D6  508A               	movf	3978,w,c	;volatile
  1355  0013D8  19A3               	xorwf	??_mccReceiveI2C& (0+255),w,b
  1356  0013DA  0BEF               	andlw	-17
  1357  0013DC  19A3               	xorwf	??_mccReceiveI2C& (0+255),w,b
  1358  0013DE  6E8A               	movwf	3978,c	;volatile
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;main.c: 142: int timeOut = 0;
  1362                           
  1363                           ; BSR set to: 0
  1364  0013E0  0E00               	movlw	0
  1365  0013E2  6FA5               	movwf	(mccReceiveI2C@timeOut+1)& (0+255),b
  1366  0013E4  0E00               	movlw	0
  1367  0013E6  6FA4               	movwf	mccReceiveI2C@timeOut& (0+255),b
  1368  0013E8                     
  1369                           ; BSR set to: 0
  1370                           ;main.c: 144: {
  1371                           ;main.c: 145: if(sendFlag == I2C_MESSAGE_COMPLETE || timeOut == 10)
  1372                           
  1373                           ; BSR set to: 0
  1374  0013E8  51A6               	movf	mccReceiveI2C@sendFlag& (0+255),w,b
  1375  0013EA  B4D8               	btfsc	status,2,c
  1376  0013EC  0012               	return	
  1377                           
  1378                           ; BSR set to: 0
  1379  0013EE  0E0A               	movlw	10
  1380  0013F0  19A4               	xorwf	mccReceiveI2C@timeOut& (0+255),w,b
  1381  0013F2  11A5               	iorwf	(mccReceiveI2C@timeOut+1)& (0+255),w,b
  1382  0013F4  B4D8               	btfsc	status,2,c
  1383  0013F6  0012               	return	
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;main.c: 149: else
  1387                           ;main.c: 150: {
  1388                           ;main.c: 151: timeOut++;
  1389                           
  1390                           ; BSR set to: 0
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;main.c: 148: }
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;main.c: 146: {
  1397                           ;main.c: 147: break;
  1398  0013F8  4BA4               	infsnz	mccReceiveI2C@timeOut& (0+255),f,b
  1399  0013FA  2BA5               	incf	(mccReceiveI2C@timeOut+1)& (0+255),f,b
  1400                           
  1401                           ; BSR set to: 0
  1402                           
  1403                           ; BSR set to: 0
  1404                           
  1405                           ;main.c: 152: }
  1406                           ;main.c: 153: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
  1407                           
  1408                           ; BSR set to: 0
  1409  0013FC  A88A               	btfss	3978,4,c	;volatile
  1410  0013FE  D002               	goto	u1990
  1411  001400  0E01               	movlw	1
  1412  001402  D001               	goto	u1996
  1413  001404                     u1990:
  1414  001404  0E00               	movlw	0
  1415  001406                     u1996:
  1416  001406  0AFF               	xorlw	255
  1417  001408  6FA3               	movwf	??_mccReceiveI2C& (0+255),b
  1418  00140A  3BA3               	swapf	??_mccReceiveI2C& (0+255),f,b
  1419  00140C  508A               	movf	3978,w,c	;volatile
  1420  00140E  19A3               	xorwf	??_mccReceiveI2C& (0+255),w,b
  1421  001410  0BEF               	andlw	-17
  1422  001412  19A3               	xorwf	??_mccReceiveI2C& (0+255),w,b
  1423  001414  6E8A               	movwf	3978,c	;volatile
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;main.c: 154: _delay((unsigned long)((60)*(4000000/4000.0)));
  1427  001416  0E4E               	movlw	78
  1428  001418  0100               	movlb	0	; () banked
  1429  00141A  6FA3               	movwf	??_mccReceiveI2C& (0+255),b
  1430  00141C  0EEB               	movlw	235
  1431  00141E                     u2197:
  1432  00141E  2EE8               	decfsz	wreg,f,c
  1433  001420  D7FE               	bra	u2197
  1434  001422  2FA3               	decfsz	??_mccReceiveI2C& (0+255),f,b
  1435  001424  D7FC               	bra	u2197
  1436                           
  1437                           ;main.c: 155: I2C_MasterRead(dataToSend,strlen(dataToSend),address,&sendFlag);
  1438  001426  C021  F09C         	movff	mccReceiveI2C@dataToSend,I2C_MasterRead@pdata
  1439  00142A  C022  F09D         	movff	mccReceiveI2C@dataToSend+1,I2C_MasterRead@pdata+1
  1440  00142E  C021  F018         	movff	mccReceiveI2C@dataToSend,strlen@s
  1441  001432  C022  F019         	movff	mccReceiveI2C@dataToSend+1,strlen@s+1
  1442  001436  EC8A  F00B         	call	_strlen	;wreg free
  1443  00143A  5018               	movf	?_strlen,w,c
  1444  00143C  0100               	movlb	0	; () banked
  1445  00143E  6F9E               	movwf	I2C_MasterRead@length& (0+255),b
  1446  001440  C023  F09F         	movff	mccReceiveI2C@address,I2C_MasterRead@address
  1447  001444  C024  F0A0         	movff	mccReceiveI2C@address+1,I2C_MasterRead@address+1
  1448  001448  0EA6               	movlw	low mccReceiveI2C@sendFlag
  1449  00144A  6FA1               	movwf	I2C_MasterRead@pflag& (0+255),b
  1450  00144C  0E00               	movlw	high mccReceiveI2C@sendFlag
  1451  00144E  6FA2               	movwf	(I2C_MasterRead@pflag+1)& (0+255),b
  1452  001450  EC43  F00B         	call	_I2C_MasterRead	;wreg free
  1453                           
  1454                           ;main.c: 156: }
  1455                           ;main.c: 157: while(sendFlag == I2C_MESSAGE_PENDING);
  1456  001454  0E02               	movlw	2
  1457  001456  0100               	movlb	0	; () banked
  1458  001458  19A6               	xorwf	mccReceiveI2C@sendFlag& (0+255),w,b
  1459  00145A  A4D8               	btfss	status,2,c
  1460  00145C  0012               	return	
  1461  00145E  D7C4               	goto	l836
  1462  001460                     __end_of_mccReceiveI2C:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           prodh	equ	0xFF4
  1469                           prodl	equ	0xFF3
  1470                           intcon	equ	0xFF2
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           indf2	equ	0xFDF
  1474                           postinc2	equ	0xFDE
  1475                           postdec2	equ	0xFDD
  1476                           fsr2h	equ	0xFDA
  1477                           fsr2l	equ	0xFD9
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _strlen *****************
  1481 ;; Defined at:
  1482 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  s               2   23[COMRAM] PTR const unsigned char 
  1485 ;;		 -> STR_3(8), STR_2(11), STR_1(8), 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  cp              2   27[COMRAM] PTR const unsigned char 
  1488 ;;		 -> STR_3(8), STR_2(11), STR_1(8), 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2   23[COMRAM] unsigned int 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;Total ram usage:        6 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_mccSendI2C
  1509 ;;		_mccReceiveI2C
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text5
  1514  001714                     __ptext5:
  1515                           	opt stack 0
  1516  001714                     _strlen:
  1517                           	opt stack 26
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;incstack = 0
  1521  001714  C018  F01C         	movff	strlen@s,strlen@cp
  1522  001718  C019  F01D         	movff	strlen@s+1,strlen@cp+1
  1523  00171C  D002               	goto	l1392
  1524  00171E  4A1C               	infsnz	strlen@cp,f,c
  1525  001720  2A1D               	incf	strlen@cp+1,f,c
  1526  001722                     l1392:
  1527  001722  C01C  FFF6         	movff	strlen@cp,tblptrl
  1528  001726  C01D  FFF7         	movff	strlen@cp+1,tblptrh
  1529  00172A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1530  00172A  6AF8               	clrf	tblptru,c
  1531  00172C                     	endif
  1532  00172C                     	if	0	;tblptru may be non-zero
  1533  00172C                     	endif
  1534  00172C  0008               	tblrd		*
  1535  00172E  50F5               	movf	tablat,w,c
  1536  001730  0900               	iorlw	0
  1537  001732  A4D8               	btfss	status,2,c
  1538  001734  D7F4               	goto	l1393
  1539  001736  C018  F01A         	movff	strlen@s,??_strlen
  1540  00173A  C019  F01B         	movff	strlen@s+1,??_strlen+1
  1541  00173E  1E1A               	comf	??_strlen,f,c
  1542  001740  1E1B               	comf	??_strlen+1,f,c
  1543  001742  4A1A               	infsnz	??_strlen,f,c
  1544  001744  2A1B               	incf	??_strlen+1,f,c
  1545  001746  501C               	movf	strlen@cp,w,c
  1546  001748  241A               	addwf	??_strlen,w,c
  1547  00174A  6E18               	movwf	?_strlen,c
  1548  00174C  501D               	movf	strlen@cp+1,w,c
  1549  00174E  201B               	addwfc	??_strlen+1,w,c
  1550  001750  6E19               	movwf	?_strlen+1,c
  1551  001752  0012               	return	
  1552  001754                     __end_of_strlen:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           intcon	equ	0xFF2
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           indf2	equ	0xFDF
  1564                           postinc2	equ	0xFDE
  1565                           postdec2	equ	0xFDD
  1566                           fsr2h	equ	0xFDA
  1567                           fsr2l	equ	0xFD9
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _I2C_MasterRead *****************
  1571 ;; Defined at:
  1572 ;;		line 619 in file "mcc_generated_files/i2c.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  1575 ;;		 -> STR_2(11), 
  1576 ;;  length          1    2[BANK0 ] unsigned char 
  1577 ;;  address         2    3[BANK0 ] unsigned int 
  1578 ;;  pflag           2    5[BANK0 ] PTR enum E15702
  1579 ;;		 -> mccReceiveI2C@sendFlag(1), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1591 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;Total ram usage:        7 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    5
  1598 ;; This function calls:
  1599 ;;		_I2C_MasterReadTRBBuild
  1600 ;;		_I2C_MasterTRBInsert
  1601 ;; This function is called by:
  1602 ;;		_mccReceiveI2C
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text6
  1607  001686                     __ptext6:
  1608                           	opt stack 0
  1609  001686                     _I2C_MasterRead:
  1610                           	opt stack 24
  1611                           
  1612                           ;i2c.c: 625: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
  1613                           ;i2c.c: 629: if (i2c_object.trStatus.s.full != 1)
  1614                           
  1615                           ;incstack = 0
  1616  001686  B029               	btfsc	_i2c_object+4,0,c
  1617  001688  D01C               	goto	l520
  1618                           
  1619                           ;i2c.c: 630: {
  1620                           ;i2c.c: 631: I2C_MasterReadTRBBuild(&trBlock, pdata, length, address);
  1621  00168A  0E8D               	movlw	low I2C_MasterRead@trBlock
  1622  00168C  6E18               	movwf	I2C_MasterReadTRBBuild@ptrb,c
  1623  00168E  0E00               	movlw	high I2C_MasterRead@trBlock
  1624  001690  6E19               	movwf	I2C_MasterReadTRBBuild@ptrb+1,c
  1625  001692  C09C  F01A         	movff	I2C_MasterRead@pdata,I2C_MasterReadTRBBuild@pdata
  1626  001696  C09D  F01B         	movff	I2C_MasterRead@pdata+1,I2C_MasterReadTRBBuild@pdata+1
  1627  00169A  C09E  F01C         	movff	I2C_MasterRead@length,I2C_MasterReadTRBBuild@length
  1628  00169E  C09F  F01D         	movff	I2C_MasterRead@address,I2C_MasterReadTRBBuild@address
  1629  0016A2  C0A0  F01E         	movff	I2C_MasterRead@address+1,I2C_MasterReadTRBBuild@address+1
  1630  0016A6  ECAA  F00A         	call	_I2C_MasterReadTRBBuild	;wreg free
  1631                           
  1632                           ;i2c.c: 632: I2C_MasterTRBInsert(1, &trBlock, pflag);
  1633  0016AA  0E8D               	movlw	low I2C_MasterRead@trBlock
  1634  0016AC  6E1A               	movwf	I2C_MasterTRBInsert@ptrb_list,c
  1635  0016AE  0E00               	movlw	high I2C_MasterRead@trBlock
  1636  0016B0  6E1B               	movwf	I2C_MasterTRBInsert@ptrb_list+1,c
  1637  0016B2  C0A1  F01C         	movff	I2C_MasterRead@pflag,I2C_MasterTRBInsert@pflag
  1638  0016B6  C0A2  F01D         	movff	I2C_MasterRead@pflag+1,I2C_MasterTRBInsert@pflag+1
  1639  0016BA  0E01               	movlw	1
  1640  0016BC  EC30  F00A         	call	_I2C_MasterTRBInsert
  1641                           
  1642                           ;i2c.c: 633: }
  1643  0016C0  0012               	return	
  1644  0016C2                     l520:
  1645                           
  1646                           ;i2c.c: 634: else
  1647                           ;i2c.c: 635: {
  1648                           ;i2c.c: 636: *pflag = I2C_MESSAGE_FAIL;
  1649  0016C2  C0A1  FFD9         	movff	I2C_MasterRead@pflag,fsr2l
  1650  0016C6  C0A2  FFDA         	movff	I2C_MasterRead@pflag+1,fsr2h
  1651  0016CA  0E01               	movlw	1
  1652  0016CC  6EDF               	movwf	indf2,c
  1653  0016CE  0012               	return	
  1654  0016D0                     __end_of_I2C_MasterRead:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           intcon	equ	0xFF2
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           indf2	equ	0xFDF
  1666                           postinc2	equ	0xFDE
  1667                           postdec2	equ	0xFDD
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8
  1671                           
  1672 ;; *************** function _I2C_MasterTRBInsert *****************
  1673 ;; Defined at:
  1674 ;;		line 659 in file "mcc_generated_files/i2c.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  count           1    wreg     unsigned char 
  1677 ;;  ptrb_list       2   25[COMRAM] PTR struct .
  1678 ;;		 -> I2C_MasterRead@trBlock(5), I2C_MasterWrite@trBlock(5), 
  1679 ;;  pflag           2   27[COMRAM] PTR enum E15702
  1680 ;;		 -> mccReceiveI2C@sendFlag(1), mccSendI2C@sendFlag(1), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  count           1   30[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1696 ;;Total ram usage:        6 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    4
  1699 ;; This function calls:
  1700 ;;		_I2C_WaitForLastPacketToComplete
  1701 ;; This function is called by:
  1702 ;;		_I2C_MasterWrite
  1703 ;;		_I2C_MasterRead
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text7
  1708  001460                     __ptext7:
  1709                           	opt stack 0
  1710  001460                     _I2C_MasterTRBInsert:
  1711                           	opt stack 24
  1712                           
  1713                           ;incstack = 0
  1714                           ;I2C_MasterTRBInsert@count stored from wreg
  1715  001460  6E1F               	movwf	I2C_MasterTRBInsert@count,c
  1716                           
  1717                           ;i2c.c: 666: if (i2c_object.trStatus.s.full != 1)
  1718  001462  B029               	btfsc	_i2c_object+4,0,c
  1719  001464  D039               	goto	l532
  1720                           
  1721                           ;i2c.c: 667: {
  1722                           ;i2c.c: 668: *pflag = I2C_MESSAGE_PENDING;
  1723  001466  C01C  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1724  00146A  C01D  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1725  00146E  0E02               	movlw	2
  1726  001470  6EDF               	movwf	indf2,c
  1727                           
  1728                           ;i2c.c: 670: i2c_object.pTrTail->ptrb_list = ptrb_list;
  1729  001472  EE20 F001          	lfsr	2,1
  1730  001476  5025               	movf	_i2c_object,w,c
  1731  001478  26D9               	addwf	fsr2l,f,c
  1732  00147A  5026               	movf	_i2c_object+1,w,c
  1733  00147C  22DA               	addwfc	fsr2h,f,c
  1734  00147E  C01A  FFDE         	movff	I2C_MasterTRBInsert@ptrb_list,postinc2
  1735  001482  C01B  FFDD         	movff	I2C_MasterTRBInsert@ptrb_list+1,postdec2
  1736                           
  1737                           ;i2c.c: 671: i2c_object.pTrTail->count = count;
  1738  001486  C025  FFD9         	movff	_i2c_object,fsr2l
  1739  00148A  C026  FFDA         	movff	_i2c_object+1,fsr2h
  1740  00148E  C01F  FFDF         	movff	I2C_MasterTRBInsert@count,indf2
  1741                           
  1742                           ;i2c.c: 672: i2c_object.pTrTail->pTrFlag = pflag;
  1743  001492  EE20 F003          	lfsr	2,3
  1744  001496  5025               	movf	_i2c_object,w,c
  1745  001498  26D9               	addwf	fsr2l,f,c
  1746  00149A  5026               	movf	_i2c_object+1,w,c
  1747  00149C  22DA               	addwfc	fsr2h,f,c
  1748  00149E  C01C  FFDE         	movff	I2C_MasterTRBInsert@pflag,postinc2
  1749  0014A2  C01D  FFDD         	movff	I2C_MasterTRBInsert@pflag+1,postdec2
  1750                           
  1751                           ;i2c.c: 673: i2c_object.pTrTail++;
  1752  0014A6  0E05               	movlw	5
  1753  0014A8  2625               	addwf	_i2c_object,f,c
  1754  0014AA  0E00               	movlw	0
  1755  0014AC  2226               	addwfc	_i2c_object+1,f,c
  1756                           
  1757                           ;i2c.c: 676: if (i2c_object.pTrTail == (i2c_tr_queue + 1))
  1758  0014AE  0E9C               	movlw	low (_i2c_tr_queue+5)
  1759  0014B0  1825               	xorwf	_i2c_object,w,c
  1760  0014B2  E108               	bnz	l2894
  1761  0014B4  0E00               	movlw	high (_i2c_tr_queue+5)
  1762  0014B6  1826               	xorwf	_i2c_object+1,w,c
  1763  0014B8  A4D8               	btfss	status,2,c
  1764  0014BA  D004               	goto	l533
  1765                           
  1766                           ;i2c.c: 677: {
  1767                           ;i2c.c: 679: i2c_object.pTrTail = i2c_tr_queue;
  1768  0014BC  0E97               	movlw	low _i2c_tr_queue
  1769  0014BE  6E25               	movwf	_i2c_object,c
  1770  0014C0  0E00               	movlw	high _i2c_tr_queue
  1771  0014C2  6E26               	movwf	_i2c_object+1,c
  1772  0014C4                     l533:
  1773  0014C4                     l2894:
  1774                           
  1775                           ;i2c.c: 680: }
  1776                           ;i2c.c: 684: i2c_object.trStatus.s.empty = 0;
  1777  0014C4  9229               	bcf	_i2c_object+4,1,c
  1778                           
  1779                           ;i2c.c: 687: if (i2c_object.pTrHead == i2c_object.pTrTail)
  1780  0014C6  5025               	movf	_i2c_object,w,c
  1781  0014C8  1827               	xorwf	_i2c_object+2,w,c
  1782  0014CA  E10C               	bnz	l2900
  1783  0014CC  5026               	movf	_i2c_object+1,w,c
  1784  0014CE  1828               	xorwf	_i2c_object+3,w,c
  1785  0014D0  A4D8               	btfss	status,2,c
  1786  0014D2  D008               	goto	l535
  1787                           
  1788                           ;i2c.c: 688: {
  1789                           ;i2c.c: 690: i2c_object.trStatus.s.full = 1;
  1790  0014D4  8029               	bsf	_i2c_object+4,0,c
  1791                           
  1792                           ;i2c.c: 691: }
  1793                           ;i2c.c: 693: }
  1794  0014D6  D006               	goto	l535
  1795  0014D8                     l532:
  1796                           
  1797                           ;i2c.c: 694: else
  1798                           ;i2c.c: 695: {
  1799                           ;i2c.c: 696: *pflag = I2C_MESSAGE_FAIL;
  1800  0014D8  C01C  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1801  0014DC  C01D  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1802  0014E0  0E01               	movlw	1
  1803  0014E2  6EDF               	movwf	indf2,c
  1804  0014E4                     l535:
  1805  0014E4                     l2900:
  1806                           
  1807                           ;i2c.c: 697: }
  1808                           ;i2c.c: 700: if (*pflag == I2C_MESSAGE_PENDING)
  1809  0014E4  C01C  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1810  0014E8  C01D  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1811  0014EC  0E02               	movlw	2
  1812  0014EE  18DE               	xorwf	postinc2,w,c
  1813  0014F0  A4D8               	btfss	status,2,c
  1814  0014F2  0012               	return	
  1815                           
  1816                           ;i2c.c: 701: {
  1817                           ;i2c.c: 702: I2C_WaitForLastPacketToComplete();
  1818  0014F4  EC4B  F00C         	call	_I2C_WaitForLastPacketToComplete	;wreg free
  1819                           
  1820                           ;i2c.c: 707: PIR1bits.SSPIF = 1;
  1821  0014F8  869E               	bsf	3998,3,c	;volatile
  1822  0014FA  0012               	return	
  1823  0014FC                     __end_of_I2C_MasterTRBInsert:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           prodh	equ	0xFF4
  1830                           prodl	equ	0xFF3
  1831                           intcon	equ	0xFF2
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           indf2	equ	0xFDF
  1835                           postinc2	equ	0xFDE
  1836                           postdec2	equ	0xFDD
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _I2C_WaitForLastPacketToComplete *****************
  1842 ;; Defined at:
  1843 ;;		line 642 in file "mcc_generated_files/i2c.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  count           2   23[COMRAM] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    3
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_I2C_MasterTRBInsert
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text8
  1872  001896                     __ptext8:
  1873                           	opt stack 0
  1874  001896                     _I2C_WaitForLastPacketToComplete:
  1875                           	opt stack 24
  1876                           
  1877                           ;i2c.c: 644: int count = 0;
  1878                           
  1879                           ;incstack = 0
  1880  001896  0E00               	movlw	0
  1881  001898  6E19               	movwf	I2C_WaitForLastPacketToComplete@count+1,c
  1882  00189A  0E00               	movlw	0
  1883  00189C  6E18               	movwf	I2C_WaitForLastPacketToComplete@count,c
  1884                           
  1885                           ;i2c.c: 645: while(i2c_state != S_MASTER_IDLE)
  1886  00189E  D007               	goto	l527
  1887  0018A0                     
  1888                           ;i2c.c: 646: {
  1889                           ;i2c.c: 650: count++;
  1890  0018A0  4A18               	infsnz	I2C_WaitForLastPacketToComplete@count,f,c
  1891  0018A2  2A19               	incf	I2C_WaitForLastPacketToComplete@count+1,f,c
  1892                           
  1893                           ;i2c.c: 652: if(count == 35)
  1894  0018A4  0E23               	movlw	35
  1895  0018A6  1818               	xorwf	I2C_WaitForLastPacketToComplete@count,w,c
  1896  0018A8  1019               	iorwf	I2C_WaitForLastPacketToComplete@count+1,w,c
  1897  0018AA  B4D8               	btfsc	status,2,c
  1898  0018AC  0012               	return	
  1899  0018AE                     l527:
  1900  0018AE  5041               	movf	_i2c_state,w,c
  1901  0018B0  B4D8               	btfsc	status,2,c
  1902  0018B2  0012               	return	
  1903  0018B4  D7F5               	goto	l526
  1904  0018B6                     __end_of_I2C_WaitForLastPacketToComplete:
  1905                           	opt stack 0
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           prodh	equ	0xFF4
  1911                           prodl	equ	0xFF3
  1912                           intcon	equ	0xFF2
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           indf2	equ	0xFDF
  1916                           postinc2	equ	0xFDE
  1917                           postdec2	equ	0xFDD
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _I2C_MasterReadTRBBuild *****************
  1923 ;; Defined at:
  1924 ;;		line 713 in file "mcc_generated_files/i2c.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  ptrb            2   23[COMRAM] PTR struct .
  1927 ;;		 -> I2C_MasterRead@trBlock(5), 
  1928 ;;  pdata           2   25[COMRAM] PTR unsigned char 
  1929 ;;		 -> STR_2(11), 
  1930 ;;  length          1   27[COMRAM] unsigned char 
  1931 ;;  address         2   28[COMRAM] unsigned int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1943 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;Total ram usage:        9 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    3
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_I2C_MasterRead
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text9
  1958  001554                     __ptext9:
  1959                           	opt stack 0
  1960  001554                     _I2C_MasterReadTRBBuild:
  1961                           	opt stack 25
  1962                           
  1963                           ;i2c.c: 719: ptrb->address = address << 1;
  1964                           
  1965                           ;incstack = 0
  1966  001554  C01D  F01F         	movff	I2C_MasterReadTRBBuild@address,??_I2C_MasterReadTRBBuild
  1967  001558  C01E  F020         	movff	I2C_MasterReadTRBBuild@address+1,??_I2C_MasterReadTRBBuild+1
  1968  00155C  90D8               	bcf	status,0,c
  1969  00155E  361F               	rlcf	??_I2C_MasterReadTRBBuild,f,c
  1970  001560  3620               	rlcf	??_I2C_MasterReadTRBBuild+1,f,c
  1971  001562  C018  FFD9         	movff	I2C_MasterReadTRBBuild@ptrb,fsr2l
  1972  001566  C019  FFDA         	movff	I2C_MasterReadTRBBuild@ptrb+1,fsr2h
  1973  00156A  C01F  FFDE         	movff	??_I2C_MasterReadTRBBuild,postinc2
  1974  00156E  C020  FFDD         	movff	??_I2C_MasterReadTRBBuild+1,postdec2
  1975                           
  1976                           ;i2c.c: 721: ptrb->address |= 0x01;
  1977  001572  C018  FFD9         	movff	I2C_MasterReadTRBBuild@ptrb,fsr2l
  1978  001576  C019  FFDA         	movff	I2C_MasterReadTRBBuild@ptrb+1,fsr2h
  1979  00157A  0E00               	movlw	0
  1980  00157C  80DB               	bsf	plusw2,0,c
  1981                           
  1982                           ;i2c.c: 722: ptrb->length = length;
  1983  00157E  EE20 F002          	lfsr	2,2
  1984  001582  5018               	movf	I2C_MasterReadTRBBuild@ptrb,w,c
  1985  001584  26D9               	addwf	fsr2l,f,c
  1986  001586  5019               	movf	I2C_MasterReadTRBBuild@ptrb+1,w,c
  1987  001588  22DA               	addwfc	fsr2h,f,c
  1988  00158A  C01C  FFDF         	movff	I2C_MasterReadTRBBuild@length,indf2
  1989                           
  1990                           ;i2c.c: 723: ptrb->pbuffer = pdata;
  1991  00158E  EE20 F003          	lfsr	2,3
  1992  001592  5018               	movf	I2C_MasterReadTRBBuild@ptrb,w,c
  1993  001594  26D9               	addwf	fsr2l,f,c
  1994  001596  5019               	movf	I2C_MasterReadTRBBuild@ptrb+1,w,c
  1995  001598  22DA               	addwfc	fsr2h,f,c
  1996  00159A  C01A  FFDE         	movff	I2C_MasterReadTRBBuild@pdata,postinc2
  1997  00159E  C01B  FFDD         	movff	I2C_MasterReadTRBBuild@pdata+1,postdec2
  1998  0015A2  0012               	return		;funcret
  1999  0015A4                     __end_of_I2C_MasterReadTRBBuild:
  2000                           	opt stack 0
  2001                           tblptru	equ	0xFF8
  2002                           tblptrh	equ	0xFF7
  2003                           tblptrl	equ	0xFF6
  2004                           tablat	equ	0xFF5
  2005                           prodh	equ	0xFF4
  2006                           prodl	equ	0xFF3
  2007                           intcon	equ	0xFF2
  2008                           postinc0	equ	0xFEE
  2009                           wreg	equ	0xFE8
  2010                           indf2	equ	0xFDF
  2011                           postinc2	equ	0xFDE
  2012                           postdec2	equ	0xFDD
  2013                           plusw2	equ	0xFDB
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _SYSTEM_Initialize *****************
  2019 ;; Defined at:
  2020 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    5
  2041 ;; This function calls:
  2042 ;;		_ECAN_Initialize
  2043 ;;		_EUSART1_Initialize
  2044 ;;		_I2C_Initialize
  2045 ;;		_INTERRUPT_Initialize
  2046 ;;		_OSCILLATOR_Initialize
  2047 ;;		_PIN_MANAGER_Initialize
  2048 ;;		_PWM2_Initialize
  2049 ;;		_PWM5_Initialize
  2050 ;;		_TMR1_Initialize
  2051 ;;		_TMR2_Initialize
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text10
  2058  001842                     __ptext10:
  2059                           	opt stack 0
  2060  001842                     _SYSTEM_Initialize:
  2061                           	opt stack 25
  2062                           
  2063                           ;mcc.c: 53: INTERRUPT_Initialize();
  2064                           
  2065                           ;incstack = 0
  2066  001842  ECA7  F00C         	call	_INTERRUPT_Initialize	;wreg free
  2067                           
  2068                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2069  001846  EC36  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2070                           
  2071                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2072  00184A  EC87  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  2073                           
  2074                           ;mcc.c: 56: I2C_Initialize();
  2075  00184E  ECC6  F00B         	call	_I2C_Initialize	;wreg free
  2076                           
  2077                           ;mcc.c: 57: PWM2_Initialize();
  2078  001852  EC7E  F00C         	call	_PWM2_Initialize	;wreg free
  2079                           
  2080                           ;mcc.c: 58: PWM5_Initialize();
  2081  001856  EC75  F00C         	call	_PWM5_Initialize	;wreg free
  2082                           
  2083                           ;mcc.c: 59: TMR2_Initialize();
  2084  00185A  EC90  F00C         	call	_TMR2_Initialize	;wreg free
  2085                           
  2086                           ;mcc.c: 60: TMR1_Initialize();
  2087  00185E  ECAA  F00B         	call	_TMR1_Initialize	;wreg free
  2088                           
  2089                           ;mcc.c: 61: EUSART1_Initialize();
  2090  001862  ECF8  F00A         	call	_EUSART1_Initialize	;wreg free
  2091                           
  2092                           ;mcc.c: 62: ECAN_Initialize();
  2093  001866  EC35  F009         	call	_ECAN_Initialize	;wreg free
  2094  00186A  0012               	return		;funcret
  2095  00186C                     __end_of_SYSTEM_Initialize:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodh	equ	0xFF4
  2102                           prodl	equ	0xFF3
  2103                           intcon	equ	0xFF2
  2104                           postinc0	equ	0xFEE
  2105                           wreg	equ	0xFE8
  2106                           indf2	equ	0xFDF
  2107                           postinc2	equ	0xFDE
  2108                           postdec2	equ	0xFDD
  2109                           plusw2	equ	0xFDB
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _TMR2_Initialize *****************
  2115 ;; Defined at:
  2116 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    3
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_SYSTEM_Initialize
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text11
  2145  001920                     __ptext11:
  2146                           	opt stack 0
  2147  001920                     _TMR2_Initialize:
  2148                           	opt stack 26
  2149                           
  2150                           ;tmr2.c: 67: PR2 = 0x7C;
  2151                           
  2152                           ;incstack = 0
  2153  001920  0E7C               	movlw	124
  2154  001922  6ECB               	movwf	4043,c	;volatile
  2155                           
  2156                           ;tmr2.c: 70: TMR2 = 0x00;
  2157  001924  0E00               	movlw	0
  2158  001926  6ECC               	movwf	4044,c	;volatile
  2159                           
  2160                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  2161  001928  929E               	bcf	3998,1,c	;volatile
  2162                           
  2163                           ;tmr2.c: 76: T2CON = 0x06;
  2164  00192A  0E06               	movlw	6
  2165  00192C  6ECA               	movwf	4042,c	;volatile
  2166  00192E  0012               	return		;funcret
  2167  001930                     __end_of_TMR2_Initialize:
  2168                           	opt stack 0
  2169                           tblptru	equ	0xFF8
  2170                           tblptrh	equ	0xFF7
  2171                           tblptrl	equ	0xFF6
  2172                           tablat	equ	0xFF5
  2173                           prodh	equ	0xFF4
  2174                           prodl	equ	0xFF3
  2175                           intcon	equ	0xFF2
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           plusw2	equ	0xFDB
  2182                           fsr2h	equ	0xFDA
  2183                           fsr2l	equ	0xFD9
  2184                           status	equ	0xFD8
  2185                           
  2186 ;; *************** function _TMR1_Initialize *****************
  2187 ;; Defined at:
  2188 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    4
  2209 ;; This function calls:
  2210 ;;		_TMR1_SetInterruptHandler
  2211 ;; This function is called by:
  2212 ;;		_SYSTEM_Initialize
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text12
  2217  001754                     __ptext12:
  2218                           	opt stack 0
  2219  001754                     _TMR1_Initialize:
  2220                           	opt stack 25
  2221                           
  2222                           ;tmr1.c: 69: T1GCON = 0x00;
  2223                           
  2224                           ;incstack = 0
  2225  001754  0E00               	movlw	0
  2226  001756  6EAA               	movwf	4010,c	;volatile
  2227                           
  2228                           ;tmr1.c: 72: TMR1H = 0x80;
  2229  001758  0E80               	movlw	128
  2230  00175A  6ECF               	movwf	4047,c	;volatile
  2231                           
  2232                           ;tmr1.c: 75: TMR1L = 0x00;
  2233  00175C  0E00               	movlw	0
  2234  00175E  6ECE               	movwf	4046,c	;volatile
  2235                           
  2236                           ;tmr1.c: 78: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2237  001760  50CE               	movf	4046,w,c	;volatile
  2238  001762  CFCF F01A          	movff	4047,??_TMR1_Initialize	;volatile
  2239  001766  6A1B               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2240  001768  C01A  F01B         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2241  00176C  6A1A               	clrf	??_TMR1_Initialize,c
  2242  00176E  101A               	iorwf	??_TMR1_Initialize,w,c
  2243  001770  6E44               	movwf	_timer1ReloadVal,c	;volatile
  2244  001772  501B               	movf	??_TMR1_Initialize+1,w,c
  2245  001774  6E45               	movwf	_timer1ReloadVal+1,c	;volatile
  2246                           
  2247                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2248  001776  909E               	bcf	3998,0,c	;volatile
  2249                           
  2250                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2251  001778  809D               	bsf	3997,0,c	;volatile
  2252                           
  2253                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2254  00177A  0E58               	movlw	low _TMR1_DefaultInterruptHandler
  2255  00177C  6E18               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2256  00177E  0E19               	movlw	high _TMR1_DefaultInterruptHandler
  2257  001780  6E19               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2258  001782  EC98  F00C         	call	_TMR1_SetInterruptHandler	;wreg free
  2259                           
  2260                           ;tmr1.c: 90: T1CON = 0x01;
  2261  001786  0E01               	movlw	1
  2262  001788  6ECD               	movwf	4045,c	;volatile
  2263  00178A  0012               	return		;funcret
  2264  00178C                     __end_of_TMR1_Initialize:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           indf2	equ	0xFDF
  2276                           postinc2	equ	0xFDE
  2277                           postdec2	equ	0xFDD
  2278                           plusw2	equ	0xFDB
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _TMR1_SetInterruptHandler *****************
  2284 ;; Defined at:
  2285 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  InterruptHan    2   23[COMRAM] PTR FTN()void 
  2288 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;Total ram usage:        2 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    3
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_TMR1_Initialize
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text13
  2315  001930                     __ptext13:
  2316                           	opt stack 0
  2317  001930                     _TMR1_SetInterruptHandler:
  2318                           	opt stack 25
  2319                           
  2320                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  2321                           
  2322                           ;incstack = 0
  2323  001930  C018  F0B2         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2324  001934  C019  F0B3         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2325  001938  0012               	return		;funcret
  2326  00193A                     __end_of_TMR1_SetInterruptHandler:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           prodh	equ	0xFF4
  2333                           prodl	equ	0xFF3
  2334                           intcon	equ	0xFF2
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           indf2	equ	0xFDF
  2338                           postinc2	equ	0xFDE
  2339                           postdec2	equ	0xFDD
  2340                           plusw2	equ	0xFDB
  2341                           fsr2h	equ	0xFDA
  2342                           fsr2l	equ	0xFD9
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function _PWM5_Initialize *****************
  2346 ;; Defined at:
  2347 ;;		line 64 in file "mcc_generated_files/pwm5.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    3
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_SYSTEM_Initialize
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text14
  2376  0018EA                     __ptext14:
  2377                           	opt stack 0
  2378  0018EA                     _PWM5_Initialize:
  2379                           	opt stack 26
  2380                           
  2381                           ;pwm5.c: 69: CCP5CON = 0x3C;
  2382                           
  2383                           ;incstack = 0
  2384  0018EA  0E3C               	movlw	60
  2385  0018EC  010F               	movlb	15	; () banked
  2386  0018EE  6F47               	movwf	71,b	;volatile
  2387                           
  2388                           ;pwm5.c: 72: CCPR5L = 0x63;
  2389  0018F0  0E63               	movlw	99
  2390  0018F2  6F48               	movwf	72,b	;volatile
  2391                           
  2392                           ;pwm5.c: 75: CCPR5H = 0x00;
  2393  0018F4  0E00               	movlw	0
  2394  0018F6  6F49               	movwf	73,b	;volatile
  2395                           
  2396                           ; BSR set to: 15
  2397                           ;pwm5.c: 78: CCPTMRSbits.C5TSEL = 0x0;
  2398  0018F8  9899               	bcf	3993,4,c	;volatile
  2399                           
  2400                           ; BSR set to: 15
  2401  0018FA  0012               	return		;funcret
  2402  0018FC                     __end_of_PWM5_Initialize:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           intcon	equ	0xFF2
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           postdec2	equ	0xFDD
  2416                           plusw2	equ	0xFDB
  2417                           fsr2h	equ	0xFDA
  2418                           fsr2l	equ	0xFD9
  2419                           status	equ	0xFD8
  2420                           
  2421 ;; *************** function _PWM2_Initialize *****************
  2422 ;; Defined at:
  2423 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_SYSTEM_Initialize
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text15
  2452  0018FC                     __ptext15:
  2453                           	opt stack 0
  2454  0018FC                     _PWM2_Initialize:
  2455                           	opt stack 26
  2456                           
  2457                           ;pwm2.c: 69: CCP2CON = 0x1C;
  2458                           
  2459                           ; BSR set to: 15
  2460                           ;incstack = 0
  2461  0018FC  0E1C               	movlw	28
  2462  0018FE  010F               	movlb	15	; () banked
  2463  001900  6F50               	movwf	80,b	;volatile
  2464                           
  2465                           ;pwm2.c: 72: CCPR2L = 0x3E;
  2466  001902  0E3E               	movlw	62
  2467  001904  6F51               	movwf	81,b	;volatile
  2468                           
  2469                           ;pwm2.c: 75: CCPR2H = 0x00;
  2470  001906  0E00               	movlw	0
  2471  001908  6F52               	movwf	82,b	;volatile
  2472                           
  2473                           ; BSR set to: 15
  2474                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x0;
  2475  00190A  9299               	bcf	3993,1,c	;volatile
  2476                           
  2477                           ; BSR set to: 15
  2478  00190C  0012               	return		;funcret
  2479  00190E                     __end_of_PWM2_Initialize:
  2480                           	opt stack 0
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           prodh	equ	0xFF4
  2486                           prodl	equ	0xFF3
  2487                           intcon	equ	0xFF2
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           indf2	equ	0xFDF
  2491                           postinc2	equ	0xFDE
  2492                           postdec2	equ	0xFDD
  2493                           plusw2	equ	0xFDB
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _PIN_MANAGER_Initialize *****************
  2499 ;; Defined at:
  2500 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    3
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_SYSTEM_Initialize
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text16
  2529  00186C                     __ptext16:
  2530                           	opt stack 0
  2531  00186C                     _PIN_MANAGER_Initialize:
  2532                           	opt stack 26
  2533                           
  2534                           ;pin_manager.c: 62: LATA = 0x00;
  2535                           
  2536                           ; BSR set to: 15
  2537                           ;incstack = 0
  2538  00186C  0E00               	movlw	0
  2539  00186E  6E89               	movwf	3977,c	;volatile
  2540                           
  2541                           ;pin_manager.c: 63: LATB = 0x00;
  2542  001870  0E00               	movlw	0
  2543  001872  6E8A               	movwf	3978,c	;volatile
  2544                           
  2545                           ;pin_manager.c: 64: LATC = 0x04;
  2546  001874  0E04               	movlw	4
  2547  001876  6E8B               	movwf	3979,c	;volatile
  2548                           
  2549                           ;pin_manager.c: 69: TRISA = 0xEF;
  2550  001878  0EEF               	movlw	239
  2551  00187A  6E92               	movwf	3986,c	;volatile
  2552                           
  2553                           ;pin_manager.c: 70: TRISB = 0xCA;
  2554  00187C  0ECA               	movlw	202
  2555  00187E  6E93               	movwf	3987,c	;volatile
  2556                           
  2557                           ;pin_manager.c: 71: TRISC = 0xBB;
  2558  001880  0EBB               	movlw	187
  2559  001882  6E94               	movwf	3988,c	;volatile
  2560                           
  2561                           ;pin_manager.c: 76: ANCON0 = 0x1F;
  2562  001884  0E1F               	movlw	31
  2563  001886  010F               	movlb	15	; () banked
  2564  001888  6F5D               	movwf	93,b	;volatile
  2565                           
  2566                           ;pin_manager.c: 77: ANCON1 = 0x06;
  2567  00188A  0E06               	movlw	6
  2568  00188C  6F5C               	movwf	92,b	;volatile
  2569                           
  2570                           ;pin_manager.c: 82: WPUB = 0x00;
  2571  00188E  0E00               	movlw	0
  2572  001890  6F5B               	movwf	91,b	;volatile
  2573                           
  2574                           ; BSR set to: 15
  2575                           ;pin_manager.c: 83: INTCON2bits.nRBPU = 1;
  2576  001892  8EF1               	bsf	intcon2,7,c	;volatile
  2577                           
  2578                           ; BSR set to: 15
  2579  001894  0012               	return		;funcret
  2580  001896                     __end_of_PIN_MANAGER_Initialize:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           prodh	equ	0xFF4
  2587                           prodl	equ	0xFF3
  2588                           intcon	equ	0xFF2
  2589                           intcon2	equ	0xFF1
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           indf2	equ	0xFDF
  2593                           postinc2	equ	0xFDE
  2594                           postdec2	equ	0xFDD
  2595                           plusw2	equ	0xFDB
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _OSCILLATOR_Initialize *****************
  2601 ;; Defined at:
  2602 ;;		line 65 in file "mcc_generated_files/mcc.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    3
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_SYSTEM_Initialize
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text17
  2631  00190E                     __ptext17:
  2632                           	opt stack 0
  2633  00190E                     _OSCILLATOR_Initialize:
  2634                           	opt stack 26
  2635                           
  2636                           ;mcc.c: 68: OSCCON = 0x52;
  2637                           
  2638                           ; BSR set to: 15
  2639                           ;incstack = 0
  2640  00190E  0E52               	movlw	82
  2641  001910  6ED3               	movwf	4051,c	;volatile
  2642                           
  2643                           ;mcc.c: 70: OSCCON2 = 0x00;
  2644  001912  0E00               	movlw	0
  2645  001914  6ED2               	movwf	4050,c	;volatile
  2646                           
  2647                           ;mcc.c: 72: OSCTUNE = 0x00;
  2648  001916  0E00               	movlw	0
  2649  001918  6E9B               	movwf	3995,c	;volatile
  2650                           
  2651                           ;mcc.c: 74: REFOCON = 0x00;
  2652  00191A  0E00               	movlw	0
  2653  00191C  6E9A               	movwf	3994,c	;volatile
  2654  00191E  0012               	return		;funcret
  2655  001920                     __end_of_OSCILLATOR_Initialize:
  2656                           	opt stack 0
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           prodh	equ	0xFF4
  2662                           prodl	equ	0xFF3
  2663                           intcon	equ	0xFF2
  2664                           intcon2	equ	0xFF1
  2665                           postinc0	equ	0xFEE
  2666                           wreg	equ	0xFE8
  2667                           indf2	equ	0xFDF
  2668                           postinc2	equ	0xFDE
  2669                           postdec2	equ	0xFDD
  2670                           plusw2	equ	0xFDB
  2671                           fsr2h	equ	0xFDA
  2672                           fsr2l	equ	0xFD9
  2673                           status	equ	0xFD8
  2674                           
  2675 ;; *************** function _INTERRUPT_Initialize *****************
  2676 ;; Defined at:
  2677 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		None
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_SYSTEM_Initialize
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text18
  2706  00194E                     __ptext18:
  2707                           	opt stack 0
  2708  00194E                     _INTERRUPT_Initialize:
  2709                           	opt stack 26
  2710                           
  2711                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2712                           
  2713                           ;incstack = 0
  2714  00194E  9ED0               	bcf	4048,7,c	;volatile
  2715  001950  0012               	return		;funcret
  2716  001952                     __end_of_INTERRUPT_Initialize:
  2717                           	opt stack 0
  2718                           tblptru	equ	0xFF8
  2719                           tblptrh	equ	0xFF7
  2720                           tblptrl	equ	0xFF6
  2721                           tablat	equ	0xFF5
  2722                           prodh	equ	0xFF4
  2723                           prodl	equ	0xFF3
  2724                           intcon	equ	0xFF2
  2725                           intcon2	equ	0xFF1
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf2	equ	0xFDF
  2729                           postinc2	equ	0xFDE
  2730                           postdec2	equ	0xFDD
  2731                           plusw2	equ	0xFDB
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _I2C_Initialize *****************
  2737 ;; Defined at:
  2738 ;;		line 198 in file "mcc_generated_files/i2c.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    3
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_SYSTEM_Initialize
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text19
  2767  00178C                     __ptext19:
  2768                           	opt stack 0
  2769  00178C                     _I2C_Initialize:
  2770                           	opt stack 26
  2771                           
  2772                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
  2773                           
  2774                           ;incstack = 0
  2775  00178C  0E97               	movlw	low _i2c_tr_queue
  2776  00178E  6E27               	movwf	_i2c_object+2,c
  2777  001790  0E00               	movlw	high _i2c_tr_queue
  2778  001792  6E28               	movwf	_i2c_object+3,c
  2779                           
  2780                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
  2781  001794  0E97               	movlw	low _i2c_tr_queue
  2782  001796  6E25               	movwf	_i2c_object,c
  2783  001798  0E00               	movlw	high _i2c_tr_queue
  2784  00179A  6E26               	movwf	_i2c_object+1,c
  2785                           
  2786                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
  2787  00179C  8229               	bsf	_i2c_object+4,1,c
  2788                           
  2789                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
  2790  00179E  9029               	bcf	_i2c_object+4,0,c
  2791                           
  2792                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
  2793  0017A0  0E00               	movlw	0
  2794  0017A2  6E2B               	movwf	_i2c_object+6,c
  2795                           
  2796                           ;i2c.c: 208: SSPSTAT = 0x80;
  2797  0017A4  0E80               	movlw	128
  2798  0017A6  6EC7               	movwf	4039,c	;volatile
  2799                           
  2800                           ;i2c.c: 210: SSPCON1 = 0x28;
  2801  0017A8  0E28               	movlw	40
  2802  0017AA  6EC6               	movwf	4038,c	;volatile
  2803                           
  2804                           ;i2c.c: 212: SSPADD = 0x13;
  2805  0017AC  0E13               	movlw	19
  2806  0017AE  6EC8               	movwf	4040,c	;volatile
  2807                           
  2808                           ;i2c.c: 215: PIR1bits.SSPIF = 0;
  2809  0017B0  969E               	bcf	3998,3,c	;volatile
  2810                           
  2811                           ;i2c.c: 216: PIR2bits.BCLIF = 0;
  2812  0017B2  96A1               	bcf	4001,3,c	;volatile
  2813                           
  2814                           ;i2c.c: 219: PIE1bits.SSPIE = 1;
  2815  0017B4  869D               	bsf	3997,3,c	;volatile
  2816                           
  2817                           ;i2c.c: 220: PIE2bits.BCLIE = 1;
  2818  0017B6  86A0               	bsf	4000,3,c	;volatile
  2819  0017B8  0012               	return		;funcret
  2820  0017BA                     __end_of_I2C_Initialize:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           intcon2	equ	0xFF1
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           indf2	equ	0xFDF
  2833                           postinc2	equ	0xFDE
  2834                           postdec2	equ	0xFDD
  2835                           plusw2	equ	0xFDB
  2836                           fsr2h	equ	0xFDA
  2837                           fsr2l	equ	0xFD9
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function _EUSART1_Initialize *****************
  2841 ;; Defined at:
  2842 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    4
  2863 ;; This function calls:
  2864 ;;		_EUSART1_SetRxInterruptHandler
  2865 ;;		_EUSART1_SetTxInterruptHandler
  2866 ;; This function is called by:
  2867 ;;		_SYSTEM_Initialize
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text20
  2872  0015F0                     __ptext20:
  2873                           	opt stack 0
  2874  0015F0                     _EUSART1_Initialize:
  2875                           	opt stack 25
  2876                           
  2877                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  2878                           
  2879                           ;incstack = 0
  2880  0015F0  9A9D               	bcf	3997,5,c	;volatile
  2881                           
  2882                           ;eusart1.c: 79: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  2883  0015F2  0E16               	movlw	low _EUSART1_Receive_ISR
  2884  0015F4  6E18               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  2885  0015F6  0E18               	movlw	high _EUSART1_Receive_ISR
  2886  0015F8  6E19               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  2887  0015FA  ECA2  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2888                           
  2889                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  2890  0015FE  989D               	bcf	3997,4,c	;volatile
  2891                           
  2892                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  2893  001600  0EE8               	movlw	low _EUSART1_Transmit_ISR
  2894  001602  6E18               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  2895  001604  0E17               	movlw	high _EUSART1_Transmit_ISR
  2896  001606  6E19               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  2897  001608  EC9D  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2898                           
  2899                           ;eusart1.c: 85: BAUDCON1 = 0x08;
  2900  00160C  0E08               	movlw	8
  2901  00160E  6EA7               	movwf	4007,c	;volatile
  2902                           
  2903                           ;eusart1.c: 88: RCSTA1 = 0x90;
  2904  001610  0E90               	movlw	144
  2905  001612  6EAB               	movwf	4011,c	;volatile
  2906                           
  2907                           ;eusart1.c: 91: TXSTA1 = 0x24;
  2908  001614  0E24               	movlw	36
  2909  001616  6EAC               	movwf	4012,c	;volatile
  2910                           
  2911                           ;eusart1.c: 94: SPBRG1 = 0x67;
  2912  001618  0E67               	movlw	103
  2913  00161A  6EAF               	movwf	4015,c	;volatile
  2914                           
  2915                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  2916  00161C  0E00               	movlw	0
  2917  00161E  6E7D               	movwf	3965,c	;volatile
  2918                           
  2919                           ;eusart1.c: 101: eusart1TxHead = 0;
  2920  001620  0E00               	movlw	0
  2921  001622  6E3D               	movwf	_eusart1TxHead,c	;volatile
  2922                           
  2923                           ;eusart1.c: 102: eusart1TxTail = 0;
  2924  001624  0E00               	movlw	0
  2925  001626  6E3C               	movwf	_eusart1TxTail,c	;volatile
  2926                           
  2927                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2928  001628  0E08               	movlw	8
  2929  00162A  6E46               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2930                           
  2931                           ;eusart1.c: 105: eusart1RxHead = 0;
  2932  00162C  0E00               	movlw	0
  2933  00162E  6E3B               	movwf	_eusart1RxHead,c	;volatile
  2934                           
  2935                           ;eusart1.c: 106: eusart1RxTail = 0;
  2936  001630  0E00               	movlw	0
  2937  001632  6E3A               	movwf	_eusart1RxTail,c	;volatile
  2938                           
  2939                           ;eusart1.c: 107: eusart1RxCount = 0;
  2940  001634  0E00               	movlw	0
  2941  001636  6E39               	movwf	_eusart1RxCount,c	;volatile
  2942                           
  2943                           ;eusart1.c: 110: PIE1bits.RC1IE = 1;
  2944  001638  8A9D               	bsf	3997,5,c	;volatile
  2945  00163A  0012               	return		;funcret
  2946  00163C                     __end_of_EUSART1_Initialize:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           prodh	equ	0xFF4
  2953                           prodl	equ	0xFF3
  2954                           intcon	equ	0xFF2
  2955                           intcon2	equ	0xFF1
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           postdec2	equ	0xFDD
  2961                           plusw2	equ	0xFDB
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2967 ;; Defined at:
  2968 ;;		line 212 in file "mcc_generated_files/eusart1.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  interruptHan    2   23[COMRAM] PTR FTN()void 
  2971 ;;		 -> EUSART1_Transmit_ISR(1), 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;Total ram usage:        2 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    3
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_EUSART1_Initialize
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text21
  2998  00193A                     __ptext21:
  2999                           	opt stack 0
  3000  00193A                     _EUSART1_SetTxInterruptHandler:
  3001                           	opt stack 25
  3002                           
  3003                           ;eusart1.c: 213: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  3004                           
  3005                           ;incstack = 0
  3006  00193A  C018  F0B6         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3007  00193E  C019  F0B7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3008  001942  0012               	return		;funcret
  3009  001944                     __end_of_EUSART1_SetTxInterruptHandler:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           prodh	equ	0xFF4
  3016                           prodl	equ	0xFF3
  3017                           intcon	equ	0xFF2
  3018                           intcon2	equ	0xFF1
  3019                           postinc0	equ	0xFEE
  3020                           wreg	equ	0xFE8
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           plusw2	equ	0xFDB
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3030 ;; Defined at:
  3031 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  interruptHan    2   23[COMRAM] PTR FTN()void 
  3034 ;;		 -> EUSART1_Receive_ISR(1), 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;Total ram usage:        2 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    3
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_EUSART1_Initialize
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text22
  3061  001944                     __ptext22:
  3062                           	opt stack 0
  3063  001944                     _EUSART1_SetRxInterruptHandler:
  3064                           	opt stack 25
  3065                           
  3066                           ;eusart1.c: 217: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3067                           
  3068                           ;incstack = 0
  3069  001944  C018  F0B4         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3070  001948  C019  F0B5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3071  00194C  0012               	return		;funcret
  3072  00194E                     __end_of_EUSART1_SetRxInterruptHandler:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           intcon2	equ	0xFF1
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           postdec2	equ	0xFDD
  3087                           plusw2	equ	0xFDB
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function _ECAN_Initialize *****************
  3093 ;; Defined at:
  3094 ;;		line 61 in file "mcc_generated_files/ecan.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;Total ram usage:        1 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_SYSTEM_Initialize
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text23
  3123  00126A                     __ptext23:
  3124                           	opt stack 0
  3125  00126A                     _ECAN_Initialize:
  3126                           	opt stack 26
  3127                           
  3128                           ;ecan.c: 63: CANCON = 0x80;
  3129                           
  3130                           ;incstack = 0
  3131  00126A  0E80               	movlw	128
  3132  00126C  6E6F               	movwf	3951,c	;volatile
  3133  00126E  506E               	movf	3950,w,c	;volatile
  3134  001270  0BE0               	andlw	224
  3135  001272  0A80               	xorlw	128
  3136  001274  A4D8               	btfss	status,2,c
  3137  001276  D7FB               	goto	l234
  3138                           
  3139                           ;ecan.c: 69: ECANCON = 0x00;
  3140  001278  0E00               	movlw	0
  3141  00127A  6E72               	movwf	3954,c	;volatile
  3142                           
  3143                           ;ecan.c: 74: CIOCON = 0x20;
  3144  00127C  0E20               	movlw	32
  3145  00127E  6E70               	movwf	3952,c	;volatile
  3146                           
  3147                           ;ecan.c: 87: RXM0EIDH = 0x00;
  3148  001280  0E00               	movlw	0
  3149  001282  010E               	movlb	14	; () banked
  3150  001284  6FFA               	movwf	250,b	;volatile
  3151                           
  3152                           ;ecan.c: 88: RXM0EIDL = 0x00;
  3153  001286  0E00               	movlw	0
  3154  001288  6FFB               	movwf	251,b	;volatile
  3155                           
  3156                           ;ecan.c: 89: RXM0SIDH = 0x00;
  3157  00128A  0E00               	movlw	0
  3158  00128C  6FF8               	movwf	248,b	;volatile
  3159                           
  3160                           ;ecan.c: 90: RXM0SIDL = 0x00;
  3161  00128E  0E00               	movlw	0
  3162  001290  6FF9               	movwf	249,b	;volatile
  3163                           
  3164                           ;ecan.c: 91: RXM1EIDH = 0x00;
  3165  001292  0E00               	movlw	0
  3166  001294  6FFE               	movwf	254,b	;volatile
  3167                           
  3168                           ;ecan.c: 92: RXM1EIDL = 0x00;
  3169  001296  0E00               	movlw	0
  3170  001298  6FFF               	movwf	255,b	;volatile
  3171                           
  3172                           ;ecan.c: 93: RXM1SIDH = 0x00;
  3173  00129A  0E00               	movlw	0
  3174  00129C  6FFC               	movwf	252,b	;volatile
  3175                           
  3176                           ;ecan.c: 94: RXM1SIDL = 0x00;
  3177  00129E  0E00               	movlw	0
  3178  0012A0  6FFD               	movwf	253,b	;volatile
  3179                           
  3180                           ;ecan.c: 99: RXF0EIDH = 0x00;
  3181  0012A2  0E00               	movlw	0
  3182  0012A4  6FE2               	movwf	226,b	;volatile
  3183                           
  3184                           ;ecan.c: 100: RXF0EIDL = 0x00;
  3185  0012A6  0E00               	movlw	0
  3186  0012A8  6FE3               	movwf	227,b	;volatile
  3187                           
  3188                           ;ecan.c: 101: RXF0SIDH = 0x00;
  3189  0012AA  0E00               	movlw	0
  3190  0012AC  6FE0               	movwf	224,b	;volatile
  3191                           
  3192                           ;ecan.c: 102: RXF0SIDL = 0x00;
  3193  0012AE  0E00               	movlw	0
  3194  0012B0  6FE1               	movwf	225,b	;volatile
  3195                           
  3196                           ;ecan.c: 103: RXF1EIDH = 0x00;
  3197  0012B2  0E00               	movlw	0
  3198  0012B4  6FE6               	movwf	230,b	;volatile
  3199                           
  3200                           ;ecan.c: 104: RXF1EIDL = 0x00;
  3201  0012B6  0E00               	movlw	0
  3202  0012B8  6FE7               	movwf	231,b	;volatile
  3203                           
  3204                           ;ecan.c: 105: RXF1SIDH = 0x00;
  3205  0012BA  0E00               	movlw	0
  3206  0012BC  6FE4               	movwf	228,b	;volatile
  3207                           
  3208                           ;ecan.c: 106: RXF1SIDL = 0x00;
  3209  0012BE  0E00               	movlw	0
  3210  0012C0  6FE5               	movwf	229,b	;volatile
  3211                           
  3212                           ;ecan.c: 107: RXF2EIDH = 0x00;
  3213  0012C2  0E00               	movlw	0
  3214  0012C4  6FEA               	movwf	234,b	;volatile
  3215                           
  3216                           ;ecan.c: 108: RXF2EIDL = 0x00;
  3217  0012C6  0E00               	movlw	0
  3218  0012C8  6FEB               	movwf	235,b	;volatile
  3219                           
  3220                           ;ecan.c: 109: RXF2SIDH = 0x00;
  3221  0012CA  0E00               	movlw	0
  3222  0012CC  6FE8               	movwf	232,b	;volatile
  3223                           
  3224                           ;ecan.c: 110: RXF2SIDL = 0x00;
  3225  0012CE  0E00               	movlw	0
  3226  0012D0  6FE9               	movwf	233,b	;volatile
  3227                           
  3228                           ;ecan.c: 111: RXF3EIDH = 0x00;
  3229  0012D2  0E00               	movlw	0
  3230  0012D4  6FEE               	movwf	238,b	;volatile
  3231                           
  3232                           ;ecan.c: 112: RXF3EIDL = 0x00;
  3233  0012D6  0E00               	movlw	0
  3234  0012D8  6FEF               	movwf	239,b	;volatile
  3235                           
  3236                           ;ecan.c: 113: RXF3SIDH = 0x00;
  3237  0012DA  0E00               	movlw	0
  3238  0012DC  6FEC               	movwf	236,b	;volatile
  3239                           
  3240                           ;ecan.c: 114: RXF3SIDL = 0x00;
  3241  0012DE  0E00               	movlw	0
  3242  0012E0  6FED               	movwf	237,b	;volatile
  3243                           
  3244                           ;ecan.c: 115: RXF4EIDH = 0x00;
  3245  0012E2  0E00               	movlw	0
  3246  0012E4  6FF2               	movwf	242,b	;volatile
  3247                           
  3248                           ;ecan.c: 116: RXF4EIDL = 0x00;
  3249  0012E6  0E00               	movlw	0
  3250  0012E8  6FF3               	movwf	243,b	;volatile
  3251                           
  3252                           ;ecan.c: 117: RXF4SIDH = 0x00;
  3253  0012EA  0E00               	movlw	0
  3254  0012EC  6FF0               	movwf	240,b	;volatile
  3255                           
  3256                           ;ecan.c: 118: RXF4SIDL = 0x00;
  3257  0012EE  0E00               	movlw	0
  3258  0012F0  6FF1               	movwf	241,b	;volatile
  3259                           
  3260                           ;ecan.c: 119: RXF5EIDH = 0x00;
  3261  0012F2  0E00               	movlw	0
  3262  0012F4  6FF6               	movwf	246,b	;volatile
  3263                           
  3264                           ;ecan.c: 120: RXF5EIDL = 0x00;
  3265  0012F6  0E00               	movlw	0
  3266  0012F8  6FF7               	movwf	247,b	;volatile
  3267                           
  3268                           ;ecan.c: 121: RXF5SIDH = 0x00;
  3269  0012FA  0E00               	movlw	0
  3270  0012FC  6FF4               	movwf	244,b	;volatile
  3271                           
  3272                           ;ecan.c: 122: RXF5SIDL = 0x00;
  3273  0012FE  0E00               	movlw	0
  3274  001300  6FF5               	movwf	245,b	;volatile
  3275                           
  3276                           ;ecan.c: 136: BRGCON1 = 0x00;
  3277  001302  0E00               	movlw	0
  3278  001304  6F43               	movwf	67,b	;volatile
  3279                           
  3280                           ;ecan.c: 137: BRGCON2 = 0x98;
  3281  001306  0E98               	movlw	152
  3282  001308  6F44               	movwf	68,b	;volatile
  3283                           
  3284                           ;ecan.c: 138: BRGCON3 = 0x01;
  3285  00130A  0E01               	movlw	1
  3286  00130C  6F45               	movwf	69,b	;volatile
  3287                           
  3288                           ;ecan.c: 140: CANCON = 0x00;
  3289  00130E  0E00               	movlw	0
  3290  001310  6E6F               	movwf	3951,c	;volatile
  3291  001312                     
  3292                           ; BSR set to: 14
  3293                           
  3294                           ; BSR set to: 14
  3295  001312  CF6E F018          	movff	3950,??_ECAN_Initialize	;volatile
  3296  001316  0EE0               	movlw	224
  3297  001318  1618               	andwf	??_ECAN_Initialize,f,c
  3298  00131A  B4D8               	btfsc	status,2,c
  3299  00131C  0012               	return	
  3300  00131E  D7F9               	goto	l237
  3301  001320                     __end_of_ECAN_Initialize:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           intcon2	equ	0xFF1
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           indf2	equ	0xFDF
  3314                           postinc2	equ	0xFDE
  3315                           postdec2	equ	0xFDD
  3316                           plusw2	equ	0xFDB
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function _INTERRUPT_InterruptManager *****************
  3322 ;; Defined at:
  3323 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;Total ram usage:       18 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		Absolute function
  3346 ;;		_EUSART1_Receive_ISR
  3347 ;;		_EUSART1_Transmit_ISR
  3348 ;;		_I2C_BusCollisionISR
  3349 ;;		_I2C_ISR
  3350 ;;		_TMR1_ISR
  3351 ;; This function is called by:
  3352 ;;		Interrupt level 2
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	intcode
  3357  000008                     __pintcode:
  3358                           	opt stack 0
  3359  000008                     _INTERRUPT_InterruptManager:
  3360                           	opt stack 24
  3361                           
  3362                           ;incstack = 0
  3363  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3364  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  3365  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3366  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3367  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3368  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3369  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3370  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3371  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3372  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3373  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3374  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3375  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3376  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3377  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3378  000042  C048  F014         	movff	btemp,??_INTERRUPT_InterruptManager+14
  3379  000046  C049  F015         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  3380  00004A  C04A  F016         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  3381  00004E  C04B  F017         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  3382                           
  3383                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  3384  000052  ACF2               	btfss	intcon,6,c	;volatile
  3385  000054  D02C               	goto	i2l358
  3386                           
  3387                           ;interrupt_manager.c: 62: {
  3388                           ;interrupt_manager.c: 63: if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
  3389  000056  B6A0               	btfsc	4000,3,c	;volatile
  3390  000058  A6A1               	btfss	4001,3,c	;volatile
  3391  00005A  D003               	goto	i2l350
  3392                           
  3393                           ;interrupt_manager.c: 64: {
  3394                           ;interrupt_manager.c: 65: I2C_BusCollisionISR();
  3395  00005C  ECA9  F00C         	call	_I2C_BusCollisionISR	;wreg free
  3396                           
  3397                           ;interrupt_manager.c: 66: }
  3398  000060  D026               	goto	i2l358
  3399  000062                     i2l350:
  3400                           
  3401                           ;interrupt_manager.c: 67: else if(PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1)
  3402  000062  B69D               	btfsc	3997,3,c	;volatile
  3403  000064  A69E               	btfss	3998,3,c	;volatile
  3404  000066  D003               	goto	i2l352
  3405                           
  3406                           ;interrupt_manager.c: 68: {
  3407                           ;interrupt_manager.c: 69: I2C_ISR();
  3408  000068  EC8F  F007         	call	_I2C_ISR	;wreg free
  3409                           
  3410                           ;interrupt_manager.c: 70: }
  3411  00006C  D020               	goto	i2l358
  3412  00006E                     i2l352:
  3413                           
  3414                           ;interrupt_manager.c: 71: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3415  00006E  B89D               	btfsc	3997,4,c	;volatile
  3416  000070  A89E               	btfss	3998,4,c	;volatile
  3417  000072  D009               	goto	i2l354
  3418                           
  3419                           ;interrupt_manager.c: 72: {
  3420                           ;interrupt_manager.c: 73: EUSART1_TxDefaultInterruptHandler();
  3421  000074  D801               	call	i2u208_48
  3422  000076  D01B               	goto	i2l358
  3423  000078                     i2u208_48:
  3424  000078  0005               	push	
  3425  00007A  6EFA               	movwf	pclath,c
  3426  00007C  0100               	movlb	0	; () banked
  3427  00007E  51B6               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  3428  000080  6EFD               	movwf	tosl,c
  3429  000082  51B7               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  3430  000084  D00B               	goto	L1
  3431  000086                     i2l354:
  3432                           
  3433                           ;interrupt_manager.c: 75: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3434  000086  BA9D               	btfsc	3997,5,c	;volatile
  3435  000088  AA9E               	btfss	3998,5,c	;volatile
  3436  00008A  D00C               	goto	i2l356
  3437                           
  3438                           ;interrupt_manager.c: 76: {
  3439                           ;interrupt_manager.c: 77: EUSART1_RxDefaultInterruptHandler();
  3440  00008C  D801               	call	i2u211_48
  3441  00008E  D00F               	goto	i2l358
  3442  000090                     i2u211_48:
  3443  000090  0005               	push	
  3444  000092  6EFA               	movwf	pclath,c
  3445  000094  0100               	movlb	0	; () banked
  3446  000096  51B4               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  3447  000098  6EFD               	movwf	tosl,c
  3448  00009A  51B5               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  3449  00009C                     L1:
  3450  00009C  6EFE               	movwf	tosh,c
  3451  00009E  6AFF               	clrf	tosu,c
  3452  0000A0  50FA               	movf	pclath,w,c
  3453  0000A2  0012               	return		;indir
  3454  0000A4                     i2l356:
  3455                           
  3456                           ;interrupt_manager.c: 79: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3457  0000A4  B09D               	btfsc	3997,0,c	;volatile
  3458  0000A6  A09E               	btfss	3998,0,c	;volatile
  3459  0000A8  D002               	goto	i2l358
  3460                           
  3461                           ;interrupt_manager.c: 80: {
  3462                           ;interrupt_manager.c: 81: TMR1_ISR();
  3463  0000AA  ECDD  F00B         	call	_TMR1_ISR	;wreg free
  3464  0000AE                     i2l358:
  3465                           
  3466                           ;interrupt_manager.c: 88: else
  3467                           ;interrupt_manager.c: 89: {
  3468                           
  3469                           ;interrupt_manager.c: 86: }
  3470                           ;interrupt_manager.c: 87: }
  3471                           
  3472                           ;interrupt_manager.c: 83: else
  3473                           ;interrupt_manager.c: 84: {
  3474  0000AE  C017  F04B         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  3475  0000B2  C016  F04A         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  3476  0000B6  C015  F049         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  3477  0000BA  C014  F048         	movff	??_INTERRUPT_InterruptManager+14,btemp
  3478  0000BE  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3479  0000C2  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3480  0000C6  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3481  0000CA  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3482  0000CE  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3483  0000D2  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3484  0000D6  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3485  0000DA  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3486  0000DE  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3487  0000E2  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3488  0000E6  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3489  0000EA  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3490  0000EE  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3491  0000F2  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3492  0000F6  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3493  0000F8  0011               	retfie		f
  3494  0000FA                     __end_of_INTERRUPT_InterruptManager:
  3495                           	opt stack 0
  3496                           tosu	equ	0xFFF
  3497                           tosh	equ	0xFFE
  3498                           tosl	equ	0xFFD
  3499                           pclatu	equ	0xFFB
  3500                           pclath	equ	0xFFA
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           prodh	equ	0xFF4
  3506                           prodl	equ	0xFF3
  3507                           intcon	equ	0xFF2
  3508                           intcon2	equ	0xFF1
  3509                           postinc0	equ	0xFEE
  3510                           fsr0h	equ	0xFEA
  3511                           fsr0l	equ	0xFE9
  3512                           wreg	equ	0xFE8
  3513                           fsr1h	equ	0xFE2
  3514                           fsr1l	equ	0xFE1
  3515                           indf2	equ	0xFDF
  3516                           postinc2	equ	0xFDE
  3517                           postdec2	equ	0xFDD
  3518                           plusw2	equ	0xFDB
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _TMR1_ISR *****************
  3524 ;; Defined at:
  3525 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    1
  3546 ;; This function calls:
  3547 ;;		Absolute function
  3548 ;;		_TMR1_DefaultInterruptHandler
  3549 ;;		_TMR1_WriteTimer
  3550 ;; This function is called by:
  3551 ;;		_INTERRUPT_InterruptManager
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text25
  3556  0017BA                     __ptext25:
  3557                           	opt stack 0
  3558  0017BA                     _TMR1_ISR:
  3559                           	opt stack 24
  3560                           
  3561                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
  3562                           
  3563                           ;incstack = 0
  3564  0017BA  909E               	bcf	3998,0,c	;volatile
  3565                           
  3566                           ;tmr1.c: 162: TMR1_WriteTimer(timer1ReloadVal);
  3567  0017BC  C044  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3568  0017C0  C045  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3569  0017C4  EC5B  F00C         	call	_TMR1_WriteTimer	;wreg free
  3570                           
  3571                           ;tmr1.c: 164: if(TMR1_InterruptHandler)
  3572  0017C8  0100               	movlb	0	; () banked
  3573  0017CA  51B2               	movf	_TMR1_InterruptHandler& (0+255),w,b
  3574  0017CC  11B3               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  3575  0017CE  B4D8               	btfsc	status,2,c
  3576  0017D0  0012               	return	
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;tmr1.c: 165: {
  3580                           ;tmr1.c: 166: TMR1_InterruptHandler();
  3581  0017D2  D801               	call	i2u123_48
  3582  0017D4  0012               	return	
  3583  0017D6                     i2u123_48:
  3584  0017D6  0005               	push	
  3585  0017D8  6EFA               	movwf	pclath,c
  3586  0017DA  51B2               	movf	_TMR1_InterruptHandler& (0+255),w,b
  3587  0017DC  6EFD               	movwf	tosl,c
  3588  0017DE  51B3               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  3589  0017E0  6EFE               	movwf	tosh,c
  3590  0017E2  6AFF               	clrf	tosu,c
  3591  0017E4  50FA               	movf	pclath,w,c
  3592  0017E6  0012               	return		;indir
  3593  0017E8                     __end_of_TMR1_ISR:
  3594                           	opt stack 0
  3595                           tosu	equ	0xFFF
  3596                           tosh	equ	0xFFE
  3597                           tosl	equ	0xFFD
  3598                           pclatu	equ	0xFFB
  3599                           pclath	equ	0xFFA
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           intcon2	equ	0xFF1
  3608                           postinc0	equ	0xFEE
  3609                           fsr0h	equ	0xFEA
  3610                           fsr0l	equ	0xFE9
  3611                           wreg	equ	0xFE8
  3612                           fsr1h	equ	0xFE2
  3613                           fsr1l	equ	0xFE1
  3614                           indf2	equ	0xFDF
  3615                           postinc2	equ	0xFDE
  3616                           postdec2	equ	0xFDD
  3617                           plusw2	equ	0xFDB
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _TMR1_WriteTimer *****************
  3623 ;; Defined at:
  3624 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  timerVal        2    0[COMRAM] unsigned int 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;Total ram usage:        2 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_TMR1_ISR
  3648 ;;		_TMR1_Reload
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text26
  3653  0018B6                     __ptext26:
  3654                           	opt stack 0
  3655  0018B6                     _TMR1_WriteTimer:
  3656                           	opt stack 24
  3657                           
  3658                           ;tmr1.c: 122: if (T1CONbits.nT1SYNC == 1)
  3659                           
  3660                           ;incstack = 0
  3661  0018B6  A4CD               	btfss	4045,2,c	;volatile
  3662  0018B8  D007               	goto	i2l684
  3663                           
  3664                           ;tmr1.c: 123: {
  3665                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
  3666  0018BA  90CD               	bcf	4045,0,c	;volatile
  3667                           
  3668                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
  3669  0018BC  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  3670  0018BE  6ECF               	movwf	4047,c	;volatile
  3671                           
  3672                           ;tmr1.c: 129: TMR1L = timerVal;
  3673  0018C0  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3674                           
  3675                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
  3676  0018C4  80CD               	bsf	4045,0,c	;volatile
  3677                           
  3678                           ;tmr1.c: 133: }
  3679  0018C6  0012               	return	
  3680  0018C8                     i2l684:
  3681                           
  3682                           ;tmr1.c: 134: else
  3683                           ;tmr1.c: 135: {
  3684                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
  3685  0018C8  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
  3686  0018CA  6ECF               	movwf	4047,c	;volatile
  3687                           
  3688                           ;tmr1.c: 138: TMR1L = timerVal;
  3689  0018CC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3690  0018D0  0012               	return	
  3691  0018D2                     __end_of_TMR1_WriteTimer:
  3692                           	opt stack 0
  3693                           tosu	equ	0xFFF
  3694                           tosh	equ	0xFFE
  3695                           tosl	equ	0xFFD
  3696                           pclatu	equ	0xFFB
  3697                           pclath	equ	0xFFA
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           intcon	equ	0xFF2
  3705                           intcon2	equ	0xFF1
  3706                           postinc0	equ	0xFEE
  3707                           fsr0h	equ	0xFEA
  3708                           fsr0l	equ	0xFE9
  3709                           wreg	equ	0xFE8
  3710                           fsr1h	equ	0xFE2
  3711                           fsr1l	equ	0xFE1
  3712                           indf2	equ	0xFDF
  3713                           postinc2	equ	0xFDE
  3714                           postdec2	equ	0xFDD
  3715                           plusw2	equ	0xFDB
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3721 ;; Defined at:
  3722 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		None
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_TMR1_Initialize
  3746 ;;		_TMR1_ISR
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text27
  3751  001958                     __ptext27:
  3752                           	opt stack 0
  3753  001958                     _TMR1_DefaultInterruptHandler:
  3754                           	opt stack 24
  3755                           
  3756                           ;incstack = 0
  3757  001958  0012               	return		;funcret
  3758  00195A                     __end_of_TMR1_DefaultInterruptHandler:
  3759                           	opt stack 0
  3760                           tosu	equ	0xFFF
  3761                           tosh	equ	0xFFE
  3762                           tosl	equ	0xFFD
  3763                           pclatu	equ	0xFFB
  3764                           pclath	equ	0xFFA
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           intcon2	equ	0xFF1
  3773                           postinc0	equ	0xFEE
  3774                           fsr0h	equ	0xFEA
  3775                           fsr0l	equ	0xFE9
  3776                           wreg	equ	0xFE8
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           indf2	equ	0xFDF
  3780                           postinc2	equ	0xFDE
  3781                           postdec2	equ	0xFDD
  3782                           plusw2	equ	0xFDB
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _I2C_ISR *****************
  3788 ;; Defined at:
  3789 ;;		line 233 in file "mcc_generated_files/i2c.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    1
  3810 ;; This function calls:
  3811 ;;		_I2C_FunctionComplete
  3812 ;;		_I2C_Stop
  3813 ;; This function is called by:
  3814 ;;		_INTERRUPT_InterruptManager
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text28
  3819  000F1E                     __ptext28:
  3820                           	opt stack 0
  3821  000F1E                     _I2C_ISR:
  3822                           	opt stack 24
  3823                           
  3824                           ;i2c.c: 236: static uint8_t *pi2c_buf_ptr;
  3825                           ;i2c.c: 237: static uint16_t i2c_address = 0;
  3826                           ;i2c.c: 238: static uint8_t i2c_bytes_left = 0;
  3827                           ;i2c.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  3828                           ;i2c.c: 241: PIR1bits.SSPIF = 0;
  3829                           
  3830                           ;incstack = 0
  3831  000F1E  969E               	bcf	3998,3,c	;volatile
  3832                           
  3833                           ;i2c.c: 245: if(SSPCON1bits.WCOL)
  3834  000F20  AEC6               	btfss	4038,7,c	;volatile
  3835  000F22  D11F               	goto	i2l460
  3836                           
  3837                           ;i2c.c: 246: {
  3838                           ;i2c.c: 248: SSPCON1bits.WCOL = 0;
  3839  000F24  9EC6               	bcf	4038,7,c	;volatile
  3840                           
  3841                           ;i2c.c: 249: i2c_state = S_MASTER_IDLE;
  3842  000F26  0E00               	movlw	0
  3843  000F28  6E41               	movwf	_i2c_state,c
  3844                           
  3845                           ;i2c.c: 250: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  3846  000F2A  EE20 F003          	lfsr	2,3
  3847  000F2E  5030               	movf	_p_i2c_current,w,c
  3848  000F30  26D9               	addwf	fsr2l,f,c
  3849  000F32  5031               	movf	_p_i2c_current+1,w,c
  3850  000F34  22DA               	addwfc	fsr2h,f,c
  3851  000F36  CFDE F004          	movff	postinc2,??_I2C_ISR
  3852  000F3A  CFDD F005          	movff	postdec2,??_I2C_ISR+1
  3853  000F3E  C004  FFF6         	movff	??_I2C_ISR,tblptrl
  3854  000F42  C005  FFF7         	movff	??_I2C_ISR+1,tblptrh
  3855  000F46  0E00               	movlw	low (__smallconst shr (0+16))
  3856  000F48  6EF8               	movwf	tblptru,c
  3857  000F4A  0E0E               	movlw	(high __ramtop+-1)
  3858  000F4C  64F7               	cpfsgt	tblptrh,c
  3859  000F4E  D004               	bra	i2u174_47
  3860  000F50  0E01               	movlw	1
  3861  000F52  6EF5               	movwf	tablat,c
  3862  000F54  000C               	tblwt		*
  3863  000F56  D006               	bra	i2u174_40
  3864  000F58                     i2u174_47:
  3865  000F58  CFF6 FFE9          	movff	tblptrl,fsr0l
  3866  000F5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3867  000F60  0E01               	movlw	1
  3868  000F62  6EEF               	movwf	indf0,c
  3869  000F64                     i2u174_40:
  3870                           
  3871                           ;i2c.c: 253: p_i2c_current = (0);
  3872  000F64  0E00               	movlw	0
  3873  000F66  6E30               	movwf	_p_i2c_current,c
  3874  000F68  0E00               	movlw	0
  3875  000F6A  6E31               	movwf	_p_i2c_current+1,c
  3876                           
  3877                           ;i2c.c: 255: return;
  3878  000F6C  0012               	return	
  3879  000F6E                     i2l461:
  3880                           
  3881                           ;i2c.c: 263: if(i2c_object.trStatus.s.empty != 1)
  3882  000F6E  B229               	btfsc	_i2c_object+4,1,c
  3883  000F70  0012               	return	
  3884                           
  3885                           ;i2c.c: 264: {
  3886                           ;i2c.c: 266: p_i2c_current = i2c_object.pTrHead;
  3887  000F72  C027  F030         	movff	_i2c_object+2,_p_i2c_current
  3888  000F76  C028  F031         	movff	_i2c_object+3,_p_i2c_current+1
  3889                           
  3890                           ;i2c.c: 267: i2c_trb_count = i2c_object.pTrHead->count;
  3891  000F7A  C027  FFD9         	movff	_i2c_object+2,fsr2l
  3892  000F7E  C028  FFDA         	movff	_i2c_object+3,fsr2h
  3893  000F82  50DF               	movf	indf2,w,c
  3894  000F84  6E40               	movwf	_i2c_trb_count,c
  3895                           
  3896                           ;i2c.c: 268: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  3897  000F86  EE20 F001          	lfsr	2,1
  3898  000F8A  5027               	movf	_i2c_object+2,w,c
  3899  000F8C  26D9               	addwf	fsr2l,f,c
  3900  000F8E  5028               	movf	_i2c_object+3,w,c
  3901  000F90  22DA               	addwfc	fsr2h,f,c
  3902  000F92  CFDE F032          	movff	postinc2,_p_i2c_trb_current
  3903  000F96  CFDD F033          	movff	postdec2,_p_i2c_trb_current+1
  3904                           
  3905                           ;i2c.c: 270: i2c_object.pTrHead++;
  3906  000F9A  0E05               	movlw	5
  3907  000F9C  2627               	addwf	_i2c_object+2,f,c
  3908  000F9E  0E00               	movlw	0
  3909  000FA0  2228               	addwfc	_i2c_object+3,f,c
  3910                           
  3911                           ;i2c.c: 273: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  3912  000FA2  0E9C               	movlw	low (_i2c_tr_queue+5)
  3913  000FA4  1827               	xorwf	_i2c_object+2,w,c
  3914  000FA6  E108               	bnz	i2l3074
  3915  000FA8  0E00               	movlw	high (_i2c_tr_queue+5)
  3916  000FAA  1828               	xorwf	_i2c_object+3,w,c
  3917  000FAC  A4D8               	btfss	status,2,c
  3918  000FAE  D004               	goto	i2l463
  3919                           
  3920                           ;i2c.c: 274: {
  3921                           ;i2c.c: 276: i2c_object.pTrHead = i2c_tr_queue;
  3922  000FB0  0E97               	movlw	low _i2c_tr_queue
  3923  000FB2  6E27               	movwf	_i2c_object+2,c
  3924  000FB4  0E00               	movlw	high _i2c_tr_queue
  3925  000FB6  6E28               	movwf	_i2c_object+3,c
  3926  000FB8                     i2l463:
  3927  000FB8                     i2l3074:
  3928                           
  3929                           ;i2c.c: 277: }
  3930                           ;i2c.c: 281: i2c_object.trStatus.s.full = 0;
  3931  000FB8  9029               	bcf	_i2c_object+4,0,c
  3932                           
  3933                           ;i2c.c: 284: if(i2c_object.pTrHead == i2c_object.pTrTail)
  3934  000FBA  5025               	movf	_i2c_object,w,c
  3935  000FBC  1827               	xorwf	_i2c_object+2,w,c
  3936  000FBE  E104               	bnz	i2l464
  3937  000FC0  5026               	movf	_i2c_object+1,w,c
  3938  000FC2  1828               	xorwf	_i2c_object+3,w,c
  3939  000FC4  B4D8               	btfsc	status,2,c
  3940                           
  3941                           ;i2c.c: 285: {
  3942                           ;i2c.c: 287: i2c_object.trStatus.s.empty = 1;
  3943  000FC6  8229               	bsf	_i2c_object+4,1,c
  3944  000FC8                     i2l464:
  3945                           
  3946                           ;i2c.c: 288: }
  3947                           ;i2c.c: 291: SSPCON2bits.SEN = 1;
  3948  000FC8  80C5               	bsf	4037,0,c	;volatile
  3949                           
  3950                           ;i2c.c: 294: i2c_state = S_MASTER_SEND_ADDR;
  3951  000FCA  0E02               	movlw	2
  3952  000FCC  6E41               	movwf	_i2c_state,c
  3953                           
  3954                           ;i2c.c: 295: }
  3955                           ;i2c.c: 297: break;
  3956  000FCE  0012               	return	
  3957  000FD0                     i2l466:
  3958                           
  3959                           ;i2c.c: 304: SSPCON2bits.RSEN = 1;
  3960  000FD0  82C5               	bsf	4037,1,c	;volatile
  3961                           
  3962                           ;i2c.c: 307: i2c_state = S_MASTER_SEND_ADDR;
  3963  000FD2  0E02               	movlw	2
  3964  000FD4  6E41               	movwf	_i2c_state,c
  3965                           
  3966                           ;i2c.c: 309: break;
  3967  000FD6  0012               	return	
  3968  000FD8                     i2l467:
  3969                           
  3970                           ;i2c.c: 313: if(SSPCON2bits.ACKSTAT)
  3971  000FD8  ACC5               	btfss	4037,6,c	;volatile
  3972  000FDA  D005               	goto	i2l468
  3973                           
  3974                           ;i2c.c: 314: {
  3975                           ;i2c.c: 315: i2c_object.i2cErrors++;
  3976  000FDC  2A2B               	incf	_i2c_object+6,f,c
  3977                           
  3978                           ;i2c.c: 316: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  3979  000FDE  0E04               	movlw	4
  3980  000FE0  EC7E  F00A         	call	_I2C_Stop
  3981                           
  3982                           ;i2c.c: 317: }
  3983  000FE4  0012               	return	
  3984  000FE6                     i2l468:
  3985                           
  3986                           ;i2c.c: 318: else
  3987                           ;i2c.c: 319: {
  3988                           ;i2c.c: 321: SSPBUF = (i2c_address >> 1) & 0x00FF;
  3989  000FE6  90D8               	bcf	status,0,c
  3990  000FE8  3043               	rrcf	I2C_ISR@i2c_address+1,w,c
  3991  000FEA  6E05               	movwf	(??_I2C_ISR+1)& (0+255),c
  3992  000FEC  3042               	rrcf	I2C_ISR@i2c_address,w,c
  3993  000FEE  6E04               	movwf	??_I2C_ISR& (0+255),c
  3994  000FF0  5004               	movf	??_I2C_ISR,w,c
  3995  000FF2  6EC9               	movwf	4041,c	;volatile
  3996                           
  3997                           ;i2c.c: 324: if(i2c_address & 0x01)
  3998  000FF4  A042               	btfss	I2C_ISR@i2c_address,0,c
  3999  000FF6  D003               	goto	i2l470
  4000                           
  4001                           ;i2c.c: 325: {
  4002                           ;i2c.c: 328: i2c_state = S_MASTER_10BIT_RESTART;
  4003  000FF8  0E0B               	movlw	11
  4004  000FFA  6E41               	movwf	_i2c_state,c
  4005                           
  4006                           ;i2c.c: 329: }
  4007  000FFC  0012               	return	
  4008  000FFE                     i2l470:
  4009                           
  4010                           ;i2c.c: 330: else
  4011                           ;i2c.c: 331: {
  4012                           ;i2c.c: 333: i2c_state = S_MASTER_SEND_DATA;
  4013  000FFE  0E03               	movlw	3
  4014  001000  6E41               	movwf	_i2c_state,c
  4015                           
  4016                           ;i2c.c: 334: }
  4017                           ;i2c.c: 335: }
  4018                           ;i2c.c: 337: break;
  4019  001002  0012               	return	
  4020  001004                     i2l472:
  4021                           
  4022                           ;i2c.c: 341: if(SSPCON2bits.ACKSTAT)
  4023  001004  ACC5               	btfss	4037,6,c	;volatile
  4024  001006  D005               	goto	i2l473
  4025                           
  4026                           ;i2c.c: 342: {
  4027                           ;i2c.c: 343: i2c_object.i2cErrors++;
  4028  001008  2A2B               	incf	_i2c_object+6,f,c
  4029                           
  4030                           ;i2c.c: 344: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4031  00100A  0E04               	movlw	4
  4032  00100C  EC7E  F00A         	call	_I2C_Stop
  4033                           
  4034                           ;i2c.c: 345: }
  4035  001010  0012               	return	
  4036  001012                     i2l473:
  4037                           
  4038                           ;i2c.c: 346: else
  4039                           ;i2c.c: 347: {
  4040                           ;i2c.c: 350: SSPCON2bits.RSEN = 1;
  4041  001012  82C5               	bsf	4037,1,c	;volatile
  4042                           
  4043                           ;i2c.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  4044  001014  C042  F004         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  4045  001018  C043  F005         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  4046  00101C  C005  F004         	movff	??_I2C_ISR+1,??_I2C_ISR
  4047  001020  6A05               	clrf	??_I2C_ISR+1,c
  4048  001022  0E06               	movlw	6
  4049  001024  1604               	andwf	??_I2C_ISR,f,c
  4050  001026  0E00               	movlw	0
  4051  001028  1605               	andwf	??_I2C_ISR+1,f,c
  4052  00102A  0EF0               	movlw	240
  4053  00102C  1004               	iorwf	??_I2C_ISR,w,c
  4054  00102E  6E42               	movwf	I2C_ISR@i2c_address,c
  4055  001030  5005               	movf	??_I2C_ISR+1,w,c
  4056  001032  6E43               	movwf	I2C_ISR@i2c_address+1,c
  4057                           
  4058                           ;i2c.c: 357: i2c_address |= 0x0001;
  4059  001034  8042               	bsf	I2C_ISR@i2c_address,0,c
  4060                           
  4061                           ;i2c.c: 360: i2c_10bit_address_restart = 1;
  4062  001036  0E01               	movlw	1
  4063  001038  6E3E               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  4064                           
  4065                           ;i2c.c: 363: i2c_state = S_MASTER_SEND_ADDR;
  4066  00103A  0E02               	movlw	2
  4067  00103C  6E41               	movwf	_i2c_state,c
  4068                           
  4069                           ;i2c.c: 364: }
  4070                           ;i2c.c: 366: break;
  4071  00103E  0012               	return	
  4072  001040                     
  4073                           ;i2c.c: 381: if(i2c_10bit_address_restart != 1)
  4074  001040  043E               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  4075  001042  B4D8               	btfsc	status,2,c
  4076  001044  D01A               	goto	i2l477
  4077                           
  4078                           ;i2c.c: 382: {
  4079                           ;i2c.c: 384: i2c_address = p_i2c_trb_current->address;
  4080  001046  C032  FFD9         	movff	_p_i2c_trb_current,fsr2l
  4081  00104A  C033  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  4082  00104E  CFDE F042          	movff	postinc2,I2C_ISR@i2c_address
  4083  001052  CFDD F043          	movff	postdec2,I2C_ISR@i2c_address+1
  4084                           
  4085                           ;i2c.c: 385: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  4086  001056  EE20 F003          	lfsr	2,3
  4087  00105A  5032               	movf	_p_i2c_trb_current,w,c
  4088  00105C  26D9               	addwf	fsr2l,f,c
  4089  00105E  5033               	movf	_p_i2c_trb_current+1,w,c
  4090  001060  22DA               	addwfc	fsr2h,f,c
  4091  001062  CFDE F02E          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  4092  001066  CFDD F02F          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  4093                           
  4094                           ;i2c.c: 386: i2c_bytes_left = p_i2c_trb_current->length;
  4095  00106A  EE20 F002          	lfsr	2,2
  4096  00106E  5032               	movf	_p_i2c_trb_current,w,c
  4097  001070  26D9               	addwf	fsr2l,f,c
  4098  001072  5033               	movf	_p_i2c_trb_current+1,w,c
  4099  001074  22DA               	addwfc	fsr2h,f,c
  4100  001076  50DF               	movf	indf2,w,c
  4101  001078  6E3F               	movwf	I2C_ISR@i2c_bytes_left,c
  4102  00107A                     i2l477:
  4103                           
  4104                           ;i2c.c: 409: else
  4105                           ;i2c.c: 410: {
  4106                           ;i2c.c: 412: SSPBUF = i2c_address;
  4107  00107A  C042  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  4108                           
  4109                           ;i2c.c: 413: if(i2c_address & 0x01)
  4110  00107E  A042               	btfss	I2C_ISR@i2c_address,0,c
  4111  001080  D003               	goto	i2l481
  4112                           
  4113                           ;i2c.c: 414: {
  4114                           ;i2c.c: 416: i2c_state = S_MASTER_ACK_ADDR;
  4115  001082  0E05               	movlw	5
  4116  001084  6E41               	movwf	_i2c_state,c
  4117                           
  4118                           ;i2c.c: 417: }
  4119  001086  0012               	return	
  4120  001088                     i2l481:
  4121                           
  4122                           ;i2c.c: 418: else
  4123                           ;i2c.c: 419: {
  4124                           ;i2c.c: 421: i2c_state = S_MASTER_SEND_DATA;
  4125  001088  0E03               	movlw	3
  4126  00108A  6E41               	movwf	_i2c_state,c
  4127                           
  4128                           ;i2c.c: 422: }
  4129                           ;i2c.c: 423: }
  4130                           ;i2c.c: 424: break;
  4131  00108C  0012               	return	
  4132  00108E                     i2l483:
  4133                           
  4134                           ;i2c.c: 429: if(SSPCON2bits.ACKSTAT)
  4135  00108E  ACC5               	btfss	4037,6,c	;volatile
  4136  001090  D006               	goto	i2l484
  4137                           
  4138                           ;i2c.c: 430: {
  4139                           ;i2c.c: 432: i2c_object.i2cErrors++;
  4140  001092  2A2B               	incf	_i2c_object+6,f,c
  4141                           
  4142                           ;i2c.c: 435: SSPCON2bits.ACKSTAT = 0;
  4143  001094  9CC5               	bcf	4037,6,c	;volatile
  4144                           
  4145                           ;i2c.c: 438: I2C_Stop(I2C_DATA_NO_ACK);
  4146  001096  0E05               	movlw	5
  4147  001098  EC7E  F00A         	call	_I2C_Stop
  4148                           
  4149                           ;i2c.c: 440: }
  4150  00109C  0012               	return	
  4151  00109E                     i2l484:
  4152                           
  4153                           ;i2c.c: 441: else
  4154                           ;i2c.c: 442: {
  4155                           ;i2c.c: 444: if(i2c_bytes_left-- == 0U)
  4156  00109E  063F               	decf	I2C_ISR@i2c_bytes_left,f,c
  4157  0010A0  283F               	incf	I2C_ISR@i2c_bytes_left,w,c
  4158  0010A2  A4D8               	btfss	status,2,c
  4159  0010A4  D00E               	goto	i2l486
  4160                           
  4161                           ;i2c.c: 445: {
  4162                           ;i2c.c: 449: p_i2c_trb_current++;
  4163  0010A6  0E05               	movlw	5
  4164  0010A8  2632               	addwf	_p_i2c_trb_current,f,c
  4165  0010AA  0E00               	movlw	0
  4166  0010AC  2233               	addwfc	_p_i2c_trb_current+1,f,c
  4167                           
  4168                           ;i2c.c: 452: if(--i2c_trb_count == 0)
  4169  0010AE  2E40               	decfsz	_i2c_trb_count,f,c
  4170  0010B0  D004               	goto	i2l487
  4171                           
  4172                           ;i2c.c: 453: {
  4173                           ;i2c.c: 454: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4174  0010B2  0E00               	movlw	0
  4175  0010B4  EC7E  F00A         	call	_I2C_Stop
  4176                           
  4177                           ;i2c.c: 455: }
  4178  0010B8  0012               	return	
  4179  0010BA                     i2l487:
  4180                           
  4181                           ;i2c.c: 456: else
  4182                           ;i2c.c: 457: {
  4183                           ;i2c.c: 464: SSPCON2bits.RSEN = 1;
  4184  0010BA  82C5               	bsf	4037,1,c	;volatile
  4185                           
  4186                           ;i2c.c: 467: i2c_state = S_MASTER_SEND_ADDR;
  4187  0010BC  0E02               	movlw	2
  4188  0010BE  6E41               	movwf	_i2c_state,c
  4189                           
  4190                           ;i2c.c: 469: }
  4191                           ;i2c.c: 470: }
  4192  0010C0  0012               	return	
  4193  0010C2                     i2l486:
  4194                           
  4195                           ;i2c.c: 471: else
  4196                           ;i2c.c: 472: {
  4197                           ;i2c.c: 474: SSPBUF = *pi2c_buf_ptr++;
  4198  0010C2  C02E  FFF6         	movff	I2C_ISR@pi2c_buf_ptr,tblptrl
  4199  0010C6  C02F  FFF7         	movff	I2C_ISR@pi2c_buf_ptr+1,tblptrh
  4200  0010CA  0E00               	movlw	low (__smallconst shr (0+16))
  4201  0010CC  6EF8               	movwf	tblptru,c
  4202  0010CE  0E0E               	movlw	(high __ramtop+-1)
  4203  0010D0  64F7               	cpfsgt	tblptrh,c
  4204  0010D2  D003               	bra	i2u187_47
  4205  0010D4  0008               	tblrd		*
  4206  0010D6  50F5               	movf	tablat,w,c
  4207  0010D8  D005               	bra	i2u187_40
  4208  0010DA                     i2u187_47:
  4209  0010DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4210  0010DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4211  0010E2  50EF               	movf	indf0,w,c
  4212  0010E4                     i2u187_40:
  4213  0010E4  6EC9               	movwf	4041,c	;volatile
  4214  0010E6  4A2E               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  4215  0010E8  2A2F               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  4216                           
  4217                           ;i2c.c: 475: }
  4218                           ;i2c.c: 476: }
  4219                           ;i2c.c: 477: break;
  4220  0010EA  0012               	return	
  4221  0010EC                     i2l490:
  4222                           
  4223                           ;i2c.c: 482: if(SSPCON2bits.ACKSTAT)
  4224  0010EC  ACC5               	btfss	4037,6,c	;volatile
  4225  0010EE  D006               	goto	i2l491
  4226                           
  4227                           ;i2c.c: 483: {
  4228                           ;i2c.c: 486: i2c_object.i2cErrors++;
  4229  0010F0  2A2B               	incf	_i2c_object+6,f,c
  4230                           
  4231                           ;i2c.c: 489: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4232  0010F2  0E04               	movlw	4
  4233  0010F4  EC7E  F00A         	call	_I2C_Stop
  4234                           
  4235                           ;i2c.c: 492: SSPCON2bits.ACKSTAT = 0;
  4236  0010F8  9CC5               	bcf	4037,6,c	;volatile
  4237                           
  4238                           ;i2c.c: 493: }
  4239  0010FA  0012               	return	
  4240  0010FC                     i2l491:
  4241                           
  4242                           ;i2c.c: 494: else
  4243                           ;i2c.c: 495: {
  4244                           ;i2c.c: 496: SSPCON2bits.RCEN = 1;
  4245  0010FC  86C5               	bsf	4037,3,c	;volatile
  4246                           
  4247                           ;i2c.c: 497: i2c_state = S_MASTER_ACK_RCV_DATA;
  4248  0010FE  0E08               	movlw	8
  4249  001100  6E41               	movwf	_i2c_state,c
  4250                           
  4251                           ;i2c.c: 498: }
  4252                           ;i2c.c: 499: break;
  4253  001102  0012               	return	
  4254  001104                     
  4255                           ;i2c.c: 506: i2c_state = S_MASTER_ACK_RCV_DATA;
  4256  001104  0E08               	movlw	8
  4257  001106  6E41               	movwf	_i2c_state,c
  4258                           
  4259                           ;i2c.c: 509: SSPCON2bits.RCEN = 1;
  4260  001108  86C5               	bsf	4037,3,c	;volatile
  4261                           
  4262                           ;i2c.c: 511: break;
  4263  00110A  0012               	return	
  4264  00110C                     
  4265                           ;i2c.c: 516: *pi2c_buf_ptr++ = SSPBUF;
  4266  00110C  C02E  FFF6         	movff	I2C_ISR@pi2c_buf_ptr,tblptrl
  4267  001110  C02F  FFF7         	movff	I2C_ISR@pi2c_buf_ptr+1,tblptrh
  4268  001114  0E00               	movlw	low (__smallconst shr (0+16))
  4269  001116  6EF8               	movwf	tblptru,c
  4270  001118  0E0E               	movlw	(high __ramtop+-1)
  4271  00111A  64F7               	cpfsgt	tblptrh,c
  4272  00111C  D004               	bra	i2u189_47
  4273  00111E  CFC9 FFF5          	movff	4041,tablat	;volatile
  4274  001122  000C               	tblwt		*
  4275  001124  D006               	bra	i2u189_40
  4276  001126                     i2u189_47:
  4277  001126  CFF6 FFE9          	movff	tblptrl,fsr0l
  4278  00112A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4279  00112E  CFC9 FFEF          	movff	4041,indf0	;volatile
  4280  001132                     i2u189_40:
  4281  001132  4A2E               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  4282  001134  2A2F               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  4283                           
  4284                           ;i2c.c: 519: if(--i2c_bytes_left)
  4285  001136  0E01               	movlw	1
  4286  001138  5E3F               	subwf	I2C_ISR@i2c_bytes_left,f,c
  4287  00113A  B4D8               	btfsc	status,2,c
  4288  00113C  D004               	goto	i2l495
  4289                           
  4290                           ;i2c.c: 520: {
  4291                           ;i2c.c: 526: SSPCON2bits.ACKDT = 0;
  4292  00113E  9AC5               	bcf	4037,5,c	;volatile
  4293                           
  4294                           ;i2c.c: 529: i2c_state = S_MASTER_RCV_DATA;
  4295  001140  0E06               	movlw	6
  4296  001142  6E41               	movwf	_i2c_state,c
  4297                           
  4298                           ;i2c.c: 530: }
  4299  001144  D003               	goto	i2l496
  4300  001146                     i2l495:
  4301                           
  4302                           ;i2c.c: 531: else
  4303                           ;i2c.c: 532: {
  4304                           ;i2c.c: 536: SSPCON2bits.ACKDT = 1;
  4305  001146  8AC5               	bsf	4037,5,c	;volatile
  4306                           
  4307                           ;i2c.c: 538: I2C_FunctionComplete();
  4308  001148  EC69  F00C         	call	_I2C_FunctionComplete	;wreg free
  4309  00114C                     i2l496:
  4310                           
  4311                           ;i2c.c: 539: }
  4312                           ;i2c.c: 542: SSPCON2bits.ACKEN = 1;
  4313  00114C  88C5               	bsf	4037,4,c	;volatile
  4314                           
  4315                           ;i2c.c: 543: break;
  4316  00114E  0012               	return	
  4317  001150                     
  4318                           ;i2c.c: 546: case S_MASTER_SEND_STOP:
  4319                           ;i2c.c: 549: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4320  001150  0E00               	movlw	0
  4321  001152  EC7E  F00A         	call	_I2C_Stop
  4322                           
  4323                           ;i2c.c: 550: break;
  4324  001156  0012               	return	
  4325  001158                     
  4326                           ;i2c.c: 556: i2c_object.i2cErrors++;
  4327  001158  2A2B               	incf	_i2c_object+6,f,c
  4328                           
  4329                           ;i2c.c: 557: I2C_Stop(I2C_LOST_STATE);
  4330  00115A  0E06               	movlw	6
  4331  00115C  EC7E  F00A         	call	_I2C_Stop
  4332                           
  4333                           ;i2c.c: 560: }
  4334                           
  4335                           ;i2c.c: 558: break;
  4336  001160  0012               	return	
  4337  001162                     i2l460:
  4338  001162  5041               	movf	_i2c_state,w,c
  4339                           
  4340                           ; Switch size 1, requested type "space"
  4341                           ; Number of cases is 11, Range of values is 0 to 11
  4342                           ; switch strategies available:
  4343                           ; Name         Instructions Cycles
  4344                           ; simple_byte           34    18 (average)
  4345                           ;	Chosen strategy is simple_byte
  4346  001164  0A00               	xorlw	0	; case 0
  4347  001166  B4D8               	btfsc	status,2,c
  4348  001168  D702               	goto	i2l461
  4349  00116A  0A01               	xorlw	1	; case 1
  4350  00116C  B4D8               	btfsc	status,2,c
  4351  00116E  D730               	goto	i2l466
  4352  001170  0A03               	xorlw	3	; case 2
  4353  001172  B4D8               	btfsc	status,2,c
  4354  001174  D765               	goto	i2l475
  4355  001176  0A01               	xorlw	1	; case 3
  4356  001178  B4D8               	btfsc	status,2,c
  4357  00117A  D789               	goto	i2l483
  4358  00117C  0A07               	xorlw	7	; case 4
  4359  00117E  B4D8               	btfsc	status,2,c
  4360  001180  D7E7               	goto	i2l497
  4361  001182  0A01               	xorlw	1	; case 5
  4362  001184  B4D8               	btfsc	status,2,c
  4363  001186  D7B2               	goto	i2l490
  4364  001188  0A03               	xorlw	3	; case 6
  4365  00118A  B4D8               	btfsc	status,2,c
  4366  00118C  D7BB               	goto	i2l493
  4367  00118E  0A01               	xorlw	1	; case 7
  4368  001190  B4D8               	btfsc	status,2,c
  4369  001192  D7DE               	goto	i2l497
  4370  001194  0A0F               	xorlw	15	; case 8
  4371  001196  B4D8               	btfsc	status,2,c
  4372  001198  D7B9               	goto	i2l494
  4373  00119A  0A02               	xorlw	2	; case 10
  4374  00119C  B4D8               	btfsc	status,2,c
  4375  00119E  D71C               	goto	i2l467
  4376  0011A0  0A01               	xorlw	1	; case 11
  4377  0011A2  B4D8               	btfsc	status,2,c
  4378  0011A4  D72F               	goto	i2l472
  4379  0011A6  D7D8               	goto	i2l499
  4380  0011A8                     __end_of_I2C_ISR:
  4381                           	opt stack 0
  4382                           tosu	equ	0xFFF
  4383                           tosh	equ	0xFFE
  4384                           tosl	equ	0xFFD
  4385                           pclatu	equ	0xFFB
  4386                           pclath	equ	0xFFA
  4387                           tblptru	equ	0xFF8
  4388                           tblptrh	equ	0xFF7
  4389                           tblptrl	equ	0xFF6
  4390                           tablat	equ	0xFF5
  4391                           prodh	equ	0xFF4
  4392                           prodl	equ	0xFF3
  4393                           intcon	equ	0xFF2
  4394                           intcon2	equ	0xFF1
  4395                           indf0	equ	0xFEF
  4396                           postinc0	equ	0xFEE
  4397                           fsr0h	equ	0xFEA
  4398                           fsr0l	equ	0xFE9
  4399                           wreg	equ	0xFE8
  4400                           fsr1h	equ	0xFE2
  4401                           fsr1l	equ	0xFE1
  4402                           indf2	equ	0xFDF
  4403                           postinc2	equ	0xFDE
  4404                           postdec2	equ	0xFDD
  4405                           plusw2	equ	0xFDB
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _I2C_Stop *****************
  4411 ;; Defined at:
  4412 ;;		line 581 in file "mcc_generated_files/i2c.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  completion_c    1    wreg     enum E15702
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  completion_c    1    2[COMRAM] enum E15702
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;Total ram usage:        3 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_I2C_ISR
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text29
  4440  0014FC                     __ptext29:
  4441                           	opt stack 0
  4442  0014FC                     _I2C_Stop:
  4443                           	opt stack 24
  4444                           
  4445                           ;incstack = 0
  4446                           ;I2C_Stop@completion_code stored from wreg
  4447  0014FC  6E03               	movwf	I2C_Stop@completion_code,c
  4448                           
  4449                           ;i2c.c: 584: SSPCON2bits.PEN = 1;
  4450  0014FE  84C5               	bsf	4037,2,c	;volatile
  4451                           
  4452                           ;i2c.c: 587: if (p_i2c_current->pTrFlag != (0))
  4453  001500  EE20 F003          	lfsr	2,3
  4454  001504  5030               	movf	_p_i2c_current,w,c
  4455  001506  26D9               	addwf	fsr2l,f,c
  4456  001508  5031               	movf	_p_i2c_current+1,w,c
  4457  00150A  22DA               	addwfc	fsr2h,f,c
  4458  00150C  50DE               	movf	postinc2,w,c
  4459  00150E  10DE               	iorwf	postinc2,w,c
  4460  001510  B4D8               	btfsc	status,2,c
  4461  001512  D01D               	goto	i2u169_40
  4462                           
  4463                           ;i2c.c: 588: {
  4464                           ;i2c.c: 590: *(p_i2c_current->pTrFlag) = completion_code;
  4465  001514  EE20 F003          	lfsr	2,3
  4466  001518  5030               	movf	_p_i2c_current,w,c
  4467  00151A  26D9               	addwf	fsr2l,f,c
  4468  00151C  5031               	movf	_p_i2c_current+1,w,c
  4469  00151E  22DA               	addwfc	fsr2h,f,c
  4470  001520  CFDE F001          	movff	postinc2,??_I2C_Stop
  4471  001524  CFDD F002          	movff	postdec2,??_I2C_Stop+1
  4472  001528  C001  FFF6         	movff	??_I2C_Stop,tblptrl
  4473  00152C  C002  FFF7         	movff	??_I2C_Stop+1,tblptrh
  4474  001530  0E00               	movlw	low (__smallconst shr (0+16))
  4475  001532  6EF8               	movwf	tblptru,c
  4476  001534  0E0E               	movlw	(high __ramtop+-1)
  4477  001536  64F7               	cpfsgt	tblptrh,c
  4478  001538  D004               	bra	i2u169_47
  4479  00153A  C003  FFF5         	movff	I2C_Stop@completion_code,tablat
  4480  00153E  000C               	tblwt		*
  4481  001540  D006               	bra	i2u169_40
  4482  001542                     i2u169_47:
  4483  001542  CFF6 FFE9          	movff	tblptrl,fsr0l
  4484  001546  CFF7 FFEA          	movff	tblptrh,fsr0h
  4485  00154A  C003  FFEF         	movff	I2C_Stop@completion_code,indf0
  4486  00154E                     i2u169_40:
  4487                           
  4488                           ;i2c.c: 591: }
  4489                           ;i2c.c: 594: i2c_state = S_MASTER_IDLE;
  4490  00154E  0E00               	movlw	0
  4491  001550  6E41               	movwf	_i2c_state,c
  4492  001552  0012               	return		;funcret
  4493  001554                     __end_of_I2C_Stop:
  4494                           	opt stack 0
  4495                           tosu	equ	0xFFF
  4496                           tosh	equ	0xFFE
  4497                           tosl	equ	0xFFD
  4498                           pclatu	equ	0xFFB
  4499                           pclath	equ	0xFFA
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           prodh	equ	0xFF4
  4505                           prodl	equ	0xFF3
  4506                           intcon	equ	0xFF2
  4507                           intcon2	equ	0xFF1
  4508                           indf0	equ	0xFEF
  4509                           postinc0	equ	0xFEE
  4510                           fsr0h	equ	0xFEA
  4511                           fsr0l	equ	0xFE9
  4512                           wreg	equ	0xFE8
  4513                           fsr1h	equ	0xFE2
  4514                           fsr1l	equ	0xFE1
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           postdec2	equ	0xFDD
  4518                           plusw2	equ	0xFDB
  4519                           fsr2h	equ	0xFDA
  4520                           fsr2l	equ	0xFD9
  4521                           status	equ	0xFD8
  4522                           
  4523 ;; *************** function _I2C_FunctionComplete *****************
  4524 ;; Defined at:
  4525 ;;		line 563 in file "mcc_generated_files/i2c.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_I2C_ISR
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text30
  4553  0018D2                     __ptext30:
  4554                           	opt stack 0
  4555  0018D2                     _I2C_FunctionComplete:
  4556                           	opt stack 24
  4557                           
  4558                           ;i2c.c: 567: p_i2c_trb_current++;
  4559                           
  4560                           ;incstack = 0
  4561  0018D2  0E05               	movlw	5
  4562  0018D4  2632               	addwf	_p_i2c_trb_current,f,c
  4563  0018D6  0E00               	movlw	0
  4564  0018D8  2233               	addwfc	_p_i2c_trb_current+1,f,c
  4565                           
  4566                           ;i2c.c: 570: if(--i2c_trb_count == 0)
  4567  0018DA  2E40               	decfsz	_i2c_trb_count,f,c
  4568  0018DC  D003               	goto	i2l502
  4569                           
  4570                           ;i2c.c: 571: {
  4571                           ;i2c.c: 572: i2c_state = S_MASTER_SEND_STOP;
  4572  0018DE  0E04               	movlw	4
  4573  0018E0  6E41               	movwf	_i2c_state,c
  4574                           
  4575                           ;i2c.c: 573: }
  4576  0018E2  0012               	return	
  4577  0018E4                     i2l502:
  4578                           
  4579                           ;i2c.c: 574: else
  4580                           ;i2c.c: 575: {
  4581                           ;i2c.c: 576: i2c_state = S_MASTER_RESTART;
  4582  0018E4  0E01               	movlw	1
  4583  0018E6  6E41               	movwf	_i2c_state,c
  4584  0018E8  0012               	return	
  4585  0018EA                     __end_of_I2C_FunctionComplete:
  4586                           	opt stack 0
  4587                           tosu	equ	0xFFF
  4588                           tosh	equ	0xFFE
  4589                           tosl	equ	0xFFD
  4590                           pclatu	equ	0xFFB
  4591                           pclath	equ	0xFFA
  4592                           tblptru	equ	0xFF8
  4593                           tblptrh	equ	0xFF7
  4594                           tblptrl	equ	0xFF6
  4595                           tablat	equ	0xFF5
  4596                           prodh	equ	0xFF4
  4597                           prodl	equ	0xFF3
  4598                           intcon	equ	0xFF2
  4599                           intcon2	equ	0xFF1
  4600                           indf0	equ	0xFEF
  4601                           postinc0	equ	0xFEE
  4602                           fsr0h	equ	0xFEA
  4603                           fsr0l	equ	0xFE9
  4604                           wreg	equ	0xFE8
  4605                           fsr1h	equ	0xFE2
  4606                           fsr1l	equ	0xFE1
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           plusw2	equ	0xFDB
  4611                           fsr2h	equ	0xFDA
  4612                           fsr2l	equ	0xFD9
  4613                           status	equ	0xFD8
  4614                           
  4615 ;; *************** function _I2C_BusCollisionISR *****************
  4616 ;; Defined at:
  4617 ;;		line 747 in file "mcc_generated_files/i2c.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		None
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_INTERRUPT_InterruptManager
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text31
  4645  001952                     __ptext31:
  4646                           	opt stack 0
  4647  001952                     _I2C_BusCollisionISR:
  4648                           	opt stack 25
  4649                           
  4650                           ;i2c.c: 750: PIR2bits.BCLIF = 0;
  4651                           
  4652                           ;incstack = 0
  4653  001952  96A1               	bcf	4001,3,c	;volatile
  4654  001954  0012               	return		;funcret
  4655  001956                     __end_of_I2C_BusCollisionISR:
  4656                           	opt stack 0
  4657                           tosu	equ	0xFFF
  4658                           tosh	equ	0xFFE
  4659                           tosl	equ	0xFFD
  4660                           pclatu	equ	0xFFB
  4661                           pclath	equ	0xFFA
  4662                           tblptru	equ	0xFF8
  4663                           tblptrh	equ	0xFF7
  4664                           tblptrl	equ	0xFF6
  4665                           tablat	equ	0xFF5
  4666                           prodh	equ	0xFF4
  4667                           prodl	equ	0xFF3
  4668                           intcon	equ	0xFF2
  4669                           intcon2	equ	0xFF1
  4670                           indf0	equ	0xFEF
  4671                           postinc0	equ	0xFEE
  4672                           fsr0h	equ	0xFEA
  4673                           fsr0l	equ	0xFE9
  4674                           wreg	equ	0xFE8
  4675                           fsr1h	equ	0xFE2
  4676                           fsr1l	equ	0xFE1
  4677                           indf2	equ	0xFDF
  4678                           postinc2	equ	0xFDE
  4679                           postdec2	equ	0xFDD
  4680                           plusw2	equ	0xFDB
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _EUSART1_Transmit_ISR *****************
  4686 ;; Defined at:
  4687 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;Total ram usage:        0 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_EUSART1_Initialize
  4711 ;;		_INTERRUPT_InterruptManager
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text32
  4716  0017E8                     __ptext32:
  4717                           	opt stack 0
  4718  0017E8                     _EUSART1_Transmit_ISR:
  4719                           	opt stack 25
  4720                           
  4721                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4722                           
  4723                           ;incstack = 0
  4724  0017E8  0E08               	movlw	8
  4725  0017EA  6046               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  4726  0017EC  D012               	goto	i2l631
  4727                           
  4728                           ;eusart1.c: 177: {
  4729                           ;eusart1.c: 178: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  4730  0017EE  503C               	movf	_eusart1TxTail,w,c	;volatile
  4731  0017F0  0D01               	mullw	1
  4732  0017F2  0E85               	movlw	low _eusart1TxBuffer
  4733  0017F4  24F3               	addwf	prodl,w,c
  4734  0017F6  6ED9               	movwf	fsr2l,c
  4735  0017F8  0E00               	movlw	high _eusart1TxBuffer
  4736  0017FA  20F4               	addwfc	prodh,w,c
  4737  0017FC  6EDA               	movwf	fsr2h,c
  4738  0017FE  50DF               	movf	indf2,w,c
  4739  001800  6EAD               	movwf	4013,c	;volatile
  4740  001802  2A3C               	incf	_eusart1TxTail,f,c	;volatile
  4741                           
  4742                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  4743  001804  0E07               	movlw	7
  4744  001806  643C               	cpfsgt	_eusart1TxTail,c	;volatile
  4745  001808  D002               	goto	i2l632
  4746                           
  4747                           ;eusart1.c: 180: {
  4748                           ;eusart1.c: 181: eusart1TxTail = 0;
  4749  00180A  0E00               	movlw	0
  4750  00180C  6E3C               	movwf	_eusart1TxTail,c	;volatile
  4751  00180E                     i2l632:
  4752                           
  4753                           ;eusart1.c: 182: }
  4754                           ;eusart1.c: 183: eusart1TxBufferRemaining++;
  4755  00180E  2A46               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  4756                           
  4757                           ;eusart1.c: 184: }
  4758  001810  0012               	return	
  4759  001812                     i2l631:
  4760                           
  4761                           ;eusart1.c: 185: else
  4762                           ;eusart1.c: 186: {
  4763                           ;eusart1.c: 187: PIE1bits.TX1IE = 0;
  4764  001812  989D               	bcf	3997,4,c	;volatile
  4765  001814  0012               	return	
  4766  001816                     __end_of_EUSART1_Transmit_ISR:
  4767                           	opt stack 0
  4768                           tosu	equ	0xFFF
  4769                           tosh	equ	0xFFE
  4770                           tosl	equ	0xFFD
  4771                           pclatu	equ	0xFFB
  4772                           pclath	equ	0xFFA
  4773                           tblptru	equ	0xFF8
  4774                           tblptrh	equ	0xFF7
  4775                           tblptrl	equ	0xFF6
  4776                           tablat	equ	0xFF5
  4777                           prodh	equ	0xFF4
  4778                           prodl	equ	0xFF3
  4779                           intcon	equ	0xFF2
  4780                           intcon2	equ	0xFF1
  4781                           indf0	equ	0xFEF
  4782                           postinc0	equ	0xFEE
  4783                           fsr0h	equ	0xFEA
  4784                           fsr0l	equ	0xFE9
  4785                           wreg	equ	0xFE8
  4786                           fsr1h	equ	0xFE2
  4787                           fsr1l	equ	0xFE1
  4788                           indf2	equ	0xFDF
  4789                           postinc2	equ	0xFDE
  4790                           postdec2	equ	0xFDD
  4791                           plusw2	equ	0xFDB
  4792                           fsr2h	equ	0xFDA
  4793                           fsr2l	equ	0xFD9
  4794                           status	equ	0xFD8
  4795                           
  4796 ;; *************** function _EUSART1_Receive_ISR *****************
  4797 ;; Defined at:
  4798 ;;		line 191 in file "mcc_generated_files/eusart1.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_EUSART1_Initialize
  4822 ;;		_INTERRUPT_InterruptManager
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text33
  4827  001816                     __ptext33:
  4828                           	opt stack 0
  4829  001816                     _EUSART1_Receive_ISR:
  4830                           	opt stack 25
  4831                           
  4832                           ;eusart1.c: 194: if(1 == RCSTA1bits.OERR)
  4833                           
  4834                           ;incstack = 0
  4835  001816  A2AB               	btfss	4011,1,c	;volatile
  4836  001818  D002               	goto	i2l637
  4837                           
  4838                           ;eusart1.c: 195: {
  4839                           ;eusart1.c: 198: RCSTA1bits.CREN = 0;
  4840  00181A  98AB               	bcf	4011,4,c	;volatile
  4841                           
  4842                           ;eusart1.c: 199: RCSTA1bits.CREN = 1;
  4843  00181C  88AB               	bsf	4011,4,c	;volatile
  4844  00181E                     i2l637:
  4845                           
  4846                           ;eusart1.c: 200: }
  4847                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4848  00181E  503B               	movf	_eusart1RxHead,w,c	;volatile
  4849  001820  0D01               	mullw	1
  4850  001822  0E7D               	movlw	low _eusart1RxBuffer
  4851  001824  24F3               	addwf	prodl,w,c
  4852  001826  6ED9               	movwf	fsr2l,c
  4853  001828  0E00               	movlw	high _eusart1RxBuffer
  4854  00182A  20F4               	addwfc	prodh,w,c
  4855  00182C  6EDA               	movwf	fsr2h,c
  4856  00182E  CFAE FFDF          	movff	4014,indf2	;volatile
  4857  001832  2A3B               	incf	_eusart1RxHead,f,c	;volatile
  4858                           
  4859                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4860  001834  0E07               	movlw	7
  4861  001836  643B               	cpfsgt	_eusart1RxHead,c	;volatile
  4862  001838  D002               	goto	i2l638
  4863                           
  4864                           ;eusart1.c: 205: {
  4865                           ;eusart1.c: 207: eusart1RxHead = 0;
  4866  00183A  0E00               	movlw	0
  4867  00183C  6E3B               	movwf	_eusart1RxHead,c	;volatile
  4868  00183E                     i2l638:
  4869                           
  4870                           ;eusart1.c: 208: }
  4871                           ;eusart1.c: 209: eusart1RxCount++;
  4872  00183E  2A39               	incf	_eusart1RxCount,f,c	;volatile
  4873  001840  0012               	return		;funcret
  4874  001842                     __end_of_EUSART1_Receive_ISR:
  4875                           	opt stack 0
  4876                           tosu	equ	0xFFF
  4877                           tosh	equ	0xFFE
  4878                           tosl	equ	0xFFD
  4879                           pclatu	equ	0xFFB
  4880                           pclath	equ	0xFFA
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           prodh	equ	0xFF4
  4886                           prodl	equ	0xFF3
  4887                           intcon	equ	0xFF2
  4888                           intcon2	equ	0xFF1
  4889                           indf0	equ	0xFEF
  4890                           postinc0	equ	0xFEE
  4891                           fsr0h	equ	0xFEA
  4892                           fsr0l	equ	0xFE9
  4893                           wreg	equ	0xFE8
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           indf2	equ	0xFDF
  4897                           postinc2	equ	0xFDE
  4898                           postdec2	equ	0xFDD
  4899                           plusw2	equ	0xFDB
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           tosu	equ	0xFFF
  4904                           tosh	equ	0xFFE
  4905                           tosl	equ	0xFFD
  4906                           pclatu	equ	0xFFB
  4907                           pclath	equ	0xFFA
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           intcon2	equ	0xFF1
  4916                           indf0	equ	0xFEF
  4917                           postinc0	equ	0xFEE
  4918                           fsr0h	equ	0xFEA
  4919                           fsr0l	equ	0xFE9
  4920                           wreg	equ	0xFE8
  4921                           fsr1h	equ	0xFE2
  4922                           fsr1l	equ	0xFE1
  4923                           indf2	equ	0xFDF
  4924                           postinc2	equ	0xFDE
  4925                           postdec2	equ	0xFDD
  4926                           plusw2	equ	0xFDB
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           status	equ	0xFD8
  4930                           
  4931                           	psect	text34
  4932  000000                     __ptext34:
  4933                           	opt stack 0
  4934                           tosu	equ	0xFFF
  4935                           tosh	equ	0xFFE
  4936                           tosl	equ	0xFFD
  4937                           pclatu	equ	0xFFB
  4938                           pclath	equ	0xFFA
  4939                           tblptru	equ	0xFF8
  4940                           tblptrh	equ	0xFF7
  4941                           tblptrl	equ	0xFF6
  4942                           tablat	equ	0xFF5
  4943                           prodh	equ	0xFF4
  4944                           prodl	equ	0xFF3
  4945                           intcon	equ	0xFF2
  4946                           intcon2	equ	0xFF1
  4947                           indf0	equ	0xFEF
  4948                           postinc0	equ	0xFEE
  4949                           fsr0h	equ	0xFEA
  4950                           fsr0l	equ	0xFE9
  4951                           wreg	equ	0xFE8
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           postdec2	equ	0xFDD
  4957                           plusw2	equ	0xFDB
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962                           	psect	rparam
  4963  0000                     tosu	equ	0xFFF
  4964                           tosh	equ	0xFFE
  4965                           tosl	equ	0xFFD
  4966                           pclatu	equ	0xFFB
  4967                           pclath	equ	0xFFA
  4968                           tblptru	equ	0xFF8
  4969                           tblptrh	equ	0xFF7
  4970                           tblptrl	equ	0xFF6
  4971                           tablat	equ	0xFF5
  4972                           prodh	equ	0xFF4
  4973                           prodl	equ	0xFF3
  4974                           intcon	equ	0xFF2
  4975                           intcon2	equ	0xFF1
  4976                           indf0	equ	0xFEF
  4977                           postinc0	equ	0xFEE
  4978                           fsr0h	equ	0xFEA
  4979                           fsr0l	equ	0xFE9
  4980                           wreg	equ	0xFE8
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           indf2	equ	0xFDF
  4984                           postinc2	equ	0xFDE
  4985                           postdec2	equ	0xFDD
  4986                           plusw2	equ	0xFDB
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991                           	psect	temp
  4992  000048                     btemp:
  4993                           	opt stack 0
  4994  000048                     	ds	1
  4995  0000                     int$flags	set	btemp
  4996  0000                     wtemp6	set	btemp+1
  4997                           tosu	equ	0xFFF
  4998                           tosh	equ	0xFFE
  4999                           tosl	equ	0xFFD
  5000                           pclatu	equ	0xFFB
  5001                           pclath	equ	0xFFA
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           intcon2	equ	0xFF1
  5010                           indf0	equ	0xFEF
  5011                           postinc0	equ	0xFEE
  5012                           fsr0h	equ	0xFEA
  5013                           fsr0l	equ	0xFE9
  5014                           wreg	equ	0xFE8
  5015                           fsr1h	equ	0xFE2
  5016                           fsr1l	equ	0xFE1
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           plusw2	equ	0xFDB
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8


Data Sizes:
    Strings     27
    Constant    0
    Data        3
    BSS         91
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      71
    BANK0           160     22      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_tr_queue.pTrFlag	PTR enum E15702 size(2) Largest target is 0
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[8]), 

    mccReceiveI2C@dataToSend	PTR volatile unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    mccSendI2C@dataToSend	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    main@readData	PTR volatile unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    main@dataMCC	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    I2C_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), 

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_object.pTrTail.pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@pflag	PTR enum E15702 size(2) Largest target is 1
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), 

    I2C_MasterRead@pflag	PTR enum E15702 size(2) Largest target is 1
		 -> mccReceiveI2C@sendFlag(BANK0[1]), 

    I2C_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    F15814.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_MasterWrite@pflag	PTR enum E15702 size(2) Largest target is 1
		 -> mccSendI2C@sendFlag(BANK0[1]), 

    I2C_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    F15809.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    S1121$pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    p_i2c_current.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    S1133$pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    p_i2c_current.pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    S1133$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S1144$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    S1144$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_mccReceiveI2C
    _main->_mccSendI2C
    _I2C_MasterWrite->_I2C_MasterWriteTRBBuild
    _I2C_MasterRead->_I2C_MasterReadTRBBuild
    _I2C_MasterTRBInsert->_I2C_WaitForLastPacketToComplete
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_ISR
    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    _main->_mccReceiveI2C
    _main->_mccSendI2C
    _mccSendI2C->_I2C_MasterWrite
    _mccReceiveI2C->_I2C_MasterRead

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    5588
                                             11 BANK0     11    11      0
                  _SYSTEM_Initialize
                      _mccReceiveI2C
                         _mccSendI2C
 ---------------------------------------------------------------------------------
 (1) _mccSendI2C                                           8     4      4    2551
                                             32 COMRAM     4     0      4
                                              7 BANK0      4     4      0
                    _I2C_MasterWrite
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      7     0      7    1644
                                              0 BANK0      7     0      7
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWriteTRBBuild                              9     2      7     546
                                             23 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (1) _mccReceiveI2C                                        8     4      4    2433
                                             32 COMRAM     4     0      4
                                              7 BANK0      4     4      0
                     _I2C_MasterRead
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     310
                                             23 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterRead                                       7     0      7    1675
                                              0 BANK0      7     0      7
             _I2C_MasterReadTRBBuild
                _I2C_MasterTRBInsert
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterTRBInsert                                  6     2      4     583
                                             25 COMRAM     6     2      4
    _I2C_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (4) _I2C_WaitForLastPacketToComplete                      2     2      0      37
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterReadTRBBuild                               9     2      7     577
                                             23 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                    _ECAN_Initialize
                 _EUSART1_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _PWM5_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             25 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     242
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          18    18      0     271
                                              5 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _I2C_BusCollisionISR
                            _I2C_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              2     2      0      31
                                              3 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C_Stop                                             3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _PWM5_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _mccReceiveI2C
     _I2C_MasterRead
       _I2C_MasterReadTRBBuild
       _I2C_MasterTRBInsert
         _I2C_WaitForLastPacketToComplete
       _strlen (ARG)
     _strlen
   _mccSendI2C
     _I2C_MasterWrite
       _I2C_MasterTRBInsert
         _I2C_WaitForLastPacketToComplete
       _I2C_MasterWriteTRBBuild
       _strlen (ARG)
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _I2C_BusCollisionISR *
   _I2C_ISR *
     _I2C_FunctionComplete
     _I2C_Stop
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      5A       5       56.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      47       1       75.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1       6        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 26 21:56:38 2018

                     _eusart1TxBufferRemaining 0046                                ??_mccReceiveI2C 00A3  
                        I2C_ISR@i2c_bytes_left 003F                       __size_of_ECAN_Initialize 00B6  
                                  __CFG_BORV$3 000000                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                        ?_I2C_MasterReadTRBBuild 0018  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                          l234 126E                                            l237 1312  
                                          l520 16C2                                            l513 1678  
                                          l532 14D8                                            l533 14C4  
                                          l526 18A0                                            l527 18AE  
                                          l535 14E4                                            l812 11C6  
                                          l814 11F6                                            l823 1348  
                                          l815 1240                                            l836 13E8  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                 __CFG_CPD$OFF 000000                                __end_of_I2C_ISR 11A8  
                              _timer1ReloadVal 0044                                _TMR2_Initialize 1920  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                     _TXSTA1bits 000FAC  
                                  main@dataMCC 00AD                                           l1392 1722  
                                         l1393 171E                                           l3280 11BE  
                                         l2900 14E4                                           l2894 14C4  
                                         STR_1 0F14                                           STR_2 0F01  
                                         STR_3 0F0C                                           _LATA 000F89  
                                         u2150 11DE                                           _LATB 000F8A  
                                         _LATC 000F8B                         ??_I2C_FunctionComplete 0001  
                                         u2187 137E                                           u2197 141E  
                                         u1910 132E                                           u1940 1364  
                                         u1916 1330                                           u1960 13CE  
                                         u1946 1366                                           u1990 1404  
                                         u1966 13D0                                           u1996 1406  
                                         _TMR2 000FCC                                           _WPUB 000F5B  
                                         _data 0036                                           _main 11A8  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 0048                               __end_of_I2C_Stop 1554  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FA                                  __CFG_IESO$OFF 000000  
                              _PWM5_Initialize 18EA                     ??_TMR1_SetInterruptHandler 001A  
                                __CFG_MCLRE$ON 000000                                   ___param_bank 000000  
               __end_of_I2C_MasterReadTRBBuild 15A4                        __end_of_PWM2_Initialize 190E  
                   I2C_MasterReadTRBBuild@ptrb 0018                 __size_of_OSCILLATOR_Initialize 0012  
                             ?_I2C_MasterWrite 009C                  __end_of_OSCILLATOR_Initialize 1920  
                                        ?_main 0001                                          _T1CON 000FCD  
                                _i2c_trb_count 0040                                          _T2CON 000FCA  
                                        i2l502 18E4                                          i2l350 0062  
                                        i2l352 006E                                          i2l354 0086  
                                        i2l460 1162                                          i2l356 00A4  
                                        i2l461 0F6E                                          i2l470 0FFE  
                                        i2l358 00AE                                          i2l631 1812  
                                        i2l463 0FB8                                          i2l632 180E  
                                        i2l472 1004                                          i2l464 0FC8  
                                        i2l481 1088                                          i2l473 1012  
                                        i2l490 10EC                                          i2l466 0FD0  
                                        i2l491 10FC                                          i2l483 108E  
                                        i2l475 1040                                          i2l467 0FD8  
                                        i2l484 109E                                          i2l468 0FE6  
                                        i2l637 181E                                          i2l493 1104  
                                        i2l477 107A                                          i2l638 183E  
                                        i2l494 110C                                          i2l486 10C2  
                                        i2l495 1146                                          i2l487 10BA  
                                        i2l496 114C                                          i2l497 1150  
                                        i2l499 1158                                          i2l684 18C8  
                                 main@readData 00AF                                          _TMR1H 000FCF  
                                        _TMR1L 000FCE                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                         _EUSART1_Transmit_ISR 17E8                                 __CFG_EBTR0$OFF 000000  
                               __CFG_FCMEN$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                             __end_of_TMR1_ISR 17E8                                          _State 0038  
                                 main@sendFlag 00AC                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                                          main@w 00B1  
                      __end_of_TMR1_Initialize 178C                                          pclath 000FFA  
                                        tablat 000FF5                                          plusw2 000FDB  
                                        status 000FD8                                          wtemp6 0049  
                              _TMR1_WriteTimer 18B6                       I2C_MasterTRBInsert@count 001F  
                     I2C_MasterTRBInsert@pflag 001C                                     _i2c_object 0025  
                              __initialization 15A4                     __end_of_EUSART1_Initialize 163C  
                                 __end_of_main 126A                                      ??_I2C_ISR 0004  
                      __end_of_TMR2_Initialize 1930                    ?_INTERRUPT_InterruptManager 0001  
                                       ??_main 00A7                                  __activetblptr 000003  
                          _I2C_MasterTRBInsert 1460                    I2C_MasterReadTRBBuild@pdata 001A  
                               __CFG_RETEN$OFF 000000                          ?_EUSART1_Transmit_ISR 0001  
                            ??_ECAN_Initialize 0018                       ?_I2C_MasterWriteTRBBuild 0018  
                                       _CANCON 000F6F                                         _CCPR2H 000F52  
                                       _CCPR2L 000F51                                         _CCPR5H 000F49  
                                       _CCPR5L 000F48                                         _ANCON0 000F5D  
                                       _ANCON1 000F5C                                         _CIOCON 000F70  
                                       _T1GCON 000FAA                        TMR1_WriteTimer@timerVal 0001  
                      __end_of_PWM5_Initialize 18FC                                __CFG_BBSIZ$BB2K 000000  
                                       i2l3074 0FB8                                 __CFG_WDTEN$OFF 000000  
                                       _RCREG1 000FAE                                         _RCSTA1 000FAB  
                                       _OSCCON 000FD3                                         _RXB0D0 000F66  
                                       _RXB0D1 000F67                                         _RXB0D2 000F68  
                                       _RXB0D3 000F69                                         _RXB0D4 000F6A  
                                       _RXB1D0 000F36                                         _RXB0D5 000F6B  
                                       _RXB1D1 000F37                                         _RXB0D6 000F6C  
                                       _RXB1D2 000F38                                         _RXB0D7 000F6D  
                                       _RXB1D3 000F39                                         _RXB1D4 000F3A  
                                       _RXB1D5 000F3B                                         _RXB1D6 000F3C  
                                       _RXB1D7 000F3D                                         _SPBRG1 000FAF  
                                       _TXB0D0 000F26                                         _TXB0D1 000F27  
                                       _TXB0D2 000F28                                         _TXB0D3 000F29  
                                       _TXB0D4 000F2A                                         _TXB1D0 000F16  
                                       _TXB0D5 000F2B                                         _TXB1D1 000F17  
                                       _TXB0D6 000F2C                                         _TXB1D2 000F18  
                                       _TXB0D7 000F2D                                         _TXB1D3 000F19  
                                       _TXB1D4 000F1A                                         _TXB2D0 000F06  
                                       _TXB1D5 000F1B                                         _TXB2D1 000F07  
                                       _TXB1D6 000F1C                                         _TXB2D2 000F08  
                                       _TXB1D7 000F1D                                         _TXB2D3 000F09  
                                       _TXB2D4 000F0A                                         _TXB2D5 000F0B  
                                       _TXB2D6 000F0C                                         _TXB2D7 000F0D  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                                       _TXREG1 000FAD                           ?_I2C_MasterTRBInsert 001A  
                                       _TXSTA1 000FAC                                 __CFG_XINST$OFF 000000  
         __end_of_TMR1_DefaultInterruptHandler 195A          __size_of_TMR1_DefaultInterruptHandler 0002  
                 _TMR1_DefaultInterruptHandler 1958                                 __CFG_STVREN$ON 000000  
                                       _length 0047                  I2C_MasterReadTRBBuild@address 001D  
                             ?_PWM2_Initialize 0001                                         clear_0 15D4  
                                       clear_1 15E0                        __size_of_I2C_MasterRead 004A  
                                       _result 0075                        __size_of_I2C_Initialize 002E  
                                       _strlen 1714                                   __pdataCOMRAM 0047  
                                    ?_I2C_Stop 0001                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8       TMR1_SetInterruptHandler@InterruptHandler 0018  
                      __end_of_TMR1_WriteTimer 18D2                                _eusart1RxBuffer 007D  
                __size_of_INTERRUPT_Initialize 0004                                _eusart1TxBuffer 0085  
                             ?_TMR1_Initialize 0001                              _SYSTEM_Initialize 1842  
                                   __accesstop 0060                        __end_of__initialization 15E6  
                                main@sync_mode 00A9                          ??_I2C_MasterTRBInsert 001E  
         I2C_WaitForLastPacketToComplete@count 0018                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                                 __pcstackCOMRAM 0001  
                                 __pidataBANK0 1956                            ??_SYSTEM_Initialize 001C  
                                    ?_TMR1_ISR 0001                  ?_TMR1_DefaultInterruptHandler 0001  
                             ?_TMR2_Initialize 0001                __end_of_I2C_MasterWriteTRBBuild 1714  
                       ??_EUSART1_Transmit_ISR 0001                                     ??_I2C_Stop 0001  
                  __end_of_EUSART1_Receive_ISR 1842                      __end_of_SYSTEM_Initialize 186C  
                                _eusart1RxHead 003B                                  _eusart1TxHead 003D  
                                _eusart1RxTail 003A                                     __pbssBANK0 0060  
                                _eusart1TxTail 003C              _EUSART1_TxDefaultInterruptHandler 00B6  
              ??_EUSART1_SetRxInterruptHandler 001A                               ?_PWM5_Initialize 0001  
                              __CFG_PLLCFG$OFF 000000                   I2C_MasterReadTRBBuild@length 001C  
                                   __pnvCOMRAM 0044                   __size_of_I2C_BusCollisionISR 0004  
                            mccSendI2C@address 0023                                     ??_TMR1_ISR 0003  
                                      _CCP2CON 000F50                                        _CCP5CON 000F47  
                                      _I2C_ISR 0F1E                                        _ECANCON 000F72  
                                      _CANSTAT 000F6E                        mccReceiveI2C@dataToSend 0021  
                        __end_of_mccReceiveI2C 1460                                     _mccSendI2C 1320  
                                      _BRGCON1 000E43                                        _BRGCON2 000E44  
                                      _BRGCON3 000E45                    I2C_MasterWriteTRBBuild@ptrb 0018  
                                      ?_strlen 0018                              mccSendI2C@timeOut 00A4  
                             __CFG_CANMX$PORTB 000000                                        _REFOCON 000F9A  
                                      _OSCCON2 000FD2                                        _RXB0DLC 000F65  
                                      _RXB1DLC 000F35                                        _OSCTUNE 000F9B  
                      I2C_Stop@completion_code 0003                                        _SPBRGH1 000F7D  
                                      _TXB0DLC 000F25                                        _TXB1DLC 000F15  
                                      _TXB2DLC 000F05                                        _SSPCON1 000FC6  
                                      _SSPSTAT 000FC7                               ?_TMR1_WriteTimer 0001  
                __size_of_I2C_FunctionComplete 0018                                      _I2C_Rflag 0034  
                                    _I2C_Wflag 0035                                __CFG_PWRTEN$OFF 000000  
                                      __Hparam 0000                                        __Lparam 0000  
                              _ECAN_Initialize 126A                                   __psmallconst 0F00  
                                      _address 00B8                                 _I2C_MasterRead 1686  
                                      __pcinit 15A4                                 _I2C_Initialize 178C  
                                      __ramtop 0F00                           mccReceiveI2C@address 0023  
                                      __ptext0 11A8                                        __ptext1 1320  
                                      __ptext2 163C                                        __ptext3 16D0  
                                      __ptext4 13C0                                        __ptext5 1714  
                                      __ptext6 1686                                        __ptext7 1460  
                                      __ptext8 1896                                        __ptext9 1554  
                                      _command 0037                 ??_TMR1_DefaultInterruptHandler 0001  
                              __size_of_strlen 0040                                      _T1CONbits 000FCD  
                        _OSCILLATOR_Initialize 190E                                      _T2CONbits 000FCA  
            __size_of_TMR1_SetInterruptHandler 000A                             _EUSART1_Initialize 15F0  
                     ??_PIN_MANAGER_Initialize 0018                      ?_TMR1_SetInterruptHandler 0018  
                            __CFG_MSSPMSK$MSK7 000000                       __size_of_I2C_MasterWrite 004A  
                         mccReceiveI2C@timeOut 00A4                     __size_of_SYSTEM_Initialize 002A  
                         end_of_initialization 15E6                            ?_EUSART1_Initialize 0001  
                         I2C_MasterRead@length 009E               __size_of_I2C_MasterWriteTRBBuild 0044  
        __end_of_EUSART1_SetRxInterruptHandler 194E         __size_of_EUSART1_SetRxInterruptHandler 000A  
                _EUSART1_SetRxInterruptHandler 1944                                        postdec2 000FDD  
                       __end_of_I2C_MasterRead 16D0                                        postinc0 000FEE  
                                      postinc2 000FDE                         __end_of_I2C_Initialize 17BA  
                        I2C_MasterWrite@length 009E                           ??_EUSART1_Initialize 001A  
                                      strlen@s 0018                                    ?_mccSendI2C 0021  
                           I2C_ISR@i2c_address 0042                               __CFG_FOSC$INTIO2 000000  
                            __size_of_I2C_Stop 0058               I2C_ISR@i2c_10bit_address_restart 003E  
                      __end_of_ECAN_Initialize 1320                       ??_I2C_MasterReadTRBBuild 001F  
                            _p_i2c_trb_current 0032                                ?_I2C_MasterRead 009C  
                 __end_of_INTERRUPT_Initialize 1952                                ?_I2C_Initialize 0001  
                                __pidataCOMRAM 195A                                   _i2c_tr_queue 0097  
                            __size_of_TMR1_ISR 002E                         ?_OSCILLATOR_Initialize 0001  
                          _I2C_BusCollisionISR 1952                                 __end_of_strlen 1754  
                          start_initialization 15A4                       __size_of_PWM2_Initialize 0012  
              __size_of_PIN_MANAGER_Initialize 002A                                      _i2c_state 0041  
                  __end_of_I2C_MasterTRBInsert 14FC  EUSART1_SetRxInterruptHandler@interruptHandler 0018  
EUSART1_SetTxInterruptHandler@interruptHandler 0018                              ??_I2C_MasterWrite 0021  
                          __size_of_mccSendI2C 00A0                           ?_I2C_BusCollisionISR 0001  
                     __size_of_TMR1_Initialize 0038                                    _CCPTMRSbits 000F99  
               ?_EUSART1_SetRxInterruptHandler 0018                                    __pdataBANK0 00B8  
                                     ?_I2C_ISR 0001                                      _StartTime 002C  
                                     ??_strlen 001A                                 _eusart1RxCount 0039  
                                  __pbssCOMRAM 0025              _EUSART1_RxDefaultInterruptHandler 00B4  
                __size_of_EUSART1_Transmit_ISR 002E                                  __pcstackBANK0 009C  
                     __size_of_TMR2_Initialize 0010                ??_EUSART1_SetTxInterruptHandler 001A  
                 __size_of_EUSART1_Receive_ISR 002C                        _I2C_MasterWriteTRBBuild 16D0  
                        ??_I2C_BusCollisionISR 0001                                      __pnvBANK0 00B2  
                             ?_ECAN_Initialize 0001                         _PIN_MANAGER_Initialize 186C  
              __size_of_I2C_MasterReadTRBBuild 0050                       __size_of_PWM5_Initialize 0012  
                                    __pintcode 0008               __end_of_TMR1_SetInterruptHandler 193A  
                         mccSendI2C@dataToSend 0021                   __end_of_I2C_FunctionComplete 18EA  
                 ??_INTERRUPT_InterruptManager 0006                                    __smallconst 0F00  
                                     _BAUDCON1 000FA7                                    _COMSTATbits 000F71  
                                     _I2C_Recv 0060                                       _I2C_Stop 14FC  
                           mccSendI2C@sendFlag 00A6                   I2C_MasterWriteTRBBuild@pdata 001A  
                                _p_i2c_current 0030                           _INTERRUPT_Initialize 194E  
                            ??_PWM2_Initialize 0018                                       _LATBbits 000F8A  
                       __size_of_mccReceiveI2C 00A0                                       _PIE1bits 000F9D  
                                     _PIE2bits 000FA0                                       _PIE5bits 000F76  
                          I2C_MasterRead@pdata 009C                       __size_of_TMR1_WriteTimer 001C  
                          I2C_MasterRead@pflag 00A1                                       i2u123_48 17D6  
                                     i2u211_48 0090            __size_of_INTERRUPT_InterruptManager 00F2  
                                     i2u208_48 0078                                       i2u174_40 0F64  
                                     i2u174_47 0F58                                       i2u169_40 154E  
                                     _PIR1bits 000F9E                                       i2u169_47 1542  
                                     i2u187_40 10E4                                       _PIR2bits 000FA1  
                                     i2u187_47 10DA                                       i2u189_40 1132  
                                     i2u189_47 1126                                       _PIR5bits 000F77  
                                     _RXB0EIDH 000F63                                       _RXB0EIDL 000F64  
                                     _RXB1EIDH 000F33                                       _RXB1EIDL 000F34  
                                     _RCONbits 000FD0                                       _RXB0SIDH 000F61  
                                     _RXB0SIDL 000F62                                       _RXB1SIDH 000F31  
                                     _RXF0EIDH 000EE2                                       _RXB1SIDL 000F32  
                                     _RXF0EIDL 000EE3                                       _RXF1EIDH 000EE6  
                                     _RXF1EIDL 000EE7                                       _RXF2EIDH 000EEA  
                                     _RXF2EIDL 000EEB                           I2C_MasterWrite@pdata 009C  
                                     _RXF3EIDH 000EEE                                       _RXF3EIDL 000EEF  
                                     _RXF4EIDH 000EF2                           I2C_MasterWrite@pflag 00A1  
                                     _RXF4EIDL 000EF3                                       _RXF5EIDH 000EF6  
                                     _RXF5EIDL 000EF7                                       _RXF0SIDH 000EE0  
                                     _RXF0SIDL 000EE1                                       _TXB0EIDH 000F23  
                                     _RXF1SIDH 000EE4                                       _TXB0EIDL 000F24  
                                     _RXF1SIDL 000EE5                                       _TXB1EIDH 000F13  
                                     _RXF2SIDH 000EE8                                       _TXB1EIDL 000F14  
                                     _RXF2SIDL 000EE9                                       _TXB2EIDH 000F03  
                                     _RXF3SIDH 000EEC                                       _TXB2EIDL 000F04  
                                     _RXF3SIDL 000EED                                       _RXF4SIDH 000EF0  
                                     _RXF4SIDL 000EF1                                       _RXF5SIDH 000EF4  
                                     _RXF5SIDL 000EF5                                       _TMR1_ISR 17BA  
                                     _RXM0EIDH 000EFA                                       _RXM0EIDL 000EFB  
                                     _TXB0SIDH 000F21                                       _RXM1EIDH 000EFE  
                                     _TXB0SIDL 000F22                                       _RXM1EIDL 000EFF  
                          I2C_ISR@pi2c_buf_ptr 002E                                       _TXB1SIDH 000F11  
                                     _TXB1SIDL 000F12                                       _TXB2SIDH 000F01  
                                     _TXB2SIDL 000F02                                       _RXM0SIDH 000EF8  
                                     _RXM0SIDL 000EF9                                       _RXM1SIDH 000EFC  
                                     _RXM1SIDL 000EFD                               __size_of_I2C_ISR 028A  
                                 ??_mccSendI2C 00A3                              ??_TMR1_Initialize 001A  
                             __CFG_SOSCSEL$DIG 000000                         _I2C_MasterReadTRBBuild 1554  
                                  _INTCON2bits 000FF1                          ?_INTERRUPT_Initialize 0001  
                    ??_I2C_MasterWriteTRBBuild 001F                              ??_TMR2_Initialize 0018  
                             ??_I2C_MasterRead 0021                             __end_of_mccSendI2C 13C0  
                             ??_I2C_Initialize 0018          __end_of_EUSART1_SetTxInterruptHandler 1944  
       __size_of_EUSART1_SetTxInterruptHandler 000A                  _EUSART1_SetTxInterruptHandler 193A  
                                     __Hrparam 0000                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                        ??_OSCILLATOR_Initialize 0018  
                  __size_of_EUSART1_Initialize 004C                              ??_PWM5_Initialize 0018  
                     _TMR1_SetInterruptHandler 1930                                  _mccReceiveI2C 13C0  
                        _TMR1_InterruptHandler 00B2                                _I2C_MasterWrite 163C  
                                     __ptext10 1842                                       __ptext11 1920  
                                     __ptext20 15F0                                       __ptext12 1754  
                                     __ptext21 193A                                       __ptext13 1930  
                                   _T1GCONbits 000FAA                                       __ptext30 18D2  
                                     __ptext22 1944                                       __ptext14 18EA  
                                     __ptext31 1952                                       __ptext23 126A  
                                     __ptext15 18FC                                       __ptext32 17E8  
                                     __ptext16 186C                                       __ptext33 1816  
                                     __ptext25 17BA                                       __ptext17 190E  
                                     __ptext34 0000                                       __ptext26 18B6  
                                     __ptext18 194E                                       __ptext27 1958  
                                     __ptext19 178C                                       __ptext28 0F1E  
                                     __ptext29 14FC                   I2C_MasterTRBInsert@ptrb_list 001A  
                                __size_of_main 00C2                           _I2C_FunctionComplete 18D2  
      __end_of_I2C_WaitForLastPacketToComplete 18B6       __size_of_I2C_WaitForLastPacketToComplete 0020  
            ??_I2C_WaitForLastPacketToComplete 0018               ?_I2C_WaitForLastPacketToComplete 0001  
              _I2C_WaitForLastPacketToComplete 1896                          mccReceiveI2C@sendFlag 00A6  
                                     int$flags 0048                                       main@add1 00AB  
           __end_of_INTERRUPT_InterruptManager 00FA                     _INTERRUPT_InterruptManager 0008  
                            ??_TMR1_WriteTimer 0003                                       main@slew 00AA  
                               ?_mccReceiveI2C 0021                            __CFG_INTOSCSEL$HIGH 000000  
                          _EUSART1_Receive_ISR 1816                                    _RXB0CONbits 000F60  
                                  _RXB1CONbits 000F30                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 0018                          I2C_MasterRead@address 009F  
                                     intlevel2 0000                           ?_EUSART1_Receive_ISR 0001  
                        ?_I2C_FunctionComplete 0001                        ?_PIN_MANAGER_Initialize 0001  
                        I2C_MasterRead@trBlock 008D                   __size_of_I2C_MasterTRBInsert 009C  
                                  _TXB0CONbits 000F20                                     _RCSTA1bits 000FAB  
                                  _TXB1CONbits 000F10                   __end_of_EUSART1_Transmit_ISR 1816  
                                  _TXB2CONbits 000F00                         I2C_MasterWrite@address 009F  
                           __CFG_WDTPS$1048576 000000                 ?_EUSART1_SetTxInterruptHandler 0018  
                      __end_of_I2C_MasterWrite 1686                         I2C_MasterWrite@trBlock 0092  
                              _PWM2_Initialize 18FC                                       strlen@cp 001C  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                  __end_of_I2C_BusCollisionISR 1956                          ??_EUSART1_Receive_ISR 0001  
               __end_of_PIN_MANAGER_Initialize 1896                 I2C_MasterWriteTRBBuild@address 001D  
                          __CFG_BORPWR$ZPBORMV 000000                                _TMR1_Initialize 1754  
                I2C_MasterWriteTRBBuild@length 001C  
