

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 26 03:26:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 1.45
    57                           ; Generated 16/11/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K80 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  001926                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for _length
    96  001926  01                 	db	1
    97                           
    98                           	psect	idataBANK0
    99  001922                     __pidataBANK0:
   100                           	opt stack 0
   101                           
   102                           ;initializer for _address
   103  001922  0005               	dw	5
   104                           
   105                           	psect	nvCOMRAM
   106  000044                     __pnvCOMRAM:
   107                           	opt stack 0
   108  000044                     _timer1ReloadVal:
   109                           	opt stack 0
   110  000044                     	ds	2
   111  000046                     _eusart1TxBufferRemaining:
   112                           	opt stack 0
   113  000046                     	ds	1
   114                           
   115                           	psect	nvBANK0
   116  0000B0                     __pnvBANK0:
   117                           	opt stack 0
   118  0000B0                     _TMR1_InterruptHandler:
   119                           	opt stack 0
   120  0000B0                     	ds	2
   121  0000B2                     _EUSART1_RxDefaultInterruptHandler:
   122                           	opt stack 0
   123  0000B2                     	ds	2
   124  0000B4                     _EUSART1_TxDefaultInterruptHandler:
   125                           	opt stack 0
   126  0000B4                     	ds	2
   127  0000                     _BRGCON3	set	3653
   128  0000                     _BRGCON2	set	3652
   129  0000                     _BRGCON1	set	3651
   130  0000                     _RXF5SIDL	set	3829
   131  0000                     _RXF5SIDH	set	3828
   132  0000                     _RXF5EIDL	set	3831
   133  0000                     _RXF5EIDH	set	3830
   134  0000                     _RXF4SIDL	set	3825
   135  0000                     _RXF4SIDH	set	3824
   136  0000                     _RXF4EIDL	set	3827
   137  0000                     _RXF4EIDH	set	3826
   138  0000                     _RXF3SIDL	set	3821
   139  0000                     _RXF3SIDH	set	3820
   140  0000                     _RXF3EIDL	set	3823
   141  0000                     _RXF3EIDH	set	3822
   142  0000                     _RXF2SIDL	set	3817
   143  0000                     _RXF2SIDH	set	3816
   144  0000                     _RXF2EIDL	set	3819
   145  0000                     _RXF2EIDH	set	3818
   146  0000                     _RXF1SIDL	set	3813
   147  0000                     _RXF1SIDH	set	3812
   148  0000                     _RXF1EIDL	set	3815
   149  0000                     _RXF1EIDH	set	3814
   150  0000                     _RXF0SIDL	set	3809
   151  0000                     _RXF0SIDH	set	3808
   152  0000                     _RXF0EIDL	set	3811
   153  0000                     _RXF0EIDH	set	3810
   154  0000                     _RXM1SIDL	set	3837
   155  0000                     _RXM1SIDH	set	3836
   156  0000                     _RXM1EIDL	set	3839
   157  0000                     _RXM1EIDH	set	3838
   158  0000                     _RXM0SIDL	set	3833
   159  0000                     _RXM0SIDH	set	3832
   160  0000                     _RXM0EIDL	set	3835
   161  0000                     _RXM0EIDH	set	3834
   162  0000                     _CCPR5H	set	3913
   163  0000                     _CCPR5L	set	3912
   164  0000                     _CCP5CON	set	3911
   165  0000                     _CCPR2H	set	3922
   166  0000                     _CCPR2L	set	3921
   167  0000                     _CCP2CON	set	3920
   168  0000                     _WPUB	set	3931
   169  0000                     _ANCON1	set	3932
   170  0000                     _ANCON0	set	3933
   171  0000                     _RXB1D7	set	3901
   172  0000                     _RXB1D6	set	3900
   173  0000                     _RXB1D5	set	3899
   174  0000                     _RXB1D4	set	3898
   175  0000                     _RXB1D3	set	3897
   176  0000                     _RXB1D2	set	3896
   177  0000                     _RXB1D1	set	3895
   178  0000                     _RXB1D0	set	3894
   179  0000                     _RXB1DLC	set	3893
   180  0000                     _RXB1SIDH	set	3889
   181  0000                     _RXB1EIDL	set	3892
   182  0000                     _RXB1EIDH	set	3891
   183  0000                     _RXB1SIDL	set	3890
   184  0000                     _RXB1CONbits	set	3888
   185  0000                     _TXB2D7	set	3853
   186  0000                     _TXB2D6	set	3852
   187  0000                     _TXB2D5	set	3851
   188  0000                     _TXB2D4	set	3850
   189  0000                     _TXB2D3	set	3849
   190  0000                     _TXB2D2	set	3848
   191  0000                     _TXB2D1	set	3847
   192  0000                     _TXB2D0	set	3846
   193  0000                     _TXB2DLC	set	3845
   194  0000                     _TXB2SIDL	set	3842
   195  0000                     _TXB2SIDH	set	3841
   196  0000                     _TXB2EIDL	set	3844
   197  0000                     _TXB2EIDH	set	3843
   198  0000                     _TXB2CONbits	set	3840
   199  0000                     _TXB1D7	set	3869
   200  0000                     _TXB1D6	set	3868
   201  0000                     _TXB1D5	set	3867
   202  0000                     _TXB1D4	set	3866
   203  0000                     _TXB1D3	set	3865
   204  0000                     _TXB1D2	set	3864
   205  0000                     _TXB1D1	set	3863
   206  0000                     _TXB1D0	set	3862
   207  0000                     _TXB1DLC	set	3861
   208  0000                     _TXB1SIDL	set	3858
   209  0000                     _TXB1SIDH	set	3857
   210  0000                     _TXB1EIDL	set	3860
   211  0000                     _TXB1EIDH	set	3859
   212  0000                     _TXB1CONbits	set	3856
   213  0000                     _TXB0D7	set	3885
   214  0000                     _TXB0D6	set	3884
   215  0000                     _TXB0D5	set	3883
   216  0000                     _TXB0D4	set	3882
   217  0000                     _TXB0D3	set	3881
   218  0000                     _TXB0D2	set	3880
   219  0000                     _TXB0D1	set	3879
   220  0000                     _TXB0D0	set	3878
   221  0000                     _TXB0DLC	set	3877
   222  0000                     _TXB0SIDL	set	3874
   223  0000                     _TXB0SIDH	set	3873
   224  0000                     _TXB0EIDL	set	3876
   225  0000                     _TXB0EIDH	set	3875
   226  0000                     _TXB0CONbits	set	3872
   227  0000                     _LATBbits	set	3978
   228  0000                     _CCPTMRSbits	set	3993
   229  0000                     _T2CONbits	set	4042
   230  0000                     _T2CON	set	4042
   231  0000                     _TMR2	set	4044
   232  0000                     _PR2	set	4043
   233  0000                     _T1GCONbits	set	4010
   234  0000                     _T1CONbits	set	4045
   235  0000                     _T1CON	set	4045
   236  0000                     _TMR1L	set	4046
   237  0000                     _TMR1H	set	4047
   238  0000                     _T1GCON	set	4010
   239  0000                     _RCREG1	set	4014
   240  0000                     _RCSTA1bits	set	4011
   241  0000                     _TXREG1	set	4013
   242  0000                     _TXSTA1bits	set	4012
   243  0000                     _SPBRGH1	set	3965
   244  0000                     _SPBRG1	set	4015
   245  0000                     _TXSTA1	set	4012
   246  0000                     _RCSTA1	set	4011
   247  0000                     _BAUDCON1	set	4007
   248  0000                     _SSPBUF	set	4041
   249  0000                     _SSPCON2bits	set	4037
   250  0000                     _SSPCON1bits	set	4038
   251  0000                     _SSPADD	set	4040
   252  0000                     _SSPCON1	set	4038
   253  0000                     _SSPSTAT	set	4039
   254  0000                     _REFOCON	set	3994
   255  0000                     _OSCTUNE	set	3995
   256  0000                     _OSCCON2	set	4050
   257  0000                     _OSCCON	set	4051
   258  0000                     _PIR1bits	set	3998
   259  0000                     _PIE1bits	set	3997
   260  0000                     _PIR2bits	set	4001
   261  0000                     _PIE2bits	set	4000
   262  0000                     _RCONbits	set	4048
   263  0000                     _INTCONbits	set	4082
   264  0000                     _INTCON2bits	set	4081
   265  0000                     _TRISC	set	3988
   266  0000                     _TRISB	set	3987
   267  0000                     _TRISA	set	3986
   268  0000                     _LATC	set	3979
   269  0000                     _LATB	set	3978
   270  0000                     _LATA	set	3977
   271  0000                     _COMSTATbits	set	3953
   272  0000                     _RXB0D7	set	3949
   273  0000                     _RXB0D6	set	3948
   274  0000                     _RXB0D5	set	3947
   275  0000                     _RXB0D4	set	3946
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D2	set	3944
   278  0000                     _RXB0D1	set	3943
   279  0000                     _RXB0D0	set	3942
   280  0000                     _RXB0DLC	set	3941
   281  0000                     _RXB0SIDH	set	3937
   282  0000                     _RXB0EIDL	set	3940
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0SIDL	set	3938
   285  0000                     _RXB0CONbits	set	3936
   286  0000                     _PIE5bits	set	3958
   287  0000                     _PIR5bits	set	3959
   288  0000                     _CIOCON	set	3952
   289  0000                     _ECANCON	set	3954
   290  0000                     _CANSTAT	set	3950
   291  0000                     _CANCON	set	3951
   292                           
   293                           	psect	smallconst
   294  000F00                     __psmallconst:
   295                           	opt stack 0
   296  000F00  00                 	db	0
   297  000F01                     STR_2:
   298  000F01  30                 	db	48	;'0'
   299  000F02  31                 	db	49	;'1'
   300  000F03  32                 	db	50	;'2'
   301  000F04  33                 	db	51	;'3'
   302  000F05  34                 	db	52	;'4'
   303  000F06  35                 	db	53	;'5'
   304  000F07  36                 	db	54	;'6'
   305  000F08  37                 	db	55	;'7'
   306  000F09  38                 	db	56	;'8'
   307  000F0A  39                 	db	57	;'9'
   308  000F0B  00                 	db	0
   309  000F0C                     STR_3:
   310  000F0C  57                 	db	87	;'W'
   311  000F0D  6F                 	db	111	;'o'
   312  000F0E  72                 	db	114	;'r'
   313  000F0F  6B                 	db	107	;'k'
   314  000F10  65                 	db	101	;'e'
   315  000F11  64                 	db	100	;'d'
   316  000F12  21                 	db	33
   317  000F13  00                 	db	0
   318  000F14                     STR_1:
   319  000F14  43                 	db	67	;'C'
   320  000F15  75                 	db	117	;'u'
   321  000F16  72                 	db	114	;'r'
   322  000F17  72                 	db	114	;'r'
   323  000F18  65                 	db	101	;'e'
   324  000F19  6E                 	db	110	;'n'
   325  000F1A  74                 	db	116	;'t'
   326  000F1B  00                 	db	0
   327                           
   328                           ; #config settings
   329  000F1C  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           	psect	cinit
   332  001570                     __pcinit:
   333                           	opt stack 0
   334  001570                     start_initialization:
   335                           	opt stack 0
   336  001570                     __initialization:
   337                           	opt stack 0
   338                           
   339                           ; Initialize objects allocated to BANK0 (2 bytes)
   340                           ; load TBLPTR registers with __pidataBANK0
   341  001570  0E22               	movlw	low __pidataBANK0
   342  001572  6EF6               	movwf	tblptrl,c
   343  001574  0E19               	movlw	high __pidataBANK0
   344  001576  6EF7               	movwf	tblptrh,c
   345  001578  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   346  00157A  6EF8               	movwf	tblptru,c
   347  00157C  0009               	tblrd		*+	;fetch initializer
   348  00157E  CFF5 F0B6          	movff	tablat,__pdataBANK0
   349  001582  0009               	tblrd		*+	;fetch initializer
   350  001584  CFF5 F0B7          	movff	tablat,__pdataBANK0+1
   351                           
   352                           ; Initialize objects allocated to COMRAM (1 bytes)
   353                           ; load TBLPTR registers with __pidataCOMRAM
   354  001588  0E26               	movlw	low __pidataCOMRAM
   355  00158A  6EF6               	movwf	tblptrl,c
   356  00158C  0E19               	movlw	high __pidataCOMRAM
   357  00158E  6EF7               	movwf	tblptrh,c
   358  001590  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   359  001592  6EF8               	movwf	tblptru,c
   360  001594  0009               	tblrd		*+	;fetch initializer
   361  001596  CFF5 F047          	movff	tablat,__pdataCOMRAM
   362                           
   363                           ; Clear objects allocated to BANK0 (57 bytes)
   364  00159A  EE00  F060         	lfsr	0,__pbssBANK0
   365  00159E  0E39               	movlw	57
   366  0015A0                     clear_0:
   367  0015A0  6AEE               	clrf	postinc0,c
   368  0015A2  06E8               	decf	wreg,f,c
   369  0015A4  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to COMRAM (34 bytes)
   372  0015A6  EE00  F001         	lfsr	0,__pbssCOMRAM
   373  0015AA  0E22               	movlw	34
   374  0015AC                     clear_1:
   375  0015AC  6AEE               	clrf	postinc0,c
   376  0015AE  06E8               	decf	wreg,f,c
   377  0015B0  E1FD               	bnz	clear_1
   378  0015B2                     end_of_initialization:
   379                           	opt stack 0
   380  0015B2                     __end_of__initialization:
   381                           	opt stack 0
   382  0015B2  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   383  0015B4  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   384  0015B6  0100               	movlb	0
   385  0015B8  EFD4  F008         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           
   393                           	psect	bssCOMRAM
   394  000001                     __pbssCOMRAM:
   395                           	opt stack 0
   396  000001                     _i2c_object:
   397                           	opt stack 0
   398  000001                     	ds	7
   399  000008                     I2C_ISR@pi2c_buf_ptr:
   400                           	opt stack 0
   401  000008                     	ds	2
   402  00000A                     _p_i2c_current:
   403                           	opt stack 0
   404  00000A                     	ds	2
   405  00000C                     _p_i2c_trb_current:
   406                           	opt stack 0
   407  00000C                     	ds	2
   408  00000E                     	ds	1
   409  00000F                     	ds	1
   410  000010                     	ds	1
   411  000011                     	ds	1
   412  000012                     	ds	1
   413  000013                     _eusart1RxCount:
   414                           	opt stack 0
   415  000013                     	ds	1
   416  000014                     _eusart1RxTail:
   417                           	opt stack 0
   418  000014                     	ds	1
   419  000015                     _eusart1RxHead:
   420                           	opt stack 0
   421  000015                     	ds	1
   422  000016                     _eusart1TxTail:
   423                           	opt stack 0
   424  000016                     	ds	1
   425  000017                     _eusart1TxHead:
   426                           	opt stack 0
   427  000017                     	ds	1
   428  000018                     I2C_ISR@i2c_10bit_address_restart:
   429                           	opt stack 0
   430  000018                     	ds	1
   431  000019                     I2C_ISR@i2c_bytes_left:
   432                           	opt stack 0
   433  000019                     	ds	1
   434  00001A                     _i2c_trb_count:
   435                           	opt stack 0
   436  00001A                     	ds	1
   437  00001B                     _i2c_state:
   438                           	opt stack 0
   439  00001B                     	ds	1
   440  00001C                     _i2c_tr_queue:
   441                           	opt stack 0
   442  00001C                     	ds	5
   443  000021                     I2C_ISR@i2c_address:
   444                           	opt stack 0
   445  000021                     	ds	2
   446                           tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           tblptrl	equ	0xFF6
   449                           tablat	equ	0xFF5
   450                           postinc0	equ	0xFEE
   451                           wreg	equ	0xFE8
   452                           
   453                           	psect	dataCOMRAM
   454  000047                     __pdataCOMRAM:
   455                           	opt stack 0
   456  000047                     	ds	1
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           
   464                           	psect	bssBANK0
   465  000060                     __pbssBANK0:
   466                           	opt stack 0
   467  000060                     _I2C_Recv:
   468                           	opt stack 0
   469  000060                     	ds	21
   470  000075                     	ds	8
   471  00007D                     _eusart1RxBuffer:
   472                           	opt stack 0
   473  00007D                     	ds	8
   474  000085                     _eusart1TxBuffer:
   475                           	opt stack 0
   476  000085                     	ds	8
   477  00008D                     	ds	2
   478  00008F                     I2C_MasterRead@trBlock:
   479                           	opt stack 0
   480  00008F                     	ds	5
   481  000094                     I2C_MasterWrite@trBlock:
   482                           	opt stack 0
   483  000094                     	ds	5
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           
   491                           	psect	dataBANK0
   492  0000B6                     __pdataBANK0:
   493                           	opt stack 0
   494  0000B6                     	ds	2
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           
   502                           	psect	cstackBANK0
   503  000099                     __pcstackBANK0:
   504                           	opt stack 0
   505  000099                     I2C_MasterWrite@pdata:
   506                           	opt stack 0
   507  000099                     I2C_MasterRead@pdata:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x0
   511  000099                     	ds	2
   512  00009B                     I2C_MasterWrite@length:
   513                           	opt stack 0
   514  00009B                     I2C_MasterRead@length:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2
   518  00009B                     	ds	1
   519  00009C                     I2C_MasterWrite@address:
   520                           	opt stack 0
   521  00009C                     I2C_MasterRead@address:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x3
   525  00009C                     	ds	2
   526  00009E                     I2C_MasterWrite@pflag:
   527                           	opt stack 0
   528  00009E                     I2C_MasterRead@pflag:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x5
   532  00009E                     	ds	2
   533  0000A0                     mccSendI2C@dataToSend:
   534                           	opt stack 0
   535  0000A0                     mccReceiveI2C@dataToSend:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x7
   539  0000A0                     	ds	2
   540  0000A2                     mccSendI2C@address:
   541                           	opt stack 0
   542  0000A2                     mccReceiveI2C@address:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x9
   546  0000A2                     	ds	2
   547  0000A4                     mccSendI2C@sendFlag:
   548                           	opt stack 0
   549  0000A4                     mccReceiveI2C@sendFlag:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0xB
   553  0000A4                     	ds	1
   554  0000A5                     ??_main:
   555                           
   556                           ; 1 bytes @ 0xC
   557  0000A5                     	ds	2
   558  0000A7                     main@sync_mode:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0xE
   562  0000A7                     	ds	1
   563  0000A8                     main@slew:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0xF
   567  0000A8                     	ds	1
   568  0000A9                     main@add1:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x10
   572  0000A9                     	ds	1
   573  0000AA                     main@sendFlag:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x11
   577  0000AA                     	ds	1
   578  0000AB                     main@dataMCC:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x12
   582  0000AB                     	ds	2
   583  0000AD                     main@readData:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  0000AD                     	ds	2
   588  0000AF                     main@w:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x16
   592  0000AF                     	ds	1
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           
   600                           	psect	cstackCOMRAM
   601  000023                     __pcstackCOMRAM:
   602                           	opt stack 0
   603  000023                     ??_I2C_Stop:
   604  000023                     TMR1_WriteTimer@timerVal:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x0
   608  000023                     	ds	2
   609  000025                     I2C_Stop@completion_code:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x2
   613  000025                     	ds	1
   614  000026                     ??_I2C_ISR:
   615                           
   616                           ; 1 bytes @ 0x3
   617  000026                     	ds	2
   618  000028                     ??_INTERRUPT_InterruptManager:
   619                           
   620                           ; 1 bytes @ 0x5
   621  000028                     	ds	18
   622  00003A                     ??_ECAN_Initialize:
   623  00003A                     ?_strlen:
   624                           	opt stack 0
   625  00003A                     I2C_WaitForLastPacketToComplete@count:
   626                           	opt stack 0
   627  00003A                     I2C_MasterReadTRBBuild@ptrb:
   628                           	opt stack 0
   629  00003A                     I2C_MasterWriteTRBBuild@ptrb:
   630                           	opt stack 0
   631  00003A                     EUSART1_SetTxInterruptHandler@interruptHandler:
   632                           	opt stack 0
   633  00003A                     EUSART1_SetRxInterruptHandler@interruptHandler:
   634                           	opt stack 0
   635  00003A                     TMR1_SetInterruptHandler@InterruptHandler:
   636                           	opt stack 0
   637  00003A                     strlen@s:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x17
   641  00003A                     	ds	2
   642  00003C                     ??_TMR1_Initialize:
   643  00003C                     ??_strlen:
   644  00003C                     I2C_MasterTRBInsert@ptrb_list:
   645                           	opt stack 0
   646  00003C                     I2C_MasterReadTRBBuild@pdata:
   647                           	opt stack 0
   648  00003C                     I2C_MasterWriteTRBBuild@pdata:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x19
   652  00003C                     	ds	2
   653  00003E                     I2C_MasterReadTRBBuild@length:
   654                           	opt stack 0
   655  00003E                     I2C_MasterWriteTRBBuild@length:
   656                           	opt stack 0
   657  00003E                     I2C_MasterTRBInsert@pflag:
   658                           	opt stack 0
   659  00003E                     strlen@cp:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x1B
   663  00003E                     	ds	1
   664  00003F                     I2C_MasterReadTRBBuild@address:
   665                           	opt stack 0
   666  00003F                     I2C_MasterWriteTRBBuild@address:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x1C
   670  00003F                     	ds	1
   671  000040                     
   672                           ; 1 bytes @ 0x1D
   673  000040                     	ds	1
   674  000041                     ??_I2C_MasterWriteTRBBuild:
   675  000041                     ??_I2C_MasterReadTRBBuild:
   676  000041                     I2C_MasterTRBInsert@count:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x1E
   680  000041                     	ds	2
   681  000043                     ??_mccSendI2C:
   682  000043                     ??_mccReceiveI2C:
   683  000043                     
   684                           ; 1 bytes @ 0x20
   685  000043                     	ds	1
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           
   693 ;;
   694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   695 ;;
   696 ;; *************** function _main *****************
   697 ;; Defined at:
   698 ;;		line 65 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  readData        2   20[BANK0 ] PTR volatile unsigned ch
   703 ;;		 -> STR_2(11), 
   704 ;;  dataMCC         2   18[BANK0 ] PTR unsigned char 
   705 ;;		 -> STR_3(8), STR_1(8), 
   706 ;;  w               1   22[BANK0 ] unsigned char 
   707 ;;  sendFlag        1   17[BANK0 ] enum E15711
   708 ;;  add1            1   16[BANK0 ] unsigned char 
   709 ;;  slew            1   15[BANK0 ] unsigned char 
   710 ;;  sync_mode       1   14[BANK0 ] unsigned char 
   711 ;;  length          1    0        unsigned char 
   712 ;;  status          1    0        unsigned char 
   713 ;;  data            1    0        unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;Total ram usage:       11 bytes
   728 ;; Hardware stack levels required when called:    7
   729 ;; This function calls:
   730 ;;		_SYSTEM_Initialize
   731 ;;		_mccReceiveI2C
   732 ;;		_mccSendI2C
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  0011A8                     __ptext0:
   740                           	opt stack 0
   741  0011A8                     _main:
   742                           	opt stack 24
   743                           
   744                           ;main.c: 68: SYSTEM_Initialize();
   745                           
   746                           ;incstack = 0
   747  0011A8  EC07  F00C         	call	_SYSTEM_Initialize	;wreg free
   748                           
   749                           ;main.c: 75: (INTCONbits.GIE = 1);
   750  0011AC  8EF2               	bsf	intcon,7,c	;volatile
   751                           
   752                           ;main.c: 81: (INTCONbits.PEIE = 1);
   753  0011AE  8CF2               	bsf	intcon,6,c	;volatile
   754                           
   755                           ;main.c: 89: unsigned char sync_mode=0, slew=0, add1,w,data,status,length;
   756  0011B0  0E00               	movlw	0
   757  0011B2  0100               	movlb	0	; () banked
   758  0011B4  6FA7               	movwf	main@sync_mode& (0+255),b
   759                           
   760                           ; BSR set to: 0
   761  0011B6  0E00               	movlw	0
   762  0011B8  6FA8               	movwf	main@slew& (0+255),b
   763                           
   764                           ; BSR set to: 0
   765                           ;main.c: 91: for(w=0;w<20;w++)
   766  0011BA  0E00               	movlw	0
   767  0011BC  6FAF               	movwf	main@w& (0+255),b
   768  0011BE                     l3258:
   769                           
   770                           ; BSR set to: 0
   771  0011BE  0E13               	movlw	19
   772  0011C0  65AF               	cpfsgt	main@w& (0+255),b
   773  0011C2  D001               	goto	l812
   774  0011C4  D00C               	goto	u2090
   775  0011C6                     l812:
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 92: I2C_Recv[w]=0;
   779                           
   780                           ; BSR set to: 0
   781  0011C6  51AF               	movf	main@w& (0+255),w,b
   782  0011C8  0D01               	mullw	1
   783  0011CA  0E60               	movlw	low _I2C_Recv
   784  0011CC  24F3               	addwf	prodl,w,c
   785  0011CE  6ED9               	movwf	fsr2l,c
   786  0011D0  0E00               	movlw	high _I2C_Recv
   787  0011D2  20F4               	addwfc	prodh,w,c
   788  0011D4  6EDA               	movwf	fsr2h,c
   789  0011D6  0E00               	movlw	0
   790  0011D8  6EDF               	movwf	indf2,c
   791                           
   792                           ; BSR set to: 0
   793  0011DA  2BAF               	incf	main@w& (0+255),f,b
   794  0011DC  D7F0               	goto	l3258
   795  0011DE                     u2090:
   796                           
   797                           ; BSR set to: 0
   798                           ;main.c: 93: add1=0x8;
   799                           
   800                           ; BSR set to: 0
   801  0011DE  0E08               	movlw	8
   802  0011E0  6FA9               	movwf	main@add1& (0+255),b
   803                           
   804                           ; BSR set to: 0
   805                           ;main.c: 94: uint8_t *dataMCC = "Current";
   806  0011E2  0E14               	movlw	low STR_1
   807  0011E4  6FAB               	movwf	main@dataMCC& (0+255),b
   808  0011E6  0E0F               	movlw	high STR_1
   809  0011E8  6FAC               	movwf	(main@dataMCC+1)& (0+255),b
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 95: volatile uint8_t *readData = "0123456789";
   813  0011EA  0E01               	movlw	low STR_2
   814  0011EC  6FAD               	movwf	main@readData& (0+255),b
   815  0011EE  0E0F               	movlw	high STR_2
   816  0011F0  6FAE               	movwf	(main@readData+1)& (0+255),b
   817                           
   818                           ;main.c: 96: I2C_MESSAGE_STATUS sendFlag = I2C_MESSAGE_PENDING;
   819  0011F2  0E02               	movlw	2
   820  0011F4  6FAA               	movwf	main@sendFlag& (0+255),b
   821  0011F6                     
   822                           ;main.c: 98: {
   823                           ;main.c: 102: if(readData[0] == 'O' && readData[1] == 'K')
   824                           
   825                           ; BSR set to: 0
   826  0011F6  C0AD  FFF6         	movff	main@readData,tblptrl
   827  0011FA  C0AE  FFF7         	movff	main@readData+1,tblptrh
   828  0011FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   829  0011FE  6AF8               	clrf	tblptru,c
   830  001200                     	endif
   831  001200                     	if	0	;tblptru may be non-zero
   832  001200                     	endif
   833  001200  0008               	tblrd		*
   834  001202  50F5               	movf	tablat,w,c
   835  001204  0A4F               	xorlw	79
   836  001206  A4D8               	btfss	status,2,c
   837  001208  D015               	goto	l815
   838  00120A  0E01               	movlw	1
   839  00120C  0100               	movlb	0	; () banked
   840  00120E  25AD               	addwf	main@readData& (0+255),w,b
   841  001210  6FA5               	movwf	??_main& (0+255),b
   842  001212  0E00               	movlw	0
   843  001214  21AE               	addwfc	(main@readData+1)& (0+255),w,b
   844  001216  6FA6               	movwf	(??_main+1)& (0+255),b
   845  001218  C0A5  FFF6         	movff	??_main,tblptrl
   846  00121C  C0A6  FFF7         	movff	??_main+1,tblptrh
   847  001220                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   848  001220  6AF8               	clrf	tblptru,c
   849  001222                     	endif
   850  001222                     	if	0	;tblptru may be non-zero
   851  001222                     	endif
   852  001222  0008               	tblrd		*
   853  001224  50F5               	movf	tablat,w,c
   854  001226  0A4B               	xorlw	75
   855  001228  A4D8               	btfss	status,2,c
   856  00122A  D004               	goto	l815
   857                           
   858                           ; BSR set to: 0
   859                           ;main.c: 103: {
   860                           ;main.c: 104: dataMCC = "Worked!";
   861  00122C  0E0C               	movlw	low STR_3
   862  00122E  6FAB               	movwf	main@dataMCC& (0+255),b
   863  001230  0E0F               	movlw	high STR_3
   864  001232  6FAC               	movwf	(main@dataMCC+1)& (0+255),b
   865  001234                     l815:
   866                           
   867                           ;main.c: 105: }
   868                           ;main.c: 107: mccSendI2C(dataMCC,8);
   869                           
   870                           ; BSR set to: 0
   871  001234  C0AB  F0A0         	movff	main@dataMCC,mccSendI2C@dataToSend
   872  001238  C0AC  F0A1         	movff	main@dataMCC+1,mccSendI2C@dataToSend+1
   873  00123C  0E00               	movlw	0
   874  00123E  0100               	movlb	0	; () banked
   875  001240  6FA3               	movwf	(mccSendI2C@address+1)& (0+255),b
   876  001242  0E08               	movlw	8
   877  001244  6FA2               	movwf	mccSendI2C@address& (0+255),b
   878  001246  ECDA  F009         	call	_mccSendI2C	;wreg free
   879                           
   880                           ;main.c: 109: mccReceiveI2C(readData,8);
   881  00124A  C0AD  F0A0         	movff	main@readData,mccReceiveI2C@dataToSend
   882  00124E  C0AE  F0A1         	movff	main@readData+1,mccReceiveI2C@dataToSend+1
   883  001252  0E00               	movlw	0
   884  001254  0100               	movlb	0	; () banked
   885  001256  6FA3               	movwf	(mccReceiveI2C@address+1)& (0+255),b
   886  001258  0E08               	movlw	8
   887  00125A  6FA2               	movwf	mccReceiveI2C@address& (0+255),b
   888  00125C  EC1F  F00A         	call	_mccReceiveI2C	;wreg free
   889  001260  D7CA               	goto	l814
   890  001262                     __end_of_main:
   891                           	opt stack 0
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           prodh	equ	0xFF4
   897                           prodl	equ	0xFF3
   898                           intcon	equ	0xFF2
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           indf2	equ	0xFDF
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8
   905                           
   906 ;; *************** function _mccSendI2C *****************
   907 ;; Defined at:
   908 ;;		line 115 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  dataToSend      2    7[BANK0 ] PTR unsigned char 
   911 ;;		 -> STR_3(8), STR_1(8), 
   912 ;;  address         2    9[BANK0 ] unsigned int 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  sendFlag        1   11[BANK0 ] enum E15711
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   927 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   928 ;;Total ram usage:        6 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    6
   931 ;; This function calls:
   932 ;;		_I2C_MasterWrite
   933 ;;		_strlen
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text1
   940  0013B4                     __ptext1:
   941                           	opt stack 0
   942  0013B4                     _mccSendI2C:
   943                           	opt stack 24
   944                           
   945                           ;main.c: 117: I2C_MESSAGE_STATUS sendFlag = I2C_MESSAGE_PENDING;
   946                           
   947                           ;incstack = 0
   948  0013B4  0E02               	movlw	2
   949  0013B6  0100               	movlb	0	; () banked
   950  0013B8  6FA4               	movwf	mccSendI2C@sendFlag& (0+255),b
   951                           
   952                           ; BSR set to: 0
   953                           
   954                           ; BSR set to: 0
   955                           
   956                           ;main.c: 118: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
   957  0013BA  A88A               	btfss	3978,4,c	;volatile
   958  0013BC  D002               	goto	u1870
   959  0013BE  0E01               	movlw	1
   960  0013C0  D001               	goto	u1876
   961  0013C2                     u1870:
   962  0013C2  0E00               	movlw	0
   963  0013C4                     u1876:
   964  0013C4  0AFF               	xorlw	255
   965  0013C6  6E43               	movwf	??_mccSendI2C& (0+255),c
   966  0013C8  3A43               	swapf	??_mccSendI2C,f,c
   967  0013CA  508A               	movf	3978,w,c	;volatile
   968  0013CC  1843               	xorwf	??_mccSendI2C,w,c
   969  0013CE  0BEF               	andlw	-17
   970  0013D0  1843               	xorwf	??_mccSendI2C,w,c
   971  0013D2  6E8A               	movwf	3978,c	;volatile
   972  0013D4                     
   973                           ; BSR set to: 0
   974                           ;main.c: 120: {
   975                           ;main.c: 121: if(sendFlag == I2C_MESSAGE_COMPLETE)
   976                           
   977                           ; BSR set to: 0
   978                           
   979                           ;main.c: 119: do
   980                           
   981                           ; BSR set to: 0
   982  0013D4  51A4               	movf	mccSendI2C@sendFlag& (0+255),w,b
   983  0013D6  B4D8               	btfsc	status,2,c
   984  0013D8  0012               	return	
   985                           
   986                           ; BSR set to: 0
   987                           
   988                           ; BSR set to: 0
   989                           
   990                           ;main.c: 124: }
   991                           ;main.c: 125: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
   992                           
   993                           ; BSR set to: 0
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 122: {
   997                           ;main.c: 123: break;
   998  0013DA  A88A               	btfss	3978,4,c	;volatile
   999  0013DC  D002               	goto	u1890
  1000  0013DE  0E01               	movlw	1
  1001  0013E0  D001               	goto	u1896
  1002  0013E2                     u1890:
  1003  0013E2  0E00               	movlw	0
  1004  0013E4                     u1896:
  1005  0013E4  0AFF               	xorlw	255
  1006  0013E6  6E43               	movwf	??_mccSendI2C& (0+255),c
  1007  0013E8  3A43               	swapf	??_mccSendI2C,f,c
  1008  0013EA  508A               	movf	3978,w,c	;volatile
  1009  0013EC  1843               	xorwf	??_mccSendI2C,w,c
  1010  0013EE  0BEF               	andlw	-17
  1011  0013F0  1843               	xorwf	??_mccSendI2C,w,c
  1012  0013F2  6E8A               	movwf	3978,c	;volatile
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 126: _delay((unsigned long)((60)*(4000000/4000.0)));
  1016                           
  1017                           ; BSR set to: 0
  1018  0013F4  0E4E               	movlw	78
  1019  0013F6  6E43               	movwf	??_mccSendI2C& (0+255),c
  1020  0013F8  0EEB               	movlw	235
  1021  0013FA                     u2127:
  1022  0013FA  2EE8               	decfsz	wreg,f,c
  1023  0013FC  D7FE               	bra	u2127
  1024  0013FE  2E43               	decfsz	??_mccSendI2C& (0+255),f,c
  1025  001400  D7FC               	bra	u2127
  1026  001402  F000               	nop	
  1027                           
  1028                           ;main.c: 127: I2C_MasterWrite(dataToSend,strlen(dataToSend),8,&sendFlag);
  1029  001404  C0A0  F099         	movff	mccSendI2C@dataToSend,I2C_MasterWrite@pdata
  1030  001408  C0A1  F09A         	movff	mccSendI2C@dataToSend+1,I2C_MasterWrite@pdata+1
  1031  00140C  C0A0  F03A         	movff	mccSendI2C@dataToSend,strlen@s
  1032  001410  C0A1  F03B         	movff	mccSendI2C@dataToSend+1,strlen@s+1
  1033  001414  EC70  F00B         	call	_strlen	;wreg free
  1034  001418  503A               	movf	?_strlen,w,c
  1035  00141A  0100               	movlb	0	; () banked
  1036  00141C  6F9B               	movwf	I2C_MasterWrite@length& (0+255),b
  1037  00141E  0E00               	movlw	0
  1038  001420  6F9D               	movwf	(I2C_MasterWrite@address+1)& (0+255),b
  1039  001422  0E08               	movlw	8
  1040  001424  6F9C               	movwf	I2C_MasterWrite@address& (0+255),b
  1041  001426  0EA4               	movlw	low mccSendI2C@sendFlag
  1042  001428  6F9E               	movwf	I2C_MasterWrite@pflag& (0+255),b
  1043  00142A  0E00               	movlw	high mccSendI2C@sendFlag
  1044  00142C  6F9F               	movwf	(I2C_MasterWrite@pflag+1)& (0+255),b
  1045  00142E  EC04  F00B         	call	_I2C_MasterWrite	;wreg free
  1046                           
  1047                           ;main.c: 129: }
  1048                           ;main.c: 130: while(sendFlag == I2C_MESSAGE_PENDING);
  1049  001432  0E02               	movlw	2
  1050  001434  0100               	movlb	0	; () banked
  1051  001436  19A4               	xorwf	mccSendI2C@sendFlag& (0+255),w,b
  1052  001438  A4D8               	btfss	status,2,c
  1053  00143A  0012               	return	
  1054  00143C  D7CB               	goto	l822
  1055  00143E                     __end_of_mccSendI2C:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           prodh	equ	0xFF4
  1062                           prodl	equ	0xFF3
  1063                           intcon	equ	0xFF2
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           indf2	equ	0xFDF
  1067                           fsr2h	equ	0xFDA
  1068                           fsr2l	equ	0xFD9
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _I2C_MasterWrite *****************
  1072 ;; Defined at:
  1073 ;;		line 598 in file "mcc_generated_files/i2c.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  1076 ;;		 -> STR_3(8), STR_1(8), 
  1077 ;;  length          1    2[BANK0 ] unsigned char 
  1078 ;;  address         2    3[BANK0 ] unsigned int 
  1079 ;;  pflag           2    5[BANK0 ] PTR enum E15702
  1080 ;;		 -> mccSendI2C@sendFlag(1), 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1092 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;Total ram usage:        7 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    5
  1099 ;; This function calls:
  1100 ;;		_I2C_MasterTRBInsert
  1101 ;;		_I2C_MasterWriteTRBBuild
  1102 ;; This function is called by:
  1103 ;;		_mccSendI2C
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text2
  1108  001608                     __ptext2:
  1109                           	opt stack 0
  1110  001608                     _I2C_MasterWrite:
  1111                           	opt stack 24
  1112                           
  1113                           ;i2c.c: 604: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
  1114                           ;i2c.c: 607: if (i2c_object.trStatus.s.full != 1)
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;incstack = 0
  1118  001608  B005               	btfsc	_i2c_object+4,0,c
  1119  00160A  D01C               	goto	l513
  1120                           
  1121                           ;i2c.c: 608: {
  1122                           ;i2c.c: 609: I2C_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  1123  00160C  0E94               	movlw	low I2C_MasterWrite@trBlock
  1124  00160E  6E3A               	movwf	I2C_MasterWriteTRBBuild@ptrb,c
  1125  001610  0E00               	movlw	high I2C_MasterWrite@trBlock
  1126  001612  6E3B               	movwf	I2C_MasterWriteTRBBuild@ptrb+1,c
  1127  001614  C099  F03C         	movff	I2C_MasterWrite@pdata,I2C_MasterWriteTRBBuild@pdata
  1128  001618  C09A  F03D         	movff	I2C_MasterWrite@pdata+1,I2C_MasterWriteTRBBuild@pdata+1
  1129  00161C  C09B  F03E         	movff	I2C_MasterWrite@length,I2C_MasterWriteTRBBuild@length
  1130  001620  C09C  F03F         	movff	I2C_MasterWrite@address,I2C_MasterWriteTRBBuild@address
  1131  001624  C09D  F040         	movff	I2C_MasterWrite@address+1,I2C_MasterWriteTRBBuild@address+1
  1132  001628  EC4E  F00B         	call	_I2C_MasterWriteTRBBuild	;wreg free
  1133                           
  1134                           ;i2c.c: 610: I2C_MasterTRBInsert(1, &trBlock, pflag);
  1135  00162C  0E94               	movlw	low I2C_MasterWrite@trBlock
  1136  00162E  6E3C               	movwf	I2C_MasterTRBInsert@ptrb_list,c
  1137  001630  0E00               	movlw	high I2C_MasterWrite@trBlock
  1138  001632  6E3D               	movwf	I2C_MasterTRBInsert@ptrb_list+1,c
  1139  001634  C09E  F03E         	movff	I2C_MasterWrite@pflag,I2C_MasterTRBInsert@pflag
  1140  001638  C09F  F03F         	movff	I2C_MasterWrite@pflag+1,I2C_MasterTRBInsert@pflag+1
  1141  00163C  0E01               	movlw	1
  1142  00163E  EC8C  F009         	call	_I2C_MasterTRBInsert
  1143                           
  1144                           ;i2c.c: 611: }
  1145  001642  0012               	return	
  1146  001644                     l513:
  1147                           
  1148                           ;i2c.c: 612: else
  1149                           ;i2c.c: 613: {
  1150                           ;i2c.c: 614: *pflag = I2C_MESSAGE_FAIL;
  1151  001644  C09E  FFD9         	movff	I2C_MasterWrite@pflag,fsr2l
  1152  001648  C09F  FFDA         	movff	I2C_MasterWrite@pflag+1,fsr2h
  1153  00164C  0E01               	movlw	1
  1154  00164E  6EDF               	movwf	indf2,c
  1155  001650  0012               	return	
  1156  001652                     __end_of_I2C_MasterWrite:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           prodh	equ	0xFF4
  1163                           prodl	equ	0xFF3
  1164                           intcon	equ	0xFF2
  1165                           postinc0	equ	0xFEE
  1166                           wreg	equ	0xFE8
  1167                           indf2	equ	0xFDF
  1168                           fsr2h	equ	0xFDA
  1169                           fsr2l	equ	0xFD9
  1170                           status	equ	0xFD8
  1171                           
  1172 ;; *************** function _I2C_MasterWriteTRBBuild *****************
  1173 ;; Defined at:
  1174 ;;		line 726 in file "mcc_generated_files/i2c.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  ptrb            2   23[COMRAM] PTR struct .
  1177 ;;		 -> I2C_MasterWrite@trBlock(5), 
  1178 ;;  pdata           2   25[COMRAM] PTR unsigned char 
  1179 ;;		 -> STR_3(8), STR_1(8), 
  1180 ;;  length          1   27[COMRAM] unsigned char 
  1181 ;;  address         2   28[COMRAM] unsigned int 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1193 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1196 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1197 ;;Total ram usage:        9 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    3
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_I2C_MasterWrite
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text3
  1208  00169C                     __ptext3:
  1209                           	opt stack 0
  1210  00169C                     _I2C_MasterWriteTRBBuild:
  1211                           	opt stack 25
  1212                           
  1213                           ;i2c.c: 732: ptrb->address = address << 1;
  1214                           
  1215                           ;incstack = 0
  1216  00169C  C03F  F041         	movff	I2C_MasterWriteTRBBuild@address,??_I2C_MasterWriteTRBBuild
  1217  0016A0  C040  F042         	movff	I2C_MasterWriteTRBBuild@address+1,??_I2C_MasterWriteTRBBuild+1
  1218  0016A4  90D8               	bcf	status,0,c
  1219  0016A6  3641               	rlcf	??_I2C_MasterWriteTRBBuild,f,c
  1220  0016A8  3642               	rlcf	??_I2C_MasterWriteTRBBuild+1,f,c
  1221  0016AA  C03A  FFD9         	movff	I2C_MasterWriteTRBBuild@ptrb,fsr2l
  1222  0016AE  C03B  FFDA         	movff	I2C_MasterWriteTRBBuild@ptrb+1,fsr2h
  1223  0016B2  C041  FFDE         	movff	??_I2C_MasterWriteTRBBuild,postinc2
  1224  0016B6  C042  FFDD         	movff	??_I2C_MasterWriteTRBBuild+1,postdec2
  1225                           
  1226                           ;i2c.c: 733: ptrb->length = length;
  1227  0016BA  EE20 F002          	lfsr	2,2
  1228  0016BE  503A               	movf	I2C_MasterWriteTRBBuild@ptrb,w,c
  1229  0016C0  26D9               	addwf	fsr2l,f,c
  1230  0016C2  503B               	movf	I2C_MasterWriteTRBBuild@ptrb+1,w,c
  1231  0016C4  22DA               	addwfc	fsr2h,f,c
  1232  0016C6  C03E  FFDF         	movff	I2C_MasterWriteTRBBuild@length,indf2
  1233                           
  1234                           ;i2c.c: 734: ptrb->pbuffer = pdata;
  1235  0016CA  EE20 F003          	lfsr	2,3
  1236  0016CE  503A               	movf	I2C_MasterWriteTRBBuild@ptrb,w,c
  1237  0016D0  26D9               	addwf	fsr2l,f,c
  1238  0016D2  503B               	movf	I2C_MasterWriteTRBBuild@ptrb+1,w,c
  1239  0016D4  22DA               	addwfc	fsr2h,f,c
  1240  0016D6  C03C  FFDE         	movff	I2C_MasterWriteTRBBuild@pdata,postinc2
  1241  0016DA  C03D  FFDD         	movff	I2C_MasterWriteTRBBuild@pdata+1,postdec2
  1242  0016DE  0012               	return		;funcret
  1243  0016E0                     __end_of_I2C_MasterWriteTRBBuild:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           indf2	equ	0xFDF
  1255                           postinc2	equ	0xFDE
  1256                           postdec2	equ	0xFDD
  1257                           fsr2h	equ	0xFDA
  1258                           fsr2l	equ	0xFD9
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _mccReceiveI2C *****************
  1262 ;; Defined at:
  1263 ;;		line 133 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  dataToSend      2    7[BANK0 ] PTR volatile unsigned ch
  1266 ;;		 -> STR_2(11), 
  1267 ;;  address         2    9[BANK0 ] unsigned int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  sendFlag        1   11[BANK0 ] enum E15711
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;Total ram usage:        6 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    6
  1286 ;; This function calls:
  1287 ;;		_I2C_MasterRead
  1288 ;;		_strlen
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text4
  1295  00143E                     __ptext4:
  1296                           	opt stack 0
  1297  00143E                     _mccReceiveI2C:
  1298                           	opt stack 24
  1299                           
  1300                           ;main.c: 135: I2C_MESSAGE_STATUS sendFlag = I2C_MESSAGE_PENDING;
  1301                           
  1302                           ;incstack = 0
  1303  00143E  0E02               	movlw	2
  1304  001440  0100               	movlb	0	; () banked
  1305  001442  6FA4               	movwf	mccReceiveI2C@sendFlag& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           
  1309                           ; BSR set to: 0
  1310                           
  1311                           ;main.c: 136: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
  1312  001444  A88A               	btfss	3978,4,c	;volatile
  1313  001446  D002               	goto	u1910
  1314  001448  0E01               	movlw	1
  1315  00144A  D001               	goto	u1916
  1316  00144C                     u1910:
  1317  00144C  0E00               	movlw	0
  1318  00144E                     u1916:
  1319  00144E  0AFF               	xorlw	255
  1320  001450  6E43               	movwf	??_mccReceiveI2C& (0+255),c
  1321  001452  3A43               	swapf	??_mccReceiveI2C,f,c
  1322  001454  508A               	movf	3978,w,c	;volatile
  1323  001456  1843               	xorwf	??_mccReceiveI2C,w,c
  1324  001458  0BEF               	andlw	-17
  1325  00145A  1843               	xorwf	??_mccReceiveI2C,w,c
  1326  00145C  6E8A               	movwf	3978,c	;volatile
  1327  00145E                     
  1328                           ; BSR set to: 0
  1329                           ;main.c: 139: {
  1330                           ;main.c: 140: if(sendFlag == I2C_MESSAGE_COMPLETE)
  1331                           
  1332                           ; BSR set to: 0
  1333                           
  1334                           ;main.c: 138: do
  1335                           
  1336                           ; BSR set to: 0
  1337  00145E  51A4               	movf	mccReceiveI2C@sendFlag& (0+255),w,b
  1338  001460  B4D8               	btfsc	status,2,c
  1339  001462  0012               	return	
  1340                           
  1341                           ; BSR set to: 0
  1342                           
  1343                           ; BSR set to: 0
  1344                           
  1345                           ;main.c: 143: }
  1346                           ;main.c: 144: do { LATBbits.LATB4 = ~LATBbits.LATB4; } while(0);
  1347                           
  1348                           ; BSR set to: 0
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 141: {
  1352                           ;main.c: 142: break;
  1353  001464  A88A               	btfss	3978,4,c	;volatile
  1354  001466  D002               	goto	u1930
  1355  001468  0E01               	movlw	1
  1356  00146A  D001               	goto	u1936
  1357  00146C                     u1930:
  1358  00146C  0E00               	movlw	0
  1359  00146E                     u1936:
  1360  00146E  0AFF               	xorlw	255
  1361  001470  6E43               	movwf	??_mccReceiveI2C& (0+255),c
  1362  001472  3A43               	swapf	??_mccReceiveI2C,f,c
  1363  001474  508A               	movf	3978,w,c	;volatile
  1364  001476  1843               	xorwf	??_mccReceiveI2C,w,c
  1365  001478  0BEF               	andlw	-17
  1366  00147A  1843               	xorwf	??_mccReceiveI2C,w,c
  1367  00147C  6E8A               	movwf	3978,c	;volatile
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 145: _delay((unsigned long)((60)*(4000000/4000.0)));
  1371                           
  1372                           ; BSR set to: 0
  1373  00147E  0E4E               	movlw	78
  1374  001480  6E43               	movwf	??_mccReceiveI2C& (0+255),c
  1375  001482  0EEB               	movlw	235
  1376  001484                     u2137:
  1377  001484  2EE8               	decfsz	wreg,f,c
  1378  001486  D7FE               	bra	u2137
  1379  001488  2E43               	decfsz	??_mccReceiveI2C& (0+255),f,c
  1380  00148A  D7FC               	bra	u2137
  1381  00148C  F000               	nop	
  1382                           
  1383                           ;main.c: 146: I2C_MasterRead(dataToSend,strlen(dataToSend),address,&sendFlag);
  1384  00148E  C0A0  F099         	movff	mccReceiveI2C@dataToSend,I2C_MasterRead@pdata
  1385  001492  C0A1  F09A         	movff	mccReceiveI2C@dataToSend+1,I2C_MasterRead@pdata+1
  1386  001496  C0A0  F03A         	movff	mccReceiveI2C@dataToSend,strlen@s
  1387  00149A  C0A1  F03B         	movff	mccReceiveI2C@dataToSend+1,strlen@s+1
  1388  00149E  EC70  F00B         	call	_strlen	;wreg free
  1389  0014A2  503A               	movf	?_strlen,w,c
  1390  0014A4  0100               	movlb	0	; () banked
  1391  0014A6  6F9B               	movwf	I2C_MasterRead@length& (0+255),b
  1392  0014A8  C0A2  F09C         	movff	mccReceiveI2C@address,I2C_MasterRead@address
  1393  0014AC  C0A3  F09D         	movff	mccReceiveI2C@address+1,I2C_MasterRead@address+1
  1394  0014B0  0EA4               	movlw	low mccReceiveI2C@sendFlag
  1395  0014B2  6F9E               	movwf	I2C_MasterRead@pflag& (0+255),b
  1396  0014B4  0E00               	movlw	high mccReceiveI2C@sendFlag
  1397  0014B6  6F9F               	movwf	(I2C_MasterRead@pflag+1)& (0+255),b
  1398  0014B8  EC29  F00B         	call	_I2C_MasterRead	;wreg free
  1399                           
  1400                           ;main.c: 147: }
  1401                           ;main.c: 148: while(sendFlag == I2C_MESSAGE_PENDING);
  1402  0014BC  0E02               	movlw	2
  1403  0014BE  0100               	movlb	0	; () banked
  1404  0014C0  19A4               	xorwf	mccReceiveI2C@sendFlag& (0+255),w,b
  1405  0014C2  A4D8               	btfss	status,2,c
  1406  0014C4  0012               	return	
  1407  0014C6  D7CB               	goto	l832
  1408  0014C8                     __end_of_mccReceiveI2C:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           intcon	equ	0xFF2
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           indf2	equ	0xFDF
  1420                           postinc2	equ	0xFDE
  1421                           postdec2	equ	0xFDD
  1422                           fsr2h	equ	0xFDA
  1423                           fsr2l	equ	0xFD9
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _strlen *****************
  1427 ;; Defined at:
  1428 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  s               2   23[COMRAM] PTR const unsigned char 
  1431 ;;		 -> STR_3(8), STR_2(11), STR_1(8), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  cp              2   27[COMRAM] PTR const unsigned char 
  1434 ;;		 -> STR_3(8), STR_2(11), STR_1(8), 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  2   23[COMRAM] unsigned int 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;Total ram usage:        6 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    3
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_mccSendI2C
  1455 ;;		_mccReceiveI2C
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text5
  1460  0016E0                     __ptext5:
  1461                           	opt stack 0
  1462  0016E0                     _strlen:
  1463                           	opt stack 26
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;incstack = 0
  1467  0016E0  C03A  F03E         	movff	strlen@s,strlen@cp
  1468  0016E4  C03B  F03F         	movff	strlen@s+1,strlen@cp+1
  1469  0016E8  D002               	goto	l1386
  1470  0016EA  4A3E               	infsnz	strlen@cp,f,c
  1471  0016EC  2A3F               	incf	strlen@cp+1,f,c
  1472  0016EE                     l1386:
  1473  0016EE  C03E  FFF6         	movff	strlen@cp,tblptrl
  1474  0016F2  C03F  FFF7         	movff	strlen@cp+1,tblptrh
  1475  0016F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1476  0016F6  6AF8               	clrf	tblptru,c
  1477  0016F8                     	endif
  1478  0016F8                     	if	0	;tblptru may be non-zero
  1479  0016F8                     	endif
  1480  0016F8  0008               	tblrd		*
  1481  0016FA  50F5               	movf	tablat,w,c
  1482  0016FC  0900               	iorlw	0
  1483  0016FE  A4D8               	btfss	status,2,c
  1484  001700  D7F4               	goto	l1387
  1485  001702  C03A  F03C         	movff	strlen@s,??_strlen
  1486  001706  C03B  F03D         	movff	strlen@s+1,??_strlen+1
  1487  00170A  1E3C               	comf	??_strlen,f,c
  1488  00170C  1E3D               	comf	??_strlen+1,f,c
  1489  00170E  4A3C               	infsnz	??_strlen,f,c
  1490  001710  2A3D               	incf	??_strlen+1,f,c
  1491  001712  503E               	movf	strlen@cp,w,c
  1492  001714  243C               	addwf	??_strlen,w,c
  1493  001716  6E3A               	movwf	?_strlen,c
  1494  001718  503F               	movf	strlen@cp+1,w,c
  1495  00171A  203D               	addwfc	??_strlen+1,w,c
  1496  00171C  6E3B               	movwf	?_strlen+1,c
  1497  00171E  0012               	return	
  1498  001720                     __end_of_strlen:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           prodh	equ	0xFF4
  1505                           prodl	equ	0xFF3
  1506                           intcon	equ	0xFF2
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           indf2	equ	0xFDF
  1510                           postinc2	equ	0xFDE
  1511                           postdec2	equ	0xFDD
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function _I2C_MasterRead *****************
  1517 ;; Defined at:
  1518 ;;		line 619 in file "mcc_generated_files/i2c.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  1521 ;;		 -> STR_2(11), 
  1522 ;;  length          1    2[BANK0 ] unsigned char 
  1523 ;;  address         2    3[BANK0 ] unsigned int 
  1524 ;;  pflag           2    5[BANK0 ] PTR enum E15702
  1525 ;;		 -> mccReceiveI2C@sendFlag(1), 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1537 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;Total ram usage:        7 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    5
  1544 ;; This function calls:
  1545 ;;		_I2C_MasterReadTRBBuild
  1546 ;;		_I2C_MasterTRBInsert
  1547 ;; This function is called by:
  1548 ;;		_mccReceiveI2C
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text6
  1553  001652                     __ptext6:
  1554                           	opt stack 0
  1555  001652                     _I2C_MasterRead:
  1556                           	opt stack 24
  1557                           
  1558                           ;i2c.c: 625: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
  1559                           ;i2c.c: 629: if (i2c_object.trStatus.s.full != 1)
  1560                           
  1561                           ;incstack = 0
  1562  001652  B005               	btfsc	_i2c_object+4,0,c
  1563  001654  D01C               	goto	l520
  1564                           
  1565                           ;i2c.c: 630: {
  1566                           ;i2c.c: 631: I2C_MasterReadTRBBuild(&trBlock, pdata, length, address);
  1567  001656  0E8F               	movlw	low I2C_MasterRead@trBlock
  1568  001658  6E3A               	movwf	I2C_MasterReadTRBBuild@ptrb,c
  1569  00165A  0E00               	movlw	high I2C_MasterRead@trBlock
  1570  00165C  6E3B               	movwf	I2C_MasterReadTRBBuild@ptrb+1,c
  1571  00165E  C099  F03C         	movff	I2C_MasterRead@pdata,I2C_MasterReadTRBBuild@pdata
  1572  001662  C09A  F03D         	movff	I2C_MasterRead@pdata+1,I2C_MasterReadTRBBuild@pdata+1
  1573  001666  C09B  F03E         	movff	I2C_MasterRead@length,I2C_MasterReadTRBBuild@length
  1574  00166A  C09C  F03F         	movff	I2C_MasterRead@address,I2C_MasterReadTRBBuild@address
  1575  00166E  C09D  F040         	movff	I2C_MasterRead@address+1,I2C_MasterReadTRBBuild@address+1
  1576  001672  EC90  F00A         	call	_I2C_MasterReadTRBBuild	;wreg free
  1577                           
  1578                           ;i2c.c: 632: I2C_MasterTRBInsert(1, &trBlock, pflag);
  1579  001676  0E8F               	movlw	low I2C_MasterRead@trBlock
  1580  001678  6E3C               	movwf	I2C_MasterTRBInsert@ptrb_list,c
  1581  00167A  0E00               	movlw	high I2C_MasterRead@trBlock
  1582  00167C  6E3D               	movwf	I2C_MasterTRBInsert@ptrb_list+1,c
  1583  00167E  C09E  F03E         	movff	I2C_MasterRead@pflag,I2C_MasterTRBInsert@pflag
  1584  001682  C09F  F03F         	movff	I2C_MasterRead@pflag+1,I2C_MasterTRBInsert@pflag+1
  1585  001686  0E01               	movlw	1
  1586  001688  EC8C  F009         	call	_I2C_MasterTRBInsert
  1587                           
  1588                           ;i2c.c: 633: }
  1589  00168C  0012               	return	
  1590  00168E                     l520:
  1591                           
  1592                           ;i2c.c: 634: else
  1593                           ;i2c.c: 635: {
  1594                           ;i2c.c: 636: *pflag = I2C_MESSAGE_FAIL;
  1595  00168E  C09E  FFD9         	movff	I2C_MasterRead@pflag,fsr2l
  1596  001692  C09F  FFDA         	movff	I2C_MasterRead@pflag+1,fsr2h
  1597  001696  0E01               	movlw	1
  1598  001698  6EDF               	movwf	indf2,c
  1599  00169A  0012               	return	
  1600  00169C                     __end_of_I2C_MasterRead:
  1601                           	opt stack 0
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           intcon	equ	0xFF2
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           indf2	equ	0xFDF
  1612                           postinc2	equ	0xFDE
  1613                           postdec2	equ	0xFDD
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _I2C_MasterTRBInsert *****************
  1619 ;; Defined at:
  1620 ;;		line 659 in file "mcc_generated_files/i2c.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  count           1    wreg     unsigned char 
  1623 ;;  ptrb_list       2   25[COMRAM] PTR struct .
  1624 ;;		 -> I2C_MasterRead@trBlock(5), I2C_MasterWrite@trBlock(5), 
  1625 ;;  pflag           2   27[COMRAM] PTR enum E15702
  1626 ;;		 -> mccReceiveI2C@sendFlag(1), mccSendI2C@sendFlag(1), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  count           1   30[COMRAM] unsigned char 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;Total ram usage:        6 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    4
  1645 ;; This function calls:
  1646 ;;		_I2C_WaitForLastPacketToComplete
  1647 ;; This function is called by:
  1648 ;;		_I2C_MasterWrite
  1649 ;;		_I2C_MasterRead
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text7
  1654  001318                     __ptext7:
  1655                           	opt stack 0
  1656  001318                     _I2C_MasterTRBInsert:
  1657                           	opt stack 24
  1658                           
  1659                           ;incstack = 0
  1660                           ;I2C_MasterTRBInsert@count stored from wreg
  1661  001318  6E41               	movwf	I2C_MasterTRBInsert@count,c
  1662                           
  1663                           ;i2c.c: 666: if (i2c_object.trStatus.s.full != 1)
  1664  00131A  B005               	btfsc	_i2c_object+4,0,c
  1665  00131C  D039               	goto	l532
  1666                           
  1667                           ;i2c.c: 667: {
  1668                           ;i2c.c: 668: *pflag = I2C_MESSAGE_PENDING;
  1669  00131E  C03E  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1670  001322  C03F  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1671  001326  0E02               	movlw	2
  1672  001328  6EDF               	movwf	indf2,c
  1673                           
  1674                           ;i2c.c: 670: i2c_object.pTrTail->ptrb_list = ptrb_list;
  1675  00132A  EE20 F001          	lfsr	2,1
  1676  00132E  5001               	movf	_i2c_object,w,c
  1677  001330  26D9               	addwf	fsr2l,f,c
  1678  001332  5002               	movf	_i2c_object+1,w,c
  1679  001334  22DA               	addwfc	fsr2h,f,c
  1680  001336  C03C  FFDE         	movff	I2C_MasterTRBInsert@ptrb_list,postinc2
  1681  00133A  C03D  FFDD         	movff	I2C_MasterTRBInsert@ptrb_list+1,postdec2
  1682                           
  1683                           ;i2c.c: 671: i2c_object.pTrTail->count = count;
  1684  00133E  C001  FFD9         	movff	_i2c_object,fsr2l
  1685  001342  C002  FFDA         	movff	_i2c_object+1,fsr2h
  1686  001346  C041  FFDF         	movff	I2C_MasterTRBInsert@count,indf2
  1687                           
  1688                           ;i2c.c: 672: i2c_object.pTrTail->pTrFlag = pflag;
  1689  00134A  EE20 F003          	lfsr	2,3
  1690  00134E  5001               	movf	_i2c_object,w,c
  1691  001350  26D9               	addwf	fsr2l,f,c
  1692  001352  5002               	movf	_i2c_object+1,w,c
  1693  001354  22DA               	addwfc	fsr2h,f,c
  1694  001356  C03E  FFDE         	movff	I2C_MasterTRBInsert@pflag,postinc2
  1695  00135A  C03F  FFDD         	movff	I2C_MasterTRBInsert@pflag+1,postdec2
  1696                           
  1697                           ;i2c.c: 673: i2c_object.pTrTail++;
  1698  00135E  0E05               	movlw	5
  1699  001360  2601               	addwf	_i2c_object,f,c
  1700  001362  0E00               	movlw	0
  1701  001364  2202               	addwfc	_i2c_object+1,f,c
  1702                           
  1703                           ;i2c.c: 676: if (i2c_object.pTrTail == (i2c_tr_queue + 1))
  1704  001366  0E21               	movlw	low (_i2c_tr_queue+5)
  1705  001368  1801               	xorwf	_i2c_object,w,c
  1706  00136A  E108               	bnz	l2880
  1707  00136C  0E00               	movlw	high (_i2c_tr_queue+5)
  1708  00136E  1802               	xorwf	_i2c_object+1,w,c
  1709  001370  A4D8               	btfss	status,2,c
  1710  001372  D004               	goto	l533
  1711                           
  1712                           ;i2c.c: 677: {
  1713                           ;i2c.c: 679: i2c_object.pTrTail = i2c_tr_queue;
  1714  001374  0E1C               	movlw	low _i2c_tr_queue
  1715  001376  6E01               	movwf	_i2c_object,c
  1716  001378  0E00               	movlw	high _i2c_tr_queue
  1717  00137A  6E02               	movwf	_i2c_object+1,c
  1718  00137C                     l533:
  1719  00137C                     l2880:
  1720                           
  1721                           ;i2c.c: 680: }
  1722                           ;i2c.c: 684: i2c_object.trStatus.s.empty = 0;
  1723  00137C  9205               	bcf	_i2c_object+4,1,c
  1724                           
  1725                           ;i2c.c: 687: if (i2c_object.pTrHead == i2c_object.pTrTail)
  1726  00137E  5001               	movf	_i2c_object,w,c
  1727  001380  1803               	xorwf	_i2c_object+2,w,c
  1728  001382  E10C               	bnz	l2886
  1729  001384  5002               	movf	_i2c_object+1,w,c
  1730  001386  1804               	xorwf	_i2c_object+3,w,c
  1731  001388  A4D8               	btfss	status,2,c
  1732  00138A  D008               	goto	l535
  1733                           
  1734                           ;i2c.c: 688: {
  1735                           ;i2c.c: 690: i2c_object.trStatus.s.full = 1;
  1736  00138C  8005               	bsf	_i2c_object+4,0,c
  1737                           
  1738                           ;i2c.c: 691: }
  1739                           ;i2c.c: 693: }
  1740  00138E  D006               	goto	l535
  1741  001390                     l532:
  1742                           
  1743                           ;i2c.c: 694: else
  1744                           ;i2c.c: 695: {
  1745                           ;i2c.c: 696: *pflag = I2C_MESSAGE_FAIL;
  1746  001390  C03E  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1747  001394  C03F  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1748  001398  0E01               	movlw	1
  1749  00139A  6EDF               	movwf	indf2,c
  1750  00139C                     l535:
  1751  00139C                     l2886:
  1752                           
  1753                           ;i2c.c: 697: }
  1754                           ;i2c.c: 700: if (*pflag == I2C_MESSAGE_PENDING)
  1755  00139C  C03E  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1756  0013A0  C03F  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1757  0013A4  0E02               	movlw	2
  1758  0013A6  18DE               	xorwf	postinc2,w,c
  1759  0013A8  A4D8               	btfss	status,2,c
  1760  0013AA  0012               	return	
  1761                           
  1762                           ;i2c.c: 701: {
  1763                           ;i2c.c: 702: I2C_WaitForLastPacketToComplete();
  1764  0013AC  EC31  F00C         	call	_I2C_WaitForLastPacketToComplete	;wreg free
  1765                           
  1766                           ;i2c.c: 707: PIR1bits.SSPIF = 1;
  1767  0013B0  869E               	bsf	3998,3,c	;volatile
  1768  0013B2  0012               	return	
  1769  0013B4                     __end_of_I2C_MasterTRBInsert:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodh	equ	0xFF4
  1776                           prodl	equ	0xFF3
  1777                           intcon	equ	0xFF2
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           indf2	equ	0xFDF
  1781                           postinc2	equ	0xFDE
  1782                           postdec2	equ	0xFDD
  1783                           fsr2h	equ	0xFDA
  1784                           fsr2l	equ	0xFD9
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _I2C_WaitForLastPacketToComplete *****************
  1788 ;; Defined at:
  1789 ;;		line 642 in file "mcc_generated_files/i2c.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  count           2   23[COMRAM] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    3
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_I2C_MasterTRBInsert
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text8
  1818  001862                     __ptext8:
  1819                           	opt stack 0
  1820  001862                     _I2C_WaitForLastPacketToComplete:
  1821                           	opt stack 24
  1822                           
  1823                           ;i2c.c: 644: int count = 0;
  1824                           
  1825                           ;incstack = 0
  1826  001862  0E00               	movlw	0
  1827  001864  6E3B               	movwf	I2C_WaitForLastPacketToComplete@count+1,c
  1828  001866  0E00               	movlw	0
  1829  001868  6E3A               	movwf	I2C_WaitForLastPacketToComplete@count,c
  1830                           
  1831                           ;i2c.c: 645: while(i2c_state != S_MASTER_IDLE)
  1832  00186A  D007               	goto	l527
  1833  00186C                     
  1834                           ;i2c.c: 646: {
  1835                           ;i2c.c: 650: count++;
  1836  00186C  4A3A               	infsnz	I2C_WaitForLastPacketToComplete@count,f,c
  1837  00186E  2A3B               	incf	I2C_WaitForLastPacketToComplete@count+1,f,c
  1838                           
  1839                           ;i2c.c: 652: if(count == 35)
  1840  001870  0E23               	movlw	35
  1841  001872  183A               	xorwf	I2C_WaitForLastPacketToComplete@count,w,c
  1842  001874  103B               	iorwf	I2C_WaitForLastPacketToComplete@count+1,w,c
  1843  001876  B4D8               	btfsc	status,2,c
  1844  001878  0012               	return	
  1845  00187A                     l527:
  1846  00187A  501B               	movf	_i2c_state,w,c
  1847  00187C  B4D8               	btfsc	status,2,c
  1848  00187E  0012               	return	
  1849  001880  D7F5               	goto	l526
  1850  001882                     __end_of_I2C_WaitForLastPacketToComplete:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _I2C_MasterReadTRBBuild *****************
  1869 ;; Defined at:
  1870 ;;		line 713 in file "mcc_generated_files/i2c.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  ptrb            2   23[COMRAM] PTR struct .
  1873 ;;		 -> I2C_MasterRead@trBlock(5), 
  1874 ;;  pdata           2   25[COMRAM] PTR unsigned char 
  1875 ;;		 -> STR_2(11), 
  1876 ;;  length          1   27[COMRAM] unsigned char 
  1877 ;;  address         2   28[COMRAM] unsigned int 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1889 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;Total ram usage:        9 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_I2C_MasterRead
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text9
  1904  001520                     __ptext9:
  1905                           	opt stack 0
  1906  001520                     _I2C_MasterReadTRBBuild:
  1907                           	opt stack 25
  1908                           
  1909                           ;i2c.c: 719: ptrb->address = address << 1;
  1910                           
  1911                           ;incstack = 0
  1912  001520  C03F  F041         	movff	I2C_MasterReadTRBBuild@address,??_I2C_MasterReadTRBBuild
  1913  001524  C040  F042         	movff	I2C_MasterReadTRBBuild@address+1,??_I2C_MasterReadTRBBuild+1
  1914  001528  90D8               	bcf	status,0,c
  1915  00152A  3641               	rlcf	??_I2C_MasterReadTRBBuild,f,c
  1916  00152C  3642               	rlcf	??_I2C_MasterReadTRBBuild+1,f,c
  1917  00152E  C03A  FFD9         	movff	I2C_MasterReadTRBBuild@ptrb,fsr2l
  1918  001532  C03B  FFDA         	movff	I2C_MasterReadTRBBuild@ptrb+1,fsr2h
  1919  001536  C041  FFDE         	movff	??_I2C_MasterReadTRBBuild,postinc2
  1920  00153A  C042  FFDD         	movff	??_I2C_MasterReadTRBBuild+1,postdec2
  1921                           
  1922                           ;i2c.c: 721: ptrb->address |= 0x01;
  1923  00153E  C03A  FFD9         	movff	I2C_MasterReadTRBBuild@ptrb,fsr2l
  1924  001542  C03B  FFDA         	movff	I2C_MasterReadTRBBuild@ptrb+1,fsr2h
  1925  001546  0E00               	movlw	0
  1926  001548  80DB               	bsf	plusw2,0,c
  1927                           
  1928                           ;i2c.c: 722: ptrb->length = length;
  1929  00154A  EE20 F002          	lfsr	2,2
  1930  00154E  503A               	movf	I2C_MasterReadTRBBuild@ptrb,w,c
  1931  001550  26D9               	addwf	fsr2l,f,c
  1932  001552  503B               	movf	I2C_MasterReadTRBBuild@ptrb+1,w,c
  1933  001554  22DA               	addwfc	fsr2h,f,c
  1934  001556  C03E  FFDF         	movff	I2C_MasterReadTRBBuild@length,indf2
  1935                           
  1936                           ;i2c.c: 723: ptrb->pbuffer = pdata;
  1937  00155A  EE20 F003          	lfsr	2,3
  1938  00155E  503A               	movf	I2C_MasterReadTRBBuild@ptrb,w,c
  1939  001560  26D9               	addwf	fsr2l,f,c
  1940  001562  503B               	movf	I2C_MasterReadTRBBuild@ptrb+1,w,c
  1941  001564  22DA               	addwfc	fsr2h,f,c
  1942  001566  C03C  FFDE         	movff	I2C_MasterReadTRBBuild@pdata,postinc2
  1943  00156A  C03D  FFDD         	movff	I2C_MasterReadTRBBuild@pdata+1,postdec2
  1944  00156E  0012               	return		;funcret
  1945  001570                     __end_of_I2C_MasterReadTRBBuild:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           indf2	equ	0xFDF
  1957                           postinc2	equ	0xFDE
  1958                           postdec2	equ	0xFDD
  1959                           plusw2	equ	0xFDB
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function _SYSTEM_Initialize *****************
  1965 ;; Defined at:
  1966 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    5
  1987 ;; This function calls:
  1988 ;;		_ECAN_Initialize
  1989 ;;		_EUSART1_Initialize
  1990 ;;		_I2C_Initialize
  1991 ;;		_INTERRUPT_Initialize
  1992 ;;		_OSCILLATOR_Initialize
  1993 ;;		_PIN_MANAGER_Initialize
  1994 ;;		_PWM2_Initialize
  1995 ;;		_PWM5_Initialize
  1996 ;;		_TMR1_Initialize
  1997 ;;		_TMR2_Initialize
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text10
  2004  00180E                     __ptext10:
  2005                           	opt stack 0
  2006  00180E                     _SYSTEM_Initialize:
  2007                           	opt stack 25
  2008                           
  2009                           ;mcc.c: 53: INTERRUPT_Initialize();
  2010                           
  2011                           ;incstack = 0
  2012  00180E  EC8D  F00C         	call	_INTERRUPT_Initialize	;wreg free
  2013                           
  2014                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  2015  001812  EC1C  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2016                           
  2017                           ;mcc.c: 55: OSCILLATOR_Initialize();
  2018  001816  EC6D  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  2019                           
  2020                           ;mcc.c: 56: I2C_Initialize();
  2021  00181A  ECAC  F00B         	call	_I2C_Initialize	;wreg free
  2022                           
  2023                           ;mcc.c: 57: PWM2_Initialize();
  2024  00181E  EC64  F00C         	call	_PWM2_Initialize	;wreg free
  2025                           
  2026                           ;mcc.c: 58: PWM5_Initialize();
  2027  001822  EC5B  F00C         	call	_PWM5_Initialize	;wreg free
  2028                           
  2029                           ;mcc.c: 59: TMR2_Initialize();
  2030  001826  EC76  F00C         	call	_TMR2_Initialize	;wreg free
  2031                           
  2032                           ;mcc.c: 60: TMR1_Initialize();
  2033  00182A  EC90  F00B         	call	_TMR1_Initialize	;wreg free
  2034                           
  2035                           ;mcc.c: 61: EUSART1_Initialize();
  2036  00182E  ECDE  F00A         	call	_EUSART1_Initialize	;wreg free
  2037                           
  2038                           ;mcc.c: 62: ECAN_Initialize();
  2039  001832  EC31  F009         	call	_ECAN_Initialize	;wreg free
  2040  001836  0012               	return		;funcret
  2041  001838                     __end_of_SYSTEM_Initialize:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           intcon	equ	0xFF2
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           postdec2	equ	0xFDD
  2055                           plusw2	equ	0xFDB
  2056                           fsr2h	equ	0xFDA
  2057                           fsr2l	equ	0xFD9
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _TMR2_Initialize *****************
  2061 ;; Defined at:
  2062 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    3
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_SYSTEM_Initialize
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text11
  2091  0018EC                     __ptext11:
  2092                           	opt stack 0
  2093  0018EC                     _TMR2_Initialize:
  2094                           	opt stack 26
  2095                           
  2096                           ;tmr2.c: 67: PR2 = 0x7C;
  2097                           
  2098                           ;incstack = 0
  2099  0018EC  0E7C               	movlw	124
  2100  0018EE  6ECB               	movwf	4043,c	;volatile
  2101                           
  2102                           ;tmr2.c: 70: TMR2 = 0x00;
  2103  0018F0  0E00               	movlw	0
  2104  0018F2  6ECC               	movwf	4044,c	;volatile
  2105                           
  2106                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
  2107  0018F4  929E               	bcf	3998,1,c	;volatile
  2108                           
  2109                           ;tmr2.c: 76: T2CON = 0x06;
  2110  0018F6  0E06               	movlw	6
  2111  0018F8  6ECA               	movwf	4042,c	;volatile
  2112  0018FA  0012               	return		;funcret
  2113  0018FC                     __end_of_TMR2_Initialize:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           intcon	equ	0xFF2
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           indf2	equ	0xFDF
  2125                           postinc2	equ	0xFDE
  2126                           postdec2	equ	0xFDD
  2127                           plusw2	equ	0xFDB
  2128                           fsr2h	equ	0xFDA
  2129                           fsr2l	equ	0xFD9
  2130                           status	equ	0xFD8
  2131                           
  2132 ;; *************** function _TMR1_Initialize *****************
  2133 ;; Defined at:
  2134 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2152 ;;Total ram usage:        2 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    4
  2155 ;; This function calls:
  2156 ;;		_TMR1_SetInterruptHandler
  2157 ;; This function is called by:
  2158 ;;		_SYSTEM_Initialize
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text12
  2163  001720                     __ptext12:
  2164                           	opt stack 0
  2165  001720                     _TMR1_Initialize:
  2166                           	opt stack 25
  2167                           
  2168                           ;tmr1.c: 69: T1GCON = 0x00;
  2169                           
  2170                           ;incstack = 0
  2171  001720  0E00               	movlw	0
  2172  001722  6EAA               	movwf	4010,c	;volatile
  2173                           
  2174                           ;tmr1.c: 72: TMR1H = 0x80;
  2175  001724  0E80               	movlw	128
  2176  001726  6ECF               	movwf	4047,c	;volatile
  2177                           
  2178                           ;tmr1.c: 75: TMR1L = 0x00;
  2179  001728  0E00               	movlw	0
  2180  00172A  6ECE               	movwf	4046,c	;volatile
  2181                           
  2182                           ;tmr1.c: 78: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2183  00172C  50CE               	movf	4046,w,c	;volatile
  2184  00172E  CFCF F03C          	movff	4047,??_TMR1_Initialize	;volatile
  2185  001732  6A3D               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  2186  001734  C03C  F03D         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2187  001738  6A3C               	clrf	??_TMR1_Initialize,c
  2188  00173A  103C               	iorwf	??_TMR1_Initialize,w,c
  2189  00173C  6E44               	movwf	_timer1ReloadVal,c	;volatile
  2190  00173E  503D               	movf	??_TMR1_Initialize+1,w,c
  2191  001740  6E45               	movwf	_timer1ReloadVal+1,c	;volatile
  2192                           
  2193                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  2194  001742  909E               	bcf	3998,0,c	;volatile
  2195                           
  2196                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  2197  001744  809D               	bsf	3997,0,c	;volatile
  2198                           
  2199                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2200  001746  0E24               	movlw	low _TMR1_DefaultInterruptHandler
  2201  001748  6E3A               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2202  00174A  0E19               	movlw	high _TMR1_DefaultInterruptHandler
  2203  00174C  6E3B               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2204  00174E  EC7E  F00C         	call	_TMR1_SetInterruptHandler	;wreg free
  2205                           
  2206                           ;tmr1.c: 90: T1CON = 0x01;
  2207  001752  0E01               	movlw	1
  2208  001754  6ECD               	movwf	4045,c	;volatile
  2209  001756  0012               	return		;funcret
  2210  001758                     __end_of_TMR1_Initialize:
  2211                           	opt stack 0
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           prodh	equ	0xFF4
  2217                           prodl	equ	0xFF3
  2218                           intcon	equ	0xFF2
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           indf2	equ	0xFDF
  2222                           postinc2	equ	0xFDE
  2223                           postdec2	equ	0xFDD
  2224                           plusw2	equ	0xFDB
  2225                           fsr2h	equ	0xFDA
  2226                           fsr2l	equ	0xFD9
  2227                           status	equ	0xFD8
  2228                           
  2229 ;; *************** function _TMR1_SetInterruptHandler *****************
  2230 ;; Defined at:
  2231 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  InterruptHan    2   23[COMRAM] PTR FTN()void 
  2234 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;Total ram usage:        2 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    3
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_TMR1_Initialize
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text13
  2261  0018FC                     __ptext13:
  2262                           	opt stack 0
  2263  0018FC                     _TMR1_SetInterruptHandler:
  2264                           	opt stack 25
  2265                           
  2266                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  2267                           
  2268                           ;incstack = 0
  2269  0018FC  C03A  F0B0         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  2270  001900  C03B  F0B1         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  2271  001904  0012               	return		;funcret
  2272  001906                     __end_of_TMR1_SetInterruptHandler:
  2273                           	opt stack 0
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           intcon	equ	0xFF2
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf2	equ	0xFDF
  2284                           postinc2	equ	0xFDE
  2285                           postdec2	equ	0xFDD
  2286                           plusw2	equ	0xFDB
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _PWM5_Initialize *****************
  2292 ;; Defined at:
  2293 ;;		line 64 in file "mcc_generated_files/pwm5.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    3
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_SYSTEM_Initialize
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text14
  2322  0018B6                     __ptext14:
  2323                           	opt stack 0
  2324  0018B6                     _PWM5_Initialize:
  2325                           	opt stack 26
  2326                           
  2327                           ;pwm5.c: 69: CCP5CON = 0x3C;
  2328                           
  2329                           ;incstack = 0
  2330  0018B6  0E3C               	movlw	60
  2331  0018B8  010F               	movlb	15	; () banked
  2332  0018BA  6F47               	movwf	71,b	;volatile
  2333                           
  2334                           ;pwm5.c: 72: CCPR5L = 0x63;
  2335  0018BC  0E63               	movlw	99
  2336  0018BE  6F48               	movwf	72,b	;volatile
  2337                           
  2338                           ;pwm5.c: 75: CCPR5H = 0x00;
  2339  0018C0  0E00               	movlw	0
  2340  0018C2  6F49               	movwf	73,b	;volatile
  2341                           
  2342                           ; BSR set to: 15
  2343                           ;pwm5.c: 78: CCPTMRSbits.C5TSEL = 0x0;
  2344  0018C4  9899               	bcf	3993,4,c	;volatile
  2345                           
  2346                           ; BSR set to: 15
  2347  0018C6  0012               	return		;funcret
  2348  0018C8                     __end_of_PWM5_Initialize:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           tblptrh	equ	0xFF7
  2352                           tblptrl	equ	0xFF6
  2353                           tablat	equ	0xFF5
  2354                           prodh	equ	0xFF4
  2355                           prodl	equ	0xFF3
  2356                           intcon	equ	0xFF2
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           indf2	equ	0xFDF
  2360                           postinc2	equ	0xFDE
  2361                           postdec2	equ	0xFDD
  2362                           plusw2	equ	0xFDB
  2363                           fsr2h	equ	0xFDA
  2364                           fsr2l	equ	0xFD9
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _PWM2_Initialize *****************
  2368 ;; Defined at:
  2369 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    3
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_SYSTEM_Initialize
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text15
  2398  0018C8                     __ptext15:
  2399                           	opt stack 0
  2400  0018C8                     _PWM2_Initialize:
  2401                           	opt stack 26
  2402                           
  2403                           ;pwm2.c: 69: CCP2CON = 0x1C;
  2404                           
  2405                           ; BSR set to: 15
  2406                           ;incstack = 0
  2407  0018C8  0E1C               	movlw	28
  2408  0018CA  010F               	movlb	15	; () banked
  2409  0018CC  6F50               	movwf	80,b	;volatile
  2410                           
  2411                           ;pwm2.c: 72: CCPR2L = 0x3E;
  2412  0018CE  0E3E               	movlw	62
  2413  0018D0  6F51               	movwf	81,b	;volatile
  2414                           
  2415                           ;pwm2.c: 75: CCPR2H = 0x00;
  2416  0018D2  0E00               	movlw	0
  2417  0018D4  6F52               	movwf	82,b	;volatile
  2418                           
  2419                           ; BSR set to: 15
  2420                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x0;
  2421  0018D6  9299               	bcf	3993,1,c	;volatile
  2422                           
  2423                           ; BSR set to: 15
  2424  0018D8  0012               	return		;funcret
  2425  0018DA                     __end_of_PWM2_Initialize:
  2426                           	opt stack 0
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           prodh	equ	0xFF4
  2432                           prodl	equ	0xFF3
  2433                           intcon	equ	0xFF2
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           plusw2	equ	0xFDB
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _PIN_MANAGER_Initialize *****************
  2445 ;; Defined at:
  2446 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    3
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_SYSTEM_Initialize
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text16
  2475  001838                     __ptext16:
  2476                           	opt stack 0
  2477  001838                     _PIN_MANAGER_Initialize:
  2478                           	opt stack 26
  2479                           
  2480                           ;pin_manager.c: 62: LATA = 0x00;
  2481                           
  2482                           ; BSR set to: 15
  2483                           ;incstack = 0
  2484  001838  0E00               	movlw	0
  2485  00183A  6E89               	movwf	3977,c	;volatile
  2486                           
  2487                           ;pin_manager.c: 63: LATB = 0x00;
  2488  00183C  0E00               	movlw	0
  2489  00183E  6E8A               	movwf	3978,c	;volatile
  2490                           
  2491                           ;pin_manager.c: 64: LATC = 0x04;
  2492  001840  0E04               	movlw	4
  2493  001842  6E8B               	movwf	3979,c	;volatile
  2494                           
  2495                           ;pin_manager.c: 69: TRISA = 0xEF;
  2496  001844  0EEF               	movlw	239
  2497  001846  6E92               	movwf	3986,c	;volatile
  2498                           
  2499                           ;pin_manager.c: 70: TRISB = 0xCA;
  2500  001848  0ECA               	movlw	202
  2501  00184A  6E93               	movwf	3987,c	;volatile
  2502                           
  2503                           ;pin_manager.c: 71: TRISC = 0xBB;
  2504  00184C  0EBB               	movlw	187
  2505  00184E  6E94               	movwf	3988,c	;volatile
  2506                           
  2507                           ;pin_manager.c: 76: ANCON0 = 0x1F;
  2508  001850  0E1F               	movlw	31
  2509  001852  010F               	movlb	15	; () banked
  2510  001854  6F5D               	movwf	93,b	;volatile
  2511                           
  2512                           ;pin_manager.c: 77: ANCON1 = 0x06;
  2513  001856  0E06               	movlw	6
  2514  001858  6F5C               	movwf	92,b	;volatile
  2515                           
  2516                           ;pin_manager.c: 82: WPUB = 0x00;
  2517  00185A  0E00               	movlw	0
  2518  00185C  6F5B               	movwf	91,b	;volatile
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;pin_manager.c: 83: INTCON2bits.nRBPU = 1;
  2522  00185E  8EF1               	bsf	intcon2,7,c	;volatile
  2523                           
  2524                           ; BSR set to: 15
  2525  001860  0012               	return		;funcret
  2526  001862                     __end_of_PIN_MANAGER_Initialize:
  2527                           	opt stack 0
  2528                           tblptru	equ	0xFF8
  2529                           tblptrh	equ	0xFF7
  2530                           tblptrl	equ	0xFF6
  2531                           tablat	equ	0xFF5
  2532                           prodh	equ	0xFF4
  2533                           prodl	equ	0xFF3
  2534                           intcon	equ	0xFF2
  2535                           intcon2	equ	0xFF1
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           indf2	equ	0xFDF
  2539                           postinc2	equ	0xFDE
  2540                           postdec2	equ	0xFDD
  2541                           plusw2	equ	0xFDB
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _OSCILLATOR_Initialize *****************
  2547 ;; Defined at:
  2548 ;;		line 65 in file "mcc_generated_files/mcc.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    3
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_SYSTEM_Initialize
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text17
  2577  0018DA                     __ptext17:
  2578                           	opt stack 0
  2579  0018DA                     _OSCILLATOR_Initialize:
  2580                           	opt stack 26
  2581                           
  2582                           ;mcc.c: 68: OSCCON = 0x52;
  2583                           
  2584                           ; BSR set to: 15
  2585                           ;incstack = 0
  2586  0018DA  0E52               	movlw	82
  2587  0018DC  6ED3               	movwf	4051,c	;volatile
  2588                           
  2589                           ;mcc.c: 70: OSCCON2 = 0x00;
  2590  0018DE  0E00               	movlw	0
  2591  0018E0  6ED2               	movwf	4050,c	;volatile
  2592                           
  2593                           ;mcc.c: 72: OSCTUNE = 0x00;
  2594  0018E2  0E00               	movlw	0
  2595  0018E4  6E9B               	movwf	3995,c	;volatile
  2596                           
  2597                           ;mcc.c: 74: REFOCON = 0x00;
  2598  0018E6  0E00               	movlw	0
  2599  0018E8  6E9A               	movwf	3994,c	;volatile
  2600  0018EA  0012               	return		;funcret
  2601  0018EC                     __end_of_OSCILLATOR_Initialize:
  2602                           	opt stack 0
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           intcon	equ	0xFF2
  2610                           intcon2	equ	0xFF1
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           indf2	equ	0xFDF
  2614                           postinc2	equ	0xFDE
  2615                           postdec2	equ	0xFDD
  2616                           plusw2	equ	0xFDB
  2617                           fsr2h	equ	0xFDA
  2618                           fsr2l	equ	0xFD9
  2619                           status	equ	0xFD8
  2620                           
  2621 ;; *************** function _INTERRUPT_Initialize *****************
  2622 ;; Defined at:
  2623 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		None
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_SYSTEM_Initialize
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text18
  2652  00191A                     __ptext18:
  2653                           	opt stack 0
  2654  00191A                     _INTERRUPT_Initialize:
  2655                           	opt stack 26
  2656                           
  2657                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2658                           
  2659                           ;incstack = 0
  2660  00191A  9ED0               	bcf	4048,7,c	;volatile
  2661  00191C  0012               	return		;funcret
  2662  00191E                     __end_of_INTERRUPT_Initialize:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           intcon	equ	0xFF2
  2671                           intcon2	equ	0xFF1
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           indf2	equ	0xFDF
  2675                           postinc2	equ	0xFDE
  2676                           postdec2	equ	0xFDD
  2677                           plusw2	equ	0xFDB
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function _I2C_Initialize *****************
  2683 ;; Defined at:
  2684 ;;		line 198 in file "mcc_generated_files/i2c.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    3
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_SYSTEM_Initialize
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text19
  2713  001758                     __ptext19:
  2714                           	opt stack 0
  2715  001758                     _I2C_Initialize:
  2716                           	opt stack 26
  2717                           
  2718                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
  2719                           
  2720                           ;incstack = 0
  2721  001758  0E1C               	movlw	low _i2c_tr_queue
  2722  00175A  6E03               	movwf	_i2c_object+2,c
  2723  00175C  0E00               	movlw	high _i2c_tr_queue
  2724  00175E  6E04               	movwf	_i2c_object+3,c
  2725                           
  2726                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
  2727  001760  0E1C               	movlw	low _i2c_tr_queue
  2728  001762  6E01               	movwf	_i2c_object,c
  2729  001764  0E00               	movlw	high _i2c_tr_queue
  2730  001766  6E02               	movwf	_i2c_object+1,c
  2731                           
  2732                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
  2733  001768  8205               	bsf	_i2c_object+4,1,c
  2734                           
  2735                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
  2736  00176A  9005               	bcf	_i2c_object+4,0,c
  2737                           
  2738                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
  2739  00176C  0E00               	movlw	0
  2740  00176E  6E07               	movwf	_i2c_object+6,c
  2741                           
  2742                           ;i2c.c: 208: SSPSTAT = 0x80;
  2743  001770  0E80               	movlw	128
  2744  001772  6EC7               	movwf	4039,c	;volatile
  2745                           
  2746                           ;i2c.c: 210: SSPCON1 = 0x28;
  2747  001774  0E28               	movlw	40
  2748  001776  6EC6               	movwf	4038,c	;volatile
  2749                           
  2750                           ;i2c.c: 212: SSPADD = 0x13;
  2751  001778  0E13               	movlw	19
  2752  00177A  6EC8               	movwf	4040,c	;volatile
  2753                           
  2754                           ;i2c.c: 215: PIR1bits.SSPIF = 0;
  2755  00177C  969E               	bcf	3998,3,c	;volatile
  2756                           
  2757                           ;i2c.c: 216: PIR2bits.BCLIF = 0;
  2758  00177E  96A1               	bcf	4001,3,c	;volatile
  2759                           
  2760                           ;i2c.c: 219: PIE1bits.SSPIE = 1;
  2761  001780  869D               	bsf	3997,3,c	;volatile
  2762                           
  2763                           ;i2c.c: 220: PIE2bits.BCLIE = 1;
  2764  001782  86A0               	bsf	4000,3,c	;volatile
  2765  001784  0012               	return		;funcret
  2766  001786                     __end_of_I2C_Initialize:
  2767                           	opt stack 0
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           prodh	equ	0xFF4
  2773                           prodl	equ	0xFF3
  2774                           intcon	equ	0xFF2
  2775                           intcon2	equ	0xFF1
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           indf2	equ	0xFDF
  2779                           postinc2	equ	0xFDE
  2780                           postdec2	equ	0xFDD
  2781                           plusw2	equ	0xFDB
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _EUSART1_Initialize *****************
  2787 ;; Defined at:
  2788 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    4
  2809 ;; This function calls:
  2810 ;;		_EUSART1_SetRxInterruptHandler
  2811 ;;		_EUSART1_SetTxInterruptHandler
  2812 ;; This function is called by:
  2813 ;;		_SYSTEM_Initialize
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text20
  2818  0015BC                     __ptext20:
  2819                           	opt stack 0
  2820  0015BC                     _EUSART1_Initialize:
  2821                           	opt stack 25
  2822                           
  2823                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  2824                           
  2825                           ;incstack = 0
  2826  0015BC  9A9D               	bcf	3997,5,c	;volatile
  2827                           
  2828                           ;eusart1.c: 79: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  2829  0015BE  0EE2               	movlw	low _EUSART1_Receive_ISR
  2830  0015C0  6E3A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  2831  0015C2  0E17               	movlw	high _EUSART1_Receive_ISR
  2832  0015C4  6E3B               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  2833  0015C6  EC88  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2834                           
  2835                           ;eusart1.c: 80: PIE1bits.TX1IE = 0;
  2836  0015CA  989D               	bcf	3997,4,c	;volatile
  2837                           
  2838                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  2839  0015CC  0EB4               	movlw	low _EUSART1_Transmit_ISR
  2840  0015CE  6E3A               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  2841  0015D0  0E17               	movlw	high _EUSART1_Transmit_ISR
  2842  0015D2  6E3B               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  2843  0015D4  EC83  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2844                           
  2845                           ;eusart1.c: 85: BAUDCON1 = 0x08;
  2846  0015D8  0E08               	movlw	8
  2847  0015DA  6EA7               	movwf	4007,c	;volatile
  2848                           
  2849                           ;eusart1.c: 88: RCSTA1 = 0x90;
  2850  0015DC  0E90               	movlw	144
  2851  0015DE  6EAB               	movwf	4011,c	;volatile
  2852                           
  2853                           ;eusart1.c: 91: TXSTA1 = 0x24;
  2854  0015E0  0E24               	movlw	36
  2855  0015E2  6EAC               	movwf	4012,c	;volatile
  2856                           
  2857                           ;eusart1.c: 94: SPBRG1 = 0x67;
  2858  0015E4  0E67               	movlw	103
  2859  0015E6  6EAF               	movwf	4015,c	;volatile
  2860                           
  2861                           ;eusart1.c: 97: SPBRGH1 = 0x00;
  2862  0015E8  0E00               	movlw	0
  2863  0015EA  6E7D               	movwf	3965,c	;volatile
  2864                           
  2865                           ;eusart1.c: 101: eusart1TxHead = 0;
  2866  0015EC  0E00               	movlw	0
  2867  0015EE  6E17               	movwf	_eusart1TxHead,c	;volatile
  2868                           
  2869                           ;eusart1.c: 102: eusart1TxTail = 0;
  2870  0015F0  0E00               	movlw	0
  2871  0015F2  6E16               	movwf	_eusart1TxTail,c	;volatile
  2872                           
  2873                           ;eusart1.c: 103: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  2874  0015F4  0E08               	movlw	8
  2875  0015F6  6E46               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2876                           
  2877                           ;eusart1.c: 105: eusart1RxHead = 0;
  2878  0015F8  0E00               	movlw	0
  2879  0015FA  6E15               	movwf	_eusart1RxHead,c	;volatile
  2880                           
  2881                           ;eusart1.c: 106: eusart1RxTail = 0;
  2882  0015FC  0E00               	movlw	0
  2883  0015FE  6E14               	movwf	_eusart1RxTail,c	;volatile
  2884                           
  2885                           ;eusart1.c: 107: eusart1RxCount = 0;
  2886  001600  0E00               	movlw	0
  2887  001602  6E13               	movwf	_eusart1RxCount,c	;volatile
  2888                           
  2889                           ;eusart1.c: 110: PIE1bits.RC1IE = 1;
  2890  001604  8A9D               	bsf	3997,5,c	;volatile
  2891  001606  0012               	return		;funcret
  2892  001608                     __end_of_EUSART1_Initialize:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           prodh	equ	0xFF4
  2899                           prodl	equ	0xFF3
  2900                           intcon	equ	0xFF2
  2901                           intcon2	equ	0xFF1
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf2	equ	0xFDF
  2905                           postinc2	equ	0xFDE
  2906                           postdec2	equ	0xFDD
  2907                           plusw2	equ	0xFDB
  2908                           fsr2h	equ	0xFDA
  2909                           fsr2l	equ	0xFD9
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2913 ;; Defined at:
  2914 ;;		line 212 in file "mcc_generated_files/eusart1.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  interruptHan    2   23[COMRAM] PTR FTN()void 
  2917 ;;		 -> EUSART1_Transmit_ISR(1), 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;Total ram usage:        2 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    3
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_EUSART1_Initialize
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text21
  2944  001906                     __ptext21:
  2945                           	opt stack 0
  2946  001906                     _EUSART1_SetTxInterruptHandler:
  2947                           	opt stack 25
  2948                           
  2949                           ;eusart1.c: 213: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  2950                           
  2951                           ;incstack = 0
  2952  001906  C03A  F0B4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2953  00190A  C03B  F0B5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2954  00190E  0012               	return		;funcret
  2955  001910                     __end_of_EUSART1_SetTxInterruptHandler:
  2956                           	opt stack 0
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           intcon	equ	0xFF2
  2964                           intcon2	equ	0xFF1
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           plusw2	equ	0xFDB
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2976 ;; Defined at:
  2977 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  interruptHan    2   23[COMRAM] PTR FTN()void 
  2980 ;;		 -> EUSART1_Receive_ISR(1), 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;Total ram usage:        2 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    3
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_EUSART1_Initialize
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text22
  3007  001910                     __ptext22:
  3008                           	opt stack 0
  3009  001910                     _EUSART1_SetRxInterruptHandler:
  3010                           	opt stack 25
  3011                           
  3012                           ;eusart1.c: 217: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  3013                           
  3014                           ;incstack = 0
  3015  001910  C03A  F0B2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3016  001914  C03B  F0B3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3017  001918  0012               	return		;funcret
  3018  00191A                     __end_of_EUSART1_SetRxInterruptHandler:
  3019                           	opt stack 0
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           intcon	equ	0xFF2
  3027                           intcon2	equ	0xFF1
  3028                           postinc0	equ	0xFEE
  3029                           wreg	equ	0xFE8
  3030                           indf2	equ	0xFDF
  3031                           postinc2	equ	0xFDE
  3032                           postdec2	equ	0xFDD
  3033                           plusw2	equ	0xFDB
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _ECAN_Initialize *****************
  3039 ;; Defined at:
  3040 ;;		line 61 in file "mcc_generated_files/ecan.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;Total ram usage:        1 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    3
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_SYSTEM_Initialize
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text23
  3069  001262                     __ptext23:
  3070                           	opt stack 0
  3071  001262                     _ECAN_Initialize:
  3072                           	opt stack 26
  3073                           
  3074                           ;ecan.c: 63: CANCON = 0x80;
  3075                           
  3076                           ;incstack = 0
  3077  001262  0E80               	movlw	128
  3078  001264  6E6F               	movwf	3951,c	;volatile
  3079  001266  506E               	movf	3950,w,c	;volatile
  3080  001268  0BE0               	andlw	224
  3081  00126A  0A80               	xorlw	128
  3082  00126C  A4D8               	btfss	status,2,c
  3083  00126E  D7FB               	goto	l234
  3084                           
  3085                           ;ecan.c: 69: ECANCON = 0x00;
  3086  001270  0E00               	movlw	0
  3087  001272  6E72               	movwf	3954,c	;volatile
  3088                           
  3089                           ;ecan.c: 74: CIOCON = 0x20;
  3090  001274  0E20               	movlw	32
  3091  001276  6E70               	movwf	3952,c	;volatile
  3092                           
  3093                           ;ecan.c: 87: RXM0EIDH = 0x00;
  3094  001278  0E00               	movlw	0
  3095  00127A  010E               	movlb	14	; () banked
  3096  00127C  6FFA               	movwf	250,b	;volatile
  3097                           
  3098                           ;ecan.c: 88: RXM0EIDL = 0x00;
  3099  00127E  0E00               	movlw	0
  3100  001280  6FFB               	movwf	251,b	;volatile
  3101                           
  3102                           ;ecan.c: 89: RXM0SIDH = 0x00;
  3103  001282  0E00               	movlw	0
  3104  001284  6FF8               	movwf	248,b	;volatile
  3105                           
  3106                           ;ecan.c: 90: RXM0SIDL = 0x00;
  3107  001286  0E00               	movlw	0
  3108  001288  6FF9               	movwf	249,b	;volatile
  3109                           
  3110                           ;ecan.c: 91: RXM1EIDH = 0x00;
  3111  00128A  0E00               	movlw	0
  3112  00128C  6FFE               	movwf	254,b	;volatile
  3113                           
  3114                           ;ecan.c: 92: RXM1EIDL = 0x00;
  3115  00128E  0E00               	movlw	0
  3116  001290  6FFF               	movwf	255,b	;volatile
  3117                           
  3118                           ;ecan.c: 93: RXM1SIDH = 0x00;
  3119  001292  0E00               	movlw	0
  3120  001294  6FFC               	movwf	252,b	;volatile
  3121                           
  3122                           ;ecan.c: 94: RXM1SIDL = 0x00;
  3123  001296  0E00               	movlw	0
  3124  001298  6FFD               	movwf	253,b	;volatile
  3125                           
  3126                           ;ecan.c: 99: RXF0EIDH = 0x00;
  3127  00129A  0E00               	movlw	0
  3128  00129C  6FE2               	movwf	226,b	;volatile
  3129                           
  3130                           ;ecan.c: 100: RXF0EIDL = 0x00;
  3131  00129E  0E00               	movlw	0
  3132  0012A0  6FE3               	movwf	227,b	;volatile
  3133                           
  3134                           ;ecan.c: 101: RXF0SIDH = 0x00;
  3135  0012A2  0E00               	movlw	0
  3136  0012A4  6FE0               	movwf	224,b	;volatile
  3137                           
  3138                           ;ecan.c: 102: RXF0SIDL = 0x00;
  3139  0012A6  0E00               	movlw	0
  3140  0012A8  6FE1               	movwf	225,b	;volatile
  3141                           
  3142                           ;ecan.c: 103: RXF1EIDH = 0x00;
  3143  0012AA  0E00               	movlw	0
  3144  0012AC  6FE6               	movwf	230,b	;volatile
  3145                           
  3146                           ;ecan.c: 104: RXF1EIDL = 0x00;
  3147  0012AE  0E00               	movlw	0
  3148  0012B0  6FE7               	movwf	231,b	;volatile
  3149                           
  3150                           ;ecan.c: 105: RXF1SIDH = 0x00;
  3151  0012B2  0E00               	movlw	0
  3152  0012B4  6FE4               	movwf	228,b	;volatile
  3153                           
  3154                           ;ecan.c: 106: RXF1SIDL = 0x00;
  3155  0012B6  0E00               	movlw	0
  3156  0012B8  6FE5               	movwf	229,b	;volatile
  3157                           
  3158                           ;ecan.c: 107: RXF2EIDH = 0x00;
  3159  0012BA  0E00               	movlw	0
  3160  0012BC  6FEA               	movwf	234,b	;volatile
  3161                           
  3162                           ;ecan.c: 108: RXF2EIDL = 0x00;
  3163  0012BE  0E00               	movlw	0
  3164  0012C0  6FEB               	movwf	235,b	;volatile
  3165                           
  3166                           ;ecan.c: 109: RXF2SIDH = 0x00;
  3167  0012C2  0E00               	movlw	0
  3168  0012C4  6FE8               	movwf	232,b	;volatile
  3169                           
  3170                           ;ecan.c: 110: RXF2SIDL = 0x00;
  3171  0012C6  0E00               	movlw	0
  3172  0012C8  6FE9               	movwf	233,b	;volatile
  3173                           
  3174                           ;ecan.c: 111: RXF3EIDH = 0x00;
  3175  0012CA  0E00               	movlw	0
  3176  0012CC  6FEE               	movwf	238,b	;volatile
  3177                           
  3178                           ;ecan.c: 112: RXF3EIDL = 0x00;
  3179  0012CE  0E00               	movlw	0
  3180  0012D0  6FEF               	movwf	239,b	;volatile
  3181                           
  3182                           ;ecan.c: 113: RXF3SIDH = 0x00;
  3183  0012D2  0E00               	movlw	0
  3184  0012D4  6FEC               	movwf	236,b	;volatile
  3185                           
  3186                           ;ecan.c: 114: RXF3SIDL = 0x00;
  3187  0012D6  0E00               	movlw	0
  3188  0012D8  6FED               	movwf	237,b	;volatile
  3189                           
  3190                           ;ecan.c: 115: RXF4EIDH = 0x00;
  3191  0012DA  0E00               	movlw	0
  3192  0012DC  6FF2               	movwf	242,b	;volatile
  3193                           
  3194                           ;ecan.c: 116: RXF4EIDL = 0x00;
  3195  0012DE  0E00               	movlw	0
  3196  0012E0  6FF3               	movwf	243,b	;volatile
  3197                           
  3198                           ;ecan.c: 117: RXF4SIDH = 0x00;
  3199  0012E2  0E00               	movlw	0
  3200  0012E4  6FF0               	movwf	240,b	;volatile
  3201                           
  3202                           ;ecan.c: 118: RXF4SIDL = 0x00;
  3203  0012E6  0E00               	movlw	0
  3204  0012E8  6FF1               	movwf	241,b	;volatile
  3205                           
  3206                           ;ecan.c: 119: RXF5EIDH = 0x00;
  3207  0012EA  0E00               	movlw	0
  3208  0012EC  6FF6               	movwf	246,b	;volatile
  3209                           
  3210                           ;ecan.c: 120: RXF5EIDL = 0x00;
  3211  0012EE  0E00               	movlw	0
  3212  0012F0  6FF7               	movwf	247,b	;volatile
  3213                           
  3214                           ;ecan.c: 121: RXF5SIDH = 0x00;
  3215  0012F2  0E00               	movlw	0
  3216  0012F4  6FF4               	movwf	244,b	;volatile
  3217                           
  3218                           ;ecan.c: 122: RXF5SIDL = 0x00;
  3219  0012F6  0E00               	movlw	0
  3220  0012F8  6FF5               	movwf	245,b	;volatile
  3221                           
  3222                           ;ecan.c: 136: BRGCON1 = 0x00;
  3223  0012FA  0E00               	movlw	0
  3224  0012FC  6F43               	movwf	67,b	;volatile
  3225                           
  3226                           ;ecan.c: 137: BRGCON2 = 0x98;
  3227  0012FE  0E98               	movlw	152
  3228  001300  6F44               	movwf	68,b	;volatile
  3229                           
  3230                           ;ecan.c: 138: BRGCON3 = 0x01;
  3231  001302  0E01               	movlw	1
  3232  001304  6F45               	movwf	69,b	;volatile
  3233                           
  3234                           ;ecan.c: 140: CANCON = 0x00;
  3235  001306  0E00               	movlw	0
  3236  001308  6E6F               	movwf	3951,c	;volatile
  3237  00130A                     
  3238                           ; BSR set to: 14
  3239                           
  3240                           ; BSR set to: 14
  3241  00130A  CF6E F03A          	movff	3950,??_ECAN_Initialize	;volatile
  3242  00130E  0EE0               	movlw	224
  3243  001310  163A               	andwf	??_ECAN_Initialize,f,c
  3244  001312  B4D8               	btfsc	status,2,c
  3245  001314  0012               	return	
  3246  001316  D7F9               	goto	l237
  3247  001318                     __end_of_ECAN_Initialize:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           intcon2	equ	0xFF1
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           indf2	equ	0xFDF
  3260                           postinc2	equ	0xFDE
  3261                           postdec2	equ	0xFDD
  3262                           plusw2	equ	0xFDB
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _INTERRUPT_InterruptManager *****************
  3268 ;; Defined at:
  3269 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3286 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;Total ram usage:       18 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		Absolute function
  3292 ;;		_EUSART1_Receive_ISR
  3293 ;;		_EUSART1_Transmit_ISR
  3294 ;;		_I2C_BusCollisionISR
  3295 ;;		_I2C_ISR
  3296 ;;		_TMR1_ISR
  3297 ;; This function is called by:
  3298 ;;		Interrupt level 2
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	intcode
  3303  000008                     __pintcode:
  3304                           	opt stack 0
  3305  000008                     _INTERRUPT_InterruptManager:
  3306                           	opt stack 24
  3307                           
  3308                           ;incstack = 0
  3309  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3310  00000A  CFFA F028          	movff	pclath,??_INTERRUPT_InterruptManager
  3311  00000E  CFFB F029          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3312  000012  CFE9 F02A          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  3313  000016  CFEA F02B          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  3314  00001A  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  3315  00001E  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  3316  000022  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  3317  000026  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  3318  00002A  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+8
  3319  00002E  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+9
  3320  000032  CFF6 F032          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  3321  000036  CFF7 F033          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  3322  00003A  CFF8 F034          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  3323  00003E  CFF5 F035          	movff	tablat,??_INTERRUPT_InterruptManager+13
  3324  000042  C048  F036         	movff	btemp,??_INTERRUPT_InterruptManager+14
  3325  000046  C049  F037         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  3326  00004A  C04A  F038         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  3327  00004E  C04B  F039         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  3328                           
  3329                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  3330  000052  ACF2               	btfss	intcon,6,c	;volatile
  3331  000054  D02C               	goto	i2l358
  3332                           
  3333                           ;interrupt_manager.c: 62: {
  3334                           ;interrupt_manager.c: 63: if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
  3335  000056  B6A0               	btfsc	4000,3,c	;volatile
  3336  000058  A6A1               	btfss	4001,3,c	;volatile
  3337  00005A  D003               	goto	i2l350
  3338                           
  3339                           ;interrupt_manager.c: 64: {
  3340                           ;interrupt_manager.c: 65: I2C_BusCollisionISR();
  3341  00005C  EC8F  F00C         	call	_I2C_BusCollisionISR	;wreg free
  3342                           
  3343                           ;interrupt_manager.c: 66: }
  3344  000060  D026               	goto	i2l358
  3345  000062                     i2l350:
  3346                           
  3347                           ;interrupt_manager.c: 67: else if(PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1)
  3348  000062  B69D               	btfsc	3997,3,c	;volatile
  3349  000064  A69E               	btfss	3998,3,c	;volatile
  3350  000066  D003               	goto	i2l352
  3351                           
  3352                           ;interrupt_manager.c: 68: {
  3353                           ;interrupt_manager.c: 69: I2C_ISR();
  3354  000068  EC8F  F007         	call	_I2C_ISR	;wreg free
  3355                           
  3356                           ;interrupt_manager.c: 70: }
  3357  00006C  D020               	goto	i2l358
  3358  00006E                     i2l352:
  3359                           
  3360                           ;interrupt_manager.c: 71: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3361  00006E  B89D               	btfsc	3997,4,c	;volatile
  3362  000070  A89E               	btfss	3998,4,c	;volatile
  3363  000072  D009               	goto	i2l354
  3364                           
  3365                           ;interrupt_manager.c: 72: {
  3366                           ;interrupt_manager.c: 73: EUSART1_TxDefaultInterruptHandler();
  3367  000074  D801               	call	i2u202_48
  3368  000076  D01B               	goto	i2l358
  3369  000078                     i2u202_48:
  3370  000078  0005               	push	
  3371  00007A  6EFA               	movwf	pclath,c
  3372  00007C  0100               	movlb	0	; () banked
  3373  00007E  51B4               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  3374  000080  6EFD               	movwf	tosl,c
  3375  000082  51B5               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  3376  000084  D00B               	goto	L1
  3377  000086                     i2l354:
  3378                           
  3379                           ;interrupt_manager.c: 75: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  3380  000086  BA9D               	btfsc	3997,5,c	;volatile
  3381  000088  AA9E               	btfss	3998,5,c	;volatile
  3382  00008A  D00C               	goto	i2l356
  3383                           
  3384                           ;interrupt_manager.c: 76: {
  3385                           ;interrupt_manager.c: 77: EUSART1_RxDefaultInterruptHandler();
  3386  00008C  D801               	call	i2u205_48
  3387  00008E  D00F               	goto	i2l358
  3388  000090                     i2u205_48:
  3389  000090  0005               	push	
  3390  000092  6EFA               	movwf	pclath,c
  3391  000094  0100               	movlb	0	; () banked
  3392  000096  51B2               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  3393  000098  6EFD               	movwf	tosl,c
  3394  00009A  51B3               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  3395  00009C                     L1:
  3396  00009C  6EFE               	movwf	tosh,c
  3397  00009E  6AFF               	clrf	tosu,c
  3398  0000A0  50FA               	movf	pclath,w,c
  3399  0000A2  0012               	return		;indir
  3400  0000A4                     i2l356:
  3401                           
  3402                           ;interrupt_manager.c: 79: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3403  0000A4  B09D               	btfsc	3997,0,c	;volatile
  3404  0000A6  A09E               	btfss	3998,0,c	;volatile
  3405  0000A8  D002               	goto	i2l358
  3406                           
  3407                           ;interrupt_manager.c: 80: {
  3408                           ;interrupt_manager.c: 81: TMR1_ISR();
  3409  0000AA  ECC3  F00B         	call	_TMR1_ISR	;wreg free
  3410  0000AE                     i2l358:
  3411                           
  3412                           ;interrupt_manager.c: 88: else
  3413                           ;interrupt_manager.c: 89: {
  3414                           
  3415                           ;interrupt_manager.c: 86: }
  3416                           ;interrupt_manager.c: 87: }
  3417                           
  3418                           ;interrupt_manager.c: 83: else
  3419                           ;interrupt_manager.c: 84: {
  3420  0000AE  C039  F04B         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  3421  0000B2  C038  F04A         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  3422  0000B6  C037  F049         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  3423  0000BA  C036  F048         	movff	??_INTERRUPT_InterruptManager+14,btemp
  3424  0000BE  C035  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  3425  0000C2  C034  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  3426  0000C6  C033  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  3427  0000CA  C032  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  3428  0000CE  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  3429  0000D2  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  3430  0000D6  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  3431  0000DA  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  3432  0000DE  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  3433  0000E2  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  3434  0000E6  C02B  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  3435  0000EA  C02A  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  3436  0000EE  C029  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3437  0000F2  C028  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3438  0000F6  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3439  0000F8  0011               	retfie		f
  3440  0000FA                     __end_of_INTERRUPT_InterruptManager:
  3441                           	opt stack 0
  3442                           tosu	equ	0xFFF
  3443                           tosh	equ	0xFFE
  3444                           tosl	equ	0xFFD
  3445                           pclatu	equ	0xFFB
  3446                           pclath	equ	0xFFA
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           prodh	equ	0xFF4
  3452                           prodl	equ	0xFF3
  3453                           intcon	equ	0xFF2
  3454                           intcon2	equ	0xFF1
  3455                           postinc0	equ	0xFEE
  3456                           fsr0h	equ	0xFEA
  3457                           fsr0l	equ	0xFE9
  3458                           wreg	equ	0xFE8
  3459                           fsr1h	equ	0xFE2
  3460                           fsr1l	equ	0xFE1
  3461                           indf2	equ	0xFDF
  3462                           postinc2	equ	0xFDE
  3463                           postdec2	equ	0xFDD
  3464                           plusw2	equ	0xFDB
  3465                           fsr2h	equ	0xFDA
  3466                           fsr2l	equ	0xFD9
  3467                           status	equ	0xFD8
  3468                           
  3469 ;; *************** function _TMR1_ISR *****************
  3470 ;; Defined at:
  3471 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    1
  3492 ;; This function calls:
  3493 ;;		Absolute function
  3494 ;;		_TMR1_DefaultInterruptHandler
  3495 ;;		_TMR1_WriteTimer
  3496 ;; This function is called by:
  3497 ;;		_INTERRUPT_InterruptManager
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text25
  3502  001786                     __ptext25:
  3503                           	opt stack 0
  3504  001786                     _TMR1_ISR:
  3505                           	opt stack 24
  3506                           
  3507                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
  3508                           
  3509                           ;incstack = 0
  3510  001786  909E               	bcf	3998,0,c	;volatile
  3511                           
  3512                           ;tmr1.c: 162: TMR1_WriteTimer(timer1ReloadVal);
  3513  001788  C044  F023         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  3514  00178C  C045  F024         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  3515  001790  EC41  F00C         	call	_TMR1_WriteTimer	;wreg free
  3516                           
  3517                           ;tmr1.c: 164: if(TMR1_InterruptHandler)
  3518  001794  0100               	movlb	0	; () banked
  3519  001796  51B0               	movf	_TMR1_InterruptHandler& (0+255),w,b
  3520  001798  11B1               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  3521  00179A  B4D8               	btfsc	status,2,c
  3522  00179C  0012               	return	
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;tmr1.c: 165: {
  3526                           ;tmr1.c: 166: TMR1_InterruptHandler();
  3527  00179E  D801               	call	i2u121_48
  3528  0017A0  0012               	return	
  3529  0017A2                     i2u121_48:
  3530  0017A2  0005               	push	
  3531  0017A4  6EFA               	movwf	pclath,c
  3532  0017A6  51B0               	movf	_TMR1_InterruptHandler& (0+255),w,b
  3533  0017A8  6EFD               	movwf	tosl,c
  3534  0017AA  51B1               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  3535  0017AC  6EFE               	movwf	tosh,c
  3536  0017AE  6AFF               	clrf	tosu,c
  3537  0017B0  50FA               	movf	pclath,w,c
  3538  0017B2  0012               	return		;indir
  3539  0017B4                     __end_of_TMR1_ISR:
  3540                           	opt stack 0
  3541                           tosu	equ	0xFFF
  3542                           tosh	equ	0xFFE
  3543                           tosl	equ	0xFFD
  3544                           pclatu	equ	0xFFB
  3545                           pclath	equ	0xFFA
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           intcon2	equ	0xFF1
  3554                           postinc0	equ	0xFEE
  3555                           fsr0h	equ	0xFEA
  3556                           fsr0l	equ	0xFE9
  3557                           wreg	equ	0xFE8
  3558                           fsr1h	equ	0xFE2
  3559                           fsr1l	equ	0xFE1
  3560                           indf2	equ	0xFDF
  3561                           postinc2	equ	0xFDE
  3562                           postdec2	equ	0xFDD
  3563                           plusw2	equ	0xFDB
  3564                           fsr2h	equ	0xFDA
  3565                           fsr2l	equ	0xFD9
  3566                           status	equ	0xFD8
  3567                           
  3568 ;; *************** function _TMR1_WriteTimer *****************
  3569 ;; Defined at:
  3570 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  timerVal        2    0[COMRAM] unsigned int 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;Total ram usage:        2 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_TMR1_ISR
  3594 ;;		_TMR1_Reload
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text26
  3599  001882                     __ptext26:
  3600                           	opt stack 0
  3601  001882                     _TMR1_WriteTimer:
  3602                           	opt stack 24
  3603                           
  3604                           ;tmr1.c: 122: if (T1CONbits.nT1SYNC == 1)
  3605                           
  3606                           ;incstack = 0
  3607  001882  A4CD               	btfss	4045,2,c	;volatile
  3608  001884  D007               	goto	i2l684
  3609                           
  3610                           ;tmr1.c: 123: {
  3611                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
  3612  001886  90CD               	bcf	4045,0,c	;volatile
  3613                           
  3614                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
  3615  001888  5024               	movf	TMR1_WriteTimer@timerVal+1,w,c
  3616  00188A  6ECF               	movwf	4047,c	;volatile
  3617                           
  3618                           ;tmr1.c: 129: TMR1L = timerVal;
  3619  00188C  C023  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3620                           
  3621                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
  3622  001890  80CD               	bsf	4045,0,c	;volatile
  3623                           
  3624                           ;tmr1.c: 133: }
  3625  001892  0012               	return	
  3626  001894                     i2l684:
  3627                           
  3628                           ;tmr1.c: 134: else
  3629                           ;tmr1.c: 135: {
  3630                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
  3631  001894  5024               	movf	TMR1_WriteTimer@timerVal+1,w,c
  3632  001896  6ECF               	movwf	4047,c	;volatile
  3633                           
  3634                           ;tmr1.c: 138: TMR1L = timerVal;
  3635  001898  C023  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3636  00189C  0012               	return	
  3637  00189E                     __end_of_TMR1_WriteTimer:
  3638                           	opt stack 0
  3639                           tosu	equ	0xFFF
  3640                           tosh	equ	0xFFE
  3641                           tosl	equ	0xFFD
  3642                           pclatu	equ	0xFFB
  3643                           pclath	equ	0xFFA
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           intcon2	equ	0xFF1
  3652                           postinc0	equ	0xFEE
  3653                           fsr0h	equ	0xFEA
  3654                           fsr0l	equ	0xFE9
  3655                           wreg	equ	0xFE8
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           postdec2	equ	0xFDD
  3661                           plusw2	equ	0xFDB
  3662                           fsr2h	equ	0xFDA
  3663                           fsr2l	equ	0xFD9
  3664                           status	equ	0xFD8
  3665                           
  3666 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3667 ;; Defined at:
  3668 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		None
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_TMR1_Initialize
  3692 ;;		_TMR1_ISR
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text27
  3697  001924                     __ptext27:
  3698                           	opt stack 0
  3699  001924                     _TMR1_DefaultInterruptHandler:
  3700                           	opt stack 24
  3701                           
  3702                           ;incstack = 0
  3703  001924  0012               	return		;funcret
  3704  001926                     __end_of_TMR1_DefaultInterruptHandler:
  3705                           	opt stack 0
  3706                           tosu	equ	0xFFF
  3707                           tosh	equ	0xFFE
  3708                           tosl	equ	0xFFD
  3709                           pclatu	equ	0xFFB
  3710                           pclath	equ	0xFFA
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           intcon	equ	0xFF2
  3718                           intcon2	equ	0xFF1
  3719                           postinc0	equ	0xFEE
  3720                           fsr0h	equ	0xFEA
  3721                           fsr0l	equ	0xFE9
  3722                           wreg	equ	0xFE8
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           plusw2	equ	0xFDB
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _I2C_ISR *****************
  3734 ;; Defined at:
  3735 ;;		line 233 in file "mcc_generated_files/i2c.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;Total ram usage:        2 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		_I2C_FunctionComplete
  3758 ;;		_I2C_Stop
  3759 ;; This function is called by:
  3760 ;;		_INTERRUPT_InterruptManager
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text28
  3765  000F1E                     __ptext28:
  3766                           	opt stack 0
  3767  000F1E                     _I2C_ISR:
  3768                           	opt stack 24
  3769                           
  3770                           ;i2c.c: 236: static uint8_t *pi2c_buf_ptr;
  3771                           ;i2c.c: 237: static uint16_t i2c_address = 0;
  3772                           ;i2c.c: 238: static uint8_t i2c_bytes_left = 0;
  3773                           ;i2c.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  3774                           ;i2c.c: 241: PIR1bits.SSPIF = 0;
  3775                           
  3776                           ;incstack = 0
  3777  000F1E  969E               	bcf	3998,3,c	;volatile
  3778                           
  3779                           ;i2c.c: 245: if(SSPCON1bits.WCOL)
  3780  000F20  AEC6               	btfss	4038,7,c	;volatile
  3781  000F22  D11F               	goto	i2l460
  3782                           
  3783                           ;i2c.c: 246: {
  3784                           ;i2c.c: 248: SSPCON1bits.WCOL = 0;
  3785  000F24  9EC6               	bcf	4038,7,c	;volatile
  3786                           
  3787                           ;i2c.c: 249: i2c_state = S_MASTER_IDLE;
  3788  000F26  0E00               	movlw	0
  3789  000F28  6E1B               	movwf	_i2c_state,c
  3790                           
  3791                           ;i2c.c: 250: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  3792  000F2A  EE20 F003          	lfsr	2,3
  3793  000F2E  500A               	movf	_p_i2c_current,w,c
  3794  000F30  26D9               	addwf	fsr2l,f,c
  3795  000F32  500B               	movf	_p_i2c_current+1,w,c
  3796  000F34  22DA               	addwfc	fsr2h,f,c
  3797  000F36  CFDE F026          	movff	postinc2,??_I2C_ISR
  3798  000F3A  CFDD F027          	movff	postdec2,??_I2C_ISR+1
  3799  000F3E  C026  FFF6         	movff	??_I2C_ISR,tblptrl
  3800  000F42  C027  FFF7         	movff	??_I2C_ISR+1,tblptrh
  3801  000F46  0E00               	movlw	low (__smallconst shr (0+16))
  3802  000F48  6EF8               	movwf	tblptru,c
  3803  000F4A  0E0E               	movlw	(high __ramtop+-1)
  3804  000F4C  64F7               	cpfsgt	tblptrh,c
  3805  000F4E  D004               	bra	i2u170_47
  3806  000F50  0E01               	movlw	1
  3807  000F52  6EF5               	movwf	tablat,c
  3808  000F54  000C               	tblwt		*
  3809  000F56  D006               	bra	i2u170_40
  3810  000F58                     i2u170_47:
  3811  000F58  CFF6 FFE9          	movff	tblptrl,fsr0l
  3812  000F5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3813  000F60  0E01               	movlw	1
  3814  000F62  6EEF               	movwf	indf0,c
  3815  000F64                     i2u170_40:
  3816                           
  3817                           ;i2c.c: 253: p_i2c_current = (0);
  3818  000F64  0E00               	movlw	0
  3819  000F66  6E0A               	movwf	_p_i2c_current,c
  3820  000F68  0E00               	movlw	0
  3821  000F6A  6E0B               	movwf	_p_i2c_current+1,c
  3822                           
  3823                           ;i2c.c: 255: return;
  3824  000F6C  0012               	return	
  3825  000F6E                     i2l461:
  3826                           
  3827                           ;i2c.c: 263: if(i2c_object.trStatus.s.empty != 1)
  3828  000F6E  B205               	btfsc	_i2c_object+4,1,c
  3829  000F70  0012               	return	
  3830                           
  3831                           ;i2c.c: 264: {
  3832                           ;i2c.c: 266: p_i2c_current = i2c_object.pTrHead;
  3833  000F72  C003  F00A         	movff	_i2c_object+2,_p_i2c_current
  3834  000F76  C004  F00B         	movff	_i2c_object+3,_p_i2c_current+1
  3835                           
  3836                           ;i2c.c: 267: i2c_trb_count = i2c_object.pTrHead->count;
  3837  000F7A  C003  FFD9         	movff	_i2c_object+2,fsr2l
  3838  000F7E  C004  FFDA         	movff	_i2c_object+3,fsr2h
  3839  000F82  50DF               	movf	indf2,w,c
  3840  000F84  6E1A               	movwf	_i2c_trb_count,c
  3841                           
  3842                           ;i2c.c: 268: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  3843  000F86  EE20 F001          	lfsr	2,1
  3844  000F8A  5003               	movf	_i2c_object+2,w,c
  3845  000F8C  26D9               	addwf	fsr2l,f,c
  3846  000F8E  5004               	movf	_i2c_object+3,w,c
  3847  000F90  22DA               	addwfc	fsr2h,f,c
  3848  000F92  CFDE F00C          	movff	postinc2,_p_i2c_trb_current
  3849  000F96  CFDD F00D          	movff	postdec2,_p_i2c_trb_current+1
  3850                           
  3851                           ;i2c.c: 270: i2c_object.pTrHead++;
  3852  000F9A  0E05               	movlw	5
  3853  000F9C  2603               	addwf	_i2c_object+2,f,c
  3854  000F9E  0E00               	movlw	0
  3855  000FA0  2204               	addwfc	_i2c_object+3,f,c
  3856                           
  3857                           ;i2c.c: 273: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  3858  000FA2  0E21               	movlw	low (_i2c_tr_queue+5)
  3859  000FA4  1803               	xorwf	_i2c_object+2,w,c
  3860  000FA6  E108               	bnz	i2l3060
  3861  000FA8  0E00               	movlw	high (_i2c_tr_queue+5)
  3862  000FAA  1804               	xorwf	_i2c_object+3,w,c
  3863  000FAC  A4D8               	btfss	status,2,c
  3864  000FAE  D004               	goto	i2l463
  3865                           
  3866                           ;i2c.c: 274: {
  3867                           ;i2c.c: 276: i2c_object.pTrHead = i2c_tr_queue;
  3868  000FB0  0E1C               	movlw	low _i2c_tr_queue
  3869  000FB2  6E03               	movwf	_i2c_object+2,c
  3870  000FB4  0E00               	movlw	high _i2c_tr_queue
  3871  000FB6  6E04               	movwf	_i2c_object+3,c
  3872  000FB8                     i2l463:
  3873  000FB8                     i2l3060:
  3874                           
  3875                           ;i2c.c: 277: }
  3876                           ;i2c.c: 281: i2c_object.trStatus.s.full = 0;
  3877  000FB8  9005               	bcf	_i2c_object+4,0,c
  3878                           
  3879                           ;i2c.c: 284: if(i2c_object.pTrHead == i2c_object.pTrTail)
  3880  000FBA  5001               	movf	_i2c_object,w,c
  3881  000FBC  1803               	xorwf	_i2c_object+2,w,c
  3882  000FBE  E104               	bnz	i2l464
  3883  000FC0  5002               	movf	_i2c_object+1,w,c
  3884  000FC2  1804               	xorwf	_i2c_object+3,w,c
  3885  000FC4  B4D8               	btfsc	status,2,c
  3886                           
  3887                           ;i2c.c: 285: {
  3888                           ;i2c.c: 287: i2c_object.trStatus.s.empty = 1;
  3889  000FC6  8205               	bsf	_i2c_object+4,1,c
  3890  000FC8                     i2l464:
  3891                           
  3892                           ;i2c.c: 288: }
  3893                           ;i2c.c: 291: SSPCON2bits.SEN = 1;
  3894  000FC8  80C5               	bsf	4037,0,c	;volatile
  3895                           
  3896                           ;i2c.c: 294: i2c_state = S_MASTER_SEND_ADDR;
  3897  000FCA  0E02               	movlw	2
  3898  000FCC  6E1B               	movwf	_i2c_state,c
  3899                           
  3900                           ;i2c.c: 295: }
  3901                           ;i2c.c: 297: break;
  3902  000FCE  0012               	return	
  3903  000FD0                     i2l466:
  3904                           
  3905                           ;i2c.c: 304: SSPCON2bits.RSEN = 1;
  3906  000FD0  82C5               	bsf	4037,1,c	;volatile
  3907                           
  3908                           ;i2c.c: 307: i2c_state = S_MASTER_SEND_ADDR;
  3909  000FD2  0E02               	movlw	2
  3910  000FD4  6E1B               	movwf	_i2c_state,c
  3911                           
  3912                           ;i2c.c: 309: break;
  3913  000FD6  0012               	return	
  3914  000FD8                     i2l467:
  3915                           
  3916                           ;i2c.c: 313: if(SSPCON2bits.ACKSTAT)
  3917  000FD8  ACC5               	btfss	4037,6,c	;volatile
  3918  000FDA  D005               	goto	i2l468
  3919                           
  3920                           ;i2c.c: 314: {
  3921                           ;i2c.c: 315: i2c_object.i2cErrors++;
  3922  000FDC  2A07               	incf	_i2c_object+6,f,c
  3923                           
  3924                           ;i2c.c: 316: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  3925  000FDE  0E04               	movlw	4
  3926  000FE0  EC64  F00A         	call	_I2C_Stop
  3927                           
  3928                           ;i2c.c: 317: }
  3929  000FE4  0012               	return	
  3930  000FE6                     i2l468:
  3931                           
  3932                           ;i2c.c: 318: else
  3933                           ;i2c.c: 319: {
  3934                           ;i2c.c: 321: SSPBUF = (i2c_address >> 1) & 0x00FF;
  3935  000FE6  90D8               	bcf	status,0,c
  3936  000FE8  3022               	rrcf	I2C_ISR@i2c_address+1,w,c
  3937  000FEA  6E27               	movwf	(??_I2C_ISR+1)& (0+255),c
  3938  000FEC  3021               	rrcf	I2C_ISR@i2c_address,w,c
  3939  000FEE  6E26               	movwf	??_I2C_ISR& (0+255),c
  3940  000FF0  5026               	movf	??_I2C_ISR,w,c
  3941  000FF2  6EC9               	movwf	4041,c	;volatile
  3942                           
  3943                           ;i2c.c: 324: if(i2c_address & 0x01)
  3944  000FF4  A021               	btfss	I2C_ISR@i2c_address,0,c
  3945  000FF6  D003               	goto	i2l470
  3946                           
  3947                           ;i2c.c: 325: {
  3948                           ;i2c.c: 328: i2c_state = S_MASTER_10BIT_RESTART;
  3949  000FF8  0E0B               	movlw	11
  3950  000FFA  6E1B               	movwf	_i2c_state,c
  3951                           
  3952                           ;i2c.c: 329: }
  3953  000FFC  0012               	return	
  3954  000FFE                     i2l470:
  3955                           
  3956                           ;i2c.c: 330: else
  3957                           ;i2c.c: 331: {
  3958                           ;i2c.c: 333: i2c_state = S_MASTER_SEND_DATA;
  3959  000FFE  0E03               	movlw	3
  3960  001000  6E1B               	movwf	_i2c_state,c
  3961                           
  3962                           ;i2c.c: 334: }
  3963                           ;i2c.c: 335: }
  3964                           ;i2c.c: 337: break;
  3965  001002  0012               	return	
  3966  001004                     i2l472:
  3967                           
  3968                           ;i2c.c: 341: if(SSPCON2bits.ACKSTAT)
  3969  001004  ACC5               	btfss	4037,6,c	;volatile
  3970  001006  D005               	goto	i2l473
  3971                           
  3972                           ;i2c.c: 342: {
  3973                           ;i2c.c: 343: i2c_object.i2cErrors++;
  3974  001008  2A07               	incf	_i2c_object+6,f,c
  3975                           
  3976                           ;i2c.c: 344: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  3977  00100A  0E04               	movlw	4
  3978  00100C  EC64  F00A         	call	_I2C_Stop
  3979                           
  3980                           ;i2c.c: 345: }
  3981  001010  0012               	return	
  3982  001012                     i2l473:
  3983                           
  3984                           ;i2c.c: 346: else
  3985                           ;i2c.c: 347: {
  3986                           ;i2c.c: 350: SSPCON2bits.RSEN = 1;
  3987  001012  82C5               	bsf	4037,1,c	;volatile
  3988                           
  3989                           ;i2c.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  3990  001014  C021  F026         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  3991  001018  C022  F027         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  3992  00101C  C027  F026         	movff	??_I2C_ISR+1,??_I2C_ISR
  3993  001020  6A27               	clrf	??_I2C_ISR+1,c
  3994  001022  0E06               	movlw	6
  3995  001024  1626               	andwf	??_I2C_ISR,f,c
  3996  001026  0E00               	movlw	0
  3997  001028  1627               	andwf	??_I2C_ISR+1,f,c
  3998  00102A  0EF0               	movlw	240
  3999  00102C  1026               	iorwf	??_I2C_ISR,w,c
  4000  00102E  6E21               	movwf	I2C_ISR@i2c_address,c
  4001  001030  5027               	movf	??_I2C_ISR+1,w,c
  4002  001032  6E22               	movwf	I2C_ISR@i2c_address+1,c
  4003                           
  4004                           ;i2c.c: 357: i2c_address |= 0x0001;
  4005  001034  8021               	bsf	I2C_ISR@i2c_address,0,c
  4006                           
  4007                           ;i2c.c: 360: i2c_10bit_address_restart = 1;
  4008  001036  0E01               	movlw	1
  4009  001038  6E18               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  4010                           
  4011                           ;i2c.c: 363: i2c_state = S_MASTER_SEND_ADDR;
  4012  00103A  0E02               	movlw	2
  4013  00103C  6E1B               	movwf	_i2c_state,c
  4014                           
  4015                           ;i2c.c: 364: }
  4016                           ;i2c.c: 366: break;
  4017  00103E  0012               	return	
  4018  001040                     
  4019                           ;i2c.c: 381: if(i2c_10bit_address_restart != 1)
  4020  001040  0418               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  4021  001042  B4D8               	btfsc	status,2,c
  4022  001044  D01A               	goto	i2l477
  4023                           
  4024                           ;i2c.c: 382: {
  4025                           ;i2c.c: 384: i2c_address = p_i2c_trb_current->address;
  4026  001046  C00C  FFD9         	movff	_p_i2c_trb_current,fsr2l
  4027  00104A  C00D  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  4028  00104E  CFDE F021          	movff	postinc2,I2C_ISR@i2c_address
  4029  001052  CFDD F022          	movff	postdec2,I2C_ISR@i2c_address+1
  4030                           
  4031                           ;i2c.c: 385: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  4032  001056  EE20 F003          	lfsr	2,3
  4033  00105A  500C               	movf	_p_i2c_trb_current,w,c
  4034  00105C  26D9               	addwf	fsr2l,f,c
  4035  00105E  500D               	movf	_p_i2c_trb_current+1,w,c
  4036  001060  22DA               	addwfc	fsr2h,f,c
  4037  001062  CFDE F008          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  4038  001066  CFDD F009          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  4039                           
  4040                           ;i2c.c: 386: i2c_bytes_left = p_i2c_trb_current->length;
  4041  00106A  EE20 F002          	lfsr	2,2
  4042  00106E  500C               	movf	_p_i2c_trb_current,w,c
  4043  001070  26D9               	addwf	fsr2l,f,c
  4044  001072  500D               	movf	_p_i2c_trb_current+1,w,c
  4045  001074  22DA               	addwfc	fsr2h,f,c
  4046  001076  50DF               	movf	indf2,w,c
  4047  001078  6E19               	movwf	I2C_ISR@i2c_bytes_left,c
  4048  00107A                     i2l477:
  4049                           
  4050                           ;i2c.c: 409: else
  4051                           ;i2c.c: 410: {
  4052                           ;i2c.c: 412: SSPBUF = i2c_address;
  4053  00107A  C021  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  4054                           
  4055                           ;i2c.c: 413: if(i2c_address & 0x01)
  4056  00107E  A021               	btfss	I2C_ISR@i2c_address,0,c
  4057  001080  D003               	goto	i2l481
  4058                           
  4059                           ;i2c.c: 414: {
  4060                           ;i2c.c: 416: i2c_state = S_MASTER_ACK_ADDR;
  4061  001082  0E05               	movlw	5
  4062  001084  6E1B               	movwf	_i2c_state,c
  4063                           
  4064                           ;i2c.c: 417: }
  4065  001086  0012               	return	
  4066  001088                     i2l481:
  4067                           
  4068                           ;i2c.c: 418: else
  4069                           ;i2c.c: 419: {
  4070                           ;i2c.c: 421: i2c_state = S_MASTER_SEND_DATA;
  4071  001088  0E03               	movlw	3
  4072  00108A  6E1B               	movwf	_i2c_state,c
  4073                           
  4074                           ;i2c.c: 422: }
  4075                           ;i2c.c: 423: }
  4076                           ;i2c.c: 424: break;
  4077  00108C  0012               	return	
  4078  00108E                     i2l483:
  4079                           
  4080                           ;i2c.c: 429: if(SSPCON2bits.ACKSTAT)
  4081  00108E  ACC5               	btfss	4037,6,c	;volatile
  4082  001090  D006               	goto	i2l484
  4083                           
  4084                           ;i2c.c: 430: {
  4085                           ;i2c.c: 432: i2c_object.i2cErrors++;
  4086  001092  2A07               	incf	_i2c_object+6,f,c
  4087                           
  4088                           ;i2c.c: 435: SSPCON2bits.ACKSTAT = 0;
  4089  001094  9CC5               	bcf	4037,6,c	;volatile
  4090                           
  4091                           ;i2c.c: 438: I2C_Stop(I2C_DATA_NO_ACK);
  4092  001096  0E05               	movlw	5
  4093  001098  EC64  F00A         	call	_I2C_Stop
  4094                           
  4095                           ;i2c.c: 440: }
  4096  00109C  0012               	return	
  4097  00109E                     i2l484:
  4098                           
  4099                           ;i2c.c: 441: else
  4100                           ;i2c.c: 442: {
  4101                           ;i2c.c: 444: if(i2c_bytes_left-- == 0U)
  4102  00109E  0619               	decf	I2C_ISR@i2c_bytes_left,f,c
  4103  0010A0  2819               	incf	I2C_ISR@i2c_bytes_left,w,c
  4104  0010A2  A4D8               	btfss	status,2,c
  4105  0010A4  D00E               	goto	i2l486
  4106                           
  4107                           ;i2c.c: 445: {
  4108                           ;i2c.c: 449: p_i2c_trb_current++;
  4109  0010A6  0E05               	movlw	5
  4110  0010A8  260C               	addwf	_p_i2c_trb_current,f,c
  4111  0010AA  0E00               	movlw	0
  4112  0010AC  220D               	addwfc	_p_i2c_trb_current+1,f,c
  4113                           
  4114                           ;i2c.c: 452: if(--i2c_trb_count == 0)
  4115  0010AE  2E1A               	decfsz	_i2c_trb_count,f,c
  4116  0010B0  D004               	goto	i2l487
  4117                           
  4118                           ;i2c.c: 453: {
  4119                           ;i2c.c: 454: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4120  0010B2  0E00               	movlw	0
  4121  0010B4  EC64  F00A         	call	_I2C_Stop
  4122                           
  4123                           ;i2c.c: 455: }
  4124  0010B8  0012               	return	
  4125  0010BA                     i2l487:
  4126                           
  4127                           ;i2c.c: 456: else
  4128                           ;i2c.c: 457: {
  4129                           ;i2c.c: 464: SSPCON2bits.RSEN = 1;
  4130  0010BA  82C5               	bsf	4037,1,c	;volatile
  4131                           
  4132                           ;i2c.c: 467: i2c_state = S_MASTER_SEND_ADDR;
  4133  0010BC  0E02               	movlw	2
  4134  0010BE  6E1B               	movwf	_i2c_state,c
  4135                           
  4136                           ;i2c.c: 469: }
  4137                           ;i2c.c: 470: }
  4138  0010C0  0012               	return	
  4139  0010C2                     i2l486:
  4140                           
  4141                           ;i2c.c: 471: else
  4142                           ;i2c.c: 472: {
  4143                           ;i2c.c: 474: SSPBUF = *pi2c_buf_ptr++;
  4144  0010C2  C008  FFF6         	movff	I2C_ISR@pi2c_buf_ptr,tblptrl
  4145  0010C6  C009  FFF7         	movff	I2C_ISR@pi2c_buf_ptr+1,tblptrh
  4146  0010CA  0E00               	movlw	low (__smallconst shr (0+16))
  4147  0010CC  6EF8               	movwf	tblptru,c
  4148  0010CE  0E0E               	movlw	(high __ramtop+-1)
  4149  0010D0  64F7               	cpfsgt	tblptrh,c
  4150  0010D2  D003               	bra	i2u183_47
  4151  0010D4  0008               	tblrd		*
  4152  0010D6  50F5               	movf	tablat,w,c
  4153  0010D8  D005               	bra	i2u183_40
  4154  0010DA                     i2u183_47:
  4155  0010DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4156  0010DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4157  0010E2  50EF               	movf	indf0,w,c
  4158  0010E4                     i2u183_40:
  4159  0010E4  6EC9               	movwf	4041,c	;volatile
  4160  0010E6  4A08               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  4161  0010E8  2A09               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  4162                           
  4163                           ;i2c.c: 475: }
  4164                           ;i2c.c: 476: }
  4165                           ;i2c.c: 477: break;
  4166  0010EA  0012               	return	
  4167  0010EC                     i2l490:
  4168                           
  4169                           ;i2c.c: 482: if(SSPCON2bits.ACKSTAT)
  4170  0010EC  ACC5               	btfss	4037,6,c	;volatile
  4171  0010EE  D006               	goto	i2l491
  4172                           
  4173                           ;i2c.c: 483: {
  4174                           ;i2c.c: 486: i2c_object.i2cErrors++;
  4175  0010F0  2A07               	incf	_i2c_object+6,f,c
  4176                           
  4177                           ;i2c.c: 489: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4178  0010F2  0E04               	movlw	4
  4179  0010F4  EC64  F00A         	call	_I2C_Stop
  4180                           
  4181                           ;i2c.c: 492: SSPCON2bits.ACKSTAT = 0;
  4182  0010F8  9CC5               	bcf	4037,6,c	;volatile
  4183                           
  4184                           ;i2c.c: 493: }
  4185  0010FA  0012               	return	
  4186  0010FC                     i2l491:
  4187                           
  4188                           ;i2c.c: 494: else
  4189                           ;i2c.c: 495: {
  4190                           ;i2c.c: 496: SSPCON2bits.RCEN = 1;
  4191  0010FC  86C5               	bsf	4037,3,c	;volatile
  4192                           
  4193                           ;i2c.c: 497: i2c_state = S_MASTER_ACK_RCV_DATA;
  4194  0010FE  0E08               	movlw	8
  4195  001100  6E1B               	movwf	_i2c_state,c
  4196                           
  4197                           ;i2c.c: 498: }
  4198                           ;i2c.c: 499: break;
  4199  001102  0012               	return	
  4200  001104                     
  4201                           ;i2c.c: 506: i2c_state = S_MASTER_ACK_RCV_DATA;
  4202  001104  0E08               	movlw	8
  4203  001106  6E1B               	movwf	_i2c_state,c
  4204                           
  4205                           ;i2c.c: 509: SSPCON2bits.RCEN = 1;
  4206  001108  86C5               	bsf	4037,3,c	;volatile
  4207                           
  4208                           ;i2c.c: 511: break;
  4209  00110A  0012               	return	
  4210  00110C                     
  4211                           ;i2c.c: 516: *pi2c_buf_ptr++ = SSPBUF;
  4212  00110C  C008  FFF6         	movff	I2C_ISR@pi2c_buf_ptr,tblptrl
  4213  001110  C009  FFF7         	movff	I2C_ISR@pi2c_buf_ptr+1,tblptrh
  4214  001114  0E00               	movlw	low (__smallconst shr (0+16))
  4215  001116  6EF8               	movwf	tblptru,c
  4216  001118  0E0E               	movlw	(high __ramtop+-1)
  4217  00111A  64F7               	cpfsgt	tblptrh,c
  4218  00111C  D004               	bra	i2u185_47
  4219  00111E  CFC9 FFF5          	movff	4041,tablat	;volatile
  4220  001122  000C               	tblwt		*
  4221  001124  D006               	bra	i2u185_40
  4222  001126                     i2u185_47:
  4223  001126  CFF6 FFE9          	movff	tblptrl,fsr0l
  4224  00112A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4225  00112E  CFC9 FFEF          	movff	4041,indf0	;volatile
  4226  001132                     i2u185_40:
  4227  001132  4A08               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  4228  001134  2A09               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  4229                           
  4230                           ;i2c.c: 519: if(--i2c_bytes_left)
  4231  001136  0E01               	movlw	1
  4232  001138  5E19               	subwf	I2C_ISR@i2c_bytes_left,f,c
  4233  00113A  B4D8               	btfsc	status,2,c
  4234  00113C  D004               	goto	i2l495
  4235                           
  4236                           ;i2c.c: 520: {
  4237                           ;i2c.c: 526: SSPCON2bits.ACKDT = 0;
  4238  00113E  9AC5               	bcf	4037,5,c	;volatile
  4239                           
  4240                           ;i2c.c: 529: i2c_state = S_MASTER_RCV_DATA;
  4241  001140  0E06               	movlw	6
  4242  001142  6E1B               	movwf	_i2c_state,c
  4243                           
  4244                           ;i2c.c: 530: }
  4245  001144  D003               	goto	i2l496
  4246  001146                     i2l495:
  4247                           
  4248                           ;i2c.c: 531: else
  4249                           ;i2c.c: 532: {
  4250                           ;i2c.c: 536: SSPCON2bits.ACKDT = 1;
  4251  001146  8AC5               	bsf	4037,5,c	;volatile
  4252                           
  4253                           ;i2c.c: 538: I2C_FunctionComplete();
  4254  001148  EC4F  F00C         	call	_I2C_FunctionComplete	;wreg free
  4255  00114C                     i2l496:
  4256                           
  4257                           ;i2c.c: 539: }
  4258                           ;i2c.c: 542: SSPCON2bits.ACKEN = 1;
  4259  00114C  88C5               	bsf	4037,4,c	;volatile
  4260                           
  4261                           ;i2c.c: 543: break;
  4262  00114E  0012               	return	
  4263  001150                     
  4264                           ;i2c.c: 546: case S_MASTER_SEND_STOP:
  4265                           ;i2c.c: 549: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4266  001150  0E00               	movlw	0
  4267  001152  EC64  F00A         	call	_I2C_Stop
  4268                           
  4269                           ;i2c.c: 550: break;
  4270  001156  0012               	return	
  4271  001158                     
  4272                           ;i2c.c: 556: i2c_object.i2cErrors++;
  4273  001158  2A07               	incf	_i2c_object+6,f,c
  4274                           
  4275                           ;i2c.c: 557: I2C_Stop(I2C_LOST_STATE);
  4276  00115A  0E06               	movlw	6
  4277  00115C  EC64  F00A         	call	_I2C_Stop
  4278                           
  4279                           ;i2c.c: 560: }
  4280                           
  4281                           ;i2c.c: 558: break;
  4282  001160  0012               	return	
  4283  001162                     i2l460:
  4284  001162  501B               	movf	_i2c_state,w,c
  4285                           
  4286                           ; Switch size 1, requested type "space"
  4287                           ; Number of cases is 11, Range of values is 0 to 11
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte           34    18 (average)
  4291                           ;	Chosen strategy is simple_byte
  4292  001164  0A00               	xorlw	0	; case 0
  4293  001166  B4D8               	btfsc	status,2,c
  4294  001168  D702               	goto	i2l461
  4295  00116A  0A01               	xorlw	1	; case 1
  4296  00116C  B4D8               	btfsc	status,2,c
  4297  00116E  D730               	goto	i2l466
  4298  001170  0A03               	xorlw	3	; case 2
  4299  001172  B4D8               	btfsc	status,2,c
  4300  001174  D765               	goto	i2l475
  4301  001176  0A01               	xorlw	1	; case 3
  4302  001178  B4D8               	btfsc	status,2,c
  4303  00117A  D789               	goto	i2l483
  4304  00117C  0A07               	xorlw	7	; case 4
  4305  00117E  B4D8               	btfsc	status,2,c
  4306  001180  D7E7               	goto	i2l497
  4307  001182  0A01               	xorlw	1	; case 5
  4308  001184  B4D8               	btfsc	status,2,c
  4309  001186  D7B2               	goto	i2l490
  4310  001188  0A03               	xorlw	3	; case 6
  4311  00118A  B4D8               	btfsc	status,2,c
  4312  00118C  D7BB               	goto	i2l493
  4313  00118E  0A01               	xorlw	1	; case 7
  4314  001190  B4D8               	btfsc	status,2,c
  4315  001192  D7DE               	goto	i2l497
  4316  001194  0A0F               	xorlw	15	; case 8
  4317  001196  B4D8               	btfsc	status,2,c
  4318  001198  D7B9               	goto	i2l494
  4319  00119A  0A02               	xorlw	2	; case 10
  4320  00119C  B4D8               	btfsc	status,2,c
  4321  00119E  D71C               	goto	i2l467
  4322  0011A0  0A01               	xorlw	1	; case 11
  4323  0011A2  B4D8               	btfsc	status,2,c
  4324  0011A4  D72F               	goto	i2l472
  4325  0011A6  D7D8               	goto	i2l499
  4326  0011A8                     __end_of_I2C_ISR:
  4327                           	opt stack 0
  4328                           tosu	equ	0xFFF
  4329                           tosh	equ	0xFFE
  4330                           tosl	equ	0xFFD
  4331                           pclatu	equ	0xFFB
  4332                           pclath	equ	0xFFA
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           intcon	equ	0xFF2
  4340                           intcon2	equ	0xFF1
  4341                           indf0	equ	0xFEF
  4342                           postinc0	equ	0xFEE
  4343                           fsr0h	equ	0xFEA
  4344                           fsr0l	equ	0xFE9
  4345                           wreg	equ	0xFE8
  4346                           fsr1h	equ	0xFE2
  4347                           fsr1l	equ	0xFE1
  4348                           indf2	equ	0xFDF
  4349                           postinc2	equ	0xFDE
  4350                           postdec2	equ	0xFDD
  4351                           plusw2	equ	0xFDB
  4352                           fsr2h	equ	0xFDA
  4353                           fsr2l	equ	0xFD9
  4354                           status	equ	0xFD8
  4355                           
  4356 ;; *************** function _I2C_Stop *****************
  4357 ;; Defined at:
  4358 ;;		line 581 in file "mcc_generated_files/i2c.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  completion_c    1    wreg     enum E15702
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  completion_c    1    2[COMRAM] enum E15702
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;Total ram usage:        3 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_I2C_ISR
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text29
  4386  0014C8                     __ptext29:
  4387                           	opt stack 0
  4388  0014C8                     _I2C_Stop:
  4389                           	opt stack 24
  4390                           
  4391                           ;incstack = 0
  4392                           ;I2C_Stop@completion_code stored from wreg
  4393  0014C8  6E25               	movwf	I2C_Stop@completion_code,c
  4394                           
  4395                           ;i2c.c: 584: SSPCON2bits.PEN = 1;
  4396  0014CA  84C5               	bsf	4037,2,c	;volatile
  4397                           
  4398                           ;i2c.c: 587: if (p_i2c_current->pTrFlag != (0))
  4399  0014CC  EE20 F003          	lfsr	2,3
  4400  0014D0  500A               	movf	_p_i2c_current,w,c
  4401  0014D2  26D9               	addwf	fsr2l,f,c
  4402  0014D4  500B               	movf	_p_i2c_current+1,w,c
  4403  0014D6  22DA               	addwfc	fsr2h,f,c
  4404  0014D8  50DE               	movf	postinc2,w,c
  4405  0014DA  10DE               	iorwf	postinc2,w,c
  4406  0014DC  B4D8               	btfsc	status,2,c
  4407  0014DE  D01D               	goto	i2u165_40
  4408                           
  4409                           ;i2c.c: 588: {
  4410                           ;i2c.c: 590: *(p_i2c_current->pTrFlag) = completion_code;
  4411  0014E0  EE20 F003          	lfsr	2,3
  4412  0014E4  500A               	movf	_p_i2c_current,w,c
  4413  0014E6  26D9               	addwf	fsr2l,f,c
  4414  0014E8  500B               	movf	_p_i2c_current+1,w,c
  4415  0014EA  22DA               	addwfc	fsr2h,f,c
  4416  0014EC  CFDE F023          	movff	postinc2,??_I2C_Stop
  4417  0014F0  CFDD F024          	movff	postdec2,??_I2C_Stop+1
  4418  0014F4  C023  FFF6         	movff	??_I2C_Stop,tblptrl
  4419  0014F8  C024  FFF7         	movff	??_I2C_Stop+1,tblptrh
  4420  0014FC  0E00               	movlw	low (__smallconst shr (0+16))
  4421  0014FE  6EF8               	movwf	tblptru,c
  4422  001500  0E0E               	movlw	(high __ramtop+-1)
  4423  001502  64F7               	cpfsgt	tblptrh,c
  4424  001504  D004               	bra	i2u165_47
  4425  001506  C025  FFF5         	movff	I2C_Stop@completion_code,tablat
  4426  00150A  000C               	tblwt		*
  4427  00150C  D006               	bra	i2u165_40
  4428  00150E                     i2u165_47:
  4429  00150E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4430  001512  CFF7 FFEA          	movff	tblptrh,fsr0h
  4431  001516  C025  FFEF         	movff	I2C_Stop@completion_code,indf0
  4432  00151A                     i2u165_40:
  4433                           
  4434                           ;i2c.c: 591: }
  4435                           ;i2c.c: 594: i2c_state = S_MASTER_IDLE;
  4436  00151A  0E00               	movlw	0
  4437  00151C  6E1B               	movwf	_i2c_state,c
  4438  00151E  0012               	return		;funcret
  4439  001520                     __end_of_I2C_Stop:
  4440                           	opt stack 0
  4441                           tosu	equ	0xFFF
  4442                           tosh	equ	0xFFE
  4443                           tosl	equ	0xFFD
  4444                           pclatu	equ	0xFFB
  4445                           pclath	equ	0xFFA
  4446                           tblptru	equ	0xFF8
  4447                           tblptrh	equ	0xFF7
  4448                           tblptrl	equ	0xFF6
  4449                           tablat	equ	0xFF5
  4450                           prodh	equ	0xFF4
  4451                           prodl	equ	0xFF3
  4452                           intcon	equ	0xFF2
  4453                           intcon2	equ	0xFF1
  4454                           indf0	equ	0xFEF
  4455                           postinc0	equ	0xFEE
  4456                           fsr0h	equ	0xFEA
  4457                           fsr0l	equ	0xFE9
  4458                           wreg	equ	0xFE8
  4459                           fsr1h	equ	0xFE2
  4460                           fsr1l	equ	0xFE1
  4461                           indf2	equ	0xFDF
  4462                           postinc2	equ	0xFDE
  4463                           postdec2	equ	0xFDD
  4464                           plusw2	equ	0xFDB
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _I2C_FunctionComplete *****************
  4470 ;; Defined at:
  4471 ;;		line 563 in file "mcc_generated_files/i2c.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_I2C_ISR
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text30
  4499  00189E                     __ptext30:
  4500                           	opt stack 0
  4501  00189E                     _I2C_FunctionComplete:
  4502                           	opt stack 24
  4503                           
  4504                           ;i2c.c: 567: p_i2c_trb_current++;
  4505                           
  4506                           ;incstack = 0
  4507  00189E  0E05               	movlw	5
  4508  0018A0  260C               	addwf	_p_i2c_trb_current,f,c
  4509  0018A2  0E00               	movlw	0
  4510  0018A4  220D               	addwfc	_p_i2c_trb_current+1,f,c
  4511                           
  4512                           ;i2c.c: 570: if(--i2c_trb_count == 0)
  4513  0018A6  2E1A               	decfsz	_i2c_trb_count,f,c
  4514  0018A8  D003               	goto	i2l502
  4515                           
  4516                           ;i2c.c: 571: {
  4517                           ;i2c.c: 572: i2c_state = S_MASTER_SEND_STOP;
  4518  0018AA  0E04               	movlw	4
  4519  0018AC  6E1B               	movwf	_i2c_state,c
  4520                           
  4521                           ;i2c.c: 573: }
  4522  0018AE  0012               	return	
  4523  0018B0                     i2l502:
  4524                           
  4525                           ;i2c.c: 574: else
  4526                           ;i2c.c: 575: {
  4527                           ;i2c.c: 576: i2c_state = S_MASTER_RESTART;
  4528  0018B0  0E01               	movlw	1
  4529  0018B2  6E1B               	movwf	_i2c_state,c
  4530  0018B4  0012               	return	
  4531  0018B6                     __end_of_I2C_FunctionComplete:
  4532                           	opt stack 0
  4533                           tosu	equ	0xFFF
  4534                           tosh	equ	0xFFE
  4535                           tosl	equ	0xFFD
  4536                           pclatu	equ	0xFFB
  4537                           pclath	equ	0xFFA
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           prodh	equ	0xFF4
  4543                           prodl	equ	0xFF3
  4544                           intcon	equ	0xFF2
  4545                           intcon2	equ	0xFF1
  4546                           indf0	equ	0xFEF
  4547                           postinc0	equ	0xFEE
  4548                           fsr0h	equ	0xFEA
  4549                           fsr0l	equ	0xFE9
  4550                           wreg	equ	0xFE8
  4551                           fsr1h	equ	0xFE2
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           postinc2	equ	0xFDE
  4555                           postdec2	equ	0xFDD
  4556                           plusw2	equ	0xFDB
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8
  4560                           
  4561 ;; *************** function _I2C_BusCollisionISR *****************
  4562 ;; Defined at:
  4563 ;;		line 747 in file "mcc_generated_files/i2c.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		None
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_INTERRUPT_InterruptManager
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text31
  4591  00191E                     __ptext31:
  4592                           	opt stack 0
  4593  00191E                     _I2C_BusCollisionISR:
  4594                           	opt stack 25
  4595                           
  4596                           ;i2c.c: 750: PIR2bits.BCLIF = 0;
  4597                           
  4598                           ;incstack = 0
  4599  00191E  96A1               	bcf	4001,3,c	;volatile
  4600  001920  0012               	return		;funcret
  4601  001922                     __end_of_I2C_BusCollisionISR:
  4602                           	opt stack 0
  4603                           tosu	equ	0xFFF
  4604                           tosh	equ	0xFFE
  4605                           tosl	equ	0xFFD
  4606                           pclatu	equ	0xFFB
  4607                           pclath	equ	0xFFA
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           intcon	equ	0xFF2
  4615                           intcon2	equ	0xFF1
  4616                           indf0	equ	0xFEF
  4617                           postinc0	equ	0xFEE
  4618                           fsr0h	equ	0xFEA
  4619                           fsr0l	equ	0xFE9
  4620                           wreg	equ	0xFE8
  4621                           fsr1h	equ	0xFE2
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           plusw2	equ	0xFDB
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function _EUSART1_Transmit_ISR *****************
  4632 ;; Defined at:
  4633 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_EUSART1_Initialize
  4657 ;;		_INTERRUPT_InterruptManager
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text32
  4662  0017B4                     __ptext32:
  4663                           	opt stack 0
  4664  0017B4                     _EUSART1_Transmit_ISR:
  4665                           	opt stack 25
  4666                           
  4667                           ;eusart1.c: 176: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  4668                           
  4669                           ;incstack = 0
  4670  0017B4  0E08               	movlw	8
  4671  0017B6  6046               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  4672  0017B8  D012               	goto	i2l631
  4673                           
  4674                           ;eusart1.c: 177: {
  4675                           ;eusart1.c: 178: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  4676  0017BA  5016               	movf	_eusart1TxTail,w,c	;volatile
  4677  0017BC  0D01               	mullw	1
  4678  0017BE  0E85               	movlw	low _eusart1TxBuffer
  4679  0017C0  24F3               	addwf	prodl,w,c
  4680  0017C2  6ED9               	movwf	fsr2l,c
  4681  0017C4  0E00               	movlw	high _eusart1TxBuffer
  4682  0017C6  20F4               	addwfc	prodh,w,c
  4683  0017C8  6EDA               	movwf	fsr2h,c
  4684  0017CA  50DF               	movf	indf2,w,c
  4685  0017CC  6EAD               	movwf	4013,c	;volatile
  4686  0017CE  2A16               	incf	_eusart1TxTail,f,c	;volatile
  4687                           
  4688                           ;eusart1.c: 179: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  4689  0017D0  0E07               	movlw	7
  4690  0017D2  6416               	cpfsgt	_eusart1TxTail,c	;volatile
  4691  0017D4  D002               	goto	i2l632
  4692                           
  4693                           ;eusart1.c: 180: {
  4694                           ;eusart1.c: 181: eusart1TxTail = 0;
  4695  0017D6  0E00               	movlw	0
  4696  0017D8  6E16               	movwf	_eusart1TxTail,c	;volatile
  4697  0017DA                     i2l632:
  4698                           
  4699                           ;eusart1.c: 182: }
  4700                           ;eusart1.c: 183: eusart1TxBufferRemaining++;
  4701  0017DA  2A46               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  4702                           
  4703                           ;eusart1.c: 184: }
  4704  0017DC  0012               	return	
  4705  0017DE                     i2l631:
  4706                           
  4707                           ;eusart1.c: 185: else
  4708                           ;eusart1.c: 186: {
  4709                           ;eusart1.c: 187: PIE1bits.TX1IE = 0;
  4710  0017DE  989D               	bcf	3997,4,c	;volatile
  4711  0017E0  0012               	return	
  4712  0017E2                     __end_of_EUSART1_Transmit_ISR:
  4713                           	opt stack 0
  4714                           tosu	equ	0xFFF
  4715                           tosh	equ	0xFFE
  4716                           tosl	equ	0xFFD
  4717                           pclatu	equ	0xFFB
  4718                           pclath	equ	0xFFA
  4719                           tblptru	equ	0xFF8
  4720                           tblptrh	equ	0xFF7
  4721                           tblptrl	equ	0xFF6
  4722                           tablat	equ	0xFF5
  4723                           prodh	equ	0xFF4
  4724                           prodl	equ	0xFF3
  4725                           intcon	equ	0xFF2
  4726                           intcon2	equ	0xFF1
  4727                           indf0	equ	0xFEF
  4728                           postinc0	equ	0xFEE
  4729                           fsr0h	equ	0xFEA
  4730                           fsr0l	equ	0xFE9
  4731                           wreg	equ	0xFE8
  4732                           fsr1h	equ	0xFE2
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           plusw2	equ	0xFDB
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _EUSART1_Receive_ISR *****************
  4743 ;; Defined at:
  4744 ;;		line 191 in file "mcc_generated_files/eusart1.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_EUSART1_Initialize
  4768 ;;		_INTERRUPT_InterruptManager
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text33
  4773  0017E2                     __ptext33:
  4774                           	opt stack 0
  4775  0017E2                     _EUSART1_Receive_ISR:
  4776                           	opt stack 25
  4777                           
  4778                           ;eusart1.c: 194: if(1 == RCSTA1bits.OERR)
  4779                           
  4780                           ;incstack = 0
  4781  0017E2  A2AB               	btfss	4011,1,c	;volatile
  4782  0017E4  D002               	goto	i2l637
  4783                           
  4784                           ;eusart1.c: 195: {
  4785                           ;eusart1.c: 198: RCSTA1bits.CREN = 0;
  4786  0017E6  98AB               	bcf	4011,4,c	;volatile
  4787                           
  4788                           ;eusart1.c: 199: RCSTA1bits.CREN = 1;
  4789  0017E8  88AB               	bsf	4011,4,c	;volatile
  4790  0017EA                     i2l637:
  4791                           
  4792                           ;eusart1.c: 200: }
  4793                           ;eusart1.c: 203: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4794  0017EA  5015               	movf	_eusart1RxHead,w,c	;volatile
  4795  0017EC  0D01               	mullw	1
  4796  0017EE  0E7D               	movlw	low _eusart1RxBuffer
  4797  0017F0  24F3               	addwf	prodl,w,c
  4798  0017F2  6ED9               	movwf	fsr2l,c
  4799  0017F4  0E00               	movlw	high _eusart1RxBuffer
  4800  0017F6  20F4               	addwfc	prodh,w,c
  4801  0017F8  6EDA               	movwf	fsr2h,c
  4802  0017FA  CFAE FFDF          	movff	4014,indf2	;volatile
  4803  0017FE  2A15               	incf	_eusart1RxHead,f,c	;volatile
  4804                           
  4805                           ;eusart1.c: 204: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4806  001800  0E07               	movlw	7
  4807  001802  6415               	cpfsgt	_eusart1RxHead,c	;volatile
  4808  001804  D002               	goto	i2l638
  4809                           
  4810                           ;eusart1.c: 205: {
  4811                           ;eusart1.c: 207: eusart1RxHead = 0;
  4812  001806  0E00               	movlw	0
  4813  001808  6E15               	movwf	_eusart1RxHead,c	;volatile
  4814  00180A                     i2l638:
  4815                           
  4816                           ;eusart1.c: 208: }
  4817                           ;eusart1.c: 209: eusart1RxCount++;
  4818  00180A  2A13               	incf	_eusart1RxCount,f,c	;volatile
  4819  00180C  0012               	return		;funcret
  4820  00180E                     __end_of_EUSART1_Receive_ISR:
  4821                           	opt stack 0
  4822                           tosu	equ	0xFFF
  4823                           tosh	equ	0xFFE
  4824                           tosl	equ	0xFFD
  4825                           pclatu	equ	0xFFB
  4826                           pclath	equ	0xFFA
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           intcon	equ	0xFF2
  4834                           intcon2	equ	0xFF1
  4835                           indf0	equ	0xFEF
  4836                           postinc0	equ	0xFEE
  4837                           fsr0h	equ	0xFEA
  4838                           fsr0l	equ	0xFE9
  4839                           wreg	equ	0xFE8
  4840                           fsr1h	equ	0xFE2
  4841                           fsr1l	equ	0xFE1
  4842                           indf2	equ	0xFDF
  4843                           postinc2	equ	0xFDE
  4844                           postdec2	equ	0xFDD
  4845                           plusw2	equ	0xFDB
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           tosu	equ	0xFFF
  4850                           tosh	equ	0xFFE
  4851                           tosl	equ	0xFFD
  4852                           pclatu	equ	0xFFB
  4853                           pclath	equ	0xFFA
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           intcon2	equ	0xFF1
  4862                           indf0	equ	0xFEF
  4863                           postinc0	equ	0xFEE
  4864                           fsr0h	equ	0xFEA
  4865                           fsr0l	equ	0xFE9
  4866                           wreg	equ	0xFE8
  4867                           fsr1h	equ	0xFE2
  4868                           fsr1l	equ	0xFE1
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           plusw2	equ	0xFDB
  4873                           fsr2h	equ	0xFDA
  4874                           fsr2l	equ	0xFD9
  4875                           status	equ	0xFD8
  4876                           
  4877                           	psect	text34
  4878  000000                     __ptext34:
  4879                           	opt stack 0
  4880                           tosu	equ	0xFFF
  4881                           tosh	equ	0xFFE
  4882                           tosl	equ	0xFFD
  4883                           pclatu	equ	0xFFB
  4884                           pclath	equ	0xFFA
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           prodh	equ	0xFF4
  4890                           prodl	equ	0xFF3
  4891                           intcon	equ	0xFF2
  4892                           intcon2	equ	0xFF1
  4893                           indf0	equ	0xFEF
  4894                           postinc0	equ	0xFEE
  4895                           fsr0h	equ	0xFEA
  4896                           fsr0l	equ	0xFE9
  4897                           wreg	equ	0xFE8
  4898                           fsr1h	equ	0xFE2
  4899                           fsr1l	equ	0xFE1
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           plusw2	equ	0xFDB
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908                           	psect	rparam
  4909  0000                     tosu	equ	0xFFF
  4910                           tosh	equ	0xFFE
  4911                           tosl	equ	0xFFD
  4912                           pclatu	equ	0xFFB
  4913                           pclath	equ	0xFFA
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           prodh	equ	0xFF4
  4919                           prodl	equ	0xFF3
  4920                           intcon	equ	0xFF2
  4921                           intcon2	equ	0xFF1
  4922                           indf0	equ	0xFEF
  4923                           postinc0	equ	0xFEE
  4924                           fsr0h	equ	0xFEA
  4925                           fsr0l	equ	0xFE9
  4926                           wreg	equ	0xFE8
  4927                           fsr1h	equ	0xFE2
  4928                           fsr1l	equ	0xFE1
  4929                           indf2	equ	0xFDF
  4930                           postinc2	equ	0xFDE
  4931                           postdec2	equ	0xFDD
  4932                           plusw2	equ	0xFDB
  4933                           fsr2h	equ	0xFDA
  4934                           fsr2l	equ	0xFD9
  4935                           status	equ	0xFD8
  4936                           
  4937                           	psect	temp
  4938  000048                     btemp:
  4939                           	opt stack 0
  4940  000048                     	ds	1
  4941  0000                     int$flags	set	btemp
  4942  0000                     wtemp6	set	btemp+1
  4943                           tosu	equ	0xFFF
  4944                           tosh	equ	0xFFE
  4945                           tosl	equ	0xFFD
  4946                           pclatu	equ	0xFFB
  4947                           pclath	equ	0xFFA
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           intcon2	equ	0xFF1
  4956                           indf0	equ	0xFEF
  4957                           postinc0	equ	0xFEE
  4958                           fsr0h	equ	0xFEA
  4959                           fsr0l	equ	0xFE9
  4960                           wreg	equ	0xFE8
  4961                           fsr1h	equ	0xFE2
  4962                           fsr1l	equ	0xFE1
  4963                           indf2	equ	0xFDF
  4964                           postinc2	equ	0xFDE
  4965                           postdec2	equ	0xFDD
  4966                           plusw2	equ	0xFDB
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8


Data Sizes:
    Strings     27
    Constant    0
    Data        3
    BSS         91
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      71
    BANK0           160     23      88
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_tr_queue.pTrFlag	PTR enum E15702 size(2) Largest target is 0
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[8]), 

    mccReceiveI2C@dataToSend	PTR volatile unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    mccSendI2C@dataToSend	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    main@readData	PTR volatile unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    main@dataMCC	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    I2C_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), 

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_object.pTrTail.pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@pflag	PTR enum E15702 size(2) Largest target is 1
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), 

    I2C_MasterRead@pflag	PTR enum E15702 size(2) Largest target is 1
		 -> mccReceiveI2C@sendFlag(BANK0[1]), 

    I2C_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    F15814.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_MasterWrite@pflag	PTR enum E15702 size(2) Largest target is 1
		 -> mccSendI2C@sendFlag(BANK0[1]), 

    I2C_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_1(CODE[8]), 

    F15809.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    S1121$pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    p_i2c_current.pbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    S1133$pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    p_i2c_current.pTrFlag	PTR enum E15702 size(2) Largest target is 11
		 -> mccReceiveI2C@sendFlag(BANK0[1]), mccSendI2C@sendFlag(BANK0[1]), STR_3(CODE[8]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    S1133$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), NULL(NULL[0]), 

    S1144$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    S1144$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(COMRAM[5]), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_mccReceiveI2C
    _main->_mccSendI2C
    _I2C_MasterWrite->_I2C_MasterWriteTRBBuild
    _I2C_MasterRead->_I2C_MasterReadTRBBuild
    _I2C_MasterTRBInsert->_I2C_WaitForLastPacketToComplete
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_ISR
    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_ISR->_I2C_Stop

Critical Paths under _main in BANK0

    _main->_mccReceiveI2C
    _main->_mccSendI2C
    _mccSendI2C->_I2C_MasterWrite
    _mccReceiveI2C->_I2C_MasterRead

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    5337
                                             12 BANK0     11    11      0
                  _SYSTEM_Initialize
                      _mccReceiveI2C
                         _mccSendI2C
 ---------------------------------------------------------------------------------
 (1) _mccSendI2C                                           6     2      4    2334
                                             32 COMRAM     1     1      0
                                              7 BANK0      5     1      4
                    _I2C_MasterWrite
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      7     0      7    1644
                                              0 BANK0      7     0      7
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWriteTRBBuild                              9     2      7     546
                                             23 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (1) _mccReceiveI2C                                        6     2      4    2396
                                             32 COMRAM     1     1      0
                                              7 BANK0      5     1      4
                     _I2C_MasterRead
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     310
                                             23 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterRead                                       7     0      7    1675
                                              0 BANK0      7     0      7
             _I2C_MasterReadTRBBuild
                _I2C_MasterTRBInsert
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterTRBInsert                                  6     2      4     583
                                             25 COMRAM     6     2      4
    _I2C_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (4) _I2C_WaitForLastPacketToComplete                      2     2      0      37
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterReadTRBBuild                               9     2      7     577
                                             23 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                    _ECAN_Initialize
                 _EUSART1_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _PWM5_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             25 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     242
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          18    18      0     271
                                              5 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _I2C_BusCollisionISR
                            _I2C_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              2     2      0      31
                                              3 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C_Stop                                             3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _PWM5_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _mccReceiveI2C
     _I2C_MasterRead
       _I2C_MasterReadTRBBuild
       _I2C_MasterTRBInsert
         _I2C_WaitForLastPacketToComplete
       _strlen (ARG)
     _strlen
   _mccSendI2C
     _I2C_MasterWrite
       _I2C_MasterTRBInsert
         _I2C_WaitForLastPacketToComplete
       _I2C_MasterWriteTRBBuild
       _strlen (ARG)
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
   _EUSART1_Transmit_ISR *
   _I2C_BusCollisionISR *
   _I2C_ISR *
     _I2C_FunctionComplete
     _I2C_Stop
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      58       5       55.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      47       1       75.5%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F       6        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 26 03:26:06 2018

                     _eusart1TxBufferRemaining 0046                                ??_mccReceiveI2C 0043  
                        I2C_ISR@i2c_bytes_left 0019                       __size_of_ECAN_Initialize 00B6  
                                  __CFG_BORV$3 000000                                   __CFG_CP0$OFF 000000  
                                 __CFG_CP1$OFF 000000                        ?_I2C_MasterReadTRBBuild 003A  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                          l234 1266                                            l237 130A  
                                          l520 168E                                            l513 1644  
                                          l532 1390                                            l533 137C  
                                          l526 186C                                            l527 187A  
                                          l535 139C                                            l812 11C6  
                                          l822 13D4                                            l814 11F6  
                                          l815 1234                                            l832 145E  
                                 __CFG_CPB$OFF 000000                                            _PR2 000FCB  
                                 __CFG_CPD$OFF 000000                                __end_of_I2C_ISR 11A8  
                              _timer1ReloadVal 0044                                _TMR2_Initialize 18EC  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                     _TXSTA1bits 000FAC  
                                  main@dataMCC 00AB                                           l1386 16EE  
                                         l1387 16EA                                           l3258 11BE  
                                         l2880 137C                                           l2886 139C  
                                         STR_1 0F14                                           STR_2 0F01  
                                         STR_3 0F0C                                           _LATA 000F89  
                                         _LATB 000F8A                                           u2127 13FA  
                                         _LATC 000F8B                                           u2137 1484  
                                         u2090 11DE                         ??_I2C_FunctionComplete 0023  
                                         u1910 144C                                           u1930 146C  
                                         u1916 144E                                           u1870 13C2  
                                         u1936 146E                                           u1890 13E2  
                                         u1876 13C4                                           u1896 13E4  
                                         _TMR2 000FCC                                           _WPUB 000F5B  
                                         _data 0010                                           _main 11A8  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 0048                               __end_of_I2C_Stop 1520  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FA                                  __CFG_IESO$OFF 000000  
                              _PWM5_Initialize 18B6                     ??_TMR1_SetInterruptHandler 003C  
                                __CFG_MCLRE$ON 000000                                   ___param_bank 000000  
               __end_of_I2C_MasterReadTRBBuild 1570                        __end_of_PWM2_Initialize 18DA  
                   I2C_MasterReadTRBBuild@ptrb 003A                 __size_of_OSCILLATOR_Initialize 0012  
                             ?_I2C_MasterWrite 0099                  __end_of_OSCILLATOR_Initialize 18EC  
                                        ?_main 0023                                          _T1CON 000FCD  
                                _i2c_trb_count 001A                                          _T2CON 000FCA  
                                        i2l502 18B0                                          i2l350 0062  
                                        i2l352 006E                                          i2l354 0086  
                                        i2l460 1162                                          i2l356 00A4  
                                        i2l461 0F6E                                          i2l470 0FFE  
                                        i2l358 00AE                                          i2l631 17DE  
                                        i2l463 0FB8                                          i2l632 17DA  
                                        i2l472 1004                                          i2l464 0FC8  
                                        i2l481 1088                                          i2l473 1012  
                                        i2l490 10EC                                          i2l466 0FD0  
                                        i2l491 10FC                                          i2l483 108E  
                                        i2l475 1040                                          i2l467 0FD8  
                                        i2l484 109E                                          i2l468 0FE6  
                                        i2l637 17EA                                          i2l493 1104  
                                        i2l477 107A                                          i2l638 180A  
                                        i2l494 110C                                          i2l486 10C2  
                                        i2l495 1146                                          i2l487 10BA  
                                        i2l496 114C                                          i2l497 1150  
                                        i2l499 1158                                          i2l684 1894  
                                 main@readData 00AD                                          _TMR1H 000FCF  
                                        _TMR1L 000FCE                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                         _EUSART1_Transmit_ISR 17B4                                 __CFG_EBTR0$OFF 000000  
                               __CFG_FCMEN$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                             __end_of_TMR1_ISR 17B4                                          _State 0012  
                                 main@sendFlag 00AA                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                               __CFG_EBTRB$OFF 000000                                          main@w 00AF  
                      __end_of_TMR1_Initialize 1758                                          pclath 000FFA  
                                        tablat 000FF5                                          plusw2 000FDB  
                                        status 000FD8                                          wtemp6 0049  
                              _TMR1_WriteTimer 1882                       I2C_MasterTRBInsert@count 0041  
                     I2C_MasterTRBInsert@pflag 003E                                     _i2c_object 0001  
                              __initialization 1570                     __end_of_EUSART1_Initialize 1608  
                                 __end_of_main 1262                                      ??_I2C_ISR 0026  
                      __end_of_TMR2_Initialize 18FC                    ?_INTERRUPT_InterruptManager 0023  
                                       ??_main 00A5                                  __activetblptr 000003  
                          _I2C_MasterTRBInsert 1318                    I2C_MasterReadTRBBuild@pdata 003C  
                               __CFG_RETEN$OFF 000000                          ?_EUSART1_Transmit_ISR 0023  
                            ??_ECAN_Initialize 003A                       ?_I2C_MasterWriteTRBBuild 003A  
                                       _CANCON 000F6F                                         _CCPR2H 000F52  
                                       _CCPR2L 000F51                                         _CCPR5H 000F49  
                                       _CCPR5L 000F48                                         _ANCON0 000F5D  
                                       _ANCON1 000F5C                                         _CIOCON 000F70  
                                       _T1GCON 000FAA                        TMR1_WriteTimer@timerVal 0023  
                      __end_of_PWM5_Initialize 18C8                                __CFG_BBSIZ$BB2K 000000  
                                       i2l3060 0FB8                                 __CFG_WDTEN$OFF 000000  
                                       _RCREG1 000FAE                                         _RCSTA1 000FAB  
                                       _OSCCON 000FD3                                         _RXB0D0 000F66  
                                       _RXB0D1 000F67                                         _RXB0D2 000F68  
                                       _RXB0D3 000F69                                         _RXB0D4 000F6A  
                                       _RXB1D0 000F36                                         _RXB0D5 000F6B  
                                       _RXB1D1 000F37                                         _RXB0D6 000F6C  
                                       _RXB1D2 000F38                                         _RXB0D7 000F6D  
                                       _RXB1D3 000F39                                         _RXB1D4 000F3A  
                                       _RXB1D5 000F3B                                         _RXB1D6 000F3C  
                                       _RXB1D7 000F3D                                         _SPBRG1 000FAF  
                                       _TXB0D0 000F26                                         _TXB0D1 000F27  
                                       _TXB0D2 000F28                                         _TXB0D3 000F29  
                                       _TXB0D4 000F2A                                         _TXB1D0 000F16  
                                       _TXB0D5 000F2B                                         _TXB1D1 000F17  
                                       _TXB0D6 000F2C                                         _TXB1D2 000F18  
                                       _TXB0D7 000F2D                                         _TXB1D3 000F19  
                                       _TXB1D4 000F1A                                         _TXB2D0 000F06  
                                       _TXB1D5 000F1B                                         _TXB2D1 000F07  
                                       _TXB1D6 000F1C                                         _TXB2D2 000F08  
                                       _TXB1D7 000F1D                                         _TXB2D3 000F09  
                                       _TXB2D4 000F0A                                         _TXB2D5 000F0B  
                                       _TXB2D6 000F0C                                         _TXB2D7 000F0D  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                                       _TXREG1 000FAD                           ?_I2C_MasterTRBInsert 003C  
                                       _TXSTA1 000FAC                                 __CFG_XINST$OFF 000000  
         __end_of_TMR1_DefaultInterruptHandler 1926          __size_of_TMR1_DefaultInterruptHandler 0002  
                 _TMR1_DefaultInterruptHandler 1924                                 __CFG_STVREN$ON 000000  
                                       _length 0047                  I2C_MasterReadTRBBuild@address 003F  
                             ?_PWM2_Initialize 0023                                         clear_0 15A0  
                                       clear_1 15AC                        __size_of_I2C_MasterRead 004A  
                                       _result 0075                        __size_of_I2C_Initialize 002E  
                                       _strlen 16E0                                   __pdataCOMRAM 0047  
                                    ?_I2C_Stop 0023                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8       TMR1_SetInterruptHandler@InterruptHandler 003A  
                      __end_of_TMR1_WriteTimer 189E                                _eusart1RxBuffer 007D  
                __size_of_INTERRUPT_Initialize 0004                                _eusart1TxBuffer 0085  
                             ?_TMR1_Initialize 0023                              _SYSTEM_Initialize 180E  
                                   __accesstop 0060                        __end_of__initialization 15B2  
                                main@sync_mode 00A7                          ??_I2C_MasterTRBInsert 0040  
         I2C_WaitForLastPacketToComplete@count 003A                             ?_SYSTEM_Initialize 0023  
                                ___rparam_used 000001                                 __pcstackCOMRAM 0023  
                                 __pidataBANK0 1922                            ??_SYSTEM_Initialize 003E  
                                    ?_TMR1_ISR 0023                  ?_TMR1_DefaultInterruptHandler 0023  
                             ?_TMR2_Initialize 0023                __end_of_I2C_MasterWriteTRBBuild 16E0  
                       ??_EUSART1_Transmit_ISR 0023                                     ??_I2C_Stop 0023  
                  __end_of_EUSART1_Receive_ISR 180E                      __end_of_SYSTEM_Initialize 1838  
                                _eusart1RxHead 0015                                  _eusart1TxHead 0017  
                                _eusart1RxTail 0014                                     __pbssBANK0 0060  
                                _eusart1TxTail 0016              _EUSART1_TxDefaultInterruptHandler 00B4  
              ??_EUSART1_SetRxInterruptHandler 003C                               ?_PWM5_Initialize 0023  
                              __CFG_PLLCFG$OFF 000000                   I2C_MasterReadTRBBuild@length 003E  
                                   __pnvCOMRAM 0044                   __size_of_I2C_BusCollisionISR 0004  
                            mccSendI2C@address 00A2                                     ??_TMR1_ISR 0025  
                                      _CCP2CON 000F50                                        _CCP5CON 000F47  
                                      _I2C_ISR 0F1E                                        _ECANCON 000F72  
                                      _CANSTAT 000F6E                        mccReceiveI2C@dataToSend 00A0  
                        __end_of_mccReceiveI2C 14C8                                     _mccSendI2C 13B4  
                                      _BRGCON1 000E43                                        _BRGCON2 000E44  
                                      _BRGCON3 000E45                    I2C_MasterWriteTRBBuild@ptrb 003A  
                                      ?_strlen 003A                               __CFG_CANMX$PORTB 000000  
                                      _REFOCON 000F9A                                        _OSCCON2 000FD2  
                                      _RXB0DLC 000F65                                        _RXB1DLC 000F35  
                                      _OSCTUNE 000F9B                        I2C_Stop@completion_code 0025  
                                      _SPBRGH1 000F7D                                        _TXB0DLC 000F25  
                                      _TXB1DLC 000F15                                        _TXB2DLC 000F05  
                                      _SSPCON1 000FC6                                        _SSPSTAT 000FC7  
                             ?_TMR1_WriteTimer 0023                  __size_of_I2C_FunctionComplete 0018  
                                    _I2C_Rflag 000E                                      _I2C_Wflag 000F  
                              __CFG_PWRTEN$OFF 000000                                        __Hparam 0000  
                                      __Lparam 0000                                _ECAN_Initialize 1262  
                                 __psmallconst 0F00                                        _address 00B6  
                               _I2C_MasterRead 1652                                        __pcinit 1570  
                               _I2C_Initialize 1758                                        __ramtop 0F00  
                         mccReceiveI2C@address 00A2                                        __ptext0 11A8  
                                      __ptext1 13B4                                        __ptext2 1608  
                                      __ptext3 169C                                        __ptext4 143E  
                                      __ptext5 16E0                                        __ptext6 1652  
                                      __ptext7 1318                                        __ptext8 1862  
                                      __ptext9 1520                                        _command 0011  
               ??_TMR1_DefaultInterruptHandler 0023                                __size_of_strlen 0040  
                                    _T1CONbits 000FCD                          _OSCILLATOR_Initialize 18DA  
                                    _T2CONbits 000FCA              __size_of_TMR1_SetInterruptHandler 000A  
                           _EUSART1_Initialize 15BC                       ??_PIN_MANAGER_Initialize 003A  
                    ?_TMR1_SetInterruptHandler 003A                              __CFG_MSSPMSK$MSK7 000000  
                     __size_of_I2C_MasterWrite 004A                     __size_of_SYSTEM_Initialize 002A  
                         end_of_initialization 15B2                            ?_EUSART1_Initialize 0023  
                         I2C_MasterRead@length 009B               __size_of_I2C_MasterWriteTRBBuild 0044  
        __end_of_EUSART1_SetRxInterruptHandler 191A         __size_of_EUSART1_SetRxInterruptHandler 000A  
                _EUSART1_SetRxInterruptHandler 1910                                        postdec2 000FDD  
                       __end_of_I2C_MasterRead 169C                                        postinc0 000FEE  
                                      postinc2 000FDE                         __end_of_I2C_Initialize 1786  
                        I2C_MasterWrite@length 009B                           ??_EUSART1_Initialize 003C  
                                      strlen@s 003A                                    ?_mccSendI2C 00A0  
                           I2C_ISR@i2c_address 0021                               __CFG_FOSC$INTIO2 000000  
                            __size_of_I2C_Stop 0058               I2C_ISR@i2c_10bit_address_restart 0018  
                      __end_of_ECAN_Initialize 1318                       ??_I2C_MasterReadTRBBuild 0041  
                            _p_i2c_trb_current 000C                                ?_I2C_MasterRead 0099  
                 __end_of_INTERRUPT_Initialize 191E                                ?_I2C_Initialize 0023  
                                __pidataCOMRAM 1926                                   _i2c_tr_queue 001C  
                            __size_of_TMR1_ISR 002E                         ?_OSCILLATOR_Initialize 0023  
                          _I2C_BusCollisionISR 191E                                 __end_of_strlen 1720  
                          start_initialization 1570                       __size_of_PWM2_Initialize 0012  
              __size_of_PIN_MANAGER_Initialize 002A                                      _i2c_state 001B  
                  __end_of_I2C_MasterTRBInsert 13B4  EUSART1_SetRxInterruptHandler@interruptHandler 003A  
EUSART1_SetTxInterruptHandler@interruptHandler 003A                              ??_I2C_MasterWrite 0043  
                          __size_of_mccSendI2C 008A                           ?_I2C_BusCollisionISR 0023  
                     __size_of_TMR1_Initialize 0038                                    _CCPTMRSbits 000F99  
               ?_EUSART1_SetRxInterruptHandler 003A                                    __pdataBANK0 00B6  
                                     ?_I2C_ISR 0023                                      _StartTime 008D  
                                     ??_strlen 003C                                 _eusart1RxCount 0013  
                                  __pbssCOMRAM 0001              _EUSART1_RxDefaultInterruptHandler 00B2  
                __size_of_EUSART1_Transmit_ISR 002E                                  __pcstackBANK0 0099  
                     __size_of_TMR2_Initialize 0010                ??_EUSART1_SetTxInterruptHandler 003C  
                 __size_of_EUSART1_Receive_ISR 002C                        _I2C_MasterWriteTRBBuild 169C  
                        ??_I2C_BusCollisionISR 0023                                      __pnvBANK0 00B0  
                             ?_ECAN_Initialize 0023                         _PIN_MANAGER_Initialize 1838  
              __size_of_I2C_MasterReadTRBBuild 0050                       __size_of_PWM5_Initialize 0012  
                                    __pintcode 0008               __end_of_TMR1_SetInterruptHandler 1906  
                         mccSendI2C@dataToSend 00A0                   __end_of_I2C_FunctionComplete 18B6  
                 ??_INTERRUPT_InterruptManager 0028                                    __smallconst 0F00  
                                     _BAUDCON1 000FA7                                    _COMSTATbits 000F71  
                                     _I2C_Recv 0060                                       _I2C_Stop 14C8  
                           mccSendI2C@sendFlag 00A4                   I2C_MasterWriteTRBBuild@pdata 003C  
                                _p_i2c_current 000A                           _INTERRUPT_Initialize 191A  
                            ??_PWM2_Initialize 003A                                       _LATBbits 000F8A  
                       __size_of_mccReceiveI2C 008A                                       _PIE1bits 000F9D  
                                     _PIE2bits 000FA0                                       _PIE5bits 000F76  
                          I2C_MasterRead@pdata 0099                       __size_of_TMR1_WriteTimer 001C  
                          I2C_MasterRead@pflag 009E                                       i2u121_48 17A2  
                                     i2u202_48 0078                                       i2u205_48 0090  
          __size_of_INTERRUPT_InterruptManager 00F2                                       i2u170_40 0F64  
                                     i2u170_47 0F58                                       i2u165_40 151A  
                                     i2u165_47 150E                                       i2u183_40 10E4  
                                     i2u183_47 10DA                                       i2u185_40 1132  
                                     _PIR1bits 000F9E                                       i2u185_47 1126  
                                     _PIR2bits 000FA1                                       _PIR5bits 000F77  
                                     _RXB0EIDH 000F63                                       _RXB0EIDL 000F64  
                                     _RXB1EIDH 000F33                                       _RXB1EIDL 000F34  
                                     _RCONbits 000FD0                                       _RXB0SIDH 000F61  
                                     _RXB0SIDL 000F62                                       _RXB1SIDH 000F31  
                                     _RXF0EIDH 000EE2                                       _RXB1SIDL 000F32  
                                     _RXF0EIDL 000EE3                                       _RXF1EIDH 000EE6  
                                     _RXF1EIDL 000EE7                                       _RXF2EIDH 000EEA  
                                     _RXF2EIDL 000EEB                           I2C_MasterWrite@pdata 0099  
                                     _RXF3EIDH 000EEE                                       _RXF3EIDL 000EEF  
                                     _RXF4EIDH 000EF2                           I2C_MasterWrite@pflag 009E  
                                     _RXF4EIDL 000EF3                                       _RXF5EIDH 000EF6  
                                     _RXF5EIDL 000EF7                                       _RXF0SIDH 000EE0  
                                     _RXF0SIDL 000EE1                                       _TXB0EIDH 000F23  
                                     _RXF1SIDH 000EE4                                       _TXB0EIDL 000F24  
                                     _RXF1SIDL 000EE5                                       _TXB1EIDH 000F13  
                                     _RXF2SIDH 000EE8                                       _TXB1EIDL 000F14  
                                     _RXF2SIDL 000EE9                                       _TXB2EIDH 000F03  
                                     _RXF3SIDH 000EEC                                       _TXB2EIDL 000F04  
                                     _RXF3SIDL 000EED                                       _RXF4SIDH 000EF0  
                                     _RXF4SIDL 000EF1                                       _RXF5SIDH 000EF4  
                                     _RXF5SIDL 000EF5                                       _TMR1_ISR 1786  
                                     _RXM0EIDH 000EFA                                       _RXM0EIDL 000EFB  
                                     _TXB0SIDH 000F21                                       _RXM1EIDH 000EFE  
                                     _TXB0SIDL 000F22                                       _RXM1EIDL 000EFF  
                          I2C_ISR@pi2c_buf_ptr 0008                                       _TXB1SIDH 000F11  
                                     _TXB1SIDL 000F12                                       _TXB2SIDH 000F01  
                                     _TXB2SIDL 000F02                                       _RXM0SIDH 000EF8  
                                     _RXM0SIDL 000EF9                                       _RXM1SIDH 000EFC  
                                     _RXM1SIDL 000EFD                               __size_of_I2C_ISR 028A  
                                 ??_mccSendI2C 0043                              ??_TMR1_Initialize 003C  
                             __CFG_SOSCSEL$DIG 000000                         _I2C_MasterReadTRBBuild 1520  
                                  _INTCON2bits 000FF1                          ?_INTERRUPT_Initialize 0023  
                    ??_I2C_MasterWriteTRBBuild 0041                              ??_TMR2_Initialize 003A  
                             ??_I2C_MasterRead 0043                             __end_of_mccSendI2C 143E  
                             ??_I2C_Initialize 003A          __end_of_EUSART1_SetTxInterruptHandler 1910  
       __size_of_EUSART1_SetTxInterruptHandler 000A                  _EUSART1_SetTxInterruptHandler 1906  
                                     __Hrparam 0000                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                        ??_OSCILLATOR_Initialize 003A  
                  __size_of_EUSART1_Initialize 004C                              ??_PWM5_Initialize 003A  
                     _TMR1_SetInterruptHandler 18FC                                  _mccReceiveI2C 143E  
                        _TMR1_InterruptHandler 00B0                                _I2C_MasterWrite 1608  
                                     __ptext10 180E                                       __ptext11 18EC  
                                     __ptext20 15BC                                       __ptext12 1720  
                                     __ptext21 1906                                       __ptext13 18FC  
                                   _T1GCONbits 000FAA                                       __ptext30 189E  
                                     __ptext22 1910                                       __ptext14 18B6  
                                     __ptext31 191E                                       __ptext23 1262  
                                     __ptext15 18C8                                       __ptext32 17B4  
                                     __ptext16 1838                                       __ptext33 17E2  
                                     __ptext25 1786                                       __ptext17 18DA  
                                     __ptext34 0000                                       __ptext26 1882  
                                     __ptext18 191A                                       __ptext27 1924  
                                     __ptext19 1758                                       __ptext28 0F1E  
                                     __ptext29 14C8                   I2C_MasterTRBInsert@ptrb_list 003C  
                                __size_of_main 00BA                           _I2C_FunctionComplete 189E  
      __end_of_I2C_WaitForLastPacketToComplete 1882       __size_of_I2C_WaitForLastPacketToComplete 0020  
            ??_I2C_WaitForLastPacketToComplete 003A               ?_I2C_WaitForLastPacketToComplete 0023  
              _I2C_WaitForLastPacketToComplete 1862                          mccReceiveI2C@sendFlag 00A4  
                                     int$flags 0048                                       main@add1 00A9  
           __end_of_INTERRUPT_InterruptManager 00FA                     _INTERRUPT_InterruptManager 0008  
                            ??_TMR1_WriteTimer 0025                                       main@slew 00A8  
                               ?_mccReceiveI2C 00A0                            __CFG_INTOSCSEL$HIGH 000000  
                          _EUSART1_Receive_ISR 17E2                                    _RXB0CONbits 000F60  
                                  _RXB1CONbits 000F30                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 003A                          I2C_MasterRead@address 009C  
                                     intlevel2 0000                           ?_EUSART1_Receive_ISR 0023  
                        ?_I2C_FunctionComplete 0023                        ?_PIN_MANAGER_Initialize 0023  
                        I2C_MasterRead@trBlock 008F                   __size_of_I2C_MasterTRBInsert 009C  
                                  _TXB0CONbits 000F20                                     _RCSTA1bits 000FAB  
                                  _TXB1CONbits 000F10                   __end_of_EUSART1_Transmit_ISR 17E2  
                                  _TXB2CONbits 000F00                         I2C_MasterWrite@address 009C  
                           __CFG_WDTPS$1048576 000000                 ?_EUSART1_SetTxInterruptHandler 003A  
                      __end_of_I2C_MasterWrite 1652                         I2C_MasterWrite@trBlock 0094  
                              _PWM2_Initialize 18C8                                       strlen@cp 003E  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                  __end_of_I2C_BusCollisionISR 1922                          ??_EUSART1_Receive_ISR 0023  
               __end_of_PIN_MANAGER_Initialize 1862                 I2C_MasterWriteTRBBuild@address 003F  
                          __CFG_BORPWR$ZPBORMV 000000                                _TMR1_Initialize 1720  
                I2C_MasterWriteTRBBuild@length 003E  
