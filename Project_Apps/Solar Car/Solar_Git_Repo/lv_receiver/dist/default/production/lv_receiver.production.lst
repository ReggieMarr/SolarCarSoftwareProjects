

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 25 21:48:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F26K80 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000CF4                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _delayVal
    77  000CF4  0800               	dw	2048
    78  0000                     _BRGCON3	set	3653
    79  0000                     _BRGCON2	set	3652
    80  0000                     _BRGCON1	set	3651
    81  0000                     _RXF5SIDL	set	3829
    82  0000                     _RXF5SIDH	set	3828
    83  0000                     _RXF5EIDL	set	3831
    84  0000                     _RXF5EIDH	set	3830
    85  0000                     _RXF4SIDL	set	3825
    86  0000                     _RXF4SIDH	set	3824
    87  0000                     _RXF4EIDL	set	3827
    88  0000                     _RXF4EIDH	set	3826
    89  0000                     _RXF3SIDL	set	3821
    90  0000                     _RXF3SIDH	set	3820
    91  0000                     _RXF3EIDL	set	3823
    92  0000                     _RXF3EIDH	set	3822
    93  0000                     _RXF2SIDL	set	3817
    94  0000                     _RXF2SIDH	set	3816
    95  0000                     _RXF2EIDL	set	3819
    96  0000                     _RXF2EIDH	set	3818
    97  0000                     _RXF1SIDL	set	3813
    98  0000                     _RXF1SIDH	set	3812
    99  0000                     _RXF1EIDL	set	3815
   100  0000                     _RXF1EIDH	set	3814
   101  0000                     _RXF0SIDL	set	3809
   102  0000                     _RXF0SIDH	set	3808
   103  0000                     _RXF0EIDL	set	3811
   104  0000                     _RXF0EIDH	set	3810
   105  0000                     _RXM1SIDL	set	3837
   106  0000                     _RXM1SIDH	set	3836
   107  0000                     _RXM1EIDL	set	3839
   108  0000                     _RXM1EIDH	set	3838
   109  0000                     _RXM0SIDL	set	3833
   110  0000                     _RXM0SIDH	set	3832
   111  0000                     _RXM0EIDL	set	3835
   112  0000                     _RXM0EIDH	set	3834
   113  0000                     _WPUB	set	3931
   114  0000                     _ANCON1	set	3932
   115  0000                     _ANCON0	set	3933
   116  0000                     _RXB1D7	set	3901
   117  0000                     _RXB1D6	set	3900
   118  0000                     _RXB1D5	set	3899
   119  0000                     _RXB1D4	set	3898
   120  0000                     _RXB1D3	set	3897
   121  0000                     _RXB1D2	set	3896
   122  0000                     _RXB1D1	set	3895
   123  0000                     _RXB1D0	set	3894
   124  0000                     _RXB1DLC	set	3893
   125  0000                     _RXB1SIDH	set	3889
   126  0000                     _RXB1EIDL	set	3892
   127  0000                     _RXB1EIDH	set	3891
   128  0000                     _RXB1SIDL	set	3890
   129  0000                     _RXB1CONbits	set	3888
   130  0000                     _TXB2D7	set	3853
   131  0000                     _TXB2D6	set	3852
   132  0000                     _TXB2D5	set	3851
   133  0000                     _TXB2D4	set	3850
   134  0000                     _TXB2D3	set	3849
   135  0000                     _TXB2D2	set	3848
   136  0000                     _TXB2D1	set	3847
   137  0000                     _TXB2D0	set	3846
   138  0000                     _TXB2DLC	set	3845
   139  0000                     _TXB2SIDL	set	3842
   140  0000                     _TXB2SIDH	set	3841
   141  0000                     _TXB2EIDL	set	3844
   142  0000                     _TXB2EIDH	set	3843
   143  0000                     _TXB2CONbits	set	3840
   144  0000                     _TXB1D7	set	3869
   145  0000                     _TXB1D6	set	3868
   146  0000                     _TXB1D5	set	3867
   147  0000                     _TXB1D4	set	3866
   148  0000                     _TXB1D3	set	3865
   149  0000                     _TXB1D2	set	3864
   150  0000                     _TXB1D1	set	3863
   151  0000                     _TXB1D0	set	3862
   152  0000                     _TXB1DLC	set	3861
   153  0000                     _TXB1SIDL	set	3858
   154  0000                     _TXB1SIDH	set	3857
   155  0000                     _TXB1EIDL	set	3860
   156  0000                     _TXB1EIDH	set	3859
   157  0000                     _TXB1CONbits	set	3856
   158  0000                     _TXB0D7	set	3885
   159  0000                     _TXB0D6	set	3884
   160  0000                     _TXB0D5	set	3883
   161  0000                     _TXB0D4	set	3882
   162  0000                     _TXB0D3	set	3881
   163  0000                     _TXB0D2	set	3880
   164  0000                     _TXB0D1	set	3879
   165  0000                     _TXB0D0	set	3878
   166  0000                     _TXB0DLC	set	3877
   167  0000                     _TXB0SIDL	set	3874
   168  0000                     _TXB0SIDH	set	3873
   169  0000                     _TXB0EIDL	set	3876
   170  0000                     _TXB0EIDH	set	3875
   171  0000                     _TXB0CONbits	set	3872
   172  0000                     _SSPBUF	set	4041
   173  0000                     _SSPCON2bits	set	4037
   174  0000                     _SSPCON1bits	set	4038
   175  0000                     _SSPADD	set	4040
   176  0000                     _SSPCON1	set	4038
   177  0000                     _SSPSTAT	set	4039
   178  0000                     _PIR1bits	set	3998
   179  0000                     _PIE1bits	set	3997
   180  0000                     _PIR2bits	set	4001
   181  0000                     _PIE2bits	set	4000
   182  0000                     _INTCONbits	set	4082
   183  0000                     _RCONbits	set	4048
   184  0000                     _TRISC	set	3988
   185  0000                     _TRISB	set	3987
   186  0000                     _TRISA	set	3986
   187  0000                     _LATC	set	3979
   188  0000                     _LATB	set	3978
   189  0000                     _LATA	set	3977
   190  0000                     _LATBbits	set	3978
   191  0000                     _LATCbits	set	3979
   192  0000                     _LATAbits	set	3977
   193  0000                     _COMSTATbits	set	3953
   194  0000                     _RXB0D7	set	3949
   195  0000                     _RXB0D6	set	3948
   196  0000                     _RXB0D5	set	3947
   197  0000                     _RXB0D4	set	3946
   198  0000                     _RXB0D3	set	3945
   199  0000                     _RXB0D2	set	3944
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D0	set	3942
   202  0000                     _RXB0DLC	set	3941
   203  0000                     _RXB0SIDH	set	3937
   204  0000                     _RXB0EIDL	set	3940
   205  0000                     _RXB0EIDH	set	3939
   206  0000                     _RXB0SIDL	set	3938
   207  0000                     _RXB0CONbits	set	3936
   208  0000                     _PIE5bits	set	3958
   209  0000                     _ECANCON	set	3954
   210  0000                     _CANSTAT	set	3950
   211  0000                     _CANCON	set	3951
   212  0000                     _PIR5bits	set	3959
   213  0000                     _REFOCON	set	3994
   214  0000                     _OSCTUNE	set	3995
   215  0000                     _OSCCON2	set	4050
   216  0000                     _OSCCON	set	4051
   217                           
   218                           ; #config settings
   219  0000                     
   220                           	psect	cinit
   221  000C0A                     __pcinit:
   222                           	opt stack 0
   223  000C0A                     start_initialization:
   224                           	opt stack 0
   225  000C0A                     __initialization:
   226                           	opt stack 0
   227                           
   228                           ; Initialize objects allocated to COMRAM (2 bytes)
   229                           ; load TBLPTR registers with __pidataCOMRAM
   230  000C0A  0EF4               	movlw	low __pidataCOMRAM
   231  000C0C  6EF6               	movwf	tblptrl,c
   232  000C0E  0E0C               	movlw	high __pidataCOMRAM
   233  000C10  6EF7               	movwf	tblptrh,c
   234  000C12  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   235  000C14  6EF8               	movwf	tblptru,c
   236  000C16  0009               	tblrd		*+	;fetch initializer
   237  000C18  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   238  000C1C  0009               	tblrd		*+	;fetch initializer
   239  000C1E  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   240                           
   241                           ; Clear objects allocated to BANK0 (23 bytes)
   242  000C22  EE00  F07D         	lfsr	0,__pbssBANK0
   243  000C26  0E17               	movlw	23
   244  000C28                     clear_0:
   245  000C28  6AEE               	clrf	postinc0,c
   246  000C2A  06E8               	decf	wreg,f,c
   247  000C2C  E1FD               	bnz	clear_0
   248                           
   249                           ; Clear objects allocated to COMRAM (27 bytes)
   250  000C2E  EE00  F02F         	lfsr	0,__pbssCOMRAM
   251  000C32  0E1B               	movlw	27
   252  000C34                     clear_1:
   253  000C34  6AEE               	clrf	postinc0,c
   254  000C36  06E8               	decf	wreg,f,c
   255  000C38  E1FD               	bnz	clear_1
   256  000C3A                     end_of_initialization:
   257                           	opt stack 0
   258  000C3A                     __end_of__initialization:
   259                           	opt stack 0
   260  000C3A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   261  000C3C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   262  000C3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   263  000C40  6EF8               	movwf	tblptru,c
   264  000C42  0100               	movlb	0
   265  000C44  EF4B  F005         	goto	_main	;jump to C main() function
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	bssCOMRAM
   274  00002F                     __pbssCOMRAM:
   275                           	opt stack 0
   276  00002F                     _ctr:
   277                           	opt stack 0
   278  00002F                     	ds	2
   279  000031                     I2C_ISR@pi2c_buf_ptr:
   280                           	opt stack 0
   281  000031                     	ds	2
   282  000033                     _p_i2c_current:
   283                           	opt stack 0
   284  000033                     	ds	2
   285  000035                     _p_i2c_trb_current:
   286                           	opt stack 0
   287  000035                     	ds	2
   288  000037                     I2C_ISR@i2c_10bit_address_restart:
   289                           	opt stack 0
   290  000037                     	ds	1
   291  000038                     I2C_ISR@i2c_bytes_left:
   292                           	opt stack 0
   293  000038                     	ds	1
   294  000039                     _i2c_trb_count:
   295                           	opt stack 0
   296  000039                     	ds	1
   297  00003A                     _msg_r:
   298                           	opt stack 0
   299  00003A                     	ds	14
   300  000048                     I2C_ISR@i2c_address:
   301                           	opt stack 0
   302  000048                     	ds	2
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	dataCOMRAM
   311  00004A                     __pdataCOMRAM:
   312                           	opt stack 0
   313  00004A                     _delayVal:
   314                           	opt stack 0
   315  00004A                     	ds	2
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	bssBANK0
   324  00007D                     __pbssBANK0:
   325                           	opt stack 0
   326  00007D                     _i2c_object:
   327                           	opt stack 0
   328  00007D                     	ds	7
   329  000084                     _i2c_state:
   330                           	opt stack 0
   331  000084                     	ds	1
   332  000085                     I2C_MasterRead@trBlock:
   333                           	opt stack 0
   334  000085                     	ds	5
   335  00008A                     I2C_MasterWrite@trBlock:
   336                           	opt stack 0
   337  00008A                     	ds	5
   338  00008F                     _i2c_tr_queue:
   339                           	opt stack 0
   340  00008F                     	ds	5
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	cstackBANK0
   349  000060                     __pcstackBANK0:
   350                           	opt stack 0
   351  000060                     ??_ECAN_Initialize:
   352  000060                     I2C_MasterTRBInsert@ptrb_list:
   353                           	opt stack 0
   354  000060                     I2C_MasterWriteTRBBuild@ptrb:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x0
   358  000060                     	ds	1
   359  000061                     
   360                           ; 1 bytes @ 0x1
   361  000061                     	ds	1
   362  000062                     I2C_MasterTRBInsert@pflag:
   363                           	opt stack 0
   364  000062                     I2C_MasterWriteTRBBuild@pdata:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000062                     	ds	2
   369  000064                     I2C_MasterWriteTRBBuild@length:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x4
   373  000064                     	ds	1
   374  000065                     I2C_MasterTRBInsert@count:
   375                           	opt stack 0
   376  000065                     I2C_MasterWriteTRBBuild@address:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x5
   380  000065                     	ds	2
   381  000067                     ??_I2C_MasterWriteTRBBuild:
   382                           
   383                           ; 1 bytes @ 0x7
   384  000067                     	ds	2
   385  000069                     I2C_MasterWrite@pdata:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x9
   389  000069                     	ds	2
   390  00006B                     I2C_MasterWrite@length:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0xB
   394  00006B                     	ds	1
   395  00006C                     I2C_MasterWrite@address:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0xC
   399  00006C                     	ds	2
   400  00006E                     I2C_MasterWrite@pflag:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  00006E                     	ds	2
   405  000070                     send_i2c@data_code:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x10
   409  000070                     	ds	1
   410  000071                     send_i2c@timeOut:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x11
   414  000071                     	ds	2
   415  000073                     send_i2c@writeBuffer:
   416                           	opt stack 0
   417                           
   418                           ; 5 bytes @ 0x13
   419  000073                     	ds	5
   420  000078                     send_i2c@data:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x18
   424  000078                     	ds	1
   425  000079                     send_i2c@status:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x19
   429  000079                     	ds	1
   430  00007A                     ??_main:
   431                           
   432                           ; 1 bytes @ 0x1A
   433  00007A                     	ds	2
   434  00007C                     main@test:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x1C
   438  00007C                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           
   446                           	psect	cstackCOMRAM
   447  000001                     __pcstackCOMRAM:
   448                           	opt stack 0
   449  000001                     ??_I2C_Stop:
   450  000001                     ?_convertReg2ExtendedCANid:
   451                           	opt stack 0
   452  000001                     ?_convertReg2StandardCANid:
   453                           	opt stack 0
   454  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   455                           	opt stack 0
   456  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x0
   460  000001                     	ds	1
   461  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x1
   465  000002                     	ds	1
   466  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   467                           	opt stack 0
   468  000003                     I2C_Stop@completion_code:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x2
   472  000003                     	ds	1
   473  000004                     ??_I2C_ISR:
   474                           
   475                           ; 1 bytes @ 0x3
   476  000004                     	ds	1
   477  000005                     ??_convertReg2ExtendedCANid:
   478  000005                     ??_convertReg2StandardCANid:
   479                           
   480                           ; 1 bytes @ 0x4
   481  000005                     	ds	2
   482  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x6
   486  000007                     	ds	1
   487  000008                     convertReg2StandardCANid@returnValue:
   488                           	opt stack 0
   489                           
   490                           ; 4 bytes @ 0x7
   491  000008                     	ds	1
   492  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x8
   496  000009                     	ds	1
   497  00000A                     convertReg2ExtendedCANid@returnValue:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x9
   501  00000A                     	ds	2
   502  00000C                     convertReg2StandardCANid@ConvertedID:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0xB
   506  00000C                     	ds	2
   507  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0xD
   511  00000E                     	ds	1
   512  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0xE
   516  00000F                     	ds	1
   517  000010                     convertReg2ExtendedCANid@ConvertedID:
   518                           	opt stack 0
   519                           
   520                           ; 4 bytes @ 0xF
   521  000010                     	ds	4
   522  000014                     CAN_receive@tempCanMsg:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x13
   526  000014                     	ds	2
   527  000016                     CAN_receive@returnValue:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x15
   531  000016                     	ds	1
   532  000017                     handleCAN@msg:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x16
   536  000017                     	ds	2
   537  000019                     ??_handleCAN:
   538                           
   539                           ; 1 bytes @ 0x18
   540  000019                     	ds	4
   541  00001D                     ??_INTERRUPT_InterruptManager:
   542                           
   543                           ; 1 bytes @ 0x1C
   544  00001D                     	ds	18
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 64 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  test            1   28[BANK0 ] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   574 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   575 ;;Total ram usage:        3 bytes
   576 ;; Hardware stack levels required when called:    8
   577 ;; This function calls:
   578 ;;		_SYSTEM_Initialize
   579 ;;		_send_i2c
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           	psect	text0
   586  000A96                     __ptext0:
   587                           	opt stack 0
   588  000A96                     _main:
   589                           	opt stack 23
   590                           
   591                           ;main.c: 68: PIE5bits.RXB0IE = 1;
   592                           
   593                           ;incstack = 0
   594  000A96  8076               	bsf	3958,0,c	;volatile
   595                           
   596                           ;main.c: 69: PIE5bits.RXB1IE = 1;
   597  000A98  8276               	bsf	3958,1,c	;volatile
   598                           
   599                           ;main.c: 72: SYSTEM_Initialize();
   600  000A9A  EC5C  F006         	call	_SYSTEM_Initialize	;wreg free
   601                           
   602                           ;main.c: 93: (INTCONbits.GIE = 1);
   603  000A9E  8EF2               	bsf	intcon,7,c	;volatile
   604                           
   605                           ;main.c: 99: (INTCONbits.PEIE = 1);
   606  000AA0  8CF2               	bsf	intcon,6,c	;volatile
   607                           
   608                           ;main.c: 109: do { LATCbits.LATC1 = 1; } while(0);
   609  000AA2  828B               	bsf	3979,1,c	;volatile
   610                           
   611                           ;main.c: 111: uint8_t test=0;
   612  000AA4  0E00               	movlw	0
   613  000AA6  0100               	movlb	0	; () banked
   614  000AA8  6F7C               	movwf	main@test& (0+255),b
   615  000AAA                     
   616                           ; BSR set to: 0
   617                           ;main.c: 113: {
   618                           ;main.c: 115: _delay((unsigned long)((100)*(8000000/4000.0)));
   619                           
   620                           ; BSR set to: 0
   621  000AAA  0E02               	movlw	2
   622  000AAC  0100               	movlb	0	; () banked
   623  000AAE  6F7B               	movwf	(??_main+1)& (0+255),b
   624  000AB0  0E04               	movlw	4
   625  000AB2  6F7A               	movwf	??_main& (0+255),b
   626  000AB4  0EBA               	movlw	186
   627  000AB6                     u1457:
   628  000AB6  2EE8               	decfsz	wreg,f,c
   629  000AB8  D7FE               	bra	u1457
   630  000ABA  2F7A               	decfsz	??_main& (0+255),f,b
   631  000ABC  D7FC               	bra	u1457
   632  000ABE  2F7B               	decfsz	(??_main+1)& (0+255),f,b
   633  000AC0  D7FA               	bra	u1457
   634  000AC2  F000               	nop	
   635                           
   636                           ;main.c: 117: send_i2c(test,0);
   637  000AC4  0E00               	movlw	0
   638  000AC6  0100               	movlb	0	; () banked
   639  000AC8  6F70               	movwf	send_i2c@data_code& (0+255),b
   640  000ACA  517C               	movf	main@test& (0+255),w,b
   641  000ACC  ECC3  F005         	call	_send_i2c
   642                           
   643                           ;main.c: 118: _delay((unsigned long)((100)*(8000000/4000.0)));
   644  000AD0  0E02               	movlw	2
   645  000AD2  0100               	movlb	0	; () banked
   646  000AD4  6F7B               	movwf	(??_main+1)& (0+255),b
   647  000AD6  0E04               	movlw	4
   648  000AD8  6F7A               	movwf	??_main& (0+255),b
   649  000ADA  0EBA               	movlw	186
   650  000ADC                     u1467:
   651  000ADC  2EE8               	decfsz	wreg,f,c
   652  000ADE  D7FE               	bra	u1467
   653  000AE0  2F7A               	decfsz	??_main& (0+255),f,b
   654  000AE2  D7FC               	bra	u1467
   655  000AE4  2F7B               	decfsz	(??_main+1)& (0+255),f,b
   656  000AE6  D7FA               	bra	u1467
   657  000AE8  F000               	nop	
   658                           
   659                           ;main.c: 119: test++;
   660  000AEA  0100               	movlb	0	; () banked
   661  000AEC  2B7C               	incf	main@test& (0+255),f,b
   662                           
   663                           ; BSR set to: 0
   664                           
   665                           ; BSR set to: 0
   666                           
   667                           ;main.c: 120: do { LATCbits.LATC1 = 1; } while(0);
   668  000AEE  828B               	bsf	3979,1,c	;volatile
   669                           
   670                           ; BSR set to: 0
   671                           
   672                           ; BSR set to: 0
   673  000AF0  D7DC               	goto	l642
   674  000AF2                     __end_of_main:
   675                           	opt stack 0
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           intcon	equ	0xFF2
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           
   684 ;; *************** function _send_i2c *****************
   685 ;; Defined at:
   686 ;;		line 127 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;  data            1    wreg     unsigned char 
   689 ;;  data_code       1   16[BANK0 ] unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  data            1   24[BANK0 ] unsigned char 
   692 ;;  writeBuffer     5   19[BANK0 ] unsigned char [5]
   693 ;;  pD              3    0        PTR unsigned char 
   694 ;;  timeOut         2   17[BANK0 ] unsigned int 
   695 ;;  counter         2    0        unsigned int 
   696 ;;  status          1   25[BANK0 ] enum E14864
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   706 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   707 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;Total ram usage:       10 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    7
   713 ;; This function calls:
   714 ;;		_I2C_MasterWrite
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text1
   721  000B86                     __ptext1:
   722                           	opt stack 0
   723  000B86                     _send_i2c:
   724                           	opt stack 23
   725                           
   726                           ; BSR set to: 0
   727                           ;incstack = 0
   728                           ;send_i2c@data stored from wreg
   729  000B86  0100               	movlb	0	; () banked
   730  000B88  6F78               	movwf	send_i2c@data& (0+255),b
   731                           
   732                           ;main.c: 128: uint8_t writeBuffer[5];
   733                           ;main.c: 129: uint16_t timeOut;
   734                           ;main.c: 130: uint16_t counter;
   735                           ;main.c: 131: uint8_t *pD;
   736                           ;main.c: 133: I2C_MESSAGE_STATUS status = I2C_MESSAGE_PENDING;
   737  000B8A  0E02               	movlw	2
   738  000B8C  0100               	movlb	0	; () banked
   739  000B8E  6F79               	movwf	send_i2c@status& (0+255),b
   740                           
   741                           ; BSR set to: 0
   742                           ;main.c: 135: writeBuffer[0]=data;
   743  000B90  C078  F073         	movff	send_i2c@data,send_i2c@writeBuffer
   744                           
   745                           ; BSR set to: 0
   746                           ;main.c: 140: timeOut = 0;
   747  000B94  0E00               	movlw	0
   748  000B96  6F72               	movwf	(send_i2c@timeOut+1)& (0+255),b
   749  000B98  0E00               	movlw	0
   750  000B9A  6F71               	movwf	send_i2c@timeOut& (0+255),b
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 144: I2C_MasterWrite( writeBuffer,
   754                           ;main.c: 145: 1,
   755                           ;main.c: 146: 8,
   756                           ;main.c: 147: &status);
   757  000B9C  0E73               	movlw	low send_i2c@writeBuffer
   758  000B9E  6F69               	movwf	I2C_MasterWrite@pdata& (0+255),b
   759  000BA0  0E00               	movlw	high send_i2c@writeBuffer
   760  000BA2  6F6A               	movwf	(I2C_MasterWrite@pdata+1)& (0+255),b
   761  000BA4  0E01               	movlw	1
   762  000BA6  6F6B               	movwf	I2C_MasterWrite@length& (0+255),b
   763  000BA8  0E00               	movlw	0
   764  000BAA  6F6D               	movwf	(I2C_MasterWrite@address+1)& (0+255),b
   765  000BAC  0E08               	movlw	8
   766  000BAE  6F6C               	movwf	I2C_MasterWrite@address& (0+255),b
   767  000BB0  0E79               	movlw	low send_i2c@status
   768  000BB2  6F6E               	movwf	I2C_MasterWrite@pflag& (0+255),b
   769  000BB4  0E00               	movlw	high send_i2c@status
   770  000BB6  6F6F               	movwf	(I2C_MasterWrite@pflag+1)& (0+255),b
   771  000BB8  EC79  F005         	call	_I2C_MasterWrite	;wreg free
   772  000BBC  0E02               	movlw	2
   773  000BBE  0100               	movlb	0	; () banked
   774  000BC0  1979               	xorwf	send_i2c@status& (0+255),w,b
   775  000BC2  B4D8               	btfsc	status,2,c
   776  000BC4  D7FB               	goto	l651
   777                           
   778                           ; BSR set to: 0
   779                           
   780                           ; BSR set to: 0
   781                           ;main.c: 151: do { LATCbits.LATC1 = 0; } while(0);
   782  000BC6  928B               	bcf	3979,1,c	;volatile
   783  000BC8  0012               	return	
   784  000BCA                     __end_of_send_i2c:
   785                           	opt stack 0
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           intcon	equ	0xFF2
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _I2C_MasterWrite *****************
   796 ;; Defined at:
   797 ;;		line 596 in file "mcc_generated_files/i2c.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  pdata           2    9[BANK0 ] PTR unsigned char 
   800 ;;		 -> send_i2c@writeBuffer(5), 
   801 ;;  length          1   11[BANK0 ] unsigned char 
   802 ;;  address         2   12[BANK0 ] unsigned int 
   803 ;;  pflag           2   14[BANK0 ] PTR enum E14821
   804 ;;		 -> send_i2c@status(1), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   816 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   819 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   820 ;;Total ram usage:        7 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    6
   823 ;; This function calls:
   824 ;;		_I2C_MasterTRBInsert
   825 ;;		_I2C_MasterWriteTRBBuild
   826 ;; This function is called by:
   827 ;;		_send_i2c
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text2
   832  000AF2                     __ptext2:
   833                           	opt stack 0
   834  000AF2                     _I2C_MasterWrite:
   835                           	opt stack 23
   836                           
   837                           ;i2c.c: 602: static I2C_TRANSACTION_REQUEST_BLOCK trBlock;
   838                           ;i2c.c: 605: if (i2c_object.trStatus.s.full != 1)
   839                           
   840                           ; BSR set to: 0
   841                           ;incstack = 0
   842  000AF2  0100               	movlb	0	; () banked
   843  000AF4  B181               	btfsc	(_i2c_object+4)& (0+255),0,b
   844  000AF6  D01D               	goto	l582
   845                           
   846                           ; BSR set to: 0
   847                           ;i2c.c: 606: {
   848                           ;i2c.c: 607: I2C_MasterWriteTRBBuild(&trBlock, pdata, length, address);
   849  000AF8  0E8A               	movlw	low I2C_MasterWrite@trBlock
   850  000AFA  6F60               	movwf	I2C_MasterWriteTRBBuild@ptrb& (0+255),b
   851  000AFC  0E00               	movlw	high I2C_MasterWrite@trBlock
   852  000AFE  6F61               	movwf	(I2C_MasterWriteTRBBuild@ptrb+1)& (0+255),b
   853  000B00  C069  F062         	movff	I2C_MasterWrite@pdata,I2C_MasterWriteTRBBuild@pdata
   854  000B04  C06A  F063         	movff	I2C_MasterWrite@pdata+1,I2C_MasterWriteTRBBuild@pdata+1
   855  000B08  C06B  F064         	movff	I2C_MasterWrite@length,I2C_MasterWriteTRBBuild@length
   856  000B0C  C06C  F065         	movff	I2C_MasterWrite@address,I2C_MasterWriteTRBBuild@address
   857  000B10  C06D  F066         	movff	I2C_MasterWrite@address+1,I2C_MasterWriteTRBBuild@address+1
   858  000B14  ECA0  F005         	call	_I2C_MasterWriteTRBBuild	;wreg free
   859                           
   860                           ;i2c.c: 608: I2C_MasterTRBInsert(1, &trBlock, pflag);
   861  000B18  0E8A               	movlw	low I2C_MasterWrite@trBlock
   862  000B1A  0100               	movlb	0	; () banked
   863  000B1C  6F60               	movwf	I2C_MasterTRBInsert@ptrb_list& (0+255),b
   864  000B1E  0E00               	movlw	high I2C_MasterWrite@trBlock
   865  000B20  6F61               	movwf	(I2C_MasterTRBInsert@ptrb_list+1)& (0+255),b
   866  000B22  C06E  F062         	movff	I2C_MasterWrite@pflag,I2C_MasterTRBInsert@pflag
   867  000B26  C06F  F063         	movff	I2C_MasterWrite@pflag+1,I2C_MasterTRBInsert@pflag+1
   868  000B2A  0E01               	movlw	1
   869  000B2C  ECB7  F004         	call	_I2C_MasterTRBInsert
   870                           
   871                           ;i2c.c: 609: }
   872  000B30  0012               	return	
   873  000B32                     l582:
   874                           
   875                           ;i2c.c: 610: else
   876                           ;i2c.c: 611: {
   877                           ;i2c.c: 612: *pflag = I2C_MESSAGE_FAIL;
   878  000B32  C06E  FFD9         	movff	I2C_MasterWrite@pflag,fsr2l
   879  000B36  C06F  FFDA         	movff	I2C_MasterWrite@pflag+1,fsr2h
   880  000B3A  0E01               	movlw	1
   881  000B3C  6EDF               	movwf	indf2,c
   882  000B3E  0012               	return	
   883  000B40                     __end_of_I2C_MasterWrite:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           intcon	equ	0xFF2
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           indf2	equ	0xFDF
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           status	equ	0xFD8
   896                           
   897 ;; *************** function _I2C_MasterWriteTRBBuild *****************
   898 ;; Defined at:
   899 ;;		line 705 in file "mcc_generated_files/i2c.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  ptrb            2    0[BANK0 ] PTR struct .
   902 ;;		 -> I2C_MasterWrite@trBlock(5), 
   903 ;;  pdata           2    2[BANK0 ] PTR unsigned char 
   904 ;;		 -> send_i2c@writeBuffer(5), 
   905 ;;  length          1    4[BANK0 ] unsigned char 
   906 ;;  address         2    5[BANK0 ] unsigned int 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   918 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   921 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;Total ram usage:        9 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    5
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_I2C_MasterWrite
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text3
   933  000B40                     __ptext3:
   934                           	opt stack 0
   935  000B40                     _I2C_MasterWriteTRBBuild:
   936                           	opt stack 23
   937                           
   938                           ;i2c.c: 711: ptrb->address = address << 1;
   939                           
   940                           ;incstack = 0
   941  000B40  C065  F067         	movff	I2C_MasterWriteTRBBuild@address,??_I2C_MasterWriteTRBBuild
   942  000B44  C066  F068         	movff	I2C_MasterWriteTRBBuild@address+1,??_I2C_MasterWriteTRBBuild+1
   943  000B48  90D8               	bcf	status,0,c
   944  000B4A  0100               	movlb	0	; () banked
   945  000B4C  3767               	rlcf	??_I2C_MasterWriteTRBBuild& (0+255),f,b
   946  000B4E  3768               	rlcf	(??_I2C_MasterWriteTRBBuild+1)& (0+255),f,b
   947  000B50  C060  FFD9         	movff	I2C_MasterWriteTRBBuild@ptrb,fsr2l
   948  000B54  C061  FFDA         	movff	I2C_MasterWriteTRBBuild@ptrb+1,fsr2h
   949  000B58  C067  FFDE         	movff	??_I2C_MasterWriteTRBBuild,postinc2
   950  000B5C  C068  FFDD         	movff	??_I2C_MasterWriteTRBBuild+1,postdec2
   951                           
   952                           ; BSR set to: 0
   953                           ;i2c.c: 712: ptrb->length = length;
   954  000B60  EE20 F002          	lfsr	2,2
   955  000B64  5160               	movf	I2C_MasterWriteTRBBuild@ptrb& (0+255),w,b
   956  000B66  26D9               	addwf	fsr2l,f,c
   957  000B68  5161               	movf	(I2C_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
   958  000B6A  22DA               	addwfc	fsr2h,f,c
   959  000B6C  C064  FFDF         	movff	I2C_MasterWriteTRBBuild@length,indf2
   960                           
   961                           ; BSR set to: 0
   962                           ;i2c.c: 713: ptrb->pbuffer = pdata;
   963  000B70  EE20 F003          	lfsr	2,3
   964  000B74  5160               	movf	I2C_MasterWriteTRBBuild@ptrb& (0+255),w,b
   965  000B76  26D9               	addwf	fsr2l,f,c
   966  000B78  5161               	movf	(I2C_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
   967  000B7A  22DA               	addwfc	fsr2h,f,c
   968  000B7C  C062  FFDE         	movff	I2C_MasterWriteTRBBuild@pdata,postinc2
   969  000B80  C063  FFDD         	movff	I2C_MasterWriteTRBBuild@pdata+1,postdec2
   970                           
   971                           ; BSR set to: 0
   972  000B84  0012               	return		;funcret
   973  000B86                     __end_of_I2C_MasterWriteTRBBuild:
   974                           	opt stack 0
   975                           tblptru	equ	0xFF8
   976                           tblptrh	equ	0xFF7
   977                           tblptrl	equ	0xFF6
   978                           tablat	equ	0xFF5
   979                           intcon	equ	0xFF2
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           indf2	equ	0xFDF
   983                           postinc2	equ	0xFDE
   984                           postdec2	equ	0xFDD
   985                           fsr2h	equ	0xFDA
   986                           fsr2l	equ	0xFD9
   987                           status	equ	0xFD8
   988                           
   989 ;; *************** function _I2C_MasterTRBInsert *****************
   990 ;; Defined at:
   991 ;;		line 639 in file "mcc_generated_files/i2c.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  count           1    wreg     unsigned char 
   994 ;;  ptrb_list       2    0[BANK0 ] PTR struct .
   995 ;;		 -> I2C_MasterRead@trBlock(5), I2C_MasterWrite@trBlock(5), 
   996 ;;  pflag           2    2[BANK0 ] PTR enum E14821
   997 ;;		 -> send_i2c@status(1), 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  count           1    5[BANK0 ] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1012 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1013 ;;Total ram usage:        6 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    5
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_I2C_MasterWrite
  1020 ;;		_I2C_MasterRead
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text4
  1025  00096E                     __ptext4:
  1026                           	opt stack 0
  1027  00096E                     _I2C_MasterTRBInsert:
  1028                           	opt stack 23
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;incstack = 0
  1032                           ;I2C_MasterTRBInsert@count stored from wreg
  1033  00096E  0100               	movlb	0	; () banked
  1034  000970  6F65               	movwf	I2C_MasterTRBInsert@count& (0+255),b
  1035                           
  1036                           ;i2c.c: 646: if (i2c_object.trStatus.s.full != 1)
  1037  000972  0100               	movlb	0	; () banked
  1038  000974  B181               	btfsc	(_i2c_object+4)& (0+255),0,b
  1039  000976  D039               	goto	l594
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;i2c.c: 647: {
  1043                           ;i2c.c: 648: *pflag = I2C_MESSAGE_PENDING;
  1044  000978  C062  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1045  00097C  C063  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1046  000980  0E02               	movlw	2
  1047  000982  6EDF               	movwf	indf2,c
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;i2c.c: 650: i2c_object.pTrTail->ptrb_list = ptrb_list;
  1051  000984  EE20 F001          	lfsr	2,1
  1052  000988  517D               	movf	_i2c_object& (0+255),w,b
  1053  00098A  26D9               	addwf	fsr2l,f,c
  1054  00098C  517E               	movf	(_i2c_object+1)& (0+255),w,b
  1055  00098E  22DA               	addwfc	fsr2h,f,c
  1056  000990  C060  FFDE         	movff	I2C_MasterTRBInsert@ptrb_list,postinc2
  1057  000994  C061  FFDD         	movff	I2C_MasterTRBInsert@ptrb_list+1,postdec2
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;i2c.c: 651: i2c_object.pTrTail->count = count;
  1061  000998  C07D  FFD9         	movff	_i2c_object,fsr2l
  1062  00099C  C07E  FFDA         	movff	_i2c_object+1,fsr2h
  1063  0009A0  C065  FFDF         	movff	I2C_MasterTRBInsert@count,indf2
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;i2c.c: 652: i2c_object.pTrTail->pTrFlag = pflag;
  1067  0009A4  EE20 F003          	lfsr	2,3
  1068  0009A8  517D               	movf	_i2c_object& (0+255),w,b
  1069  0009AA  26D9               	addwf	fsr2l,f,c
  1070  0009AC  517E               	movf	(_i2c_object+1)& (0+255),w,b
  1071  0009AE  22DA               	addwfc	fsr2h,f,c
  1072  0009B0  C062  FFDE         	movff	I2C_MasterTRBInsert@pflag,postinc2
  1073  0009B4  C063  FFDD         	movff	I2C_MasterTRBInsert@pflag+1,postdec2
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;i2c.c: 653: i2c_object.pTrTail++;
  1077  0009B8  0E05               	movlw	5
  1078  0009BA  277D               	addwf	_i2c_object& (0+255),f,b
  1079  0009BC  0E00               	movlw	0
  1080  0009BE  237E               	addwfc	(_i2c_object+1)& (0+255),f,b
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;i2c.c: 656: if (i2c_object.pTrTail == (i2c_tr_queue + 1))
  1084  0009C0  0E94               	movlw	low (_i2c_tr_queue+5)
  1085  0009C2  197D               	xorwf	_i2c_object& (0+255),w,b
  1086  0009C4  E108               	bnz	l2555
  1087  0009C6  0E00               	movlw	high (_i2c_tr_queue+5)
  1088  0009C8  197E               	xorwf	(_i2c_object+1)& (0+255),w,b
  1089  0009CA  A4D8               	btfss	status,2,c
  1090  0009CC  D004               	goto	l595
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;i2c.c: 657: {
  1094                           ;i2c.c: 659: i2c_object.pTrTail = i2c_tr_queue;
  1095  0009CE  0E8F               	movlw	low _i2c_tr_queue
  1096  0009D0  6F7D               	movwf	_i2c_object& (0+255),b
  1097  0009D2  0E00               	movlw	high _i2c_tr_queue
  1098  0009D4  6F7E               	movwf	(_i2c_object+1)& (0+255),b
  1099  0009D6                     l595:
  1100  0009D6                     l2555:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;i2c.c: 660: }
  1104                           ;i2c.c: 664: i2c_object.trStatus.s.empty = 0;
  1105  0009D6  9381               	bcf	(_i2c_object+4)& (0+255),1,b
  1106                           
  1107                           ;i2c.c: 667: if (i2c_object.pTrHead == i2c_object.pTrTail)
  1108  0009D8  517D               	movf	_i2c_object& (0+255),w,b
  1109  0009DA  197F               	xorwf	(_i2c_object+2)& (0+255),w,b
  1110  0009DC  E10C               	bnz	l2561
  1111  0009DE  517E               	movf	(_i2c_object+1)& (0+255),w,b
  1112  0009E0  1980               	xorwf	(_i2c_object+3)& (0+255),w,b
  1113  0009E2  A4D8               	btfss	status,2,c
  1114  0009E4  D008               	goto	l597
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;i2c.c: 668: {
  1118                           ;i2c.c: 670: i2c_object.trStatus.s.full = 1;
  1119  0009E6  8181               	bsf	(_i2c_object+4)& (0+255),0,b
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;i2c.c: 671: }
  1123                           ;i2c.c: 673: }
  1124  0009E8  D006               	goto	l597
  1125  0009EA                     l594:
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;i2c.c: 674: else
  1129                           ;i2c.c: 675: {
  1130                           ;i2c.c: 676: *pflag = I2C_MESSAGE_FAIL;
  1131                           
  1132                           ; BSR set to: 0
  1133  0009EA  C062  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1134  0009EE  C063  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1135  0009F2  0E01               	movlw	1
  1136  0009F4  6EDF               	movwf	indf2,c
  1137  0009F6                     l597:
  1138  0009F6                     l2561:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;i2c.c: 677: }
  1142                           ;i2c.c: 680: if (*pflag == I2C_MESSAGE_PENDING)
  1143  0009F6  C062  FFD9         	movff	I2C_MasterTRBInsert@pflag,fsr2l
  1144  0009FA  C063  FFDA         	movff	I2C_MasterTRBInsert@pflag+1,fsr2h
  1145  0009FE  0E02               	movlw	2
  1146  000A00  18DE               	xorwf	postinc2,w,c
  1147  000A02  A4D8               	btfss	status,2,c
  1148  000A04  0012               	return	
  1149  000A06                     u1380:
  1150                           
  1151                           ; BSR set to: 0
  1152                           
  1153                           ; BSR set to: 0
  1154                           
  1155                           ; BSR set to: 0
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;i2c.c: 681: {
  1159                           ;i2c.c: 682: while(i2c_state != S_MASTER_IDLE);
  1160  000A06  5184               	movf	_i2c_state& (0+255),w,b
  1161  000A08  A4D8               	btfss	status,2,c
  1162  000A0A  D7FD               	goto	u1380
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;i2c.c: 683: {
  1166                           ;i2c.c: 686: PIR1bits.SSPIF = 1;
  1167  000A0C  869E               	bsf	3998,3,c	;volatile
  1168  000A0E  0012               	return	
  1169  000A10                     __end_of_I2C_MasterTRBInsert:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           intcon	equ	0xFF2
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           postdec2	equ	0xFDD
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _SYSTEM_Initialize *****************
  1186 ;; Defined at:
  1187 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    6
  1208 ;; This function calls:
  1209 ;;		_ECAN_Initialize
  1210 ;;		_I2C_Initialize
  1211 ;;		_INTERRUPT_Initialize
  1212 ;;		_OSCILLATOR_Initialize
  1213 ;;		_PIN_MANAGER_Initialize
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text5
  1220  000CB8                     __ptext5:
  1221                           	opt stack 0
  1222  000CB8                     _SYSTEM_Initialize:
  1223                           	opt stack 24
  1224                           
  1225                           ;mcc.c: 114: INTERRUPT_Initialize();
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;incstack = 0
  1229  000CB8  EC78  F006         	call	_INTERRUPT_Initialize	;wreg free
  1230                           
  1231                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1232  000CBC  EC3A  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  1233                           
  1234                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1235  000CC0  EC67  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1236                           
  1237                           ;mcc.c: 117: I2C_Initialize();
  1238  000CC4  EC24  F006         	call	_I2C_Initialize	;wreg free
  1239                           
  1240                           ;mcc.c: 118: ECAN_Initialize();
  1241  000CC8  EC61  F004         	call	_ECAN_Initialize	;wreg free
  1242  000CCC  0012               	return		;funcret
  1243  000CCE                     __end_of_SYSTEM_Initialize:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           intcon	equ	0xFF2
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           indf2	equ	0xFDF
  1253                           postinc2	equ	0xFDE
  1254                           postdec2	equ	0xFDD
  1255                           fsr2h	equ	0xFDA
  1256                           fsr2l	equ	0xFD9
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function _PIN_MANAGER_Initialize *****************
  1260 ;; Defined at:
  1261 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    5
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_SYSTEM_Initialize
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text6
  1290  000C74                     __ptext6:
  1291                           	opt stack 0
  1292  000C74                     _PIN_MANAGER_Initialize:
  1293                           	opt stack 24
  1294                           
  1295                           ;pin_manager.c: 57: LATA = 0x00;
  1296                           
  1297                           ;incstack = 0
  1298  000C74  0E00               	movlw	0
  1299  000C76  6E89               	movwf	3977,c	;volatile
  1300                           
  1301                           ;pin_manager.c: 58: LATB = 0x00;
  1302  000C78  0E00               	movlw	0
  1303  000C7A  6E8A               	movwf	3978,c	;volatile
  1304                           
  1305                           ;pin_manager.c: 59: LATC = 0x00;
  1306  000C7C  0E00               	movlw	0
  1307  000C7E  6E8B               	movwf	3979,c	;volatile
  1308                           
  1309                           ;pin_manager.c: 64: TRISA = 0xE3;
  1310  000C80  0EE3               	movlw	227
  1311  000C82  6E92               	movwf	3986,c	;volatile
  1312                           
  1313                           ;pin_manager.c: 65: TRISB = 0xC3;
  1314  000C84  0EC3               	movlw	195
  1315  000C86  6E93               	movwf	3987,c	;volatile
  1316                           
  1317                           ;pin_manager.c: 66: TRISC = 0x98;
  1318  000C88  0E98               	movlw	152
  1319  000C8A  6E94               	movwf	3988,c	;volatile
  1320                           
  1321                           ;pin_manager.c: 71: ANCON0 = 0x11;
  1322  000C8C  0E11               	movlw	17
  1323  000C8E  010F               	movlb	15	; () banked
  1324  000C90  6F5D               	movwf	93,b	;volatile
  1325                           
  1326                           ;pin_manager.c: 72: ANCON1 = 0x00;
  1327  000C92  0E00               	movlw	0
  1328  000C94  6F5C               	movwf	92,b	;volatile
  1329                           
  1330                           ;pin_manager.c: 77: WPUB = 0xC3;
  1331  000C96  0EC3               	movlw	195
  1332  000C98  6F5B               	movwf	91,b	;volatile
  1333                           
  1334                           ; BSR set to: 15
  1335  000C9A  0012               	return		;funcret
  1336  000C9C                     __end_of_PIN_MANAGER_Initialize:
  1337                           	opt stack 0
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           intcon	equ	0xFF2
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           indf2	equ	0xFDF
  1346                           postinc2	equ	0xFDE
  1347                           postdec2	equ	0xFDD
  1348                           fsr2h	equ	0xFDA
  1349                           fsr2l	equ	0xFD9
  1350                           status	equ	0xFD8
  1351                           
  1352 ;; *************** function _OSCILLATOR_Initialize *****************
  1353 ;; Defined at:
  1354 ;;		line 121 in file "mcc_generated_files/mcc.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    5
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_SYSTEM_Initialize
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text7
  1383  000CCE                     __ptext7:
  1384                           	opt stack 0
  1385  000CCE                     _OSCILLATOR_Initialize:
  1386                           	opt stack 24
  1387                           
  1388                           ;mcc.c: 124: OSCCON = 0x60;
  1389                           
  1390                           ; BSR set to: 15
  1391                           ;incstack = 0
  1392  000CCE  0E60               	movlw	96
  1393  000CD0  6ED3               	movwf	4051,c	;volatile
  1394                           
  1395                           ;mcc.c: 126: OSCCON2 = 0x00;
  1396  000CD2  0E00               	movlw	0
  1397  000CD4  6ED2               	movwf	4050,c	;volatile
  1398                           
  1399                           ;mcc.c: 128: OSCTUNE = 0x00;
  1400  000CD6  0E00               	movlw	0
  1401  000CD8  6E9B               	movwf	3995,c	;volatile
  1402                           
  1403                           ;mcc.c: 130: REFOCON = 0x00;
  1404  000CDA  0E00               	movlw	0
  1405  000CDC  6E9A               	movwf	3994,c	;volatile
  1406  000CDE  0012               	return		;funcret
  1407  000CE0                     __end_of_OSCILLATOR_Initialize:
  1408                           	opt stack 0
  1409                           tblptru	equ	0xFF8
  1410                           tblptrh	equ	0xFF7
  1411                           tblptrl	equ	0xFF6
  1412                           tablat	equ	0xFF5
  1413                           intcon	equ	0xFF2
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           indf2	equ	0xFDF
  1417                           postinc2	equ	0xFDE
  1418                           postdec2	equ	0xFDD
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _INTERRUPT_Initialize *****************
  1424 ;; Defined at:
  1425 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		None
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    5
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_SYSTEM_Initialize
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text8
  1454  000CF0                     __ptext8:
  1455                           	opt stack 0
  1456  000CF0                     _INTERRUPT_Initialize:
  1457                           	opt stack 24
  1458                           
  1459                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1460                           
  1461                           ;incstack = 0
  1462  000CF0  9ED0               	bcf	4048,7,c	;volatile
  1463  000CF2  0012               	return		;funcret
  1464  000CF4                     __end_of_INTERRUPT_Initialize:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           tblptrl	equ	0xFF6
  1469                           tablat	equ	0xFF5
  1470                           intcon	equ	0xFF2
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           indf2	equ	0xFDF
  1474                           postinc2	equ	0xFDE
  1475                           postdec2	equ	0xFDD
  1476                           fsr2h	equ	0xFDA
  1477                           fsr2l	equ	0xFD9
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _I2C_Initialize *****************
  1481 ;; Defined at:
  1482 ;;		line 198 in file "mcc_generated_files/i2c.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    5
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_SYSTEM_Initialize
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text9
  1511  000C48                     __ptext9:
  1512                           	opt stack 0
  1513  000C48                     _I2C_Initialize:
  1514                           	opt stack 24
  1515                           
  1516                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
  1517                           
  1518                           ;incstack = 0
  1519  000C48  0E8F               	movlw	low _i2c_tr_queue
  1520  000C4A  0100               	movlb	0	; () banked
  1521  000C4C  6F7F               	movwf	(_i2c_object+2)& (0+255),b
  1522  000C4E  0E00               	movlw	high _i2c_tr_queue
  1523  000C50  6F80               	movwf	(_i2c_object+3)& (0+255),b
  1524                           
  1525                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
  1526  000C52  0E8F               	movlw	low _i2c_tr_queue
  1527  000C54  6F7D               	movwf	_i2c_object& (0+255),b
  1528  000C56  0E00               	movlw	high _i2c_tr_queue
  1529  000C58  6F7E               	movwf	(_i2c_object+1)& (0+255),b
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
  1533  000C5A  8381               	bsf	(_i2c_object+4)& (0+255),1,b
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
  1537  000C5C  9181               	bcf	(_i2c_object+4)& (0+255),0,b
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
  1541  000C5E  0E00               	movlw	0
  1542  000C60  6F83               	movwf	(_i2c_object+6)& (0+255),b
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;i2c.c: 208: SSPSTAT = 0x00;
  1546  000C62  0E00               	movlw	0
  1547  000C64  6EC7               	movwf	4039,c	;volatile
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;i2c.c: 210: SSPCON1 = 0x28;
  1551  000C66  0E28               	movlw	40
  1552  000C68  6EC6               	movwf	4038,c	;volatile
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;i2c.c: 212: SSPADD = 0x03;
  1556  000C6A  0E03               	movlw	3
  1557  000C6C  6EC8               	movwf	4040,c	;volatile
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;i2c.c: 216: PIR1bits.SSPIF = 0;
  1561  000C6E  969E               	bcf	3998,3,c	;volatile
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;i2c.c: 218: PIE1bits.SSPIE = 1;
  1565  000C70  869D               	bsf	3997,3,c	;volatile
  1566                           
  1567                           ; BSR set to: 0
  1568  000C72  0012               	return		;funcret
  1569  000C74                     __end_of_I2C_Initialize:
  1570                           	opt stack 0
  1571                           tblptru	equ	0xFF8
  1572                           tblptrh	equ	0xFF7
  1573                           tblptrl	equ	0xFF6
  1574                           tablat	equ	0xFF5
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           indf2	equ	0xFDF
  1579                           postinc2	equ	0xFDE
  1580                           postdec2	equ	0xFDD
  1581                           fsr2h	equ	0xFDA
  1582                           fsr2l	equ	0xFD9
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function _ECAN_Initialize *****************
  1586 ;; Defined at:
  1587 ;;		line 77 in file "mcc_generated_files/ecan.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;Total ram usage:        1 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    5
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_SYSTEM_Initialize
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text10
  1616  0008C2                     __ptext10:
  1617                           	opt stack 0
  1618  0008C2                     _ECAN_Initialize:
  1619                           	opt stack 24
  1620                           
  1621                           ;ecan.c: 79: CANCON = 0x80;
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;incstack = 0
  1625  0008C2  0E80               	movlw	128
  1626  0008C4  6E6F               	movwf	3951,c	;volatile
  1627  0008C6  506E               	movf	3950,w,c	;volatile
  1628  0008C8  0BE0               	andlw	224
  1629  0008CA  0A80               	xorlw	128
  1630  0008CC  A4D8               	btfss	status,2,c
  1631  0008CE  D7FB               	goto	l269
  1632                           
  1633                           ;ecan.c: 85: ECANCON = 0x00;
  1634  0008D0  0E00               	movlw	0
  1635  0008D2  6E72               	movwf	3954,c	;volatile
  1636                           
  1637                           ;ecan.c: 102: RXM0EIDH = 0x00;
  1638  0008D4  0E00               	movlw	0
  1639  0008D6  010E               	movlb	14	; () banked
  1640  0008D8  6FFA               	movwf	250,b	;volatile
  1641                           
  1642                           ;ecan.c: 103: RXM0EIDL = 0x00;
  1643  0008DA  0E00               	movlw	0
  1644  0008DC  6FFB               	movwf	251,b	;volatile
  1645                           
  1646                           ;ecan.c: 104: RXM0SIDH = 0x00;
  1647  0008DE  0E00               	movlw	0
  1648  0008E0  6FF8               	movwf	248,b	;volatile
  1649                           
  1650                           ;ecan.c: 105: RXM0SIDL = 0x00;
  1651  0008E2  0E00               	movlw	0
  1652  0008E4  6FF9               	movwf	249,b	;volatile
  1653                           
  1654                           ; BSR set to: 14
  1655                           ;ecan.c: 107: RXM1EIDH = 0xFF;
  1656  0008E6  69FE               	setf	254,b	;volatile
  1657                           
  1658                           ; BSR set to: 14
  1659                           ;ecan.c: 108: RXM1EIDL = 0xFF;
  1660  0008E8  69FF               	setf	255,b	;volatile
  1661                           
  1662                           ; BSR set to: 14
  1663                           ;ecan.c: 109: RXM1SIDH = 0xFF;
  1664  0008EA  69FC               	setf	252,b	;volatile
  1665                           
  1666                           ; BSR set to: 14
  1667                           ;ecan.c: 110: RXM1SIDL = 0xFF;
  1668  0008EC  69FD               	setf	253,b	;volatile
  1669                           
  1670                           ;ecan.c: 116: RXF0EIDH = 0x00;
  1671  0008EE  0E00               	movlw	0
  1672  0008F0  6FE2               	movwf	226,b	;volatile
  1673                           
  1674                           ;ecan.c: 117: RXF0EIDL = 0x00;
  1675  0008F2  0E00               	movlw	0
  1676  0008F4  6FE3               	movwf	227,b	;volatile
  1677                           
  1678                           ;ecan.c: 118: RXF0SIDH = 0x88;
  1679  0008F6  0E88               	movlw	136
  1680  0008F8  6FE0               	movwf	224,b	;volatile
  1681                           
  1682                           ;ecan.c: 119: RXF0SIDL = 0x80;
  1683  0008FA  0E80               	movlw	128
  1684  0008FC  6FE1               	movwf	225,b	;volatile
  1685                           
  1686                           ;ecan.c: 121: RXF1EIDH = 0x00;
  1687  0008FE  0E00               	movlw	0
  1688  000900  6FE6               	movwf	230,b	;volatile
  1689                           
  1690                           ;ecan.c: 122: RXF1EIDL = 0x00;
  1691  000902  0E00               	movlw	0
  1692  000904  6FE7               	movwf	231,b	;volatile
  1693                           
  1694                           ;ecan.c: 123: RXF1SIDH = 0xCC;
  1695  000906  0ECC               	movlw	204
  1696  000908  6FE4               	movwf	228,b	;volatile
  1697                           
  1698                           ;ecan.c: 124: RXF1SIDL = 0xC0;
  1699  00090A  0EC0               	movlw	192
  1700  00090C  6FE5               	movwf	229,b	;volatile
  1701                           
  1702                           ;ecan.c: 126: RXF2EIDH = 0x00;
  1703  00090E  0E00               	movlw	0
  1704  000910  6FEA               	movwf	234,b	;volatile
  1705                           
  1706                           ;ecan.c: 127: RXF2EIDL = 0x00;
  1707  000912  0E00               	movlw	0
  1708  000914  6FEB               	movwf	235,b	;volatile
  1709                           
  1710                           ;ecan.c: 128: RXF2SIDH = 0x00;
  1711  000916  0E00               	movlw	0
  1712  000918  6FE8               	movwf	232,b	;volatile
  1713                           
  1714                           ;ecan.c: 129: RXF2SIDL = 0x00;
  1715  00091A  0E00               	movlw	0
  1716  00091C  6FE9               	movwf	233,b	;volatile
  1717                           
  1718                           ;ecan.c: 131: RXF3EIDH = 0x00;
  1719  00091E  0E00               	movlw	0
  1720  000920  6FEE               	movwf	238,b	;volatile
  1721                           
  1722                           ;ecan.c: 132: RXF3EIDL = 0x00;
  1723  000922  0E00               	movlw	0
  1724  000924  6FEF               	movwf	239,b	;volatile
  1725                           
  1726                           ;ecan.c: 133: RXF3SIDH = 0x00;
  1727  000926  0E00               	movlw	0
  1728  000928  6FEC               	movwf	236,b	;volatile
  1729                           
  1730                           ;ecan.c: 134: RXF3SIDL = 0x00;
  1731  00092A  0E00               	movlw	0
  1732  00092C  6FED               	movwf	237,b	;volatile
  1733                           
  1734                           ;ecan.c: 136: RXF4EIDH = 0x00;
  1735  00092E  0E00               	movlw	0
  1736  000930  6FF2               	movwf	242,b	;volatile
  1737                           
  1738                           ;ecan.c: 137: RXF4EIDL = 0x00;
  1739  000932  0E00               	movlw	0
  1740  000934  6FF3               	movwf	243,b	;volatile
  1741                           
  1742                           ;ecan.c: 138: RXF4SIDH = 0x00;
  1743  000936  0E00               	movlw	0
  1744  000938  6FF0               	movwf	240,b	;volatile
  1745                           
  1746                           ;ecan.c: 139: RXF4SIDL = 0x00;
  1747  00093A  0E00               	movlw	0
  1748  00093C  6FF1               	movwf	241,b	;volatile
  1749                           
  1750                           ;ecan.c: 141: RXF5EIDH = 0x00;
  1751  00093E  0E00               	movlw	0
  1752  000940  6FF6               	movwf	246,b	;volatile
  1753                           
  1754                           ;ecan.c: 142: RXF5EIDL = 0x00;
  1755  000942  0E00               	movlw	0
  1756  000944  6FF7               	movwf	247,b	;volatile
  1757                           
  1758                           ;ecan.c: 143: RXF5SIDH = 0x00;
  1759  000946  0E00               	movlw	0
  1760  000948  6FF4               	movwf	244,b	;volatile
  1761                           
  1762                           ;ecan.c: 144: RXF5SIDL = 0x00;
  1763  00094A  0E00               	movlw	0
  1764  00094C  6FF5               	movwf	245,b	;volatile
  1765                           
  1766                           ;ecan.c: 159: BRGCON1 = 0x00;
  1767  00094E  0E00               	movlw	0
  1768  000950  6F43               	movwf	67,b	;volatile
  1769                           
  1770                           ;ecan.c: 160: BRGCON2 = 0x98;
  1771  000952  0E98               	movlw	152
  1772  000954  6F44               	movwf	68,b	;volatile
  1773                           
  1774                           ;ecan.c: 161: BRGCON3 = 0x01;
  1775  000956  0E01               	movlw	1
  1776  000958  6F45               	movwf	69,b	;volatile
  1777                           
  1778                           ;ecan.c: 163: CANCON = 0x00;
  1779  00095A  0E00               	movlw	0
  1780  00095C  6E6F               	movwf	3951,c	;volatile
  1781  00095E                     
  1782                           ; BSR set to: 14
  1783                           
  1784                           ; BSR set to: 14
  1785  00095E  CF6E F060          	movff	3950,??_ECAN_Initialize	;volatile
  1786  000962  0EE0               	movlw	224
  1787  000964  0100               	movlb	0	; () banked
  1788  000966  1760               	andwf	??_ECAN_Initialize& (0+255),f,b
  1789  000968  B4D8               	btfsc	status,2,c
  1790  00096A  0012               	return	
  1791  00096C  D7F8               	goto	l272
  1792  00096E                     __end_of_ECAN_Initialize:
  1793                           	opt stack 0
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           intcon	equ	0xFF2
  1799                           postinc0	equ	0xFEE
  1800                           wreg	equ	0xFE8
  1801                           indf2	equ	0xFDF
  1802                           postinc2	equ	0xFDE
  1803                           postdec2	equ	0xFDD
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8
  1807                           
  1808 ;; *************** function _INTERRUPT_InterruptManager *****************
  1809 ;; Defined at:
  1810 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;Total ram usage:       18 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    4
  1831 ;; This function calls:
  1832 ;;		_ECAN_ISR_ECAN_RXBI
  1833 ;;		_I2C_BusCollisionISR
  1834 ;;		_I2C_ISR
  1835 ;; This function is called by:
  1836 ;;		Interrupt level 2
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	intcode
  1841  000008                     __pintcode:
  1842                           	opt stack 0
  1843  000008                     _INTERRUPT_InterruptManager:
  1844                           	opt stack 23
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;incstack = 0
  1848  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1849  00000A  CFFA F01D          	movff	pclath,??_INTERRUPT_InterruptManager
  1850  00000E  CFFB F01E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1851  000012  CFE9 F01F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1852  000016  CFEA F020          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1853  00001A  CFE1 F021          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1854  00001E  CFE2 F022          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1855  000022  CFD9 F023          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1856  000026  CFDA F024          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1857  00002A  CFF3 F025          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1858  00002E  CFF4 F026          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1859  000032  CFF6 F027          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1860  000036  CFF7 F028          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1861  00003A  CFF8 F029          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1862  00003E  CFF5 F02A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1863  000042  C04C  F02B         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1864  000046  C04D  F02C         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1865  00004A  C04E  F02D         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1866  00004E  C04F  F02E         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1867                           
  1868                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE2bits.BCLIE == 1 && PIR2bits.BCL
      +                          IF == 1)
  1869  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1870  000054  A6A0               	btfss	4000,3,c	;volatile
  1871  000056  D005               	goto	i2l466
  1872  000058  A6A1               	btfss	4001,3,c	;volatile
  1873  00005A  D003               	goto	i2l466
  1874                           
  1875                           ;interrupt_manager.c: 61: {
  1876                           ;interrupt_manager.c: 62: I2C_BusCollisionISR();
  1877  00005C  EC7B  F006         	call	_I2C_BusCollisionISR	;wreg free
  1878                           
  1879                           ;interrupt_manager.c: 63: }
  1880  000060  D00E               	goto	i2l470
  1881  000062                     i2l466:
  1882                           
  1883                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.SSPIE == 1 && PIR1bit
      +                          s.SSPIF == 1)
  1884  000062  BCF2               	btfsc	intcon,6,c	;volatile
  1885  000064  A69D               	btfss	3997,3,c	;volatile
  1886  000066  D005               	goto	i2l468
  1887  000068  A69E               	btfss	3998,3,c	;volatile
  1888  00006A  D003               	goto	i2l468
  1889                           
  1890                           ;interrupt_manager.c: 65: {
  1891                           ;interrupt_manager.c: 66: I2C_ISR();
  1892  00006C  EC67  F000         	call	_I2C_ISR	;wreg free
  1893                           
  1894                           ;interrupt_manager.c: 67: }
  1895  000070  D006               	goto	i2l470
  1896  000072                     i2l468:
  1897                           
  1898                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE5bits.RXB0IE == 1 && PIR5bi
      +                          ts.RXB0IF == 1)
  1899  000072  BCF2               	btfsc	intcon,6,c	;volatile
  1900  000074  A076               	btfss	3958,0,c	;volatile
  1901  000076  D003               	goto	i2l470
  1902  000078  B077               	btfsc	3959,0,c	;volatile
  1903                           
  1904                           ;interrupt_manager.c: 69: {
  1905                           ;interrupt_manager.c: 70: ECAN_ISR_ECAN_RXBI();
  1906  00007A  EC70  F006         	call	_ECAN_ISR_ECAN_RXBI	;wreg free
  1907  00007E                     i2l470:
  1908                           
  1909                           ;interrupt_manager.c: 72: else
  1910                           ;interrupt_manager.c: 73: {
  1911  00007E  C02E  F04F         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1912  000082  C02D  F04E         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1913  000086  C02C  F04D         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1914  00008A  C02B  F04C         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1915  00008E  C02A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1916  000092  C029  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1917  000096  C028  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1918  00009A  C027  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1919  00009E  C026  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1920  0000A2  C025  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1921  0000A6  C024  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1922  0000AA  C023  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1923  0000AE  C022  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1924  0000B2  C021  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1925  0000B6  C020  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1926  0000BA  C01F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1927  0000BE  C01E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1928  0000C2  C01D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1929  0000C6  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1930  0000C8  0011               	retfie		f
  1931  0000CA                     __end_of_INTERRUPT_InterruptManager:
  1932                           	opt stack 0
  1933                           pclatu	equ	0xFFB
  1934                           pclath	equ	0xFFA
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           prodh	equ	0xFF4
  1940                           prodl	equ	0xFF3
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           fsr0h	equ	0xFEA
  1944                           fsr0l	equ	0xFE9
  1945                           wreg	equ	0xFE8
  1946                           fsr1h	equ	0xFE2
  1947                           fsr1l	equ	0xFE1
  1948                           indf2	equ	0xFDF
  1949                           postinc2	equ	0xFDE
  1950                           postdec2	equ	0xFDD
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _I2C_ISR *****************
  1956 ;; Defined at:
  1957 ;;		line 231 in file "mcc_generated_files/i2c.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    1
  1978 ;; This function calls:
  1979 ;;		_I2C_FunctionComplete
  1980 ;;		_I2C_Stop
  1981 ;; This function is called by:
  1982 ;;		_INTERRUPT_InterruptManager
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text12
  1987  0000CE                     __ptext12:
  1988                           	opt stack 0
  1989  0000CE                     _I2C_ISR:
  1990                           	opt stack 25
  1991                           
  1992                           ;i2c.c: 234: static uint8_t *pi2c_buf_ptr;
  1993                           ;i2c.c: 235: static uint16_t i2c_address = 0;
  1994                           ;i2c.c: 236: static uint8_t i2c_bytes_left = 0;
  1995                           ;i2c.c: 237: static uint8_t i2c_10bit_address_restart = 0;
  1996                           ;i2c.c: 239: PIR1bits.SSPIF = 0;
  1997                           
  1998                           ;incstack = 0
  1999  0000CE  969E               	bcf	3998,3,c	;volatile
  2000                           
  2001                           ;i2c.c: 243: if(SSPCON1bits.WCOL)
  2002  0000D0  AEC6               	btfss	4038,7,c	;volatile
  2003  0000D2  D0FE               	goto	i2l529
  2004                           
  2005                           ;i2c.c: 244: {
  2006                           ;i2c.c: 246: SSPCON1bits.WCOL = 0;
  2007  0000D4  9EC6               	bcf	4038,7,c	;volatile
  2008                           
  2009                           ;i2c.c: 247: i2c_state = S_MASTER_IDLE;
  2010  0000D6  0E00               	movlw	0
  2011  0000D8  0100               	movlb	0	; () banked
  2012  0000DA  6F84               	movwf	_i2c_state& (0+255),b
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;i2c.c: 248: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  2016  0000DC  EE20 F003          	lfsr	2,3
  2017  0000E0  5033               	movf	_p_i2c_current,w,c
  2018  0000E2  26D9               	addwf	fsr2l,f,c
  2019  0000E4  5034               	movf	_p_i2c_current+1,w,c
  2020  0000E6  22DA               	addwfc	fsr2h,f,c
  2021  0000E8  CFDE F004          	movff	postinc2,??_I2C_ISR
  2022  0000EC  CFDD F005          	movff	postdec2,??_I2C_ISR+1
  2023  0000F0  C004  FFD9         	movff	??_I2C_ISR,fsr2l
  2024  0000F4  C005  FFDA         	movff	??_I2C_ISR+1,fsr2h
  2025  0000F8  0E01               	movlw	1
  2026  0000FA  6EDF               	movwf	indf2,c
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;i2c.c: 251: p_i2c_current = (0);
  2030  0000FC  0E00               	movlw	0
  2031  0000FE  6E33               	movwf	_p_i2c_current,c
  2032  000100  0E00               	movlw	0
  2033  000102  6E34               	movwf	_p_i2c_current+1,c
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;i2c.c: 253: return;
  2037  000104  0012               	return	
  2038  000106                     i2l530:
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;i2c.c: 261: if(i2c_object.trStatus.s.empty != 1)
  2042  000106  B381               	btfsc	(_i2c_object+4)& (0+255),1,b
  2043  000108  0012               	return	
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;i2c.c: 262: {
  2047                           ;i2c.c: 264: p_i2c_current = i2c_object.pTrHead;
  2048  00010A  C07F  F033         	movff	_i2c_object+2,_p_i2c_current
  2049  00010E  C080  F034         	movff	_i2c_object+3,_p_i2c_current+1
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;i2c.c: 265: i2c_trb_count = i2c_object.pTrHead->count;
  2053  000112  C07F  FFD9         	movff	_i2c_object+2,fsr2l
  2054  000116  C080  FFDA         	movff	_i2c_object+3,fsr2h
  2055  00011A  50DF               	movf	indf2,w,c
  2056  00011C  6E39               	movwf	_i2c_trb_count,c
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;i2c.c: 266: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  2060  00011E  EE20 F001          	lfsr	2,1
  2061  000122  517F               	movf	(_i2c_object+2)& (0+255),w,b
  2062  000124  26D9               	addwf	fsr2l,f,c
  2063  000126  5180               	movf	(_i2c_object+3)& (0+255),w,b
  2064  000128  22DA               	addwfc	fsr2h,f,c
  2065  00012A  CFDE F035          	movff	postinc2,_p_i2c_trb_current
  2066  00012E  CFDD F036          	movff	postdec2,_p_i2c_trb_current+1
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;i2c.c: 268: i2c_object.pTrHead++;
  2070  000132  0E05               	movlw	5
  2071  000134  277F               	addwf	(_i2c_object+2)& (0+255),f,b
  2072  000136  0E00               	movlw	0
  2073  000138  2380               	addwfc	(_i2c_object+3)& (0+255),f,b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;i2c.c: 271: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  2077  00013A  0E94               	movlw	low (_i2c_tr_queue+5)
  2078  00013C  197F               	xorwf	(_i2c_object+2)& (0+255),w,b
  2079  00013E  E108               	bnz	i2l2297
  2080  000140  0E00               	movlw	high (_i2c_tr_queue+5)
  2081  000142  1980               	xorwf	(_i2c_object+3)& (0+255),w,b
  2082  000144  A4D8               	btfss	status,2,c
  2083  000146  D004               	goto	i2l532
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;i2c.c: 272: {
  2087                           ;i2c.c: 274: i2c_object.pTrHead = i2c_tr_queue;
  2088  000148  0E8F               	movlw	low _i2c_tr_queue
  2089  00014A  6F7F               	movwf	(_i2c_object+2)& (0+255),b
  2090  00014C  0E00               	movlw	high _i2c_tr_queue
  2091  00014E  6F80               	movwf	(_i2c_object+3)& (0+255),b
  2092  000150                     i2l532:
  2093  000150                     i2l2297:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;i2c.c: 275: }
  2097                           ;i2c.c: 279: i2c_object.trStatus.s.full = 0;
  2098  000150  9181               	bcf	(_i2c_object+4)& (0+255),0,b
  2099                           
  2100                           ;i2c.c: 282: if(i2c_object.pTrHead == i2c_object.pTrTail)
  2101  000152  517D               	movf	_i2c_object& (0+255),w,b
  2102  000154  197F               	xorwf	(_i2c_object+2)& (0+255),w,b
  2103  000156  E104               	bnz	i2l533
  2104  000158  517E               	movf	(_i2c_object+1)& (0+255),w,b
  2105  00015A  1980               	xorwf	(_i2c_object+3)& (0+255),w,b
  2106  00015C  B4D8               	btfsc	status,2,c
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;i2c.c: 283: {
  2110                           ;i2c.c: 285: i2c_object.trStatus.s.empty = 1;
  2111  00015E  8381               	bsf	(_i2c_object+4)& (0+255),1,b
  2112  000160                     i2l533:
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;i2c.c: 286: }
  2116                           ;i2c.c: 289: SSPCON2bits.SEN = 1;
  2117  000160  80C5               	bsf	4037,0,c	;volatile
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;i2c.c: 292: i2c_state = S_MASTER_SEND_ADDR;
  2121  000162  0E02               	movlw	2
  2122  000164  6F84               	movwf	_i2c_state& (0+255),b
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;i2c.c: 293: }
  2126                           ;i2c.c: 295: break;
  2127  000166  0012               	return	
  2128  000168                     i2l535:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;i2c.c: 302: SSPCON2bits.RSEN = 1;
  2132  000168  82C5               	bsf	4037,1,c	;volatile
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;i2c.c: 305: i2c_state = S_MASTER_SEND_ADDR;
  2136  00016A  0E02               	movlw	2
  2137  00016C  6F84               	movwf	_i2c_state& (0+255),b
  2138                           
  2139                           ;i2c.c: 307: break;
  2140  00016E  0012               	return	
  2141  000170                     i2l536:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;i2c.c: 311: if(SSPCON2bits.ACKSTAT)
  2145  000170  ACC5               	btfss	4037,6,c	;volatile
  2146  000172  D005               	goto	i2l537
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;i2c.c: 312: {
  2150                           ;i2c.c: 313: i2c_object.i2cErrors++;
  2151  000174  2B83               	incf	(_i2c_object+6)& (0+255),f,b
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;i2c.c: 314: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2155  000176  0E04               	movlw	4
  2156  000178  ECE5  F005         	call	_I2C_Stop
  2157                           
  2158                           ;i2c.c: 315: }
  2159  00017C  0012               	return	
  2160  00017E                     i2l537:
  2161                           
  2162                           ;i2c.c: 316: else
  2163                           ;i2c.c: 317: {
  2164                           ;i2c.c: 319: SSPBUF = (i2c_address >> 1) & 0x00FF;
  2165  00017E  90D8               	bcf	status,0,c
  2166  000180  3049               	rrcf	I2C_ISR@i2c_address+1,w,c
  2167  000182  6E05               	movwf	(??_I2C_ISR+1)& (0+255),c
  2168  000184  3048               	rrcf	I2C_ISR@i2c_address,w,c
  2169  000186  6E04               	movwf	??_I2C_ISR& (0+255),c
  2170  000188  5004               	movf	??_I2C_ISR,w,c
  2171  00018A  6EC9               	movwf	4041,c	;volatile
  2172                           
  2173                           ;i2c.c: 322: if(i2c_address & 0x01)
  2174  00018C  A048               	btfss	I2C_ISR@i2c_address,0,c
  2175  00018E  D004               	goto	i2l539
  2176                           
  2177                           ;i2c.c: 323: {
  2178                           ;i2c.c: 326: i2c_state = S_MASTER_10BIT_RESTART;
  2179  000190  0E0B               	movlw	11
  2180  000192  0100               	movlb	0	; () banked
  2181  000194  6F84               	movwf	_i2c_state& (0+255),b
  2182                           
  2183                           ;i2c.c: 327: }
  2184  000196  0012               	return	
  2185  000198                     i2l539:
  2186                           
  2187                           ;i2c.c: 328: else
  2188                           ;i2c.c: 329: {
  2189                           ;i2c.c: 331: i2c_state = S_MASTER_SEND_DATA;
  2190                           
  2191                           ; BSR set to: 0
  2192  000198  0E03               	movlw	3
  2193  00019A  0100               	movlb	0	; () banked
  2194  00019C  6F84               	movwf	_i2c_state& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;i2c.c: 332: }
  2198                           ;i2c.c: 333: }
  2199                           ;i2c.c: 335: break;
  2200                           
  2201                           ; BSR set to: 0
  2202  00019E  0012               	return	
  2203  0001A0                     i2l541:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;i2c.c: 339: if(SSPCON2bits.ACKSTAT)
  2207  0001A0  ACC5               	btfss	4037,6,c	;volatile
  2208  0001A2  D005               	goto	i2l542
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;i2c.c: 340: {
  2212                           ;i2c.c: 341: i2c_object.i2cErrors++;
  2213  0001A4  2B83               	incf	(_i2c_object+6)& (0+255),f,b
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;i2c.c: 342: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2217  0001A6  0E04               	movlw	4
  2218  0001A8  ECE5  F005         	call	_I2C_Stop
  2219                           
  2220                           ;i2c.c: 343: }
  2221  0001AC  0012               	return	
  2222  0001AE                     i2l542:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;i2c.c: 344: else
  2226                           ;i2c.c: 345: {
  2227                           ;i2c.c: 348: SSPCON2bits.RSEN = 1;
  2228  0001AE  82C5               	bsf	4037,1,c	;volatile
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;i2c.c: 352: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2232  0001B0  C048  F004         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  2233  0001B4  C049  F005         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  2234  0001B8  C005  F004         	movff	??_I2C_ISR+1,??_I2C_ISR
  2235  0001BC  6A05               	clrf	??_I2C_ISR+1,c
  2236  0001BE  0E06               	movlw	6
  2237  0001C0  1604               	andwf	??_I2C_ISR,f,c
  2238  0001C2  0E00               	movlw	0
  2239  0001C4  1605               	andwf	??_I2C_ISR+1,f,c
  2240  0001C6  0EF0               	movlw	240
  2241  0001C8  1004               	iorwf	??_I2C_ISR,w,c
  2242  0001CA  6E48               	movwf	I2C_ISR@i2c_address,c
  2243  0001CC  5005               	movf	??_I2C_ISR+1,w,c
  2244  0001CE  6E49               	movwf	I2C_ISR@i2c_address+1,c
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;i2c.c: 355: i2c_address |= 0x0001;
  2248  0001D0  8048               	bsf	I2C_ISR@i2c_address,0,c
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;i2c.c: 358: i2c_10bit_address_restart = 1;
  2252  0001D2  0E01               	movlw	1
  2253  0001D4  6E37               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;i2c.c: 361: i2c_state = S_MASTER_SEND_ADDR;
  2257  0001D6  0E02               	movlw	2
  2258  0001D8  6F84               	movwf	_i2c_state& (0+255),b
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;i2c.c: 362: }
  2262                           ;i2c.c: 364: break;
  2263  0001DA  0012               	return	
  2264  0001DC                     
  2265                           ; BSR set to: 0
  2266                           ;i2c.c: 379: if(i2c_10bit_address_restart != 1)
  2267                           
  2268                           ; BSR set to: 0
  2269  0001DC  0437               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  2270  0001DE  B4D8               	btfsc	status,2,c
  2271  0001E0  D01A               	goto	i2l546
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;i2c.c: 380: {
  2275                           ;i2c.c: 382: i2c_address = p_i2c_trb_current->address;
  2276  0001E2  C035  FFD9         	movff	_p_i2c_trb_current,fsr2l
  2277  0001E6  C036  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  2278  0001EA  CFDE F048          	movff	postinc2,I2C_ISR@i2c_address
  2279  0001EE  CFDD F049          	movff	postdec2,I2C_ISR@i2c_address+1
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;i2c.c: 383: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  2283  0001F2  EE20 F003          	lfsr	2,3
  2284  0001F6  5035               	movf	_p_i2c_trb_current,w,c
  2285  0001F8  26D9               	addwf	fsr2l,f,c
  2286  0001FA  5036               	movf	_p_i2c_trb_current+1,w,c
  2287  0001FC  22DA               	addwfc	fsr2h,f,c
  2288  0001FE  CFDE F031          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  2289  000202  CFDD F032          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;i2c.c: 384: i2c_bytes_left = p_i2c_trb_current->length;
  2293  000206  EE20 F002          	lfsr	2,2
  2294  00020A  5035               	movf	_p_i2c_trb_current,w,c
  2295  00020C  26D9               	addwf	fsr2l,f,c
  2296  00020E  5036               	movf	_p_i2c_trb_current+1,w,c
  2297  000210  22DA               	addwfc	fsr2h,f,c
  2298  000212  50DF               	movf	indf2,w,c
  2299  000214  6E38               	movwf	I2C_ISR@i2c_bytes_left,c
  2300  000216                     i2l546:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;i2c.c: 407: else
  2304                           ;i2c.c: 408: {
  2305                           ;i2c.c: 410: SSPBUF = i2c_address;
  2306  000216  C048  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  2307                           
  2308                           ;i2c.c: 411: if(i2c_address & 0x01)
  2309  00021A  A048               	btfss	I2C_ISR@i2c_address,0,c
  2310  00021C  D003               	goto	i2l550
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;i2c.c: 412: {
  2314                           ;i2c.c: 414: i2c_state = S_MASTER_ACK_ADDR;
  2315  00021E  0E05               	movlw	5
  2316  000220  6F84               	movwf	_i2c_state& (0+255),b
  2317                           
  2318                           ;i2c.c: 415: }
  2319  000222  0012               	return	
  2320  000224                     i2l550:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;i2c.c: 416: else
  2324                           ;i2c.c: 417: {
  2325                           ;i2c.c: 419: i2c_state = S_MASTER_SEND_DATA;
  2326                           
  2327                           ; BSR set to: 0
  2328  000224  0E03               	movlw	3
  2329  000226  6F84               	movwf	_i2c_state& (0+255),b
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;i2c.c: 420: }
  2333                           ;i2c.c: 421: }
  2334                           ;i2c.c: 422: break;
  2335                           
  2336                           ; BSR set to: 0
  2337  000228  0012               	return	
  2338  00022A                     i2l552:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;i2c.c: 427: if(SSPCON2bits.ACKSTAT)
  2342  00022A  ACC5               	btfss	4037,6,c	;volatile
  2343  00022C  D006               	goto	i2l553
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;i2c.c: 428: {
  2347                           ;i2c.c: 430: i2c_object.i2cErrors++;
  2348  00022E  2B83               	incf	(_i2c_object+6)& (0+255),f,b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;i2c.c: 433: SSPCON2bits.ACKSTAT = 0;
  2352  000230  9CC5               	bcf	4037,6,c	;volatile
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;i2c.c: 436: I2C_Stop(I2C_DATA_NO_ACK);
  2356  000232  0E05               	movlw	5
  2357  000234  ECE5  F005         	call	_I2C_Stop
  2358                           
  2359                           ;i2c.c: 438: }
  2360  000238  0012               	return	
  2361  00023A                     i2l553:
  2362                           
  2363                           ;i2c.c: 439: else
  2364                           ;i2c.c: 440: {
  2365                           ;i2c.c: 442: if(i2c_bytes_left-- == 0U)
  2366  00023A  0638               	decf	I2C_ISR@i2c_bytes_left,f,c
  2367  00023C  2838               	incf	I2C_ISR@i2c_bytes_left,w,c
  2368  00023E  A4D8               	btfss	status,2,c
  2369  000240  D00F               	goto	i2l555
  2370                           
  2371                           ;i2c.c: 443: {
  2372                           ;i2c.c: 447: p_i2c_trb_current++;
  2373  000242  0E05               	movlw	5
  2374  000244  2635               	addwf	_p_i2c_trb_current,f,c
  2375  000246  0E00               	movlw	0
  2376  000248  2236               	addwfc	_p_i2c_trb_current+1,f,c
  2377                           
  2378                           ;i2c.c: 450: if(--i2c_trb_count == 0)
  2379  00024A  2E39               	decfsz	_i2c_trb_count,f,c
  2380  00024C  D004               	goto	i2l556
  2381                           
  2382                           ;i2c.c: 451: {
  2383                           ;i2c.c: 452: I2C_Stop(I2C_MESSAGE_COMPLETE);
  2384  00024E  0E00               	movlw	0
  2385  000250  ECE5  F005         	call	_I2C_Stop
  2386                           
  2387                           ;i2c.c: 453: }
  2388  000254  0012               	return	
  2389  000256                     i2l556:
  2390                           
  2391                           ;i2c.c: 454: else
  2392                           ;i2c.c: 455: {
  2393                           ;i2c.c: 462: SSPCON2bits.RSEN = 1;
  2394  000256  82C5               	bsf	4037,1,c	;volatile
  2395                           
  2396                           ;i2c.c: 465: i2c_state = S_MASTER_SEND_ADDR;
  2397  000258  0E02               	movlw	2
  2398  00025A  0100               	movlb	0	; () banked
  2399  00025C  6F84               	movwf	_i2c_state& (0+255),b
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;i2c.c: 467: }
  2403                           ;i2c.c: 468: }
  2404  00025E  0012               	return	
  2405  000260                     i2l555:
  2406                           
  2407                           ;i2c.c: 469: else
  2408                           ;i2c.c: 470: {
  2409                           ;i2c.c: 472: SSPBUF = *pi2c_buf_ptr++;
  2410                           
  2411                           ; BSR set to: 0
  2412  000260  C031  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  2413  000264  C032  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  2414  000268  50DF               	movf	indf2,w,c
  2415  00026A  6EC9               	movwf	4041,c	;volatile
  2416  00026C  4A31               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  2417  00026E  2A32               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  2418                           
  2419                           ;i2c.c: 473: }
  2420                           ;i2c.c: 474: }
  2421                           ;i2c.c: 475: break;
  2422  000270  0012               	return	
  2423  000272                     i2l559:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;i2c.c: 480: if(SSPCON2bits.ACKSTAT)
  2427  000272  ACC5               	btfss	4037,6,c	;volatile
  2428  000274  D006               	goto	i2l560
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;i2c.c: 481: {
  2432                           ;i2c.c: 484: i2c_object.i2cErrors++;
  2433  000276  2B83               	incf	(_i2c_object+6)& (0+255),f,b
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;i2c.c: 487: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  2437  000278  0E04               	movlw	4
  2438  00027A  ECE5  F005         	call	_I2C_Stop
  2439                           
  2440                           ;i2c.c: 490: SSPCON2bits.ACKSTAT = 0;
  2441  00027E  9CC5               	bcf	4037,6,c	;volatile
  2442                           
  2443                           ;i2c.c: 491: }
  2444  000280  0012               	return	
  2445  000282                     i2l560:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;i2c.c: 492: else
  2449                           ;i2c.c: 493: {
  2450                           ;i2c.c: 494: SSPCON2bits.RCEN = 1;
  2451  000282  86C5               	bsf	4037,3,c	;volatile
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;i2c.c: 495: i2c_state = S_MASTER_ACK_RCV_DATA;
  2455  000284  0E08               	movlw	8
  2456  000286  6F84               	movwf	_i2c_state& (0+255),b
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;i2c.c: 496: }
  2460                           ;i2c.c: 497: break;
  2461  000288  0012               	return	
  2462  00028A                     
  2463                           ; BSR set to: 0
  2464                           ;i2c.c: 504: i2c_state = S_MASTER_ACK_RCV_DATA;
  2465                           
  2466                           ; BSR set to: 0
  2467  00028A  0E08               	movlw	8
  2468  00028C  6F84               	movwf	_i2c_state& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;i2c.c: 507: SSPCON2bits.RCEN = 1;
  2472  00028E  86C5               	bsf	4037,3,c	;volatile
  2473                           
  2474                           ;i2c.c: 509: break;
  2475  000290  0012               	return	
  2476  000292                     
  2477                           ; BSR set to: 0
  2478                           ;i2c.c: 514: *pi2c_buf_ptr++ = SSPBUF;
  2479                           
  2480                           ; BSR set to: 0
  2481  000292  C031  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  2482  000296  C032  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  2483  00029A  CFC9 FFDF          	movff	4041,indf2	;volatile
  2484                           
  2485                           ; BSR set to: 0
  2486  00029E  4A31               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  2487  0002A0  2A32               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;i2c.c: 517: if(--i2c_bytes_left)
  2491  0002A2  0E01               	movlw	1
  2492  0002A4  5E38               	subwf	I2C_ISR@i2c_bytes_left,f,c
  2493  0002A6  B4D8               	btfsc	status,2,c
  2494  0002A8  D004               	goto	i2l564
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;i2c.c: 518: {
  2498                           ;i2c.c: 524: SSPCON2bits.ACKDT = 0;
  2499  0002AA  9AC5               	bcf	4037,5,c	;volatile
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;i2c.c: 527: i2c_state = S_MASTER_RCV_DATA;
  2503  0002AC  0E06               	movlw	6
  2504  0002AE  6F84               	movwf	_i2c_state& (0+255),b
  2505                           
  2506                           ;i2c.c: 528: }
  2507  0002B0  D003               	goto	i2l565
  2508  0002B2                     i2l564:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;i2c.c: 529: else
  2512                           ;i2c.c: 530: {
  2513                           ;i2c.c: 534: SSPCON2bits.ACKDT = 1;
  2514  0002B2  8AC5               	bsf	4037,5,c	;volatile
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;i2c.c: 536: I2C_FunctionComplete();
  2518  0002B4  EC4E  F006         	call	_I2C_FunctionComplete	;wreg free
  2519  0002B8                     i2l565:
  2520                           
  2521                           ;i2c.c: 537: }
  2522                           ;i2c.c: 540: SSPCON2bits.ACKEN = 1;
  2523  0002B8  88C5               	bsf	4037,4,c	;volatile
  2524                           
  2525                           ;i2c.c: 541: break;
  2526  0002BA  0012               	return	
  2527  0002BC                     
  2528                           ;i2c.c: 544: case S_MASTER_SEND_STOP:
  2529                           ;i2c.c: 547: I2C_Stop(I2C_MESSAGE_COMPLETE);
  2530  0002BC  0E00               	movlw	0
  2531  0002BE  ECE5  F005         	call	_I2C_Stop
  2532                           
  2533                           ;i2c.c: 548: break;
  2534  0002C2  0012               	return	
  2535  0002C4                     
  2536                           ;i2c.c: 554: i2c_object.i2cErrors++;
  2537  0002C4  0100               	movlb	0	; () banked
  2538  0002C6  2B83               	incf	(_i2c_object+6)& (0+255),f,b
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;i2c.c: 555: I2C_Stop(I2C_LOST_STATE);
  2542  0002C8  0E06               	movlw	6
  2543  0002CA  ECE5  F005         	call	_I2C_Stop
  2544                           
  2545                           ;i2c.c: 558: }
  2546                           
  2547                           ;i2c.c: 556: break;
  2548  0002CE  0012               	return	
  2549  0002D0                     i2l529:
  2550  0002D0  0100               	movlb	0	; () banked
  2551  0002D2  5184               	movf	_i2c_state& (0+255),w,b
  2552                           
  2553                           ; Switch size 1, requested type "space"
  2554                           ; Number of cases is 11, Range of values is 0 to 11
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte           34    18 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  0002D4  0A00               	xorlw	0	; case 0
  2560  0002D6  B4D8               	btfsc	status,2,c
  2561  0002D8  D716               	goto	i2l530
  2562  0002DA  0A01               	xorlw	1	; case 1
  2563  0002DC  B4D8               	btfsc	status,2,c
  2564  0002DE  D744               	goto	i2l535
  2565  0002E0  0A03               	xorlw	3	; case 2
  2566  0002E2  B4D8               	btfsc	status,2,c
  2567  0002E4  D77B               	goto	i2l544
  2568  0002E6  0A01               	xorlw	1	; case 3
  2569  0002E8  B4D8               	btfsc	status,2,c
  2570  0002EA  D79F               	goto	i2l552
  2571  0002EC  0A07               	xorlw	7	; case 4
  2572  0002EE  B4D8               	btfsc	status,2,c
  2573  0002F0  D7E5               	goto	i2l566
  2574  0002F2  0A01               	xorlw	1	; case 5
  2575  0002F4  B4D8               	btfsc	status,2,c
  2576  0002F6  D7BD               	goto	i2l559
  2577  0002F8  0A03               	xorlw	3	; case 6
  2578  0002FA  B4D8               	btfsc	status,2,c
  2579  0002FC  D7C6               	goto	i2l562
  2580  0002FE  0A01               	xorlw	1	; case 7
  2581  000300  B4D8               	btfsc	status,2,c
  2582  000302  D7DC               	goto	i2l566
  2583  000304  0A0F               	xorlw	15	; case 8
  2584  000306  B4D8               	btfsc	status,2,c
  2585  000308  D7C4               	goto	i2l563
  2586  00030A  0A02               	xorlw	2	; case 10
  2587  00030C  B4D8               	btfsc	status,2,c
  2588  00030E  D730               	goto	i2l536
  2589  000310  0A01               	xorlw	1	; case 11
  2590  000312  B4D8               	btfsc	status,2,c
  2591  000314  D745               	goto	i2l541
  2592  000316  D7D6               	goto	i2l568
  2593  000318                     __end_of_I2C_ISR:
  2594                           	opt stack 0
  2595                           pclatu	equ	0xFFB
  2596                           pclath	equ	0xFFA
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           postinc0	equ	0xFEE
  2605                           fsr0h	equ	0xFEA
  2606                           fsr0l	equ	0xFE9
  2607                           wreg	equ	0xFE8
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           indf2	equ	0xFDF
  2611                           postinc2	equ	0xFDE
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _I2C_Stop *****************
  2618 ;; Defined at:
  2619 ;;		line 579 in file "mcc_generated_files/i2c.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  completion_c    1    wreg     enum E14821
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  completion_c    1    2[COMRAM] enum E14821
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;Total ram usage:        3 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_I2C_ISR
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text13
  2647  000BCA                     __ptext13:
  2648                           	opt stack 0
  2649  000BCA                     _I2C_Stop:
  2650                           	opt stack 25
  2651                           
  2652                           ;incstack = 0
  2653                           ;I2C_Stop@completion_code stored from wreg
  2654  000BCA  6E03               	movwf	I2C_Stop@completion_code,c
  2655                           
  2656                           ;i2c.c: 582: SSPCON2bits.PEN = 1;
  2657  000BCC  84C5               	bsf	4037,2,c	;volatile
  2658                           
  2659                           ;i2c.c: 585: if (p_i2c_current->pTrFlag != (0))
  2660  000BCE  EE20 F003          	lfsr	2,3
  2661  000BD2  5033               	movf	_p_i2c_current,w,c
  2662  000BD4  26D9               	addwf	fsr2l,f,c
  2663  000BD6  5034               	movf	_p_i2c_current+1,w,c
  2664  000BD8  22DA               	addwfc	fsr2h,f,c
  2665  000BDA  50DE               	movf	postinc2,w,c
  2666  000BDC  10DE               	iorwf	postinc2,w,c
  2667  000BDE  B4D8               	btfsc	status,2,c
  2668  000BE0  D010               	goto	i2l576
  2669                           
  2670                           ;i2c.c: 586: {
  2671                           ;i2c.c: 588: *(p_i2c_current->pTrFlag) = completion_code;
  2672  000BE2  EE20 F003          	lfsr	2,3
  2673  000BE6  5033               	movf	_p_i2c_current,w,c
  2674  000BE8  26D9               	addwf	fsr2l,f,c
  2675  000BEA  5034               	movf	_p_i2c_current+1,w,c
  2676  000BEC  22DA               	addwfc	fsr2h,f,c
  2677  000BEE  CFDE F001          	movff	postinc2,??_I2C_Stop
  2678  000BF2  CFDD F002          	movff	postdec2,??_I2C_Stop+1
  2679  000BF6  C001  FFD9         	movff	??_I2C_Stop,fsr2l
  2680  000BFA  C002  FFDA         	movff	??_I2C_Stop+1,fsr2h
  2681  000BFE  C003  FFDF         	movff	I2C_Stop@completion_code,indf2
  2682  000C02                     i2l576:
  2683                           
  2684                           ;i2c.c: 589: }
  2685                           ;i2c.c: 592: i2c_state = S_MASTER_IDLE;
  2686  000C02  0E00               	movlw	0
  2687  000C04  0100               	movlb	0	; () banked
  2688  000C06  6F84               	movwf	_i2c_state& (0+255),b
  2689                           
  2690                           ; BSR set to: 0
  2691  000C08  0012               	return		;funcret
  2692  000C0A                     __end_of_I2C_Stop:
  2693                           	opt stack 0
  2694                           pclatu	equ	0xFFB
  2695                           pclath	equ	0xFFA
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           prodh	equ	0xFF4
  2701                           prodl	equ	0xFF3
  2702                           intcon	equ	0xFF2
  2703                           postinc0	equ	0xFEE
  2704                           fsr0h	equ	0xFEA
  2705                           fsr0l	equ	0xFE9
  2706                           wreg	equ	0xFE8
  2707                           fsr1h	equ	0xFE2
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           postdec2	equ	0xFDD
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _I2C_FunctionComplete *****************
  2717 ;; Defined at:
  2718 ;;		line 561 in file "mcc_generated_files/i2c.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_I2C_ISR
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text14
  2746  000C9C                     __ptext14:
  2747                           	opt stack 0
  2748  000C9C                     _I2C_FunctionComplete:
  2749                           	opt stack 25
  2750                           
  2751                           ;i2c.c: 565: p_i2c_trb_current++;
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;incstack = 0
  2755  000C9C  0E05               	movlw	5
  2756  000C9E  2635               	addwf	_p_i2c_trb_current,f,c
  2757  000CA0  0E00               	movlw	0
  2758  000CA2  2236               	addwfc	_p_i2c_trb_current+1,f,c
  2759                           
  2760                           ;i2c.c: 568: if(--i2c_trb_count == 0)
  2761  000CA4  2E39               	decfsz	_i2c_trb_count,f,c
  2762  000CA6  D004               	goto	i2l571
  2763                           
  2764                           ;i2c.c: 569: {
  2765                           ;i2c.c: 570: i2c_state = S_MASTER_SEND_STOP;
  2766  000CA8  0E04               	movlw	4
  2767  000CAA  0100               	movlb	0	; () banked
  2768  000CAC  6F84               	movwf	_i2c_state& (0+255),b
  2769                           
  2770                           ;i2c.c: 571: }
  2771  000CAE  0012               	return	
  2772  000CB0                     i2l571:
  2773                           
  2774                           ;i2c.c: 572: else
  2775                           ;i2c.c: 573: {
  2776                           ;i2c.c: 574: i2c_state = S_MASTER_RESTART;
  2777                           
  2778                           ; BSR set to: 0
  2779  000CB0  0E01               	movlw	1
  2780  000CB2  0100               	movlb	0	; () banked
  2781  000CB4  6F84               	movwf	_i2c_state& (0+255),b
  2782  000CB6  0012               	return	
  2783  000CB8                     __end_of_I2C_FunctionComplete:
  2784                           	opt stack 0
  2785                           pclatu	equ	0xFFB
  2786                           pclath	equ	0xFFA
  2787                           tblptru	equ	0xFF8
  2788                           tblptrh	equ	0xFF7
  2789                           tblptrl	equ	0xFF6
  2790                           tablat	equ	0xFF5
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           intcon	equ	0xFF2
  2794                           postinc0	equ	0xFEE
  2795                           fsr0h	equ	0xFEA
  2796                           fsr0l	equ	0xFE9
  2797                           wreg	equ	0xFE8
  2798                           fsr1h	equ	0xFE2
  2799                           fsr1l	equ	0xFE1
  2800                           indf2	equ	0xFDF
  2801                           postinc2	equ	0xFDE
  2802                           postdec2	equ	0xFDD
  2803                           fsr2h	equ	0xFDA
  2804                           fsr2l	equ	0xFD9
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function _I2C_BusCollisionISR *****************
  2808 ;; Defined at:
  2809 ;;		line 726 in file "mcc_generated_files/i2c.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		None
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_INTERRUPT_InterruptManager
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text15
  2837  000CF6                     __ptext15:
  2838                           	opt stack 0
  2839  000CF6                     _I2C_BusCollisionISR:
  2840                           	opt stack 26
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;incstack = 0
  2844  000CF6  0012               	return		;funcret
  2845  000CF8                     __end_of_I2C_BusCollisionISR:
  2846                           	opt stack 0
  2847                           pclatu	equ	0xFFB
  2848                           pclath	equ	0xFFA
  2849                           tblptru	equ	0xFF8
  2850                           tblptrh	equ	0xFF7
  2851                           tblptrl	equ	0xFF6
  2852                           tablat	equ	0xFF5
  2853                           prodh	equ	0xFF4
  2854                           prodl	equ	0xFF3
  2855                           intcon	equ	0xFF2
  2856                           postinc0	equ	0xFEE
  2857                           fsr0h	equ	0xFEA
  2858                           fsr0l	equ	0xFE9
  2859                           wreg	equ	0xFE8
  2860                           fsr1h	equ	0xFE2
  2861                           fsr1l	equ	0xFE1
  2862                           indf2	equ	0xFDF
  2863                           postinc2	equ	0xFDE
  2864                           postdec2	equ	0xFDD
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _ECAN_ISR_ECAN_RXBI *****************
  2870 ;; Defined at:
  2871 ;;		line 68 in file "mcc_generated_files/ecan.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    3
  2892 ;; This function calls:
  2893 ;;		_handleCAN
  2894 ;; This function is called by:
  2895 ;;		_INTERRUPT_InterruptManager
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text16
  2900  000CE0                     __ptext16:
  2901                           	opt stack 0
  2902  000CE0                     _ECAN_ISR_ECAN_RXBI:
  2903                           	opt stack 23
  2904                           
  2905                           ;ecan.c: 70: handleCAN(&msg_r);
  2906                           
  2907                           ;incstack = 0
  2908  000CE0  0E3A               	movlw	low _msg_r
  2909  000CE2  6E17               	movwf	handleCAN@msg,c
  2910  000CE4  0E00               	movlw	high _msg_r
  2911  000CE6  6E18               	movwf	handleCAN@msg+1,c
  2912  000CE8  EC8C  F001         	call	_handleCAN	;wreg free
  2913                           
  2914                           ;ecan.c: 73: PIR5bits.RXB0IF = 0;
  2915  000CEC  9077               	bcf	3959,0,c	;volatile
  2916  000CEE  0012               	return		;funcret
  2917  000CF0                     __end_of_ECAN_ISR_ECAN_RXBI:
  2918                           	opt stack 0
  2919                           pclatu	equ	0xFFB
  2920                           pclath	equ	0xFFA
  2921                           tblptru	equ	0xFF8
  2922                           tblptrh	equ	0xFF7
  2923                           tblptrl	equ	0xFF6
  2924                           tablat	equ	0xFF5
  2925                           prodh	equ	0xFF4
  2926                           prodl	equ	0xFF3
  2927                           intcon	equ	0xFF2
  2928                           postinc0	equ	0xFEE
  2929                           fsr0h	equ	0xFEA
  2930                           fsr0l	equ	0xFE9
  2931                           wreg	equ	0xFE8
  2932                           fsr1h	equ	0xFE2
  2933                           fsr1l	equ	0xFE1
  2934                           indf2	equ	0xFDF
  2935                           postinc2	equ	0xFDE
  2936                           postdec2	equ	0xFDD
  2937                           fsr2h	equ	0xFDA
  2938                           fsr2l	equ	0xFD9
  2939                           status	equ	0xFD8
  2940                           
  2941 ;; *************** function _handleCAN *****************
  2942 ;; Defined at:
  2943 ;;		line 449 in file "mcc_generated_files/ecan.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  msg             2   22[COMRAM] PTR struct .
  2946 ;;		 -> msg_r(14), 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2961 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2962 ;;Total ram usage:        6 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    2
  2965 ;; This function calls:
  2966 ;;		_CAN_receive
  2967 ;; This function is called by:
  2968 ;;		_ECAN_ISR_ECAN_RXBI
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text17
  2973  000318                     __ptext17:
  2974                           	opt stack 0
  2975  000318                     _handleCAN:
  2976                           	opt stack 23
  2977                           
  2978                           ;ecan.c: 450: CAN_receive(msg);
  2979                           
  2980                           ;incstack = 0
  2981  000318  C017  F014         	movff	handleCAN@msg,CAN_receive@tempCanMsg
  2982  00031C  C018  F015         	movff	handleCAN@msg+1,CAN_receive@tempCanMsg+1
  2983  000320  ECAB  F002         	call	_CAN_receive	;wreg free
  2984                           
  2985                           ;ecan.c: 451: switch(msg->frame.id){
  2986  000324  D0DC               	goto	i2l329
  2987  000326                     
  2988                           ;ecan.c: 455: if(msg->frame.data0==0){ do { LATAbits.LATA2 = 0; } while(0);}
  2989  000326  EE20 F006          	lfsr	2,6
  2990  00032A  5017               	movf	handleCAN@msg,w,c
  2991  00032C  26D9               	addwf	fsr2l,f,c
  2992  00032E  5018               	movf	handleCAN@msg+1,w,c
  2993  000330  22DA               	addwfc	fsr2h,f,c
  2994  000332  50DF               	movf	indf2,w,c
  2995  000334  A4D8               	btfss	status,2,c
  2996  000336  D002               	goto	i2l331
  2997  000338  9489               	bcf	3977,2,c	;volatile
  2998  00033A  0012               	return	
  2999  00033C                     i2l331:
  3000                           
  3001                           ;ecan.c: 456: else if(msg->frame.data0==1){do { LATAbits.LATA2 = 1; } while(0);}
  3002  00033C  EE20 F006          	lfsr	2,6
  3003  000340  5017               	movf	handleCAN@msg,w,c
  3004  000342  26D9               	addwf	fsr2l,f,c
  3005  000344  5018               	movf	handleCAN@msg+1,w,c
  3006  000346  22DA               	addwfc	fsr2h,f,c
  3007  000348  04DE               	decf	postinc2,w,c
  3008  00034A  A4D8               	btfss	status,2,c
  3009  00034C  0012               	return	
  3010  00034E  8489               	bsf	3977,2,c	;volatile
  3011                           
  3012                           ;ecan.c: 457: break;
  3013  000350  0012               	return	
  3014  000352                     
  3015                           ;ecan.c: 460: if(msg->frame.data0==0){ do { LATAbits.LATA3 = 0; } while(0);}
  3016  000352  EE20 F006          	lfsr	2,6
  3017  000356  5017               	movf	handleCAN@msg,w,c
  3018  000358  26D9               	addwf	fsr2l,f,c
  3019  00035A  5018               	movf	handleCAN@msg+1,w,c
  3020  00035C  22DA               	addwfc	fsr2h,f,c
  3021  00035E  50DF               	movf	indf2,w,c
  3022  000360  A4D8               	btfss	status,2,c
  3023  000362  D002               	goto	i2l340
  3024  000364  9689               	bcf	3977,3,c	;volatile
  3025  000366  0012               	return	
  3026  000368                     i2l340:
  3027                           
  3028                           ;ecan.c: 461: else if(msg->frame.data0==1){do { LATAbits.LATA3 = 1; } while(0);}
  3029  000368  EE20 F006          	lfsr	2,6
  3030  00036C  5017               	movf	handleCAN@msg,w,c
  3031  00036E  26D9               	addwf	fsr2l,f,c
  3032  000370  5018               	movf	handleCAN@msg+1,w,c
  3033  000372  22DA               	addwfc	fsr2h,f,c
  3034  000374  04DE               	decf	postinc2,w,c
  3035  000376  A4D8               	btfss	status,2,c
  3036  000378  0012               	return	
  3037  00037A  8689               	bsf	3977,3,c	;volatile
  3038                           
  3039                           ;ecan.c: 462: break;
  3040  00037C  0012               	return	
  3041  00037E                     
  3042                           ;ecan.c: 465: if(msg->frame.data0==0){ do { LATCbits.LATC0 = 0; } while(0);}
  3043  00037E  EE20 F006          	lfsr	2,6
  3044  000382  5017               	movf	handleCAN@msg,w,c
  3045  000384  26D9               	addwf	fsr2l,f,c
  3046  000386  5018               	movf	handleCAN@msg+1,w,c
  3047  000388  22DA               	addwfc	fsr2h,f,c
  3048  00038A  50DF               	movf	indf2,w,c
  3049  00038C  A4D8               	btfss	status,2,c
  3050  00038E  D002               	goto	i2l348
  3051  000390  908B               	bcf	3979,0,c	;volatile
  3052  000392  0012               	return	
  3053  000394                     i2l348:
  3054                           
  3055                           ;ecan.c: 466: else if(msg->frame.data0==1){do { LATCbits.LATC0 = 1; } while(0);}
  3056  000394  EE20 F006          	lfsr	2,6
  3057  000398  5017               	movf	handleCAN@msg,w,c
  3058  00039A  26D9               	addwf	fsr2l,f,c
  3059  00039C  5018               	movf	handleCAN@msg+1,w,c
  3060  00039E  22DA               	addwfc	fsr2h,f,c
  3061  0003A0  04DE               	decf	postinc2,w,c
  3062  0003A2  A4D8               	btfss	status,2,c
  3063  0003A4  0012               	return	
  3064  0003A6  808B               	bsf	3979,0,c	;volatile
  3065                           
  3066                           ;ecan.c: 467: break;
  3067  0003A8  0012               	return	
  3068  0003AA                     
  3069                           ;ecan.c: 470: if(msg->frame.data0==0){ do { LATCbits.LATC1 = 0; } while(0);}
  3070  0003AA  EE20 F006          	lfsr	2,6
  3071  0003AE  5017               	movf	handleCAN@msg,w,c
  3072  0003B0  26D9               	addwf	fsr2l,f,c
  3073  0003B2  5018               	movf	handleCAN@msg+1,w,c
  3074  0003B4  22DA               	addwfc	fsr2h,f,c
  3075  0003B6  50DF               	movf	indf2,w,c
  3076  0003B8  A4D8               	btfss	status,2,c
  3077  0003BA  D002               	goto	i2l356
  3078  0003BC  928B               	bcf	3979,1,c	;volatile
  3079  0003BE  0012               	return	
  3080  0003C0                     i2l356:
  3081                           
  3082                           ;ecan.c: 471: else if(msg->frame.data0==1){do { LATCbits.LATC1 = 1; } while(0);}
  3083  0003C0  EE20 F006          	lfsr	2,6
  3084  0003C4  5017               	movf	handleCAN@msg,w,c
  3085  0003C6  26D9               	addwf	fsr2l,f,c
  3086  0003C8  5018               	movf	handleCAN@msg+1,w,c
  3087  0003CA  22DA               	addwfc	fsr2h,f,c
  3088  0003CC  04DE               	decf	postinc2,w,c
  3089  0003CE  A4D8               	btfss	status,2,c
  3090  0003D0  0012               	return	
  3091  0003D2  828B               	bsf	3979,1,c	;volatile
  3092                           
  3093                           ;ecan.c: 472: break;
  3094  0003D4  0012               	return	
  3095  0003D6                     
  3096                           ;ecan.c: 475: if(msg->frame.data0==0){ do { LATCbits.LATC2 = 0; } while(0);}
  3097  0003D6  EE20 F006          	lfsr	2,6
  3098  0003DA  5017               	movf	handleCAN@msg,w,c
  3099  0003DC  26D9               	addwf	fsr2l,f,c
  3100  0003DE  5018               	movf	handleCAN@msg+1,w,c
  3101  0003E0  22DA               	addwfc	fsr2h,f,c
  3102  0003E2  50DF               	movf	indf2,w,c
  3103  0003E4  A4D8               	btfss	status,2,c
  3104  0003E6  D002               	goto	i2l364
  3105  0003E8  948B               	bcf	3979,2,c	;volatile
  3106  0003EA  0012               	return	
  3107  0003EC                     i2l364:
  3108                           
  3109                           ;ecan.c: 476: else if(msg->frame.data0==1){do { LATCbits.LATC2 = 1; } while(0);}
  3110  0003EC  EE20 F006          	lfsr	2,6
  3111  0003F0  5017               	movf	handleCAN@msg,w,c
  3112  0003F2  26D9               	addwf	fsr2l,f,c
  3113  0003F4  5018               	movf	handleCAN@msg+1,w,c
  3114  0003F6  22DA               	addwfc	fsr2h,f,c
  3115  0003F8  04DE               	decf	postinc2,w,c
  3116  0003FA  A4D8               	btfss	status,2,c
  3117  0003FC  0012               	return	
  3118  0003FE  848B               	bsf	3979,2,c	;volatile
  3119                           
  3120                           ;ecan.c: 477: break;
  3121  000400  0012               	return	
  3122  000402                     
  3123                           ;ecan.c: 480: if(msg->frame.data0==0){ do { LATBbits.LATB5 = 0; } while(0);}
  3124  000402  EE20 F006          	lfsr	2,6
  3125  000406  5017               	movf	handleCAN@msg,w,c
  3126  000408  26D9               	addwf	fsr2l,f,c
  3127  00040A  5018               	movf	handleCAN@msg+1,w,c
  3128  00040C  22DA               	addwfc	fsr2h,f,c
  3129  00040E  50DF               	movf	indf2,w,c
  3130  000410  A4D8               	btfss	status,2,c
  3131  000412  D002               	goto	i2l372
  3132  000414  9A8A               	bcf	3978,5,c	;volatile
  3133  000416  0012               	return	
  3134  000418                     i2l372:
  3135                           
  3136                           ;ecan.c: 481: else if(msg->frame.data0==1){do { LATBbits.LATB5 = 1; } while(0);}
  3137  000418  EE20 F006          	lfsr	2,6
  3138  00041C  5017               	movf	handleCAN@msg,w,c
  3139  00041E  26D9               	addwf	fsr2l,f,c
  3140  000420  5018               	movf	handleCAN@msg+1,w,c
  3141  000422  22DA               	addwfc	fsr2h,f,c
  3142  000424  04DE               	decf	postinc2,w,c
  3143  000426  A4D8               	btfss	status,2,c
  3144  000428  0012               	return	
  3145  00042A  8A8A               	bsf	3978,5,c	;volatile
  3146                           
  3147                           ;ecan.c: 482: break;
  3148  00042C  0012               	return	
  3149  00042E                     
  3150                           ;ecan.c: 485: if(msg->frame.data0==0){ do { LATBbits.LATB4 = 0; } while(0);}
  3151  00042E  EE20 F006          	lfsr	2,6
  3152  000432  5017               	movf	handleCAN@msg,w,c
  3153  000434  26D9               	addwf	fsr2l,f,c
  3154  000436  5018               	movf	handleCAN@msg+1,w,c
  3155  000438  22DA               	addwfc	fsr2h,f,c
  3156  00043A  50DF               	movf	indf2,w,c
  3157  00043C  A4D8               	btfss	status,2,c
  3158  00043E  D002               	goto	i2l380
  3159  000440  988A               	bcf	3978,4,c	;volatile
  3160  000442  0012               	return	
  3161  000444                     i2l380:
  3162                           
  3163                           ;ecan.c: 486: else if(msg->frame.data0==1){do { LATBbits.LATB4 = 1; } while(0);}
  3164  000444  EE20 F006          	lfsr	2,6
  3165  000448  5017               	movf	handleCAN@msg,w,c
  3166  00044A  26D9               	addwf	fsr2l,f,c
  3167  00044C  5018               	movf	handleCAN@msg+1,w,c
  3168  00044E  22DA               	addwfc	fsr2h,f,c
  3169  000450  04DE               	decf	postinc2,w,c
  3170  000452  A4D8               	btfss	status,2,c
  3171  000454  0012               	return	
  3172  000456  888A               	bsf	3978,4,c	;volatile
  3173                           
  3174                           ;ecan.c: 487: break;
  3175  000458  0012               	return	
  3176  00045A                     
  3177                           ;ecan.c: 490: if(msg->frame.data0==0){ do { LATBbits.LATB3 = 0; } while(0);}
  3178  00045A  EE20 F006          	lfsr	2,6
  3179  00045E  5017               	movf	handleCAN@msg,w,c
  3180  000460  26D9               	addwf	fsr2l,f,c
  3181  000462  5018               	movf	handleCAN@msg+1,w,c
  3182  000464  22DA               	addwfc	fsr2h,f,c
  3183  000466  50DF               	movf	indf2,w,c
  3184  000468  A4D8               	btfss	status,2,c
  3185  00046A  D002               	goto	i2l388
  3186  00046C  968A               	bcf	3978,3,c	;volatile
  3187  00046E  0012               	return	
  3188  000470                     i2l388:
  3189                           
  3190                           ;ecan.c: 491: else if(msg->frame.data0==1){do { LATBbits.LATB3 = 1; } while(0);}
  3191  000470  EE20 F006          	lfsr	2,6
  3192  000474  5017               	movf	handleCAN@msg,w,c
  3193  000476  26D9               	addwf	fsr2l,f,c
  3194  000478  5018               	movf	handleCAN@msg+1,w,c
  3195  00047A  22DA               	addwfc	fsr2h,f,c
  3196  00047C  04DE               	decf	postinc2,w,c
  3197  00047E  A4D8               	btfss	status,2,c
  3198  000480  0012               	return	
  3199  000482  868A               	bsf	3978,3,c	;volatile
  3200                           
  3201                           ;ecan.c: 492: break;
  3202  000484  0012               	return	
  3203  000486                     
  3204                           ;ecan.c: 495: if(msg->frame.data0==0){ do { LATBbits.LATB2 = 0; } while(0);}
  3205  000486  EE20 F006          	lfsr	2,6
  3206  00048A  5017               	movf	handleCAN@msg,w,c
  3207  00048C  26D9               	addwf	fsr2l,f,c
  3208  00048E  5018               	movf	handleCAN@msg+1,w,c
  3209  000490  22DA               	addwfc	fsr2h,f,c
  3210  000492  50DF               	movf	indf2,w,c
  3211  000494  A4D8               	btfss	status,2,c
  3212  000496  D002               	goto	i2l396
  3213  000498  948A               	bcf	3978,2,c	;volatile
  3214  00049A  0012               	return	
  3215  00049C                     i2l396:
  3216                           
  3217                           ;ecan.c: 496: else if(msg->frame.data0==1){do { LATBbits.LATB2 = 1; } while(0);}
  3218  00049C  EE20 F006          	lfsr	2,6
  3219  0004A0  5017               	movf	handleCAN@msg,w,c
  3220  0004A2  26D9               	addwf	fsr2l,f,c
  3221  0004A4  5018               	movf	handleCAN@msg+1,w,c
  3222  0004A6  22DA               	addwfc	fsr2h,f,c
  3223  0004A8  04DE               	decf	postinc2,w,c
  3224  0004AA  A4D8               	btfss	status,2,c
  3225  0004AC  0012               	return	
  3226  0004AE  848A               	bsf	3978,2,c	;volatile
  3227                           
  3228                           ;ecan.c: 497: break;
  3229  0004B0  0012               	return	
  3230  0004B2                     
  3231                           ;ecan.c: 500: if(msg->frame.data0==0){ do { LATCbits.LATC5 = 0; } while(0);}
  3232  0004B2  EE20 F006          	lfsr	2,6
  3233  0004B6  5017               	movf	handleCAN@msg,w,c
  3234  0004B8  26D9               	addwf	fsr2l,f,c
  3235  0004BA  5018               	movf	handleCAN@msg+1,w,c
  3236  0004BC  22DA               	addwfc	fsr2h,f,c
  3237  0004BE  50DF               	movf	indf2,w,c
  3238  0004C0  A4D8               	btfss	status,2,c
  3239  0004C2  D002               	goto	i2l404
  3240  0004C4  9A8B               	bcf	3979,5,c	;volatile
  3241  0004C6  0012               	return	
  3242  0004C8                     i2l404:
  3243                           
  3244                           ;ecan.c: 501: else if(msg->frame.data0==1){do { LATCbits.LATC5 = 1; } while(0);}
  3245  0004C8  EE20 F006          	lfsr	2,6
  3246  0004CC  5017               	movf	handleCAN@msg,w,c
  3247  0004CE  26D9               	addwf	fsr2l,f,c
  3248  0004D0  5018               	movf	handleCAN@msg+1,w,c
  3249  0004D2  22DA               	addwfc	fsr2h,f,c
  3250  0004D4  04DE               	decf	postinc2,w,c
  3251  0004D6  A4D8               	btfss	status,2,c
  3252  0004D8  0012               	return	
  3253  0004DA  8A8B               	bsf	3979,5,c	;volatile
  3254                           
  3255                           ;ecan.c: 507: }
  3256                           
  3257                           ;ecan.c: 505: break;
  3258                           
  3259                           ;ecan.c: 504: default:
  3260                           
  3261                           ;ecan.c: 502: break;
  3262  0004DC  0012               	return	
  3263  0004DE                     i2l329:
  3264  0004DE  EE20 F001          	lfsr	2,1
  3265  0004E2  5017               	movf	handleCAN@msg,w,c
  3266  0004E4  26D9               	addwf	fsr2l,f,c
  3267  0004E6  5018               	movf	handleCAN@msg+1,w,c
  3268  0004E8  22DA               	addwfc	fsr2h,f,c
  3269  0004EA  CFDE F019          	movff	postinc2,??_handleCAN
  3270  0004EE  CFDE F01A          	movff	postinc2,??_handleCAN+1
  3271  0004F2  CFDE F01B          	movff	postinc2,??_handleCAN+2
  3272  0004F6  CFDE F01C          	movff	postinc2,??_handleCAN+3
  3273                           
  3274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3275                           ; Switch size 1, requested type "space"
  3276                           ; Number of cases is 1, Range of values is 0 to 0
  3277                           ; switch strategies available:
  3278                           ; Name         Instructions Cycles
  3279                           ; simple_byte            4     3 (average)
  3280                           ;	Chosen strategy is simple_byte
  3281  0004FA  501C               	movf	??_handleCAN+3,w,c
  3282  0004FC  0A00               	xorlw	0	; case 0
  3283  0004FE  A4D8               	btfss	status,2,c
  3284  000500  0012               	return	
  3285  000502  D024               	goto	i2l2721
  3286  000504                     i2l2719:
  3287                           
  3288                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3289                           ; Switch size 1, requested type "space"
  3290                           ; Number of cases is 1, Range of values is 0 to 0
  3291                           ; switch strategies available:
  3292                           ; Name         Instructions Cycles
  3293                           ; simple_byte            4     3 (average)
  3294                           ;	Chosen strategy is simple_byte
  3295  000504  501A               	movf	??_handleCAN+1,w,c
  3296  000506  0A00               	xorlw	0	; case 0
  3297  000508  A4D8               	btfss	status,2,c
  3298  00050A  0012               	return	
  3299                           
  3300                           ; Switch size 1, requested type "space"
  3301                           ; Number of cases is 10, Range of values is 1 to 10
  3302                           ; switch strategies available:
  3303                           ; Name         Instructions Cycles
  3304                           ; simple_byte           31    16 (average)
  3305                           ;	Chosen strategy is simple_byte
  3306  00050C  5019               	movf	??_handleCAN,w,c
  3307  00050E  0A01               	xorlw	1	; case 1
  3308  000510  B4D8               	btfsc	status,2,c
  3309  000512  D709               	goto	i2l330
  3310  000514  0A03               	xorlw	3	; case 2
  3311  000516  B4D8               	btfsc	status,2,c
  3312  000518  D71C               	goto	i2l339
  3313  00051A  0A01               	xorlw	1	; case 3
  3314  00051C  B4D8               	btfsc	status,2,c
  3315  00051E  D72F               	goto	i2l347
  3316  000520  0A07               	xorlw	7	; case 4
  3317  000522  B4D8               	btfsc	status,2,c
  3318  000524  D742               	goto	i2l355
  3319  000526  0A01               	xorlw	1	; case 5
  3320  000528  B4D8               	btfsc	status,2,c
  3321  00052A  D755               	goto	i2l363
  3322  00052C  0A03               	xorlw	3	; case 6
  3323  00052E  B4D8               	btfsc	status,2,c
  3324  000530  D768               	goto	i2l371
  3325  000532  0A01               	xorlw	1	; case 7
  3326  000534  B4D8               	btfsc	status,2,c
  3327  000536  D77B               	goto	i2l379
  3328  000538  0A0F               	xorlw	15	; case 8
  3329  00053A  B4D8               	btfsc	status,2,c
  3330  00053C  D78E               	goto	i2l387
  3331  00053E  0A01               	xorlw	1	; case 9
  3332  000540  B4D8               	btfsc	status,2,c
  3333  000542  D7A1               	goto	i2l395
  3334  000544  0A03               	xorlw	3	; case 10
  3335  000546  A4D8               	btfss	status,2,c
  3336  000548  0012               	return	
  3337  00054A  D7B3               	goto	i2l403
  3338  00054C                     i2l2721:
  3339                           
  3340                           ; Switch size 1, requested type "space"
  3341                           ; Number of cases is 1, Range of values is 0 to 0
  3342                           ; switch strategies available:
  3343                           ; Name         Instructions Cycles
  3344                           ; simple_byte            4     3 (average)
  3345                           ;	Chosen strategy is simple_byte
  3346  00054C  501B               	movf	??_handleCAN+2,w,c
  3347  00054E  0A00               	xorlw	0	; case 0
  3348  000550  A4D8               	btfss	status,2,c
  3349  000552  0012               	return	
  3350  000554  D7D7               	goto	i2l2719
  3351  000556                     __end_of_handleCAN:
  3352                           	opt stack 0
  3353                           pclatu	equ	0xFFB
  3354                           pclath	equ	0xFFA
  3355                           tblptru	equ	0xFF8
  3356                           tblptrh	equ	0xFF7
  3357                           tblptrl	equ	0xFF6
  3358                           tablat	equ	0xFF5
  3359                           prodh	equ	0xFF4
  3360                           prodl	equ	0xFF3
  3361                           intcon	equ	0xFF2
  3362                           postinc0	equ	0xFEE
  3363                           fsr0h	equ	0xFEA
  3364                           fsr0l	equ	0xFE9
  3365                           wreg	equ	0xFE8
  3366                           fsr1h	equ	0xFE2
  3367                           fsr1l	equ	0xFE1
  3368                           indf2	equ	0xFDF
  3369                           postinc2	equ	0xFDE
  3370                           postdec2	equ	0xFDD
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _CAN_receive *****************
  3376 ;; Defined at:
  3377 ;;		line 256 in file "mcc_generated_files/ecan.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  3380 ;;		 -> msg_r(14), 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  returnValue     1   21[COMRAM] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      unsigned char 
  3385 ;; Registers used:
  3386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3395 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;Total ram usage:        3 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    1
  3399 ;; This function calls:
  3400 ;;		_convertReg2ExtendedCANid
  3401 ;;		_convertReg2StandardCANid
  3402 ;; This function is called by:
  3403 ;;		_handleCAN
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text18
  3408  000556                     __ptext18:
  3409                           	opt stack 0
  3410  000556                     _CAN_receive:
  3411                           	opt stack 23
  3412                           
  3413                           ;ecan.c: 257: unsigned char returnValue = 0;
  3414                           
  3415                           ;incstack = 0
  3416  000556  0E00               	movlw	0
  3417  000558  6E16               	movwf	CAN_receive@returnValue,c
  3418                           
  3419                           ;ecan.c: 261: {
  3420                           ;ecan.c: 264: if (RXB0CONbits.RXFUL != 0)
  3421  00055A  AE60               	btfss	3936,7,c	;volatile
  3422  00055C  D083               	goto	i2l291
  3423                           
  3424                           ;ecan.c: 265: {
  3425                           ;ecan.c: 266: if ((RXB0SIDL & 0x08) == 0x08)
  3426  00055E  A662               	btfss	3938,3,c	;volatile
  3427  000560  D01E               	goto	i2l292
  3428                           
  3429                           ;ecan.c: 267: {
  3430                           ;ecan.c: 269: tempCanMsg->frame.idType = (unsigned char) 2;
  3431  000562  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3432  000566  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3433  00056A  0E02               	movlw	2
  3434  00056C  6EDF               	movwf	indf2,c
  3435                           
  3436                           ;ecan.c: 270: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  3437  00056E  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3438  000572  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3439  000576  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3440  00057A  5063               	movf	3939,w,c	;volatile
  3441  00057C  ECBD  F003         	call	_convertReg2ExtendedCANid
  3442  000580  EE20 F001          	lfsr	2,1
  3443  000584  5014               	movf	CAN_receive@tempCanMsg,w,c
  3444  000586  26D9               	addwf	fsr2l,f,c
  3445  000588  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3446  00058A  22DA               	addwfc	fsr2h,f,c
  3447  00058C  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3448  000590  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3449  000594  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3450  000598  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3451                           
  3452                           ;ecan.c: 271: } else {
  3453  00059C  D019               	goto	i2l293
  3454  00059E                     i2l292:
  3455                           
  3456                           ;ecan.c: 273: tempCanMsg->frame.idType = (unsigned char) 1;
  3457  00059E  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3458  0005A2  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3459  0005A6  0E01               	movlw	1
  3460  0005A8  6EDF               	movwf	indf2,c
  3461                           
  3462                           ;ecan.c: 274: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  3463  0005AA  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3464  0005AE  5061               	movf	3937,w,c	;volatile
  3465  0005B0  EC08  F005         	call	_convertReg2StandardCANid
  3466  0005B4  EE20 F001          	lfsr	2,1
  3467  0005B8  5014               	movf	CAN_receive@tempCanMsg,w,c
  3468  0005BA  26D9               	addwf	fsr2l,f,c
  3469  0005BC  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3470  0005BE  22DA               	addwfc	fsr2h,f,c
  3471  0005C0  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3472  0005C4  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3473  0005C8  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3474  0005CC  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3475  0005D0                     i2l293:
  3476                           
  3477                           ;ecan.c: 275: }
  3478                           ;ecan.c: 277: tempCanMsg->frame.dlc = RXB0DLC;
  3479  0005D0  EE20 F005          	lfsr	2,5
  3480  0005D4  5014               	movf	CAN_receive@tempCanMsg,w,c
  3481  0005D6  26D9               	addwf	fsr2l,f,c
  3482  0005D8  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3483  0005DA  22DA               	addwfc	fsr2h,f,c
  3484  0005DC  CF65 FFDF          	movff	3941,indf2	;volatile
  3485                           
  3486                           ;ecan.c: 278: tempCanMsg->frame.data0 = RXB0D0;
  3487  0005E0  EE20 F006          	lfsr	2,6
  3488  0005E4  5014               	movf	CAN_receive@tempCanMsg,w,c
  3489  0005E6  26D9               	addwf	fsr2l,f,c
  3490  0005E8  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3491  0005EA  22DA               	addwfc	fsr2h,f,c
  3492  0005EC  CF66 FFDF          	movff	3942,indf2	;volatile
  3493                           
  3494                           ;ecan.c: 279: tempCanMsg->frame.data1 = RXB0D1;
  3495  0005F0  EE20 F007          	lfsr	2,7
  3496  0005F4  5014               	movf	CAN_receive@tempCanMsg,w,c
  3497  0005F6  26D9               	addwf	fsr2l,f,c
  3498  0005F8  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3499  0005FA  22DA               	addwfc	fsr2h,f,c
  3500  0005FC  CF67 FFDF          	movff	3943,indf2	;volatile
  3501                           
  3502                           ;ecan.c: 280: tempCanMsg->frame.data2 = RXB0D2;
  3503  000600  EE20 F008          	lfsr	2,8
  3504  000604  5014               	movf	CAN_receive@tempCanMsg,w,c
  3505  000606  26D9               	addwf	fsr2l,f,c
  3506  000608  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3507  00060A  22DA               	addwfc	fsr2h,f,c
  3508  00060C  CF68 FFDF          	movff	3944,indf2	;volatile
  3509                           
  3510                           ;ecan.c: 281: tempCanMsg->frame.data3 = RXB0D3;
  3511  000610  EE20 F009          	lfsr	2,9
  3512  000614  5014               	movf	CAN_receive@tempCanMsg,w,c
  3513  000616  26D9               	addwf	fsr2l,f,c
  3514  000618  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3515  00061A  22DA               	addwfc	fsr2h,f,c
  3516  00061C  CF69 FFDF          	movff	3945,indf2	;volatile
  3517                           
  3518                           ;ecan.c: 282: tempCanMsg->frame.data4 = RXB0D4;
  3519  000620  EE20 F00A          	lfsr	2,10
  3520  000624  5014               	movf	CAN_receive@tempCanMsg,w,c
  3521  000626  26D9               	addwf	fsr2l,f,c
  3522  000628  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3523  00062A  22DA               	addwfc	fsr2h,f,c
  3524  00062C  CF6A FFDF          	movff	3946,indf2	;volatile
  3525                           
  3526                           ;ecan.c: 283: tempCanMsg->frame.data5 = RXB0D5;
  3527  000630  EE20 F00B          	lfsr	2,11
  3528  000634  5014               	movf	CAN_receive@tempCanMsg,w,c
  3529  000636  26D9               	addwf	fsr2l,f,c
  3530  000638  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3531  00063A  22DA               	addwfc	fsr2h,f,c
  3532  00063C  CF6B FFDF          	movff	3947,indf2	;volatile
  3533                           
  3534                           ;ecan.c: 284: tempCanMsg->frame.data6 = RXB0D6;
  3535  000640  EE20 F00C          	lfsr	2,12
  3536  000644  5014               	movf	CAN_receive@tempCanMsg,w,c
  3537  000646  26D9               	addwf	fsr2l,f,c
  3538  000648  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3539  00064A  22DA               	addwfc	fsr2h,f,c
  3540  00064C  CF6C FFDF          	movff	3948,indf2	;volatile
  3541                           
  3542                           ;ecan.c: 285: tempCanMsg->frame.data7 = RXB0D7;
  3543  000650  EE20 F00D          	lfsr	2,13
  3544  000654  5014               	movf	CAN_receive@tempCanMsg,w,c
  3545  000656  26D9               	addwf	fsr2l,f,c
  3546  000658  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3547  00065A  22DA               	addwfc	fsr2h,f,c
  3548  00065C  CF6D FFDF          	movff	3949,indf2	;volatile
  3549                           
  3550                           ;ecan.c: 286: RXB0CONbits.RXFUL = 0;
  3551  000660  9E60               	bcf	3936,7,c	;volatile
  3552  000662  D087               	goto	i2l2099
  3553  000664                     i2l291:
  3554  000664  010F               	movlb	15	; () banked
  3555  000666  AF30               	btfss	48,7,b	;volatile
  3556  000668  D086               	goto	i2l295
  3557                           
  3558                           ; BSR set to: 15
  3559                           ;ecan.c: 289: {
  3560                           ;ecan.c: 290: if ((RXB1SIDL & 0x08) == 0x08)
  3561  00066A  A732               	btfss	50,3,b	;volatile
  3562  00066C  D01E               	goto	i2l296
  3563                           
  3564                           ; BSR set to: 15
  3565                           ;ecan.c: 291: {
  3566                           ;ecan.c: 293: tempCanMsg->frame.idType = (unsigned char) 2;
  3567  00066E  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3568  000672  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3569  000676  0E02               	movlw	2
  3570  000678  6EDF               	movwf	indf2,c
  3571                           
  3572                           ; BSR set to: 15
  3573                           ;ecan.c: 294: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  3574  00067A  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3575  00067E  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3576  000682  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3577  000686  5133               	movf	51,w,b	;volatile
  3578  000688  ECBD  F003         	call	_convertReg2ExtendedCANid
  3579  00068C  EE20 F001          	lfsr	2,1
  3580  000690  5014               	movf	CAN_receive@tempCanMsg,w,c
  3581  000692  26D9               	addwf	fsr2l,f,c
  3582  000694  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3583  000696  22DA               	addwfc	fsr2h,f,c
  3584  000698  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3585  00069C  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3586  0006A0  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3587  0006A4  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3588                           
  3589                           ;ecan.c: 295: }
  3590  0006A8  D01A               	goto	i2l297
  3591  0006AA                     i2l296:
  3592                           
  3593                           ;ecan.c: 296: else
  3594                           ;ecan.c: 297: {
  3595                           ;ecan.c: 299: tempCanMsg->frame.idType = (unsigned char) 1;
  3596  0006AA  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3597  0006AE  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3598  0006B2  0E01               	movlw	1
  3599  0006B4  6EDF               	movwf	indf2,c
  3600                           
  3601                           ;ecan.c: 300: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  3602  0006B6  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3603  0006BA  010F               	movlb	15	; () banked
  3604  0006BC  5131               	movf	49,w,b	;volatile
  3605  0006BE  EC08  F005         	call	_convertReg2StandardCANid
  3606  0006C2  EE20 F001          	lfsr	2,1
  3607  0006C6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3608  0006C8  26D9               	addwf	fsr2l,f,c
  3609  0006CA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3610  0006CC  22DA               	addwfc	fsr2h,f,c
  3611  0006CE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3612  0006D2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3613  0006D6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3614  0006DA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3615  0006DE                     i2l297:
  3616                           
  3617                           ;ecan.c: 301: }
  3618                           ;ecan.c: 303: tempCanMsg->frame.dlc = RXB1DLC;
  3619  0006DE  EE20 F005          	lfsr	2,5
  3620  0006E2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3621  0006E4  26D9               	addwf	fsr2l,f,c
  3622  0006E6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3623  0006E8  22DA               	addwfc	fsr2h,f,c
  3624  0006EA  CF35 FFDF          	movff	3893,indf2	;volatile
  3625                           
  3626                           ;ecan.c: 304: tempCanMsg->frame.data0 = RXB1D0;
  3627  0006EE  EE20 F006          	lfsr	2,6
  3628  0006F2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3629  0006F4  26D9               	addwf	fsr2l,f,c
  3630  0006F6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3631  0006F8  22DA               	addwfc	fsr2h,f,c
  3632  0006FA  CF36 FFDF          	movff	3894,indf2	;volatile
  3633                           
  3634                           ;ecan.c: 305: tempCanMsg->frame.data1 = RXB1D1;
  3635  0006FE  EE20 F007          	lfsr	2,7
  3636  000702  5014               	movf	CAN_receive@tempCanMsg,w,c
  3637  000704  26D9               	addwf	fsr2l,f,c
  3638  000706  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3639  000708  22DA               	addwfc	fsr2h,f,c
  3640  00070A  CF37 FFDF          	movff	3895,indf2	;volatile
  3641                           
  3642                           ;ecan.c: 306: tempCanMsg->frame.data2 = RXB1D2;
  3643  00070E  EE20 F008          	lfsr	2,8
  3644  000712  5014               	movf	CAN_receive@tempCanMsg,w,c
  3645  000714  26D9               	addwf	fsr2l,f,c
  3646  000716  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3647  000718  22DA               	addwfc	fsr2h,f,c
  3648  00071A  CF38 FFDF          	movff	3896,indf2	;volatile
  3649                           
  3650                           ;ecan.c: 307: tempCanMsg->frame.data3 = RXB1D3;
  3651  00071E  EE20 F009          	lfsr	2,9
  3652  000722  5014               	movf	CAN_receive@tempCanMsg,w,c
  3653  000724  26D9               	addwf	fsr2l,f,c
  3654  000726  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3655  000728  22DA               	addwfc	fsr2h,f,c
  3656  00072A  CF39 FFDF          	movff	3897,indf2	;volatile
  3657                           
  3658                           ;ecan.c: 308: tempCanMsg->frame.data4 = RXB1D4;
  3659  00072E  EE20 F00A          	lfsr	2,10
  3660  000732  5014               	movf	CAN_receive@tempCanMsg,w,c
  3661  000734  26D9               	addwf	fsr2l,f,c
  3662  000736  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3663  000738  22DA               	addwfc	fsr2h,f,c
  3664  00073A  CF3A FFDF          	movff	3898,indf2	;volatile
  3665                           
  3666                           ;ecan.c: 309: tempCanMsg->frame.data5 = RXB1D5;
  3667  00073E  EE20 F00B          	lfsr	2,11
  3668  000742  5014               	movf	CAN_receive@tempCanMsg,w,c
  3669  000744  26D9               	addwf	fsr2l,f,c
  3670  000746  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3671  000748  22DA               	addwfc	fsr2h,f,c
  3672  00074A  CF3B FFDF          	movff	3899,indf2	;volatile
  3673                           
  3674                           ;ecan.c: 310: tempCanMsg->frame.data6 = RXB1D6;
  3675  00074E  EE20 F00C          	lfsr	2,12
  3676  000752  5014               	movf	CAN_receive@tempCanMsg,w,c
  3677  000754  26D9               	addwf	fsr2l,f,c
  3678  000756  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3679  000758  22DA               	addwfc	fsr2h,f,c
  3680  00075A  CF3C FFDF          	movff	3900,indf2	;volatile
  3681                           
  3682                           ;ecan.c: 311: tempCanMsg->frame.data7 = RXB1D7;
  3683  00075E  EE20 F00D          	lfsr	2,13
  3684  000762  5014               	movf	CAN_receive@tempCanMsg,w,c
  3685  000764  26D9               	addwf	fsr2l,f,c
  3686  000766  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3687  000768  22DA               	addwfc	fsr2h,f,c
  3688  00076A  CF3D FFDF          	movff	3901,indf2	;volatile
  3689                           
  3690                           ;ecan.c: 312: RXB1CONbits.RXFUL = 0;
  3691  00076E  010F               	movlb	15	; () banked
  3692  000770  9F30               	bcf	48,7,b	;volatile
  3693  000772                     i2l2099:
  3694                           
  3695                           ; BSR set to: 15
  3696                           ;ecan.c: 313: returnValue = 1;
  3697  000772  0E01               	movlw	1
  3698  000774  6E16               	movwf	CAN_receive@returnValue,c
  3699  000776                     i2l295:
  3700                           
  3701                           ;ecan.c: 314: }
  3702                           ;ecan.c: 317: PIR5bits.RXB1IF = 0;
  3703                           
  3704                           ; BSR set to: 15
  3705                           
  3706                           ; BSR set to: 15
  3707  000776  9277               	bcf	3959,1,c	;volatile
  3708  000778  0012               	return	
  3709  00077A                     __end_of_CAN_receive:
  3710                           	opt stack 0
  3711                           pclatu	equ	0xFFB
  3712                           pclath	equ	0xFFA
  3713                           tblptru	equ	0xFF8
  3714                           tblptrh	equ	0xFF7
  3715                           tblptrl	equ	0xFF6
  3716                           tablat	equ	0xFF5
  3717                           prodh	equ	0xFF4
  3718                           prodl	equ	0xFF3
  3719                           intcon	equ	0xFF2
  3720                           postinc0	equ	0xFEE
  3721                           fsr0h	equ	0xFEA
  3722                           fsr0l	equ	0xFE9
  3723                           wreg	equ	0xFE8
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _convertReg2StandardCANid *****************
  3734 ;; Defined at:
  3735 ;;		line 402 in file "mcc_generated_files/ecan.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  tempRXBn_SID    1    wreg     unsigned char 
  3738 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  3741 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  3742 ;;  returnValue     4    7[COMRAM] unsigned long 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  4    0[COMRAM] unsigned long 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;Total ram usage:       15 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_CAN_receive
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text19
  3766  000A10                     __ptext19:
  3767                           	opt stack 0
  3768  000A10                     _convertReg2StandardCANid:
  3769                           	opt stack 23
  3770                           
  3771                           ;incstack = 0
  3772                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  3773  000A10  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  3774                           
  3775                           ;ecan.c: 403: unsigned long returnValue = 0;
  3776  000A12  0E00               	movlw	0
  3777  000A14  6E08               	movwf	convertReg2StandardCANid@returnValue,c
  3778  000A16  0E00               	movlw	0
  3779  000A18  6E09               	movwf	convertReg2StandardCANid@returnValue+1,c
  3780  000A1A  0E00               	movlw	0
  3781  000A1C  6E0A               	movwf	convertReg2StandardCANid@returnValue+2,c
  3782  000A1E  0E00               	movlw	0
  3783  000A20  6E0B               	movwf	convertReg2StandardCANid@returnValue+3,c
  3784                           
  3785                           ;ecan.c: 404: unsigned long ConvertedID;
  3786                           ;ecan.c: 408: ConvertedID = (tempRXBn_SIDH << 3);
  3787  000A22  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  3788  000A24  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  3789  000A26  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  3790  000A28  90D8               	bcf	status,0,c
  3791  000A2A  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3792  000A2C  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3793  000A2E  90D8               	bcf	status,0,c
  3794  000A30  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3795  000A32  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3796  000A34  90D8               	bcf	status,0,c
  3797  000A36  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3798  000A38  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3799  000A3A  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  3800  000A3E  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  3801  000A42  0E00               	movlw	0
  3802  000A44  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  3803  000A46  0EFF               	movlw	-1
  3804  000A48  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3805  000A4A  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3806                           
  3807                           ;ecan.c: 409: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  3808  000A4C  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  3809  000A50  0E05               	movlw	5
  3810  000A52  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  3811  000A54                     i2u75_45:
  3812  000A54  90D8               	bcf	status,0,c
  3813  000A56  3205               	rrcf	??_convertReg2StandardCANid,f,c
  3814  000A58  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  3815  000A5A  D7FC               	goto	i2u75_45
  3816  000A5C  5005               	movf	??_convertReg2StandardCANid,w,c
  3817  000A5E  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  3818  000A60  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  3819  000A62  0E00               	movlw	0
  3820  000A64  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  3821  000A66  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  3822  000A68  0E00               	movlw	0
  3823  000A6A  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  3824  000A6C  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3825  000A6E  0E00               	movlw	0
  3826  000A70  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  3827  000A72  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3828                           
  3829                           ;ecan.c: 410: returnValue = ConvertedID;
  3830  000A74  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  3831  000A78  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  3832  000A7C  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  3833  000A80  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  3834                           
  3835                           ;ecan.c: 411: return (returnValue);
  3836  000A84  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  3837  000A88  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  3838  000A8C  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  3839  000A90  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  3840  000A94  0012               	return	
  3841  000A96                     __end_of_convertReg2StandardCANid:
  3842                           	opt stack 0
  3843                           pclatu	equ	0xFFB
  3844                           pclath	equ	0xFFA
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           intcon	equ	0xFF2
  3852                           postinc0	equ	0xFEE
  3853                           fsr0h	equ	0xFEA
  3854                           fsr0l	equ	0xFE9
  3855                           wreg	equ	0xFE8
  3856                           fsr1h	equ	0xFE2
  3857                           fsr1l	equ	0xFE1
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           postdec2	equ	0xFDD
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function _convertReg2ExtendedCANid *****************
  3866 ;; Defined at:
  3867 ;;		line 382 in file "mcc_generated_files/ecan.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  tempRXBn_EID    1    wreg     unsigned char 
  3870 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  3871 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  3872 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  3875 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  3876 ;;  returnValue     4    9[COMRAM] unsigned long 
  3877 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  3878 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  4    0[COMRAM] unsigned long 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3889 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;Total ram usage:       19 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_CAN_receive
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text20
  3902  00077A                     __ptext20:
  3903                           	opt stack 0
  3904  00077A                     _convertReg2ExtendedCANid:
  3905                           	opt stack 23
  3906                           
  3907                           ;incstack = 0
  3908                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  3909  00077A  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  3910                           
  3911                           ;ecan.c: 383: unsigned long returnValue = 0;
  3912  00077C  0E00               	movlw	0
  3913  00077E  6E0A               	movwf	convertReg2ExtendedCANid@returnValue,c
  3914  000780  0E00               	movlw	0
  3915  000782  6E0B               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  3916  000784  0E00               	movlw	0
  3917  000786  6E0C               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  3918  000788  0E00               	movlw	0
  3919  00078A  6E0D               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  3920                           
  3921                           ;ecan.c: 384: unsigned long ConvertedID = 0;
  3922  00078C  0E00               	movlw	0
  3923  00078E  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3924  000790  0E00               	movlw	0
  3925  000792  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3926  000794  0E00               	movlw	0
  3927  000796  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3928  000798  0E00               	movlw	0
  3929  00079A  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3930                           
  3931                           ;ecan.c: 385: unsigned char CAN_standardLo_ID_lo2bits;
  3932                           ;ecan.c: 386: unsigned char CAN_standardLo_ID_hi3bits;
  3933                           ;ecan.c: 388: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  3934  00079C  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3935  00079E  0B03               	andlw	3
  3936  0007A0  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  3937                           
  3938                           ;ecan.c: 389: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  3939  0007A2  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3940  0007A4  42E8               	rrncf	wreg,f,c
  3941  0007A6  0B07               	andlw	7
  3942  0007A8  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  3943                           
  3944                           ;ecan.c: 390: ConvertedID = (tempRXBn_SIDH << 3);
  3945  0007AA  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  3946  0007AC  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  3947  0007AE  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  3948  0007B0  90D8               	bcf	status,0,c
  3949  0007B2  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3950  0007B4  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3951  0007B6  90D8               	bcf	status,0,c
  3952  0007B8  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3953  0007BA  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3954  0007BC  90D8               	bcf	status,0,c
  3955  0007BE  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3956  0007C0  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3957  0007C2  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3958  0007C6  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3959  0007CA  0E00               	movlw	0
  3960  0007CC  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  3961  0007CE  0EFF               	movlw	-1
  3962  0007D0  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3963  0007D2  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3964                           
  3965                           ;ecan.c: 391: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  3966  0007D4  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  3967  0007D6  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3968  0007D8  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3969  0007DA  0E00               	movlw	0
  3970  0007DC  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3971  0007DE  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3972  0007E0  0E00               	movlw	0
  3973  0007E2  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3974  0007E4  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3975  0007E6  0E00               	movlw	0
  3976  0007E8  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3977  0007EA  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3978                           
  3979                           ;ecan.c: 392: ConvertedID = (ConvertedID << 2);
  3980  0007EC  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  3981  0007F0  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  3982  0007F4  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  3983  0007F8  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  3984  0007FC  0E02               	movlw	2
  3985  0007FE                     i2u74_45:
  3986  0007FE  90D8               	bcf	status,0,c
  3987  000800  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3988  000802  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3989  000804  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  3990  000806  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  3991  000808  2EE8               	decfsz	wreg,f,c
  3992  00080A  D7F9               	goto	i2u74_45
  3993  00080C  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3994  000810  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3995  000814  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3996  000818  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3997                           
  3998                           ;ecan.c: 393: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  3999  00081C  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  4000  00081E  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4001  000820  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4002  000822  0E00               	movlw	0
  4003  000824  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4004  000826  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4005  000828  0E00               	movlw	0
  4006  00082A  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4007  00082C  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4008  00082E  0E00               	movlw	0
  4009  000830  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4010  000832  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4011                           
  4012                           ;ecan.c: 394: ConvertedID = (ConvertedID << 8);
  4013  000834  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  4014  000838  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  4015  00083C  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  4016  000840  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  4017  000842  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4018  000846  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4019  00084A  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4020  00084E  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4021                           
  4022                           ;ecan.c: 395: ConvertedID = ConvertedID + tempRXBn_EIDH;
  4023  000852  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  4024  000854  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4025  000856  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4026  000858  0E00               	movlw	0
  4027  00085A  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4028  00085C  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4029  00085E  0E00               	movlw	0
  4030  000860  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4031  000862  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4032  000864  0E00               	movlw	0
  4033  000866  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4034  000868  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4035                           
  4036                           ;ecan.c: 396: ConvertedID = (ConvertedID << 8);
  4037  00086A  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  4038  00086E  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  4039  000872  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  4040  000876  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  4041  000878  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  4042  00087C  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  4043  000880  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  4044  000884  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  4045                           
  4046                           ;ecan.c: 397: ConvertedID = ConvertedID + tempRXBn_EIDL;
  4047  000888  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  4048  00088A  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  4049  00088C  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  4050  00088E  0E00               	movlw	0
  4051  000890  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  4052  000892  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  4053  000894  0E00               	movlw	0
  4054  000896  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  4055  000898  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  4056  00089A  0E00               	movlw	0
  4057  00089C  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  4058  00089E  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  4059                           
  4060                           ;ecan.c: 398: returnValue = ConvertedID;
  4061  0008A0  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  4062  0008A4  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  4063  0008A8  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  4064  0008AC  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  4065                           
  4066                           ;ecan.c: 399: return (returnValue);
  4067  0008B0  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  4068  0008B4  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  4069  0008B8  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  4070  0008BC  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  4071  0008C0  0012               	return	
  4072  0008C2                     __end_of_convertReg2ExtendedCANid:
  4073                           	opt stack 0
  4074  0000                     pclatu	equ	0xFFB
  4075                           pclath	equ	0xFFA
  4076                           tblptru	equ	0xFF8
  4077                           tblptrh	equ	0xFF7
  4078                           tblptrl	equ	0xFF6
  4079                           tablat	equ	0xFF5
  4080                           prodh	equ	0xFF4
  4081                           prodl	equ	0xFF3
  4082                           intcon	equ	0xFF2
  4083                           postinc0	equ	0xFEE
  4084                           fsr0h	equ	0xFEA
  4085                           fsr0l	equ	0xFE9
  4086                           wreg	equ	0xFE8
  4087                           fsr1h	equ	0xFE2
  4088                           fsr1l	equ	0xFE1
  4089                           indf2	equ	0xFDF
  4090                           postinc2	equ	0xFDE
  4091                           postdec2	equ	0xFDD
  4092                           fsr2h	equ	0xFDA
  4093                           fsr2l	equ	0xFD9
  4094                           status	equ	0xFD8
  4095                           pclatu	equ	0xFFB
  4096                           pclath	equ	0xFFA
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           prodh	equ	0xFF4
  4102                           prodl	equ	0xFF3
  4103                           intcon	equ	0xFF2
  4104                           postinc0	equ	0xFEE
  4105                           fsr0h	equ	0xFEA
  4106                           fsr0l	equ	0xFE9
  4107                           wreg	equ	0xFE8
  4108                           fsr1h	equ	0xFE2
  4109                           fsr1l	equ	0xFE1
  4110                           indf2	equ	0xFDF
  4111                           postinc2	equ	0xFDE
  4112                           postdec2	equ	0xFDD
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117                           	psect	rparam
  4118  0000                     pclatu	equ	0xFFB
  4119                           pclath	equ	0xFFA
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           postinc0	equ	0xFEE
  4128                           fsr0h	equ	0xFEA
  4129                           fsr0l	equ	0xFE9
  4130                           wreg	equ	0xFE8
  4131                           fsr1h	equ	0xFE2
  4132                           fsr1l	equ	0xFE1
  4133                           indf2	equ	0xFDF
  4134                           postinc2	equ	0xFDE
  4135                           postdec2	equ	0xFDD
  4136                           fsr2h	equ	0xFDA
  4137                           fsr2l	equ	0xFD9
  4138                           status	equ	0xFD8
  4139                           
  4140                           	psect	temp
  4141  00004C                     btemp:
  4142                           	opt stack 0
  4143  00004C                     	ds	1
  4144  0000                     int$flags	set	btemp
  4145  0000                     wtemp6	set	btemp+1
  4146                           pclatu	equ	0xFFB
  4147                           pclath	equ	0xFFA
  4148                           tblptru	equ	0xFF8
  4149                           tblptrh	equ	0xFF7
  4150                           tblptrl	equ	0xFF6
  4151                           tablat	equ	0xFF5
  4152                           prodh	equ	0xFF4
  4153                           prodl	equ	0xFF3
  4154                           intcon	equ	0xFF2
  4155                           postinc0	equ	0xFEE
  4156                           fsr0h	equ	0xFEA
  4157                           fsr0l	equ	0xFE9
  4158                           wreg	equ	0xFE8
  4159                           fsr1h	equ	0xFE2
  4160                           fsr1l	equ	0xFE1
  4161                           indf2	equ	0xFDF
  4162                           postinc2	equ	0xFDE
  4163                           postdec2	equ	0xFDD
  4164                           fsr2h	equ	0xFDA
  4165                           fsr2l	equ	0xFD9
  4166                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      75
    BANK0           160     29      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    i2c_tr_queue.pTrFlag	PTR enum E14821 size(2) Largest target is 0
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    I2C_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    i2c_object.pTrTail.pTrFlag	PTR enum E14821 size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    I2C_MasterTRBInsert@pflag	PTR enum E14821 size(2) Largest target is 1
		 -> send_i2c@status(BANK0[1]), 

    F14933.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    I2C_MasterWrite@pflag	PTR enum E14821 size(2) Largest target is 1
		 -> send_i2c@status(BANK0[1]), 

    I2C_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), 

    F14928.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E14821 size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    S1224$pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    p_i2c_current.pbuffer	PTR unsigned char  size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    S1236$pTrFlag	PTR enum E14821 size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    p_i2c_current.pTrFlag	PTR enum E14821 size(2) Largest target is 5
		 -> send_i2c@writeBuffer(BANK0[5]), send_i2c@status(BANK0[1]), 

    S1236$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[5]), I2C_MasterWrite@trBlock(BANK0[5]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S1247$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    S1247$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[5]), 

    handleCAN@msg	PTR struct . size(2) Largest target is 14
		 -> msg_r(COMRAM[14]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> msg_r(COMRAM[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _I2C_ISR->_I2C_Stop
    _ECAN_ISR_ECAN_RXBI->_handleCAN
    _handleCAN->_CAN_receive
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _main in BANK0

    _main->_send_i2c
    _send_i2c->_I2C_MasterWrite
    _I2C_MasterWrite->_I2C_MasterWriteTRBBuild
    _SYSTEM_Initialize->_ECAN_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1930
                                             26 BANK0      3     3      0
                  _SYSTEM_Initialize
                           _send_i2c
 ---------------------------------------------------------------------------------
 (1) _send_i2c                                            15    14      1    1893
                                             16 BANK0     10     9      1
                    _I2C_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      7     0      7    1607
                                              9 BANK0      7     0      7
                _I2C_MasterTRBInsert
            _I2C_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWriteTRBBuild                              9     2      7     546
                                              0 BANK0      9     2      7
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterTRBInsert                                  6     2      4     546
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ECAN_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0    2326
                                             28 COMRAM    18    18      0
                 _ECAN_ISR_ECAN_RXBI
                _I2C_BusCollisionISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              2     2      0      22
                                              3 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ECAN_ISR_ECAN_RXBI                                   0     0      0    2304
                          _handleCAN
 ---------------------------------------------------------------------------------
 (6) _handleCAN                                            6     4      2    2304
                                             22 COMRAM     6     4      2
                        _CAN_receive
 ---------------------------------------------------------------------------------
 (7) _CAN_receive                                          3     1      2    1744
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (8) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (8) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ECAN_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_i2c
     _I2C_MasterWrite
       _I2C_MasterTRBInsert
       _I2C_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_ISR_ECAN_RXBI
     _handleCAN
       _CAN_receive
         _convertReg2ExtendedCANid
         _convertReg2StandardCANid
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      34       5       32.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      4B       1       79.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F       6        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 25 21:48:57 2018

                                send_i2c@data_code 0070                              I2C_ISR@i2c_bytes_left 0038  
                         __size_of_ECAN_Initialize 00AC                                        __CFG_BORV$0 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l272 095E                                                l269 08C6  
                                              l642 0AAA                                                l651 0BBC  
                                              l582 0B32                                                l594 09EA  
                                              l595 09D6                                                l597 09F6  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                  __end_of_I2C_ISR 0318                                                _ctr 002F  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0005  
                                             l2561 09F6                                               l2555 09D6  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               u1380 0A06  
                                             u1457 0AB6                             ??_I2C_FunctionComplete 0001  
                                             u1467 0ADC                                               _WPUB 000F5B  
                                             _main 0A96                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               fsr2h 000FDA  
                                             fsr0l 000FE9                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 004C                                   __end_of_I2C_Stop 0C0A  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 00CA                                      __CFG_IESO$OFF 000000  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                   __size_of_OSCILLATOR_Initialize 0012                                   ?_I2C_MasterWrite 0069  
                    __end_of_OSCILLATOR_Initialize 0CE0                                              ?_main 0001  
                                    _i2c_trb_count 0039                                              i2l330 0326  
                                            i2l403 04B2                                              i2l331 033C  
                                            i2l404 04C8                                              i2l340 0368  
                                            i2l329 04DE                                              i2l530 0106  
                                            i2l291 0664                                              i2l371 0402  
                                            i2l363 03D6                                              i2l355 03AA  
                                            i2l347 037E                                              i2l339 0352  
                                            i2l292 059E                                              i2l380 0444  
                                            i2l372 0418                                              i2l364 03EC  
                                            i2l356 03C0                                              i2l348 0394  
                                            i2l532 0150                                              i2l293 05D0  
                                            i2l541 01A0                                              i2l533 0160  
                                            i2l550 0224                                              i2l542 01AE  
                                            i2l470 007E                                              i2l295 0776  
                                            i2l535 0168                                              i2l296 06AA  
                                            i2l560 0282                                              i2l552 022A  
                                            i2l544 01DC                                              i2l536 0170  
                                            i2l297 06DE                                              i2l529 02D0  
                                            i2l553 023A                                              i2l537 017E  
                                            i2l562 028A                                              i2l546 0216  
                                            i2l466 0062                                              i2l395 0486  
                                            i2l387 045A                                              i2l379 042E  
                                            i2l571 0CB0                                              i2l563 0292  
                                            i2l555 0260                                              i2l539 0198  
                                            i2l396 049C                                              i2l388 0470  
                                            i2l564 02B2                                              i2l556 0256  
                                            i2l468 0072                                              i2l565 02B8  
                                            i2l566 02BC                                              i2l559 0272  
                                            i2l576 0C02                                              i2l568 02C4  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                                    __CFG_WRT3$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                            CAN_receive@tempCanMsg 0014                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                      __CFG_WRTB$OFF 000000  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                   __CFG_EBTRB$OFF 000000                                              _msg_r 003A  
                                   __CFG_BOREN$OFF 000000                                              pclath 000FFA  
                                            tablat 000FF5                convertReg2ExtendedCANid@ConvertedID 0010  
                                            status 000FD8                                              wtemp6 004D  
                         I2C_MasterTRBInsert@count 0065                           I2C_MasterTRBInsert@pflag 0062  
                                       _i2c_object 007D                                    __initialization 0C0A  
                             __size_of_CAN_receive 0224                                       __end_of_main 0AF2  
                                        ??_I2C_ISR 0004                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_main 007A                                      __activetblptr 000002  
                              _I2C_MasterTRBInsert 096E                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 0060                           ?_I2C_MasterWriteTRBBuild 0060  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                    __CFG_BBSIZ$BB2K 000000  
                                           i2l2099 0772                                     __CFG_WDTEN$OFF 000000  
                                           i2l2721 054C                                             i2l2297 0150  
                                           i2l2719 0504                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                   __CFG_WDTPS$128 000000                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                               ?_I2C_MasterTRBInsert 0060  
                                   __CFG_XINST$OFF 000000                                     __CFG_STVREN$ON 000000  
                       __end_of_ECAN_ISR_ECAN_RXBI 0CF0                                             clear_0 0C28  
                                           clear_1 0C34                            __size_of_I2C_Initialize 002C  
                                 __end_of_send_i2c 0BCA                                       __pdataCOMRAM 004A  
                                        ?_I2C_Stop 0001                   __end_of_convertReg2StandardCANid 0A96  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                      __size_of_INTERRUPT_Initialize 0004  
                                _SYSTEM_Initialize 0CB8                                         __accesstop 0060  
                          __end_of__initialization 0C3A                              ??_I2C_MasterTRBInsert 0064  
                               ?_SYSTEM_Initialize 0001                           _convertReg2ExtendedCANid 077A  
                           CAN_receive@returnValue 0016                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                ??_SYSTEM_Initialize 0061  
                  __end_of_I2C_MasterWriteTRBBuild 0B86                                 __size_of_handleCAN 023E  
                                       ??_I2C_Stop 0001              convertReg2StandardCANid@tempRXBn_SIDH 0007  
            convertReg2StandardCANid@tempRXBn_SIDL 0001                          __end_of_SYSTEM_Initialize 0CCE  
                                       __pbssBANK0 007D                                    __CFG_PLLCFG$OFF 000000  
                     __size_of_I2C_BusCollisionISR 0002                                            _I2C_ISR 00CE  
                                          _ECANCON 000F72                                            _CANSTAT 000F6E  
                                          _BRGCON1 000E43                                            _BRGCON2 000E44  
                                          _BRGCON3 000E45                        I2C_MasterWriteTRBBuild@ptrb 0060  
                                 __CFG_CANMX$PORTC 000000                                            _REFOCON 000F9A  
                                          _OSCCON2 000FD2                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                          I2C_Stop@completion_code 0003                                            i2u74_45 07FE  
                                          i2u75_45 0A54                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                          _SSPCON1 000FC6                                            _SSPSTAT 000FC7  
                    __size_of_I2C_FunctionComplete 001C                                  __end_of_handleCAN 0556  
                                  __CFG_PWRTEN$OFF 000000                                          ?_send_i2c 0070  
                                          __Hparam 0000                                            __Lparam 0000  
                __size_of_convertReg2StandardCANid 0086                          ?_convertReg2StandardCANid 0001  
                                  _ECAN_Initialize 08C2                                            __pcinit 0C0A  
                                   _I2C_Initialize 0C48                                            __ramtop 0F00  
                                          __ptext0 0A96                                            __ptext1 0B86  
                                          __ptext2 0AF2                                            __ptext3 0B40  
                                          __ptext4 096E                                            __ptext5 0CB8  
                                          __ptext6 0C74                                            __ptext7 0CCE  
                                          __ptext8 0CF0                                            __ptext9 0C48  
                            _OSCILLATOR_Initialize 0CCE                           ??_PIN_MANAGER_Initialize 0060  
                                __CFG_MSSPMSK$MSK5 000000                           __size_of_I2C_MasterWrite 004E  
                       __size_of_SYSTEM_Initialize 0016                               end_of_initialization 0C3A  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0016  
                              send_i2c@writeBuffer 0073                                         ??_send_i2c 0071  
                 __size_of_I2C_MasterWriteTRBBuild 0046                                            postdec2 000FDD  
                                          postinc0 000FEE                                            postinc2 000FDE  
                           __end_of_I2C_Initialize 0C74                              I2C_MasterWrite@length 006B  
                               I2C_ISR@i2c_address 0048                                   __CFG_FOSC$INTIO2 000000  
                       ??_convertReg2ExtendedCANid 0005                                 _ECAN_ISR_ECAN_RXBI 0CE0  
                                __size_of_I2C_Stop 0040                   I2C_ISR@i2c_10bit_address_restart 0037  
                              ?_ECAN_ISR_ECAN_RXBI 0001                                    send_i2c@timeOut 0071  
                          __end_of_ECAN_Initialize 096E                                  _p_i2c_trb_current 0035  
                     __end_of_INTERRUPT_Initialize 0CF4                                    ?_I2C_Initialize 0001  
                              __end_of_CAN_receive 077A                                      __pidataCOMRAM 0CF4  
                                     _i2c_tr_queue 008F                               ??_ECAN_ISR_ECAN_RXBI 001D  
                           ?_OSCILLATOR_Initialize 0001                                _I2C_BusCollisionISR 0CF6  
                              start_initialization 0C0A                    __size_of_PIN_MANAGER_Initialize 0028  
                                        _i2c_state 0084                        __end_of_I2C_MasterTRBInsert 0A10  
                                ??_I2C_MasterWrite 0070                convertReg2StandardCANid@returnValue 0008  
                             ?_I2C_BusCollisionISR 0001                                           ?_I2C_ISR 0001  
                                      __pbssCOMRAM 002F                                      __pcstackBANK0 0060  
                          _I2C_MasterWriteTRBBuild 0B40                              ??_I2C_BusCollisionISR 0001  
                                      _CAN_receive 0556                                   ?_ECAN_Initialize 0001  
                           _PIN_MANAGER_Initialize 0C74                                          __pintcode 0008  
                                        _handleCAN 0318                                  __size_of_send_i2c 0044  
                     __end_of_I2C_FunctionComplete 0CB8                       ??_INTERRUPT_InterruptManager 001D  
                                     send_i2c@data 0078                                        _COMSTATbits 000F71  
                                         _I2C_Stop 0BCA                   __end_of_convertReg2ExtendedCANid 08C2  
                     I2C_MasterWriteTRBBuild@pdata 0062                                      _p_i2c_current 0033  
                             _INTERRUPT_Initialize 0CF0                                           _LATAbits 000F89  
                                         _LATBbits 000F8A                                           _LATCbits 000F8B  
                                         _PIE1bits 000F9D                                           _PIE2bits 000FA0  
                                         _PIE5bits 000F76                __size_of_INTERRUPT_InterruptManager 00C2  
                                         _PIR1bits 000F9E                                           _PIR2bits 000FA1  
                                         _PIR5bits 000F77                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                       ?_handleCAN 0017                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                               I2C_MasterWrite@pdata 0069  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                               I2C_MasterWrite@pflag 006E  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                I2C_ISR@pi2c_buf_ptr 0031  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                 __size_of_I2C_ISR 024A                                   __CFG_SOSCSEL$DIG 000000  
                                   send_i2c@status 0079                              ?_INTERRUPT_Initialize 0001  
                        ??_I2C_MasterWriteTRBBuild 0067                           _convertReg2StandardCANid 0A10  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
                                 ??_I2C_Initialize 0060              convertReg2ExtendedCANid@tempRXBn_SIDH 0002  
            convertReg2ExtendedCANid@tempRXBn_SIDL 0003                                           __Hrparam 0000  
                                         __Lrparam 0000                            ??_OSCILLATOR_Initialize 0060  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E  
                                  _I2C_MasterWrite 0AF2                                           _delayVal 004A  
                                         __ptext10 08C2                                           __ptext20 077A  
                                         __ptext12 00CE                                           __ptext13 0BCA  
                                         __ptext14 0C9C                                           __ptext15 0CF6  
                                         __ptext16 0CE0                                           __ptext17 0318  
                                         __ptext18 0556                                           __ptext19 0A10  
                     I2C_MasterTRBInsert@ptrb_list 0060                convertReg2StandardCANid@ConvertedID 000C  
                                    __size_of_main 005C                               _I2C_FunctionComplete 0C9C  
                                     handleCAN@msg 0017                convertReg2ExtendedCANid@returnValue 000A  
                                         _send_i2c 0B86                  __size_of_convertReg2ExtendedCANid 0148  
                                      ??_handleCAN 0019                          ?_convertReg2ExtendedCANid 0001  
                                         int$flags 004C                 __end_of_INTERRUPT_InterruptManager 00CA  
                       _INTERRUPT_InterruptManager 0008                                           main@test 007C  
                              __CFG_INTOSCSEL$HIGH 000000                        __size_of_ECAN_ISR_ECAN_RXBI 0010  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                             ??_INTERRUPT_Initialize 0060  
                                         intlevel2 0000                              ?_I2C_FunctionComplete 0001  
                          ?_PIN_MANAGER_Initialize 0001                              I2C_MasterRead@trBlock 0085  
                     __size_of_I2C_MasterTRBInsert 00A2                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                             I2C_MasterWrite@address 006C  
                          __end_of_I2C_MasterWrite 0B40                             I2C_MasterWrite@trBlock 008A  
                                      _SSPCON1bits 000FC6                                        _SSPCON2bits 000FC5  
                      __end_of_I2C_BusCollisionISR 0CF8                     __end_of_PIN_MANAGER_Initialize 0C9C  
                   I2C_MasterWriteTRBBuild@address 0065                                __CFG_BORPWR$ZPBORMV 000000  
                    I2C_MasterWriteTRBBuild@length 0064  
