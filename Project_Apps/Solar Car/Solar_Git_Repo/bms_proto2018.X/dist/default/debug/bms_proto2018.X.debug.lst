

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 09 14:08:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F26K80 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65 ;; Function _EUSART1_Transmit_ISR is unused but had its address taken
    66  0000                     
    67                           	psect	nvCOMRAM
    68  00003B                     __pnvCOMRAM:
    69                           	opt stack 0
    70  00003B                     _EUSART1_RxDefaultInterruptHandler:
    71                           	opt stack 0
    72  00003B                     	ds	2
    73  00003D                     _EUSART1_TxDefaultInterruptHandler:
    74                           	opt stack 0
    75  00003D                     	ds	2
    76  00003F                     _timer0ReloadVal:
    77                           	opt stack 0
    78  00003F                     	ds	2
    79  000041                     _eusart1TxBufferRemaining:
    80                           	opt stack 0
    81  000041                     	ds	1
    82  0000                     _WPUB	set	3931
    83  0000                     _ANCON1	set	3932
    84  0000                     _ANCON0	set	3933
    85  0000                     _PIR1bits	set	3998
    86  0000                     _RCONbits	set	4048
    87  0000                     _RCREG1	set	4014
    88  0000                     _RCSTA1bits	set	4011
    89  0000                     _TXREG1	set	4013
    90  0000                     _TXSTA1bits	set	4012
    91  0000                     _SPBRGH1	set	3965
    92  0000                     _SPBRG1	set	4015
    93  0000                     _TXSTA1	set	4012
    94  0000                     _RCSTA1	set	4011
    95  0000                     _BAUDCON1	set	4007
    96  0000                     _PIE1bits	set	3997
    97  0000                     _REFOCON	set	3994
    98  0000                     _OSCTUNE	set	3995
    99  0000                     _OSCCON2	set	4050
   100  0000                     _OSCCON	set	4051
   101  0000                     _T0CONbits	set	4053
   102  0000                     _T0CON	set	4053
   103  0000                     _INTCONbits	set	4082
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR0H	set	4055
   106  0000                     _INTCON2bits	set	4081
   107  0000                     _TRISC	set	3988
   108  0000                     _TRISB	set	3987
   109  0000                     _TRISA	set	3986
   110  0000                     _LATC	set	3979
   111  0000                     _LATB	set	3978
   112  0000                     _LATA	set	3977
   113                           
   114                           	psect	smallconst
   115  000F00                     __psmallconst:
   116                           	opt stack 0
   117  000F00  00                 	db	0
   118  000F01                     STR_1:
   119  000F01  55                 	db	85	;'U'
   120  000F02  53                 	db	83	;'S'
   121  000F03  41                 	db	65	;'A'
   122  000F04  52                 	db	82	;'R'
   123  000F05  54                 	db	84	;'T'
   124  000F06  20                 	db	32
   125  000F07  49                 	db	73	;'I'
   126  000F08  6E                 	db	110	;'n'
   127  000F09  69                 	db	105	;'i'
   128  000F0A  74                 	db	116	;'t'
   129  000F0B  69                 	db	105	;'i'
   130  000F0C  61                 	db	97	;'a'
   131  000F0D  6C                 	db	108	;'l'
   132  000F0E  69                 	db	105	;'i'
   133  000F0F  7A                 	db	122	;'z'
   134  000F10  61                 	db	97	;'a'
   135  000F11  74                 	db	116	;'t'
   136  000F12  69                 	db	105	;'i'
   137  000F13  6F                 	db	111	;'o'
   138  000F14  6E                 	db	110	;'n'
   139  000F15  20                 	db	32
   140  000F16  43                 	db	67	;'C'
   141  000F17  6F                 	db	111	;'o'
   142  000F18  6D                 	db	109	;'m'
   143  000F19  70                 	db	112	;'p'
   144  000F1A  6C                 	db	108	;'l'
   145  000F1B  65                 	db	101	;'e'
   146  000F1C  74                 	db	116	;'t'
   147  000F1D  65                 	db	101	;'e'
   148  000F1E  0A                 	db	10
   149  000F1F  00                 	db	0
   150                           
   151                           ; #config settings
   152  000F20  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           	psect	cinit
   155  00113E                     __pcinit:
   156                           	opt stack 0
   157  00113E                     start_initialization:
   158                           	opt stack 0
   159  00113E                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (21 bytes)
   163  00113E  EE00  F026         	lfsr	0,__pbssCOMRAM
   164  001142  0E15               	movlw	21
   165  001144                     clear_0:
   166  001144  6AEE               	clrf	postinc0,c
   167  001146  06E8               	decf	wreg,f,c
   168  001148  E1FD               	bnz	clear_0
   169  00114A                     end_of_initialization:
   170                           	opt stack 0
   171  00114A                     __end_of__initialization:
   172                           	opt stack 0
   173  00114A  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   174  00114C  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   175  00114E  0100               	movlb	0
   176  001150  EF91  F007         	goto	_main	;jump to C main() function
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssCOMRAM
   181  000026                     __pbssCOMRAM:
   182                           	opt stack 0
   183  000026                     _eusart1RxBuffer:
   184                           	opt stack 0
   185  000026                     	ds	8
   186  00002E                     _eusart1TxBuffer:
   187                           	opt stack 0
   188  00002E                     	ds	8
   189  000036                     _eusart1RxCount:
   190                           	opt stack 0
   191  000036                     	ds	1
   192  000037                     _eusart1RxTail:
   193                           	opt stack 0
   194  000037                     	ds	1
   195  000038                     _eusart1RxHead:
   196                           	opt stack 0
   197  000038                     	ds	1
   198  000039                     _eusart1TxTail:
   199                           	opt stack 0
   200  000039                     	ds	1
   201  00003A                     _eusart1TxHead:
   202                           	opt stack 0
   203  00003A                     	ds	1
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	cstackBANK0
   208  000060                     __pcstackBANK0:
   209                           	opt stack 0
   210  000060                     main@config:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x0
   214  000060                     	ds	1
   215  000061                     main@spbrg:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x1
   219  000061                     	ds	1
   220  000062                     main@baudconfig:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x2
   224  000062                     	ds	1
   225  000063                     main@i:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x3
   229  000063                     	ds	1
   230  000064                     main@Txdata:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x4
   234  000064                     	ds	1
   235  000065                     main@counter:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x5
   239  000065                     	ds	2
   240  000067                     main@p_data:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x7
   244  000067                     	ds	2
   245  000069                     main@data:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x9
   249  000069                     	ds	2
   250  00006B                     main@crc:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0xB
   254  00006B                     	ds	2
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	cstackCOMRAM
   259  000001                     __pcstackCOMRAM:
   260                           	opt stack 0
   261  000001                     ??_INTERRUPT_InterruptManager:
   262                           
   263                           ; 1 bytes @ 0x0
   264  000001                     	ds	18
   265  000013                     ??_TMR0_Initialize:
   266  000013                     ?_gen_crc16:
   267                           	opt stack 0
   268  000013                     EUSART1_Write@txData:
   269                           	opt stack 0
   270  000013                     EUSART1_SetTxInterruptHandler@handler:
   271                           	opt stack 0
   272  000013                     EUSART1_SetRxInterruptHandler@handler:
   273                           	opt stack 0
   274  000013                     gen_crc16@buf:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x12
   278  000013                     	ds	1
   279  000014                     send_string@Txdata:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x13
   283  000014                     	ds	1
   284  000015                     gen_crc16@len:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x14
   288  000015                     	ds	1
   289  000016                     
   290                           ; 1 bytes @ 0x15
   291  000016                     	ds	1
   292  000017                     ??_gen_crc16:
   293                           
   294                           ; 1 bytes @ 0x16
   295  000017                     	ds	2
   296  000019                     _gen_crc16$700:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x18
   300  000019                     	ds	2
   301  00001B                     gen_crc16@j:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x1A
   305  00001B                     	ds	2
   306  00001D                     gen_crc16@crc:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x1C
   310  00001D                     	ds	2
   311  00001F                     
   312                           ; 2 bytes @ 0x1E
   313  00001F                     	ds	2
   314  000021                     
   315                           ; 3 bytes @ 0x20
   316  000021                     	ds	3
   317  000024                     ??_main:
   318                           
   319                           ; 1 bytes @ 0x23
   320  000024                     	ds	2
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 40 in file "bms_proto2018.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;  argc            2   30[COMRAM] int 
   332 ;;  argv            3   32[COMRAM] PTR PTR unsigned char 
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  crc             2   11[BANK0 ] unsigned int 
   335 ;;  data            2    9[BANK0 ] unsigned int 
   336 ;;  p_data          2    7[BANK0 ] PTR unsigned int 
   337 ;;		 -> main@data(2), 
   338 ;;  counter         2    5[BANK0 ] unsigned int 
   339 ;;  Txdata          1    4[BANK0 ] unsigned char 
   340 ;;  i               1    3[BANK0 ] unsigned char 
   341 ;;  baudconfig      1    2[BANK0 ] unsigned char 
   342 ;;  spbrg           1    1[BANK0 ] unsigned char 
   343 ;;  config          1    0[BANK0 ] unsigned char 
   344 ;; Return value:  Size  Location     Type
   345 ;;                  2   30[COMRAM] int 
   346 ;; Registers used:
   347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   353 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   354 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   356 ;;      Totals:         7      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   357 ;;Total ram usage:       20 bytes
   358 ;; Hardware stack levels required when called:    5
   359 ;; This function calls:
   360 ;;		_EUSART1_Write
   361 ;;		_SYSTEM_Initialize
   362 ;;		_gen_crc16
   363 ;;		_send_string
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text0
   370  000F22                     __ptext0:
   371                           	opt stack 0
   372  000F22                     _main:
   373                           	opt stack 26
   374                           
   375                           ;bms_proto2018.c: 41: unsigned char config = 0, spbrg = 0, baudconfig = 0, i=0;
   376                           
   377                           ;incstack = 0
   378  000F22  0E00               	movlw	0
   379  000F24  0100               	movlb	0	; () banked
   380  000F26  6F60               	movwf	main@config& (0+255),b
   381  000F28  0E00               	movlw	0
   382  000F2A  6F61               	movwf	main@spbrg& (0+255),b
   383  000F2C  0E00               	movlw	0
   384  000F2E  6F62               	movwf	main@baudconfig& (0+255),b
   385  000F30  0E00               	movlw	0
   386  000F32  6F63               	movwf	main@i& (0+255),b
   387                           
   388                           ;bms_proto2018.c: 42: unsigned char Txdata = 0x69;
   389  000F34  0E69               	movlw	105
   390  000F36  6F64               	movwf	main@Txdata& (0+255),b
   391                           
   392                           ;bms_proto2018.c: 43: unsigned int counter = 0, data = 0xF21010E00000;
   393  000F38  0E00               	movlw	0
   394  000F3A  6F66               	movwf	(main@counter+1)& (0+255),b
   395  000F3C  0E00               	movlw	0
   396  000F3E  6F65               	movwf	main@counter& (0+255),b
   397  000F40  0E00               	movlw	0
   398  000F42  6F6A               	movwf	(main@data+1)& (0+255),b
   399  000F44  0E00               	movlw	0
   400  000F46  6F69               	movwf	main@data& (0+255),b
   401                           
   402                           ;bms_proto2018.c: 44: unsigned int *p_data;
   403                           ;bms_proto2018.c: 45: uint16_t crc = 0;
   404  000F48  0E00               	movlw	0
   405  000F4A  6F6C               	movwf	(main@crc+1)& (0+255),b
   406  000F4C  0E00               	movlw	0
   407  000F4E  6F6B               	movwf	main@crc& (0+255),b
   408                           
   409                           ; BSR set to: 0
   410                           ;bms_proto2018.c: 47: p_data = &data;
   411  000F50  0E69               	movlw	low main@data
   412  000F52  6F67               	movwf	main@p_data& (0+255),b
   413  000F54  0E00               	movlw	high main@data
   414  000F56  6F68               	movwf	(main@p_data+1)& (0+255),b
   415                           
   416                           ; BSR set to: 0
   417                           ;bms_proto2018.c: 48: SYSTEM_Initialize();
   418  000F58  ECAA  F008         	call	_SYSTEM_Initialize	;wreg free
   419                           
   420                           ;bms_proto2018.c: 49: send_string("USART Initialization Complete\n");
   421  000F5C  0E01               	movlw	low STR_1
   422  000F5E  6E14               	movwf	send_string@Txdata,c
   423  000F60  0E0F               	movlw	high STR_1
   424  000F62  6E15               	movwf	send_string@Txdata+1,c
   425  000F64  EC4C  F008         	call	_send_string	;wreg free
   426                           
   427                           ;bms_proto2018.c: 54: TRISA = 0x00;
   428  000F68  0E00               	movlw	0
   429  000F6A  6E92               	movwf	3986,c	;volatile
   430                           
   431                           ;bms_proto2018.c: 56: crc = gen_crc16(p_data,48);
   432  000F6C  C067  F013         	movff	main@p_data,gen_crc16@buf
   433  000F70  C068  F014         	movff	main@p_data+1,gen_crc16@buf+1
   434  000F74  0E00               	movlw	0
   435  000F76  6E16               	movwf	gen_crc16@len+1,c
   436  000F78  0E30               	movlw	48
   437  000F7A  6E15               	movwf	gen_crc16@len,c
   438  000F7C  ECE6  F007         	call	_gen_crc16	;wreg free
   439  000F80  C013  F06B         	movff	?_gen_crc16,main@crc
   440  000F84  C014  F06C         	movff	?_gen_crc16+1,main@crc+1
   441  000F88                     
   442                           ;bms_proto2018.c: 58: LATA = 0x01;
   443  000F88  0E01               	movlw	1
   444  000F8A  6E89               	movwf	3977,c	;volatile
   445                           
   446                           ;bms_proto2018.c: 59: _delay((unsigned long)((250)*(8000000/4000.0)));
   447  000F8C  0E03               	movlw	3
   448  000F8E  6E25               	movwf	(??_main+1)& (0+255),c
   449  000F90  0E8A               	movlw	138
   450  000F92  6E24               	movwf	??_main& (0+255),c
   451  000F94  0E56               	movlw	86
   452  000F96                     u337:
   453  000F96  2EE8               	decfsz	wreg,f,c
   454  000F98  D7FE               	bra	u337
   455  000F9A  2E24               	decfsz	??_main& (0+255),f,c
   456  000F9C  D7FC               	bra	u337
   457  000F9E  2E25               	decfsz	(??_main+1)& (0+255),f,c
   458  000FA0  D7FA               	bra	u337
   459                           
   460                           ;bms_proto2018.c: 60: LATA = 0x00;
   461  000FA2  0E00               	movlw	0
   462  000FA4  6E89               	movwf	3977,c	;volatile
   463                           
   464                           ;bms_proto2018.c: 61: _delay((unsigned long)((250)*(8000000/4000.0)));
   465  000FA6  0E03               	movlw	3
   466  000FA8  6E25               	movwf	(??_main+1)& (0+255),c
   467  000FAA  0E8A               	movlw	138
   468  000FAC  6E24               	movwf	??_main& (0+255),c
   469  000FAE  0E56               	movlw	86
   470  000FB0                     u347:
   471  000FB0  2EE8               	decfsz	wreg,f,c
   472  000FB2  D7FE               	bra	u347
   473  000FB4  2E24               	decfsz	??_main& (0+255),f,c
   474  000FB6  D7FC               	bra	u347
   475  000FB8  2E25               	decfsz	(??_main+1)& (0+255),f,c
   476  000FBA  D7FA               	bra	u347
   477                           
   478                           ;bms_proto2018.c: 64: EUSART1_Write(crc);
   479  000FBC  0100               	movlb	0	; () banked
   480  000FBE  516B               	movf	main@crc& (0+255),w,b
   481  000FC0  ECBE  F008         	call	_EUSART1_Write
   482                           
   483                           ;bms_proto2018.c: 65: counter++;
   484  000FC4  0100               	movlb	0	; () banked
   485  000FC6  4B65               	infsnz	main@counter& (0+255),f,b
   486  000FC8  2B66               	incf	(main@counter+1)& (0+255),f,b
   487                           
   488                           ; BSR set to: 0
   489  000FCA  D7DE               	goto	l224
   490  000FCC                     __end_of_main:
   491                           	opt stack 0
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           
   495 ;; *************** function _send_string *****************
   496 ;; Defined at:
   497 ;;		line 133 in file "bms_proto2018.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  Txdata          2   19[COMRAM] PTR const unsigned char 
   500 ;;		 -> STR_1(31), 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    3
   519 ;; This function calls:
   520 ;;		_EUSART1_Write
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text1
   527  001098                     __ptext1:
   528                           	opt stack 0
   529  001098                     _send_string:
   530                           	opt stack 27
   531                           
   532                           ;bms_proto2018.c: 134: while(*Txdata){
   533                           
   534                           ; BSR set to: 0
   535                           ;incstack = 0
   536  001098  D00B               	goto	l260
   537  00109A                     
   538                           ;bms_proto2018.c: 135: EUSART1_Write(*Txdata++);
   539  00109A  C014  FFF6         	movff	send_string@Txdata,tblptrl
   540  00109E  C015  FFF7         	movff	send_string@Txdata+1,tblptrh
   541  0010A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   542  0010A2  6AF8               	clrf	tblptru,c
   543  0010A4                     	endif
   544  0010A4                     	if	0	;tblptru may be non-zero
   545  0010A4                     	endif
   546  0010A4  0008               	tblrd		*
   547  0010A6  50F5               	movf	tablat,w,c
   548  0010A8  ECBE  F008         	call	_EUSART1_Write
   549  0010AC  4A14               	infsnz	send_string@Txdata,f,c
   550  0010AE  2A15               	incf	send_string@Txdata+1,f,c
   551  0010B0                     l260:
   552  0010B0  C014  FFF6         	movff	send_string@Txdata,tblptrl
   553  0010B4  C015  FFF7         	movff	send_string@Txdata+1,tblptrh
   554  0010B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   555  0010B8  6AF8               	clrf	tblptru,c
   556  0010BA                     	endif
   557  0010BA                     	if	0	;tblptru may be non-zero
   558  0010BA                     	endif
   559  0010BA  0008               	tblrd		*
   560  0010BC  50F5               	movf	tablat,w,c
   561  0010BE  0900               	iorlw	0
   562  0010C0  B4D8               	btfsc	status,2,c
   563  0010C2  0012               	return	
   564  0010C4  D7EA               	goto	l261
   565  0010C6                     __end_of_send_string:
   566                           	opt stack 0
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _EUSART1_Write *****************
   576 ;; Defined at:
   577 ;;		line 150 in file "mcc_generated_files/eusart1.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  txData          1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  txData          1   18[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    2
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;;		_send_string
   603 ;;		_AFE_SetAddress
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text2
   608  00117C                     __ptext2:
   609                           	opt stack 0
   610  00117C                     _EUSART1_Write:
   611                           	opt stack 27
   612                           
   613                           ;incstack = 0
   614                           ;EUSART1_Write@txData stored from wreg
   615  00117C  6E13               	movwf	EUSART1_Write@txData,c
   616  00117E                     
   617                           ;eusart1.c: 153: {
   618                           
   619                           ;eusart1.c: 152: while(0 == eusart1TxBufferRemaining)
   620  00117E  5041               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   621  001180  B4D8               	btfsc	status,2,c
   622  001182  D7FD               	goto	l1269
   623                           
   624                           ;eusart1.c: 154: }
   625                           ;eusart1.c: 156: TXREG1 = txData;
   626  001184  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   627  001188  0012               	return		;funcret
   628  00118A                     __end_of_EUSART1_Write:
   629                           	opt stack 0
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _gen_crc16 *****************
   639 ;; Defined at:
   640 ;;		line 118 in file "bms_proto2018.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  buf             2   18[COMRAM] PTR const unsigned char 
   643 ;;		 -> main@data(2), 
   644 ;;  len             2   20[COMRAM] unsigned int 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  crc             2   28[COMRAM] unsigned int 
   647 ;;  j               2   26[COMRAM] int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  2   18[COMRAM] unsigned int 
   650 ;; Registers used:
   651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   658 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   660 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;Total ram usage:       12 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    2
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text3
   672  000FCC                     __ptext3:
   673                           	opt stack 0
   674  000FCC                     _gen_crc16:
   675                           	opt stack 28
   676                           
   677                           ;bms_proto2018.c: 119: uint16_t crc = 0;
   678                           
   679                           ;incstack = 0
   680  000FCC  0E00               	movlw	0
   681  000FCE  6E1E               	movwf	gen_crc16@crc+1,c
   682  000FD0  0E00               	movlw	0
   683  000FD2  6E1D               	movwf	gen_crc16@crc,c
   684                           
   685                           ;bms_proto2018.c: 120: int j;
   686                           ;bms_proto2018.c: 122: while(len--){
   687  000FD4  D02E               	goto	u310
   688  000FD6                     l1293:
   689                           
   690                           ;bms_proto2018.c: 123: crc ^= *buf++;
   691  000FD6  C013  FFD9         	movff	gen_crc16@buf,fsr2l
   692  000FDA  C014  FFDA         	movff	gen_crc16@buf+1,fsr2h
   693  000FDE  50DF               	movf	indf2,w,c
   694  000FE0  6E17               	movwf	??_gen_crc16& (0+255),c
   695  000FE2  5017               	movf	??_gen_crc16,w,c
   696  000FE4  1A1D               	xorwf	gen_crc16@crc,f,c
   697  000FE6  4A13               	infsnz	gen_crc16@buf,f,c
   698  000FE8  2A14               	incf	gen_crc16@buf+1,f,c
   699                           
   700                           ;bms_proto2018.c: 125: for(j = 0; j < 8; j++){
   701  000FEA  0E00               	movlw	0
   702  000FEC  6E1C               	movwf	gen_crc16@j+1,c
   703  000FEE  0E00               	movlw	0
   704  000FF0  6E1B               	movwf	gen_crc16@j,c
   705  000FF2                     l1299:
   706  000FF2  BE1C               	btfsc	gen_crc16@j+1,7,c
   707  000FF4  D006               	goto	l250
   708  000FF6  501C               	movf	gen_crc16@j+1,w,c
   709  000FF8  E11C               	bnz	l1313
   710  000FFA  0E08               	movlw	8
   711  000FFC  5C1B               	subwf	gen_crc16@j,w,c
   712  000FFE  B0D8               	btfsc	status,0,c
   713  001000  D018               	goto	u310
   714  001002                     l250:
   715                           
   716                           ;bms_proto2018.c: 126: crc = (crc >> 1) ^ ((crc & 1) ? 0x8005 : 0);
   717  001002  B01D               	btfsc	gen_crc16@crc,0,c
   718  001004  D004               	goto	l253
   719  001006  0E00               	movlw	0
   720  001008  6E1A               	movwf	_gen_crc16$700+1,c
   721  00100A  0E00               	movlw	0
   722  00100C  D003               	goto	L1
   723  00100E                     l253:
   724  00100E  0E80               	movlw	128
   725  001010  6E1A               	movwf	_gen_crc16$700+1,c
   726  001012  0E05               	movlw	5
   727  001014                     L1:
   728  001014  6E19               	movwf	_gen_crc16$700,c
   729  001016  90D8               	bcf	status,0,c
   730  001018  301E               	rrcf	gen_crc16@crc+1,w,c
   731  00101A  6E18               	movwf	(??_gen_crc16+1)& (0+255),c
   732  00101C  301D               	rrcf	gen_crc16@crc,w,c
   733  00101E  6E17               	movwf	??_gen_crc16& (0+255),c
   734  001020  5019               	movf	_gen_crc16$700,w,c
   735  001022  1817               	xorwf	??_gen_crc16,w,c
   736  001024  6E1D               	movwf	gen_crc16@crc,c
   737  001026  501A               	movf	_gen_crc16$700+1,w,c
   738  001028  1818               	xorwf	??_gen_crc16+1,w,c
   739  00102A  6E1E               	movwf	gen_crc16@crc+1,c
   740  00102C  4A1B               	infsnz	gen_crc16@j,f,c
   741  00102E  2A1C               	incf	gen_crc16@j+1,f,c
   742  001030  D7E0               	goto	l1299
   743  001032                     u310:
   744  001032                     l1313:
   745  001032  0615               	decf	gen_crc16@len,f,c
   746  001034  A0D8               	btfss	status,0,c
   747  001036  0616               	decf	gen_crc16@len+1,f,c
   748  001038  2815               	incf	gen_crc16@len,w,c
   749  00103A  E1CD               	bnz	l1293
   750  00103C  2816               	incf	gen_crc16@len+1,w,c
   751  00103E  A4D8               	btfss	status,2,c
   752  001040  D7CA               	goto	l249
   753                           
   754                           ;bms_proto2018.c: 127: }
   755                           ;bms_proto2018.c: 128: }
   756                           ;bms_proto2018.c: 130: return crc;
   757  001042  C01D  F013         	movff	gen_crc16@crc,?_gen_crc16
   758  001046  C01E  F014         	movff	gen_crc16@crc+1,?_gen_crc16+1
   759  00104A  0012               	return		;funcret
   760  00104C                     __end_of_gen_crc16:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           indf2	equ	0xFDF
   769                           fsr2h	equ	0xFDA
   770                           fsr2l	equ	0xFD9
   771                           status	equ	0xFD8
   772                           
   773 ;; *************** function _SYSTEM_Initialize *****************
   774 ;; Defined at:
   775 ;;		line 112 in file "mcc_generated_files/mcc.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    4
   796 ;; This function calls:
   797 ;;		_EUSART1_Initialize
   798 ;;		_INTERRUPT_Initialize
   799 ;;		_OSCILLATOR_Initialize
   800 ;;		_PIN_MANAGER_Initialize
   801 ;;		_TMR0_Initialize
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text4
   808  001154                     __ptext4:
   809                           	opt stack 0
   810  001154                     _SYSTEM_Initialize:
   811                           	opt stack 26
   812                           
   813                           ;mcc.c: 114: INTERRUPT_Initialize();
   814                           
   815                           ;incstack = 0
   816  001154  ECCF  F008         	call	_INTERRUPT_Initialize	;wreg free
   817                           
   818                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   819  001158  EC79  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   820                           
   821                           ;mcc.c: 116: OSCILLATOR_Initialize();
   822  00115C  ECB5  F008         	call	_OSCILLATOR_Initialize	;wreg free
   823                           
   824                           ;mcc.c: 117: TMR0_Initialize();
   825  001160  EC8D  F008         	call	_TMR0_Initialize	;wreg free
   826                           
   827                           ;mcc.c: 118: EUSART1_Initialize();
   828  001164  EC26  F008         	call	_EUSART1_Initialize	;wreg free
   829  001168  0012               	return		;funcret
   830  00116A                     __end_of_SYSTEM_Initialize:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           indf2	equ	0xFDF
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _TMR0_Initialize *****************
   844 ;; Defined at:
   845 ;;		line 65 in file "mcc_generated_files/tmr0.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_SYSTEM_Initialize
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text5
   874  00111A                     __ptext5:
   875                           	opt stack 0
   876  00111A                     _TMR0_Initialize:
   877                           	opt stack 27
   878                           
   879                           ;tmr0.c: 70: TMR0H = 0xFF;
   880                           
   881                           ;incstack = 0
   882  00111A  68D7               	setf	4055,c	;volatile
   883                           
   884                           ;tmr0.c: 73: TMR0L = 0xEF;
   885  00111C  0EEF               	movlw	239
   886  00111E  6ED6               	movwf	4054,c	;volatile
   887                           
   888                           ;tmr0.c: 77: timer0ReloadVal = (TMR0H << 8) | TMR0L;
   889  001120  50D6               	movf	4054,w,c	;volatile
   890  001122  CFD7 F013          	movff	4055,??_TMR0_Initialize	;volatile
   891  001126  6A14               	clrf	(??_TMR0_Initialize+1)& (0+255),c
   892  001128  C013  F014         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   893  00112C  6A13               	clrf	??_TMR0_Initialize,c
   894  00112E  1013               	iorwf	??_TMR0_Initialize,w,c
   895  001130  6E3F               	movwf	_timer0ReloadVal,c	;volatile
   896  001132  5014               	movf	??_TMR0_Initialize+1,w,c
   897  001134  6E40               	movwf	_timer0ReloadVal+1,c	;volatile
   898                           
   899                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
   900  001136  94F2               	bcf	intcon,2,c	;volatile
   901                           
   902                           ;tmr0.c: 83: T0CON = 0x95;
   903  001138  0E95               	movlw	149
   904  00113A  6ED5               	movwf	4053,c	;volatile
   905  00113C  0012               	return		;funcret
   906  00113E                     __end_of_TMR0_Initialize:
   907                           	opt stack 0
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           intcon	equ	0xFF2
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           indf2	equ	0xFDF
   916                           fsr2h	equ	0xFDA
   917                           fsr2l	equ	0xFD9
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _PIN_MANAGER_Initialize *****************
   921 ;; Defined at:
   922 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    2
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_SYSTEM_Initialize
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text6
   951  0010F2                     __ptext6:
   952                           	opt stack 0
   953  0010F2                     _PIN_MANAGER_Initialize:
   954                           	opt stack 27
   955                           
   956                           ;pin_manager.c: 57: LATA = 0x00;
   957                           
   958                           ;incstack = 0
   959  0010F2  0E00               	movlw	0
   960  0010F4  6E89               	movwf	3977,c	;volatile
   961                           
   962                           ;pin_manager.c: 58: LATB = 0x00;
   963  0010F6  0E00               	movlw	0
   964  0010F8  6E8A               	movwf	3978,c	;volatile
   965                           
   966                           ;pin_manager.c: 59: LATC = 0x00;
   967  0010FA  0E00               	movlw	0
   968  0010FC  6E8B               	movwf	3979,c	;volatile
   969                           
   970                           ;pin_manager.c: 64: TRISA = 0xEF;
   971  0010FE  0EEF               	movlw	239
   972  001100  6E92               	movwf	3986,c	;volatile
   973                           
   974                           ;pin_manager.c: 65: TRISB = 0xFF;
   975  001102  6893               	setf	3987,c	;volatile
   976                           
   977                           ;pin_manager.c: 66: TRISC = 0xBF;
   978  001104  0EBF               	movlw	191
   979  001106  6E94               	movwf	3988,c	;volatile
   980                           
   981                           ;pin_manager.c: 71: ANCON0 = 0x1F;
   982  001108  0E1F               	movlw	31
   983  00110A  010F               	movlb	15	; () banked
   984  00110C  6F5D               	movwf	93,b	;volatile
   985                           
   986                           ;pin_manager.c: 72: ANCON1 = 0x07;
   987  00110E  0E07               	movlw	7
   988  001110  6F5C               	movwf	92,b	;volatile
   989                           
   990                           ;pin_manager.c: 77: WPUB = 0x00;
   991  001112  0E00               	movlw	0
   992  001114  6F5B               	movwf	91,b	;volatile
   993                           
   994                           ; BSR set to: 15
   995                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 1;
   996  001116  8EF1               	bsf	intcon2,7,c	;volatile
   997                           
   998                           ; BSR set to: 15
   999  001118  0012               	return		;funcret
  1000  00111A                     __end_of_PIN_MANAGER_Initialize:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           intcon	equ	0xFF2
  1007                           intcon2	equ	0xFF1
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           indf2	equ	0xFDF
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           status	equ	0xFD8
  1014                           
  1015 ;; *************** function _OSCILLATOR_Initialize *****************
  1016 ;; Defined at:
  1017 ;;		line 121 in file "mcc_generated_files/mcc.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    2
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_SYSTEM_Initialize
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text7
  1046  00116A                     __ptext7:
  1047                           	opt stack 0
  1048  00116A                     _OSCILLATOR_Initialize:
  1049                           	opt stack 27
  1050                           
  1051                           ;mcc.c: 124: OSCCON = 0x60;
  1052                           
  1053                           ; BSR set to: 15
  1054                           ;incstack = 0
  1055  00116A  0E60               	movlw	96
  1056  00116C  6ED3               	movwf	4051,c	;volatile
  1057                           
  1058                           ;mcc.c: 126: OSCCON2 = 0x00;
  1059  00116E  0E00               	movlw	0
  1060  001170  6ED2               	movwf	4050,c	;volatile
  1061                           
  1062                           ;mcc.c: 128: OSCTUNE = 0x00;
  1063  001172  0E00               	movlw	0
  1064  001174  6E9B               	movwf	3995,c	;volatile
  1065                           
  1066                           ;mcc.c: 130: REFOCON = 0x00;
  1067  001176  0E00               	movlw	0
  1068  001178  6E9A               	movwf	3994,c	;volatile
  1069  00117A  0012               	return		;funcret
  1070  00117C                     __end_of_OSCILLATOR_Initialize:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           intcon	equ	0xFF2
  1077                           intcon2	equ	0xFF1
  1078                           postinc0	equ	0xFEE
  1079                           wreg	equ	0xFE8
  1080                           indf2	equ	0xFDF
  1081                           fsr2h	equ	0xFDA
  1082                           fsr2l	equ	0xFD9
  1083                           status	equ	0xFD8
  1084                           
  1085 ;; *************** function _INTERRUPT_Initialize *****************
  1086 ;; Defined at:
  1087 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		None
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    2
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_SYSTEM_Initialize
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text8
  1116  00119E                     __ptext8:
  1117                           	opt stack 0
  1118  00119E                     _INTERRUPT_Initialize:
  1119                           	opt stack 27
  1120                           
  1121                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1122                           
  1123                           ;incstack = 0
  1124  00119E  9ED0               	bcf	4048,7,c	;volatile
  1125  0011A0  0012               	return		;funcret
  1126  0011A2                     __end_of_INTERRUPT_Initialize:
  1127                           	opt stack 0
  1128                           tblptru	equ	0xFF8
  1129                           tblptrh	equ	0xFF7
  1130                           tblptrl	equ	0xFF6
  1131                           tablat	equ	0xFF5
  1132                           intcon	equ	0xFF2
  1133                           intcon2	equ	0xFF1
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           indf2	equ	0xFDF
  1137                           fsr2h	equ	0xFDA
  1138                           fsr2l	equ	0xFD9
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function _EUSART1_Initialize *****************
  1142 ;; Defined at:
  1143 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    3
  1164 ;; This function calls:
  1165 ;;		_EUSART1_SetRxInterruptHandler
  1166 ;;		_EUSART1_SetTxInterruptHandler
  1167 ;; This function is called by:
  1168 ;;		_SYSTEM_Initialize
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text9
  1173  00104C                     __ptext9:
  1174                           	opt stack 0
  1175  00104C                     _EUSART1_Initialize:
  1176                           	opt stack 26
  1177                           
  1178                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1179                           
  1180                           ;incstack = 0
  1181  00104C  9A9D               	bcf	3997,5,c	;volatile
  1182                           
  1183                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1184  00104E  989D               	bcf	3997,4,c	;volatile
  1185                           
  1186                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  1187  001050  0E00               	movlw	0
  1188  001052  6E13               	movwf	EUSART1_SetTxInterruptHandler@handler,c
  1189  001054  0E00               	movlw	0
  1190  001056  6E14               	movwf	EUSART1_SetTxInterruptHandler@handler+1,c
  1191  001058  ECC5  F008         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1192                           
  1193                           ;eusart1.c: 82: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  1194  00105C  0EC6               	movlw	low _EUSART1_Receive_ISR
  1195  00105E  6E13               	movwf	EUSART1_SetRxInterruptHandler@handler,c
  1196  001060  0E10               	movlw	high _EUSART1_Receive_ISR
  1197  001062  6E14               	movwf	EUSART1_SetRxInterruptHandler@handler+1,c
  1198  001064  ECCA  F008         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1199                           
  1200                           ;eusart1.c: 87: BAUDCON1 = 0x08;
  1201  001068  0E08               	movlw	8
  1202  00106A  6EA7               	movwf	4007,c	;volatile
  1203                           
  1204                           ;eusart1.c: 90: RCSTA1 = 0x90;
  1205  00106C  0E90               	movlw	144
  1206  00106E  6EAB               	movwf	4011,c	;volatile
  1207                           
  1208                           ;eusart1.c: 93: TXSTA1 = 0x24;
  1209  001070  0E24               	movlw	36
  1210  001072  6EAC               	movwf	4012,c	;volatile
  1211                           
  1212                           ;eusart1.c: 96: SPBRG1 = 0xCF;
  1213  001074  0ECF               	movlw	207
  1214  001076  6EAF               	movwf	4015,c	;volatile
  1215                           
  1216                           ;eusart1.c: 99: SPBRGH1 = 0x00;
  1217  001078  0E00               	movlw	0
  1218  00107A  6E7D               	movwf	3965,c	;volatile
  1219                           
  1220                           ;eusart1.c: 103: eusart1TxHead = 0;
  1221  00107C  0E00               	movlw	0
  1222  00107E  6E3A               	movwf	_eusart1TxHead,c	;volatile
  1223                           
  1224                           ;eusart1.c: 104: eusart1TxTail = 0;
  1225  001080  0E00               	movlw	0
  1226  001082  6E39               	movwf	_eusart1TxTail,c	;volatile
  1227                           
  1228                           ;eusart1.c: 105: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1229  001084  0E08               	movlw	8
  1230  001086  6E41               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1231                           
  1232                           ;eusart1.c: 107: eusart1RxHead = 0;
  1233  001088  0E00               	movlw	0
  1234  00108A  6E38               	movwf	_eusart1RxHead,c	;volatile
  1235                           
  1236                           ;eusart1.c: 108: eusart1RxTail = 0;
  1237  00108C  0E00               	movlw	0
  1238  00108E  6E37               	movwf	_eusart1RxTail,c	;volatile
  1239                           
  1240                           ;eusart1.c: 109: eusart1RxCount = 0;
  1241  001090  0E00               	movlw	0
  1242  001092  6E36               	movwf	_eusart1RxCount,c	;volatile
  1243                           
  1244                           ;eusart1.c: 112: PIE1bits.RC1IE = 1;
  1245  001094  8A9D               	bsf	3997,5,c	;volatile
  1246  001096  0012               	return		;funcret
  1247  001098                     __end_of_EUSART1_Initialize:
  1248                           	opt stack 0
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           intcon	equ	0xFF2
  1254                           intcon2	equ	0xFF1
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           indf2	equ	0xFDF
  1258                           fsr2h	equ	0xFDA
  1259                           fsr2l	equ	0xFD9
  1260                           status	equ	0xFD8
  1261                           
  1262 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  1263 ;; Defined at:
  1264 ;;		line 213 in file "mcc_generated_files/eusart1.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  handler         2   18[COMRAM] PTR void 
  1267 ;;		 -> EUSART1_Transmit_ISR(1), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    2
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_EUSART1_Initialize
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text10
  1294  00118A                     __ptext10:
  1295                           	opt stack 0
  1296  00118A                     _EUSART1_SetTxInterruptHandler:
  1297                           	opt stack 26
  1298                           
  1299                           ;eusart1.c: 214: EUSART1_TxDefaultInterruptHandler = handler;
  1300                           
  1301                           ;incstack = 0
  1302  00118A  C013  F03D         	movff	EUSART1_SetTxInterruptHandler@handler,_EUSART1_TxDefaultInterruptHandler
  1303  00118E  C014  F03E         	movff	EUSART1_SetTxInterruptHandler@handler+1,_EUSART1_TxDefaultInterruptHandler+1
  1304  001192  0012               	return		;funcret
  1305  001194                     __end_of_EUSART1_SetTxInterruptHandler:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           intcon	equ	0xFF2
  1312                           intcon2	equ	0xFF1
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           indf2	equ	0xFDF
  1316                           fsr2h	equ	0xFDA
  1317                           fsr2l	equ	0xFD9
  1318                           status	equ	0xFD8
  1319                           
  1320 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1321 ;; Defined at:
  1322 ;;		line 217 in file "mcc_generated_files/eusart1.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  handler         2   18[COMRAM] PTR void 
  1325 ;;		 -> EUSART1_Receive_ISR(1), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;Total ram usage:        2 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    2
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_EUSART1_Initialize
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text11
  1352  001194                     __ptext11:
  1353                           	opt stack 0
  1354  001194                     _EUSART1_SetRxInterruptHandler:
  1355                           	opt stack 26
  1356                           
  1357                           ;eusart1.c: 218: EUSART1_RxDefaultInterruptHandler = handler;
  1358                           
  1359                           ;incstack = 0
  1360  001194  C013  F03B         	movff	EUSART1_SetRxInterruptHandler@handler,_EUSART1_RxDefaultInterruptHandler
  1361  001198  C014  F03C         	movff	EUSART1_SetRxInterruptHandler@handler+1,_EUSART1_RxDefaultInterruptHandler+1
  1362  00119C  0012               	return		;funcret
  1363  00119E                     __end_of_EUSART1_SetRxInterruptHandler:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           intcon	equ	0xFF2
  1370                           intcon2	equ	0xFF1
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           indf2	equ	0xFDF
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _INTERRUPT_InterruptManager *****************
  1379 ;; Defined at:
  1380 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;Total ram usage:       18 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    1
  1401 ;; This function calls:
  1402 ;;		Absolute function
  1403 ;;		_EUSART1_Receive_ISR
  1404 ;; This function is called by:
  1405 ;;		Interrupt level 2
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	intcode
  1410  000008                     __pintcode:
  1411                           	opt stack 0
  1412  000008                     _INTERRUPT_InterruptManager:
  1413                           	opt stack 26
  1414                           
  1415                           ;incstack = 0
  1416  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1417  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1418  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1419  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1420  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1421  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1422  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1423  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1424  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1425  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1426  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1427  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1428  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1429  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1430  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1431  000042  C042  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1432  000046  C043  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1433  00004A  C044  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1434  00004E  C045  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1435                           
  1436                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  1437  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1438                           
  1439                           ;interrupt_manager.c: 61: {
  1440                           ;interrupt_manager.c: 62: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1441  000054  AA9D               	btfss	3997,5,c	;volatile
  1442  000056  D00D               	goto	i2u16_49
  1443  000058  AA9E               	btfss	3998,5,c	;volatile
  1444  00005A  D00B               	goto	i2u16_49
  1445                           
  1446                           ;interrupt_manager.c: 63: {
  1447                           ;interrupt_manager.c: 64: EUSART1_RxDefaultInterruptHandler();
  1448  00005C  D801               	call	i2u16_48
  1449  00005E  D009               	goto	i2u16_49
  1450  000060                     i2u16_48:
  1451  000060  0005               	push	
  1452  000062  6EFA               	movwf	pclath,c
  1453  000064  503B               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
  1454  000066  6EFD               	movwf	tosl,c
  1455  000068  503C               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
  1456  00006A  6EFE               	movwf	tosh,c
  1457  00006C  6AFF               	clrf	tosu,c
  1458  00006E  50FA               	movf	pclath,w,c
  1459  000070  0012               	return		;indir
  1460  000072                     i2u16_49:
  1461                           
  1462                           ;interrupt_manager.c: 71: else
  1463                           ;interrupt_manager.c: 72: {
  1464                           
  1465                           ;interrupt_manager.c: 69: }
  1466                           ;interrupt_manager.c: 70: }
  1467                           
  1468                           ;interrupt_manager.c: 66: else
  1469                           ;interrupt_manager.c: 67: {
  1470                           
  1471                           ;interrupt_manager.c: 65: }
  1472  000072  C012  F045         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1473  000076  C011  F044         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1474  00007A  C010  F043         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1475  00007E  C00F  F042         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1476  000082  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1477  000086  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1478  00008A  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1479  00008E  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1480  000092  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1481  000096  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1482  00009A  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1483  00009E  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1484  0000A2  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1485  0000A6  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1486  0000AA  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1487  0000AE  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1488  0000B2  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1489  0000B6  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1490  0000BA  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1491  0000BC  0011               	retfie		f
  1492  0000BE                     __end_of_INTERRUPT_InterruptManager:
  1493                           	opt stack 0
  1494                           tosu	equ	0xFFF
  1495                           tosh	equ	0xFFE
  1496                           tosl	equ	0xFFD
  1497                           pclatu	equ	0xFFB
  1498                           pclath	equ	0xFFA
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           intcon2	equ	0xFF1
  1507                           postinc0	equ	0xFEE
  1508                           fsr0h	equ	0xFEA
  1509                           fsr0l	equ	0xFE9
  1510                           wreg	equ	0xFE8
  1511                           fsr1h	equ	0xFE2
  1512                           fsr1l	equ	0xFE1
  1513                           indf2	equ	0xFDF
  1514                           fsr2h	equ	0xFDA
  1515                           fsr2l	equ	0xFD9
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _EUSART1_Receive_ISR *****************
  1519 ;; Defined at:
  1520 ;;		line 193 in file "mcc_generated_files/eusart1.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_EUSART1_Initialize
  1544 ;;		_INTERRUPT_InterruptManager
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text13
  1549  0010C6                     __ptext13:
  1550                           	opt stack 0
  1551  0010C6                     _EUSART1_Receive_ISR:
  1552                           	opt stack 26
  1553                           
  1554                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  1555                           
  1556                           ;incstack = 0
  1557  0010C6  A2AB               	btfss	4011,1,c	;volatile
  1558  0010C8  D002               	goto	i2l169
  1559                           
  1560                           ;eusart1.c: 197: {
  1561                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  1562  0010CA  98AB               	bcf	4011,4,c	;volatile
  1563                           
  1564                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  1565  0010CC  88AB               	bsf	4011,4,c	;volatile
  1566  0010CE                     i2l169:
  1567                           
  1568                           ;eusart1.c: 202: }
  1569                           ;eusart1.c: 205: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1570  0010CE  5038               	movf	_eusart1RxHead,w,c	;volatile
  1571  0010D0  0D01               	mullw	1
  1572  0010D2  0E26               	movlw	low _eusart1RxBuffer
  1573  0010D4  24F3               	addwf	prodl,w,c
  1574  0010D6  6ED9               	movwf	fsr2l,c
  1575  0010D8  0E00               	movlw	high _eusart1RxBuffer
  1576  0010DA  20F4               	addwfc	prodh,w,c
  1577  0010DC  6EDA               	movwf	fsr2h,c
  1578  0010DE  CFAE FFDF          	movff	4014,indf2	;volatile
  1579  0010E2  2A38               	incf	_eusart1RxHead,f,c	;volatile
  1580                           
  1581                           ;eusart1.c: 206: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1582  0010E4  0E07               	movlw	7
  1583  0010E6  6438               	cpfsgt	_eusart1RxHead,c	;volatile
  1584  0010E8  D002               	goto	i2l170
  1585                           
  1586                           ;eusart1.c: 207: {
  1587                           ;eusart1.c: 208: eusart1RxHead = 0;
  1588  0010EA  0E00               	movlw	0
  1589  0010EC  6E38               	movwf	_eusart1RxHead,c	;volatile
  1590  0010EE                     i2l170:
  1591                           
  1592                           ;eusart1.c: 209: }
  1593                           ;eusart1.c: 210: eusart1RxCount++;
  1594  0010EE  2A36               	incf	_eusart1RxCount,f,c	;volatile
  1595  0010F0  0012               	return		;funcret
  1596  0010F2                     __end_of_EUSART1_Receive_ISR:
  1597                           	opt stack 0
  1598                           tosu	equ	0xFFF
  1599                           tosh	equ	0xFFE
  1600                           tosl	equ	0xFFD
  1601                           pclatu	equ	0xFFB
  1602                           pclath	equ	0xFFA
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           prodh	equ	0xFF4
  1608                           prodl	equ	0xFF3
  1609                           intcon	equ	0xFF2
  1610                           intcon2	equ	0xFF1
  1611                           postinc0	equ	0xFEE
  1612                           fsr0h	equ	0xFEA
  1613                           fsr0l	equ	0xFE9
  1614                           wreg	equ	0xFE8
  1615                           fsr1h	equ	0xFE2
  1616                           fsr1l	equ	0xFE1
  1617                           indf2	equ	0xFDF
  1618                           fsr2h	equ	0xFDA
  1619                           fsr2l	equ	0xFD9
  1620                           status	equ	0xFD8
  1621                           tosu	equ	0xFFF
  1622                           tosh	equ	0xFFE
  1623                           tosl	equ	0xFFD
  1624                           pclatu	equ	0xFFB
  1625                           pclath	equ	0xFFA
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           prodh	equ	0xFF4
  1631                           prodl	equ	0xFF3
  1632                           intcon	equ	0xFF2
  1633                           intcon2	equ	0xFF1
  1634                           postinc0	equ	0xFEE
  1635                           fsr0h	equ	0xFEA
  1636                           fsr0l	equ	0xFE9
  1637                           wreg	equ	0xFE8
  1638                           fsr1h	equ	0xFE2
  1639                           fsr1l	equ	0xFE1
  1640                           indf2	equ	0xFDF
  1641                           fsr2h	equ	0xFDA
  1642                           fsr2l	equ	0xFD9
  1643                           status	equ	0xFD8
  1644                           
  1645                           	psect	text14
  1646  000000                     __ptext14:
  1647                           	opt stack 0
  1648                           tosu	equ	0xFFF
  1649                           tosh	equ	0xFFE
  1650                           tosl	equ	0xFFD
  1651                           pclatu	equ	0xFFB
  1652                           pclath	equ	0xFFA
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           intcon	equ	0xFF2
  1660                           intcon2	equ	0xFF1
  1661                           postinc0	equ	0xFEE
  1662                           fsr0h	equ	0xFEA
  1663                           fsr0l	equ	0xFE9
  1664                           wreg	equ	0xFE8
  1665                           fsr1h	equ	0xFE2
  1666                           fsr1l	equ	0xFE1
  1667                           indf2	equ	0xFDF
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8
  1671                           
  1672                           	psect	rparam
  1673  0000                     tosu	equ	0xFFF
  1674                           tosh	equ	0xFFE
  1675                           tosl	equ	0xFFD
  1676                           pclatu	equ	0xFFB
  1677                           pclath	equ	0xFFA
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           prodh	equ	0xFF4
  1683                           prodl	equ	0xFF3
  1684                           intcon	equ	0xFF2
  1685                           intcon2	equ	0xFF1
  1686                           postinc0	equ	0xFEE
  1687                           fsr0h	equ	0xFEA
  1688                           fsr0l	equ	0xFE9
  1689                           wreg	equ	0xFE8
  1690                           fsr1h	equ	0xFE2
  1691                           fsr1l	equ	0xFE1
  1692                           indf2	equ	0xFDF
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8
  1696                           
  1697                           	psect	temp
  1698  000042                     btemp:
  1699                           	opt stack 0
  1700  000042                     	ds	1
  1701  0000                     int$flags	set	btemp
  1702  0000                     wtemp6	set	btemp+1
  1703                           tosu	equ	0xFFF
  1704                           tosh	equ	0xFFE
  1705                           tosl	equ	0xFFD
  1706                           pclatu	equ	0xFFB
  1707                           pclath	equ	0xFFA
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           prodh	equ	0xFF4
  1713                           prodl	equ	0xFF3
  1714                           intcon	equ	0xFF2
  1715                           intcon2	equ	0xFF1
  1716                           postinc0	equ	0xFEE
  1717                           fsr0h	equ	0xFEA
  1718                           fsr0l	equ	0xFE9
  1719                           wreg	equ	0xFE8
  1720                           fsr1h	equ	0xFE2
  1721                           fsr1l	equ	0xFE1
  1722                           indf2	equ	0xFDF
  1723                           fsr2h	equ	0xFDA
  1724                           fsr2l	equ	0xFD9
  1725                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         21
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      65
    BANK0           160     13      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    send_string@Txdata	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    gen_crc16@buf	PTR const unsigned char  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    main@p_data	PTR unsigned int  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    EUSART1_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_gen_crc16
    _send_string->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    15      5    1022
                                             30 COMRAM     7     2      5
                                              0 BANK0     13    13      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
                          _gen_crc16
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     177
                                             19 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _gen_crc16                                           12     8      4     452
                                             18 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     242
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     242
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _gen_crc16
   _send_string
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D       D       5        8.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      41       1       69.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E       6        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 09 14:08:56 2018

              _eusart1TxBufferRemaining 0041                             __CFG_BORV$3 000000  
                       _timer0ReloadVal 003F                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                                     l224 0F88  
                                   l250 1002                                     l260 10B0  
                                   l253 100E                                     l261 109A  
                                   l249 0FD6                            __CFG_CPB$OFF 000000  
                                   u310 1032                                     u337 0F96  
                          __CFG_CPD$OFF 000000                                     u347 0FB0  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                                  l1313 1032                                    l1293 0FD6  
                                  l1269 117E                                    l1299 0FF2  
                                  STR_1 0F01                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                           main@counter 0065                                    _WPUB 000F5B  
                         _EUSART1_Write 117C                                    _main 0F22  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0042  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00BE                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                            ___param_bank 000000  
               __end_of_TMR0_Initialize 113E          __size_of_OSCILLATOR_Initialize 0012  
         __end_of_OSCILLATOR_Initialize 117C                                   ?_main 001F  
                                 _T0CON 000FD5                                   i2l170 10EE  
                                 i2l169 10CE                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                  _EUSART1_Transmit_ISR 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                          __CFG_EBTRB$OFF 000000  
                                 main@i 0063                          ?_EUSART1_Write 0001  
                                 pclath 000FFA                                   tablat 000FF5  
                                 status 000FD8                                   wtemp6 0043  
                       __initialization 113E              __end_of_EUSART1_Initialize 1098  
                          __end_of_main 0FCC             ?_INTERRUPT_InterruptManager 0001  
                                ??_main 0024                           __activetblptr 000003  
                        __CFG_PLLCFG$ON 000000                          __CFG_RETEN$OFF 000000  
                                _ANCON0 000F5D                                  _ANCON1 000F5C  
                       __CFG_BBSIZ$BB2K 000000                          __CFG_WDTEN$OFF 000000  
                          ?_send_string 0014                                  _RCREG1 000FAE  
                                _RCSTA1 000FAB                                  _OSCCON 000FD3  
                                _SPBRG1 000FAF                                  _TXREG1 000FAD  
                                _TXSTA1 000FAC                          __CFG_XINST$OFF 000000  
                        __CFG_STVREN$ON 000000                        ?_TMR0_Initialize 0001  
                                clear_0 1144                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                         ??_EUSART1_Write 0013  
                       _eusart1RxBuffer 0026    EUSART1_SetTxInterruptHandler@handler 0013  
         __size_of_INTERRUPT_Initialize 0004                         _eusart1TxBuffer 002E  
                     _SYSTEM_Initialize 1154                              __accesstop 0060  
               __end_of__initialization 114A                      ?_SYSTEM_Initialize 0001  
                         ___rparam_used 000001                          __pcstackCOMRAM 0001  
                   ??_SYSTEM_Initialize 0015                          main@baudconfig 0062  
                    __size_of_gen_crc16 0080             __end_of_EUSART1_Receive_ISR 10F2  
             __end_of_SYSTEM_Initialize 116A                           _eusart1RxHead 0038  
                         _eusart1TxHead 003A                           _eusart1RxTail 0037  
                         _eusart1TxTail 0039       _EUSART1_TxDefaultInterruptHandler 003D  
       ??_EUSART1_SetRxInterruptHandler 0015                              __pnvCOMRAM 003B  
                      __CFG_CANMX$PORTB 000000                                 _REFOCON 000F9A  
                               _OSCCON2 000FD2                                 i2u16_48 0060  
                               i2u16_49 0072                                 _OSCTUNE 000F9B  
                               _SPBRGH1 000F7D                    __size_of_send_string 002E  
                     __end_of_gen_crc16 104C                         __CFG_PWRTEN$OFF 000000  
                               __Hparam 0000                                 __Lparam 0000  
                          __psmallconst 0F00                                 __pcinit 113E  
                               __ramtop 0F00                                 __ptext0 0F22  
                               __ptext1 1098                                 __ptext2 117C  
                               __ptext3 0FCC                                 __ptext4 1154  
                               __ptext5 111A                                 __ptext6 10F2  
                               __ptext7 116A                                 __ptext8 119E  
                               __ptext9 104C                               _T0CONbits 000FD5  
                 _OSCILLATOR_Initialize 116A                      _EUSART1_Initialize 104C  
              ??_PIN_MANAGER_Initialize 0013                       __CFG_MSSPMSK$MSK7 000000  
                               main@crc 006B              __size_of_SYSTEM_Initialize 0016  
                  end_of_initialization 114A                     ?_EUSART1_Initialize 0001  
 __end_of_EUSART1_SetRxInterruptHandler 119E  __size_of_EUSART1_SetRxInterruptHandler 000A  
         _EUSART1_SetRxInterruptHandler 1194                              gen_crc16@j 001B  
                               postinc0 000FEE                    ??_EUSART1_Initialize 0015  
                      __CFG_FOSC$INTIO2 000000                     EUSART1_Write@txData 0013  
                            main@Txdata 0064                       send_string@Txdata 0014  
                            main@config 0060                              main@p_data 0067  
          __end_of_INTERRUPT_Initialize 11A2                  ?_OSCILLATOR_Initialize 0001  
                   start_initialization 113E                __size_of_TMR0_Initialize 0024  
       __size_of_PIN_MANAGER_Initialize 0028                   __end_of_EUSART1_Write 118A  
        ?_EUSART1_SetRxInterruptHandler 0013                          _eusart1RxCount 0036  
                           __pbssCOMRAM 0026       _EUSART1_RxDefaultInterruptHandler 003B  
                         __pcstackBANK0 0060         ??_EUSART1_SetTxInterruptHandler 0015  
          __size_of_EUSART1_Receive_ISR 002C                  _PIN_MANAGER_Initialize 10F2  
                             __pintcode 0008                               _gen_crc16 0FCC  
          ??_INTERRUPT_InterruptManager 0001                             __smallconst 0F00  
                              _BAUDCON1 000FA7                    _INTERRUPT_Initialize 119E  
                         ??_send_string 0016                       ??_TMR0_Initialize 0013  
                              _PIE1bits 000F9D     __size_of_INTERRUPT_InterruptManager 00B6  
                              _PIR1bits 000F9E                                _RCONbits 000FD0  
                            ?_gen_crc16 0013                           _gen_crc16$700 0019  
                      __CFG_SOSCSEL$DIG 000000                               main@spbrg 0061  
                           _INTCON2bits 000FF1                   ?_INTERRUPT_Initialize 0001  
 __end_of_EUSART1_SetTxInterruptHandler 1194  __size_of_EUSART1_SetTxInterruptHandler 000A  
         _EUSART1_SetTxInterruptHandler 118A                                __Hrparam 0000  
                   __end_of_send_string 10C6                                __Lrparam 0000  
                    __CFG_BOREN$SBORDIS 000000                 ??_OSCILLATOR_Initialize 0013  
           __size_of_EUSART1_Initialize 004C                                __ptext10 118A  
                              __ptext11 1194                                __ptext13 10C6  
                              __ptext14 0000                           __size_of_main 00AA  
                           ??_gen_crc16 0017                                int$flags 0042  
  EUSART1_SetRxInterruptHandler@handler 0013      __end_of_INTERRUPT_InterruptManager 00BE  
            _INTERRUPT_InterruptManager 0008                                main@data 0069  
                              main@argc 001F                                main@argv 0021  
                   __CFG_INTOSCSEL$HIGH 000000                     _EUSART1_Receive_ISR 10C6  
                          gen_crc16@crc 001D                            gen_crc16@buf 0013  
                          gen_crc16@len 0015                              _INTCONbits 000FF2  
                ??_INTERRUPT_Initialize 0013                                intlevel2 0000  
                           _send_string 1098                    ?_EUSART1_Receive_ISR 0001  
               ?_PIN_MANAGER_Initialize 0001                              _RCSTA1bits 000FAB  
                    __CFG_WDTPS$1048576 000000          ?_EUSART1_SetTxInterruptHandler 0013  
                __size_of_EUSART1_Write 000E                         _TMR0_Initialize 111A  
                 ??_EUSART1_Receive_ISR 0001          __end_of_PIN_MANAGER_Initialize 111A  
                   __CFG_BORPWR$ZPBORMV 000000  
