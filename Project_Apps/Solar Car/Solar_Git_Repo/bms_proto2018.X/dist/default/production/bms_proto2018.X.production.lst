

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 09 00:31:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F26K80 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65 ;; Function _EUSART1_Transmit_ISR is unused but had its address taken
    66  0000                     
    67                           	psect	nvCOMRAM
    68  00003B                     __pnvCOMRAM:
    69                           	opt stack 0
    70  00003B                     _EUSART1_RxDefaultInterruptHandler:
    71                           	opt stack 0
    72  00003B                     	ds	2
    73  00003D                     _EUSART1_TxDefaultInterruptHandler:
    74                           	opt stack 0
    75  00003D                     	ds	2
    76  00003F                     _timer0ReloadVal:
    77                           	opt stack 0
    78  00003F                     	ds	2
    79  000041                     _eusart1TxBufferRemaining:
    80                           	opt stack 0
    81  000041                     	ds	1
    82  0000                     _WPUB	set	3931
    83  0000                     _ANCON1	set	3932
    84  0000                     _ANCON0	set	3933
    85  0000                     _PIR1bits	set	3998
    86  0000                     _RCONbits	set	4048
    87  0000                     _RCREG1	set	4014
    88  0000                     _RCSTA1bits	set	4011
    89  0000                     _TXREG1	set	4013
    90  0000                     _TXSTA1bits	set	4012
    91  0000                     _SPBRGH1	set	3965
    92  0000                     _SPBRG1	set	4015
    93  0000                     _TXSTA1	set	4012
    94  0000                     _RCSTA1	set	4011
    95  0000                     _BAUDCON1	set	4007
    96  0000                     _PIE1bits	set	3997
    97  0000                     _REFOCON	set	3994
    98  0000                     _OSCTUNE	set	3995
    99  0000                     _OSCCON2	set	4050
   100  0000                     _OSCCON	set	4051
   101  0000                     _T0CONbits	set	4053
   102  0000                     _T0CON	set	4053
   103  0000                     _INTCONbits	set	4082
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR0H	set	4055
   106  0000                     _INTCON2bits	set	4081
   107  0000                     _TRISC	set	3988
   108  0000                     _TRISB	set	3987
   109  0000                     _TRISA	set	3986
   110  0000                     _LATC	set	3979
   111  0000                     _LATB	set	3978
   112  0000                     _LATA	set	3977
   113                           
   114                           	psect	smallconst
   115  000F00                     __psmallconst:
   116                           	opt stack 0
   117  000F00  00                 	db	0
   118  000F01                     STR_1:
   119  000F01  55                 	db	85	;'U'
   120  000F02  53                 	db	83	;'S'
   121  000F03  41                 	db	65	;'A'
   122  000F04  52                 	db	82	;'R'
   123  000F05  54                 	db	84	;'T'
   124  000F06  20                 	db	32
   125  000F07  49                 	db	73	;'I'
   126  000F08  6E                 	db	110	;'n'
   127  000F09  69                 	db	105	;'i'
   128  000F0A  74                 	db	116	;'t'
   129  000F0B  69                 	db	105	;'i'
   130  000F0C  61                 	db	97	;'a'
   131  000F0D  6C                 	db	108	;'l'
   132  000F0E  69                 	db	105	;'i'
   133  000F0F  7A                 	db	122	;'z'
   134  000F10  61                 	db	97	;'a'
   135  000F11  74                 	db	116	;'t'
   136  000F12  69                 	db	105	;'i'
   137  000F13  6F                 	db	111	;'o'
   138  000F14  6E                 	db	110	;'n'
   139  000F15  20                 	db	32
   140  000F16  43                 	db	67	;'C'
   141  000F17  6F                 	db	111	;'o'
   142  000F18  6D                 	db	109	;'m'
   143  000F19  70                 	db	112	;'p'
   144  000F1A  6C                 	db	108	;'l'
   145  000F1B  65                 	db	101	;'e'
   146  000F1C  74                 	db	116	;'t'
   147  000F1D  65                 	db	101	;'e'
   148  000F1E  0A                 	db	10
   149  000F1F  00                 	db	0
   150                           
   151                           ; #config settings
   152  000F20  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           	psect	cinit
   155  001140                     __pcinit:
   156                           	opt stack 0
   157  001140                     start_initialization:
   158                           	opt stack 0
   159  001140                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (21 bytes)
   163  001140  EE00  F026         	lfsr	0,__pbssCOMRAM
   164  001144  0E15               	movlw	21
   165  001146                     clear_0:
   166  001146  6AEE               	clrf	postinc0,c
   167  001148  06E8               	decf	wreg,f,c
   168  00114A  E1FD               	bnz	clear_0
   169  00114C                     end_of_initialization:
   170                           	opt stack 0
   171  00114C                     __end_of__initialization:
   172                           	opt stack 0
   173  00114C  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   174  00114E  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   175  001150  0100               	movlb	0
   176  001152  EF91  F007         	goto	_main	;jump to C main() function
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssCOMRAM
   181  000026                     __pbssCOMRAM:
   182                           	opt stack 0
   183  000026                     _eusart1RxBuffer:
   184                           	opt stack 0
   185  000026                     	ds	8
   186  00002E                     _eusart1TxBuffer:
   187                           	opt stack 0
   188  00002E                     	ds	8
   189  000036                     _eusart1RxCount:
   190                           	opt stack 0
   191  000036                     	ds	1
   192  000037                     _eusart1RxTail:
   193                           	opt stack 0
   194  000037                     	ds	1
   195  000038                     _eusart1RxHead:
   196                           	opt stack 0
   197  000038                     	ds	1
   198  000039                     _eusart1TxTail:
   199                           	opt stack 0
   200  000039                     	ds	1
   201  00003A                     _eusart1TxHead:
   202                           	opt stack 0
   203  00003A                     	ds	1
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	cstackBANK0
   208  000060                     __pcstackBANK0:
   209                           	opt stack 0
   210  000060                     main@config:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x0
   214  000060                     	ds	1
   215  000061                     main@spbrg:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x1
   219  000061                     	ds	1
   220  000062                     main@baudconfig:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x2
   224  000062                     	ds	1
   225  000063                     main@i:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x3
   229  000063                     	ds	1
   230  000064                     main@Txdata:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x4
   234  000064                     	ds	1
   235  000065                     main@counter:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x5
   239  000065                     	ds	2
   240  000067                     main@p_data:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x7
   244  000067                     	ds	2
   245  000069                     main@data:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x9
   249  000069                     	ds	2
   250  00006B                     main@crc:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0xB
   254  00006B                     	ds	2
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258                           	psect	cstackCOMRAM
   259  000001                     __pcstackCOMRAM:
   260                           	opt stack 0
   261  000001                     ??_INTERRUPT_InterruptManager:
   262                           
   263                           ; 1 bytes @ 0x0
   264  000001                     	ds	18
   265  000013                     ??_TMR0_Initialize:
   266  000013                     ?_crc16_ibm:
   267                           	opt stack 0
   268  000013                     EUSART1_Write@txData:
   269                           	opt stack 0
   270  000013                     EUSART1_SetTxInterruptHandler@handler:
   271                           	opt stack 0
   272  000013                     EUSART1_SetRxInterruptHandler@handler:
   273                           	opt stack 0
   274  000013                     crc16_ibm@buf:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x12
   278  000013                     	ds	1
   279  000014                     send_string@Txdata:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x13
   283  000014                     	ds	1
   284  000015                     crc16_ibm@len:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x14
   288  000015                     	ds	1
   289  000016                     
   290                           ; 1 bytes @ 0x15
   291  000016                     	ds	1
   292  000017                     ??_crc16_ibm:
   293                           
   294                           ; 1 bytes @ 0x16
   295  000017                     	ds	2
   296  000019                     _crc16_ibm$693:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x18
   300  000019                     	ds	2
   301  00001B                     crc16_ibm@j:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x1A
   305  00001B                     	ds	2
   306  00001D                     crc16_ibm@crc:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x1C
   310  00001D                     	ds	2
   311  00001F                     
   312                           ; 2 bytes @ 0x1E
   313  00001F                     	ds	2
   314  000021                     
   315                           ; 3 bytes @ 0x20
   316  000021                     	ds	3
   317  000024                     ??_main:
   318                           
   319                           ; 1 bytes @ 0x23
   320  000024                     	ds	2
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 40 in file "bms_proto2018.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;  argc            2   30[COMRAM] int 
   332 ;;  argv            3   32[COMRAM] PTR PTR unsigned char 
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  crc             2   11[BANK0 ] unsigned int 
   335 ;;  data            2    9[BANK0 ] unsigned int 
   336 ;;  p_data          2    7[BANK0 ] PTR unsigned int 
   337 ;;		 -> main@data(2), 
   338 ;;  counter         2    5[BANK0 ] unsigned int 
   339 ;;  Txdata          1    4[BANK0 ] unsigned char 
   340 ;;  i               1    3[BANK0 ] unsigned char 
   341 ;;  baudconfig      1    2[BANK0 ] unsigned char 
   342 ;;  spbrg           1    1[BANK0 ] unsigned char 
   343 ;;  config          1    0[BANK0 ] unsigned char 
   344 ;; Return value:  Size  Location     Type
   345 ;;                  2   30[COMRAM] int 
   346 ;; Registers used:
   347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   353 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   354 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   356 ;;      Totals:         7      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   357 ;;Total ram usage:       20 bytes
   358 ;; Hardware stack levels required when called:    5
   359 ;; This function calls:
   360 ;;		_EUSART1_Write
   361 ;;		_SYSTEM_Initialize
   362 ;;		_crc16_ibm
   363 ;;		_send_string
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text0
   370  000F22                     __ptext0:
   371                           	opt stack 0
   372  000F22                     _main:
   373                           	opt stack 26
   374                           
   375                           ;bms_proto2018.c: 41: unsigned char config = 0, spbrg = 0, baudconfig = 0, i=0;
   376                           
   377                           ;incstack = 0
   378  000F22  0E00               	movlw	0
   379  000F24  0100               	movlb	0	; () banked
   380  000F26  6F60               	movwf	main@config& (0+255),b
   381  000F28  0E00               	movlw	0
   382  000F2A  6F61               	movwf	main@spbrg& (0+255),b
   383  000F2C  0E00               	movlw	0
   384  000F2E  6F62               	movwf	main@baudconfig& (0+255),b
   385  000F30  0E00               	movlw	0
   386  000F32  6F63               	movwf	main@i& (0+255),b
   387                           
   388                           ;bms_proto2018.c: 42: unsigned char Txdata = 0x69;
   389  000F34  0E69               	movlw	105
   390  000F36  6F64               	movwf	main@Txdata& (0+255),b
   391                           
   392                           ;bms_proto2018.c: 43: unsigned int counter = 0, data = 0xF21010E0;
   393  000F38  0E00               	movlw	0
   394  000F3A  6F66               	movwf	(main@counter+1)& (0+255),b
   395  000F3C  0E00               	movlw	0
   396  000F3E  6F65               	movwf	main@counter& (0+255),b
   397  000F40  0E10               	movlw	16
   398  000F42  6F6A               	movwf	(main@data+1)& (0+255),b
   399  000F44  0EE0               	movlw	224
   400  000F46  6F69               	movwf	main@data& (0+255),b
   401                           
   402                           ;bms_proto2018.c: 44: unsigned int *p_data;
   403                           ;bms_proto2018.c: 45: uint16_t crc = 0;
   404  000F48  0E00               	movlw	0
   405  000F4A  6F6C               	movwf	(main@crc+1)& (0+255),b
   406  000F4C  0E00               	movlw	0
   407  000F4E  6F6B               	movwf	main@crc& (0+255),b
   408                           
   409                           ; BSR set to: 0
   410                           ;bms_proto2018.c: 47: p_data = &data;
   411  000F50  0E69               	movlw	low main@data
   412  000F52  6F67               	movwf	main@p_data& (0+255),b
   413  000F54  0E00               	movlw	high main@data
   414  000F56  6F68               	movwf	(main@p_data+1)& (0+255),b
   415                           
   416                           ; BSR set to: 0
   417                           ;bms_proto2018.c: 48: SYSTEM_Initialize();
   418  000F58  ECAB  F008         	call	_SYSTEM_Initialize	;wreg free
   419                           
   420                           ;bms_proto2018.c: 49: send_string("USART Initialization Complete\n");
   421  000F5C  0E01               	movlw	low STR_1
   422  000F5E  6E14               	movwf	send_string@Txdata,c
   423  000F60  0E0F               	movlw	high STR_1
   424  000F62  6E15               	movwf	send_string@Txdata+1,c
   425  000F64  EC4D  F008         	call	_send_string	;wreg free
   426                           
   427                           ;bms_proto2018.c: 54: TRISA = 0x00;
   428  000F68  0E00               	movlw	0
   429  000F6A  6E92               	movwf	3986,c	;volatile
   430                           
   431                           ;bms_proto2018.c: 55: crc = crc16_ibm(p_data,32);
   432  000F6C  C067  F013         	movff	main@p_data,crc16_ibm@buf
   433  000F70  C068  F014         	movff	main@p_data+1,crc16_ibm@buf+1
   434  000F74  0E00               	movlw	0
   435  000F76  6E16               	movwf	crc16_ibm@len+1,c
   436  000F78  0E20               	movlw	32
   437  000F7A  6E15               	movwf	crc16_ibm@len,c
   438  000F7C  ECE6  F007         	call	_crc16_ibm	;wreg free
   439  000F80  C013  F06B         	movff	?_crc16_ibm,main@crc
   440  000F84  C014  F06C         	movff	?_crc16_ibm+1,main@crc+1
   441  000F88                     
   442                           ;bms_proto2018.c: 58: LATA = 0x01;
   443  000F88  0E01               	movlw	1
   444  000F8A  6E89               	movwf	3977,c	;volatile
   445                           
   446                           ;bms_proto2018.c: 59: _delay((unsigned long)((250)*(8000000/4000.0)));
   447  000F8C  0E03               	movlw	3
   448  000F8E  6E25               	movwf	(??_main+1)& (0+255),c
   449  000F90  0E8A               	movlw	138
   450  000F92  6E24               	movwf	??_main& (0+255),c
   451  000F94  0E56               	movlw	86
   452  000F96                     u427:
   453  000F96  2EE8               	decfsz	wreg,f,c
   454  000F98  D7FE               	bra	u427
   455  000F9A  2E24               	decfsz	??_main& (0+255),f,c
   456  000F9C  D7FC               	bra	u427
   457  000F9E  2E25               	decfsz	(??_main+1)& (0+255),f,c
   458  000FA0  D7FA               	bra	u427
   459                           
   460                           ;bms_proto2018.c: 60: LATA = 0x00;
   461  000FA2  0E00               	movlw	0
   462  000FA4  6E89               	movwf	3977,c	;volatile
   463                           
   464                           ;bms_proto2018.c: 61: _delay((unsigned long)((250)*(8000000/4000.0)));
   465  000FA6  0E03               	movlw	3
   466  000FA8  6E25               	movwf	(??_main+1)& (0+255),c
   467  000FAA  0E8A               	movlw	138
   468  000FAC  6E24               	movwf	??_main& (0+255),c
   469  000FAE  0E56               	movlw	86
   470  000FB0                     u437:
   471  000FB0  2EE8               	decfsz	wreg,f,c
   472  000FB2  D7FE               	bra	u437
   473  000FB4  2E24               	decfsz	??_main& (0+255),f,c
   474  000FB6  D7FC               	bra	u437
   475  000FB8  2E25               	decfsz	(??_main+1)& (0+255),f,c
   476  000FBA  D7FA               	bra	u437
   477                           
   478                           ;bms_proto2018.c: 64: EUSART1_Write(crc);
   479  000FBC  0100               	movlb	0	; () banked
   480  000FBE  516B               	movf	main@crc& (0+255),w,b
   481  000FC0  ECBF  F008         	call	_EUSART1_Write
   482                           
   483                           ;bms_proto2018.c: 65: counter++;
   484  000FC4  0100               	movlb	0	; () banked
   485  000FC6  4B65               	infsnz	main@counter& (0+255),f,b
   486  000FC8  2B66               	incf	(main@counter+1)& (0+255),f,b
   487                           
   488                           ; BSR set to: 0
   489  000FCA  D7DE               	goto	l224
   490  000FCC                     __end_of_main:
   491                           	opt stack 0
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           
   495 ;; *************** function _send_string *****************
   496 ;; Defined at:
   497 ;;		line 160 in file "bms_proto2018.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  Txdata          2   19[COMRAM] PTR const unsigned char 
   500 ;;		 -> STR_1(31), 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    3
   519 ;; This function calls:
   520 ;;		_EUSART1_Write
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text1
   527  00109A                     __ptext1:
   528                           	opt stack 0
   529  00109A                     _send_string:
   530                           	opt stack 27
   531                           
   532                           ;bms_proto2018.c: 161: while(*Txdata){
   533                           
   534                           ; BSR set to: 0
   535                           ;incstack = 0
   536  00109A  D00B               	goto	l266
   537  00109C                     
   538                           ;bms_proto2018.c: 162: EUSART1_Write(*Txdata++);
   539  00109C  C014  FFF6         	movff	send_string@Txdata,tblptrl
   540  0010A0  C015  FFF7         	movff	send_string@Txdata+1,tblptrh
   541  0010A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   542  0010A4  6AF8               	clrf	tblptru,c
   543  0010A6                     	endif
   544  0010A6                     	if	0	;tblptru may be non-zero
   545  0010A6                     	endif
   546  0010A6  0008               	tblrd		*
   547  0010A8  50F5               	movf	tablat,w,c
   548  0010AA  ECBF  F008         	call	_EUSART1_Write
   549  0010AE  4A14               	infsnz	send_string@Txdata,f,c
   550  0010B0  2A15               	incf	send_string@Txdata+1,f,c
   551  0010B2                     l266:
   552  0010B2  C014  FFF6         	movff	send_string@Txdata,tblptrl
   553  0010B6  C015  FFF7         	movff	send_string@Txdata+1,tblptrh
   554  0010BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   555  0010BA  6AF8               	clrf	tblptru,c
   556  0010BC                     	endif
   557  0010BC                     	if	0	;tblptru may be non-zero
   558  0010BC                     	endif
   559  0010BC  0008               	tblrd		*
   560  0010BE  50F5               	movf	tablat,w,c
   561  0010C0  0900               	iorlw	0
   562  0010C2  B4D8               	btfsc	status,2,c
   563  0010C4  0012               	return	
   564  0010C6  D7EA               	goto	l267
   565  0010C8                     __end_of_send_string:
   566                           	opt stack 0
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _EUSART1_Write *****************
   576 ;; Defined at:
   577 ;;		line 150 in file "mcc_generated_files/eusart1.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  txData          1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  txData          1   18[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    2
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;;		_send_string
   603 ;;		_AFE_SetAddress
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text2
   608  00117E                     __ptext2:
   609                           	opt stack 0
   610  00117E                     _EUSART1_Write:
   611                           	opt stack 27
   612                           
   613                           ;incstack = 0
   614                           ;EUSART1_Write@txData stored from wreg
   615  00117E  6E13               	movwf	EUSART1_Write@txData,c
   616  001180                     
   617                           ;eusart1.c: 153: {
   618                           
   619                           ;eusart1.c: 152: while(0 == eusart1TxBufferRemaining)
   620  001180  5041               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   621  001182  B4D8               	btfsc	status,2,c
   622  001184  D7FD               	goto	l1313
   623                           
   624                           ;eusart1.c: 154: }
   625                           ;eusart1.c: 156: TXREG1 = txData;
   626  001186  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   627  00118A  0012               	return		;funcret
   628  00118C                     __end_of_EUSART1_Write:
   629                           	opt stack 0
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _crc16_ibm *****************
   639 ;; Defined at:
   640 ;;		line 93 in file "bms_proto2018.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  buf             2   18[COMRAM] PTR unsigned char 
   643 ;;		 -> main@data(2), 
   644 ;;  len             2   20[COMRAM] unsigned int 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  crc             2   28[COMRAM] unsigned int 
   647 ;;  j               2   26[COMRAM] unsigned int 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  2   18[COMRAM] unsigned int 
   650 ;; Registers used:
   651 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   658 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   660 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;Total ram usage:       12 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    2
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text3
   672  000FCC                     __ptext3:
   673                           	opt stack 0
   674  000FCC                     _crc16_ibm:
   675                           	opt stack 28
   676                           
   677                           ;bms_proto2018.c: 94: uint16_t crc = 0;
   678                           
   679                           ;incstack = 0
   680  000FCC  0E00               	movlw	0
   681  000FCE  6E1E               	movwf	crc16_ibm@crc+1,c
   682  000FD0  0E00               	movlw	0
   683  000FD2  6E1D               	movwf	crc16_ibm@crc,c
   684                           
   685                           ;bms_proto2018.c: 95: uint16_t j;
   686                           ;bms_proto2018.c: 97: while(len--){
   687  000FD4  D033               	goto	l239
   688  000FD6                     l1337:
   689                           
   690                           ;bms_proto2018.c: 98: crc ^= *buf++;
   691  000FD6  C013  FFD9         	movff	crc16_ibm@buf,fsr2l
   692  000FDA  C014  FFDA         	movff	crc16_ibm@buf+1,fsr2h
   693  000FDE  50DF               	movf	indf2,w,c
   694  000FE0  6E17               	movwf	??_crc16_ibm& (0+255),c
   695  000FE2  5017               	movf	??_crc16_ibm,w,c
   696  000FE4  1A1D               	xorwf	crc16_ibm@crc,f,c
   697  000FE6  4A13               	infsnz	crc16_ibm@buf,f,c
   698  000FE8  2A14               	incf	crc16_ibm@buf+1,f,c
   699                           
   700                           ;bms_proto2018.c: 100: for (j = 0; j < 8; j++){
   701  000FEA  0E00               	movlw	0
   702  000FEC  6E1C               	movwf	crc16_ibm@j+1,c
   703  000FEE  0E00               	movlw	0
   704  000FF0  6E1B               	movwf	crc16_ibm@j,c
   705  000FF2  501C               	movf	crc16_ibm@j+1,w,c
   706  000FF4  E11E               	bnz	l242
   707  000FF6  D019               	goto	L1
   708  000FF8                     l241:
   709                           
   710                           ;bms_proto2018.c: 101: crc = (crc >> 1) ^ ((crc & 1) ? 0xa001 : 0);
   711  000FF8  B01D               	btfsc	crc16_ibm@crc,0,c
   712  000FFA  D004               	goto	l244
   713  000FFC  0E00               	movlw	0
   714  000FFE  6E1A               	movwf	_crc16_ibm$693+1,c
   715  001000  0E00               	movlw	0
   716  001002  D003               	goto	L2
   717  001004                     l244:
   718  001004  0EA0               	movlw	160
   719  001006  6E1A               	movwf	_crc16_ibm$693+1,c
   720  001008  0E01               	movlw	1
   721  00100A                     L2:
   722  00100A  6E19               	movwf	_crc16_ibm$693,c
   723  00100C  90D8               	bcf	status,0,c
   724  00100E  301E               	rrcf	crc16_ibm@crc+1,w,c
   725  001010  6E18               	movwf	(??_crc16_ibm+1)& (0+255),c
   726  001012  301D               	rrcf	crc16_ibm@crc,w,c
   727  001014  6E17               	movwf	??_crc16_ibm& (0+255),c
   728  001016  5019               	movf	_crc16_ibm$693,w,c
   729  001018  1817               	xorwf	??_crc16_ibm,w,c
   730  00101A  6E1D               	movwf	crc16_ibm@crc,c
   731  00101C  501A               	movf	_crc16_ibm$693+1,w,c
   732  00101E  1818               	xorwf	??_crc16_ibm+1,w,c
   733  001020  6E1E               	movwf	crc16_ibm@crc+1,c
   734  001022  4A1B               	infsnz	crc16_ibm@j,f,c
   735  001024  2A1C               	incf	crc16_ibm@j+1,f,c
   736  001026  501C               	movf	crc16_ibm@j+1,w,c
   737  001028  E104               	bnz	u400
   738  00102A                     L1:
   739  00102A  0E08               	movlw	8
   740  00102C  5C1B               	subwf	crc16_ibm@j,w,c
   741  00102E  A0D8               	btfss	status,0,c
   742  001030  D7E3               	goto	l241
   743  001032                     u400:
   744  001032                     l242:
   745                           
   746                           ;bms_proto2018.c: 102: }
   747                           ;bms_proto2018.c: 104: return crc;
   748  001032  C01D  F013         	movff	crc16_ibm@crc,?_crc16_ibm
   749  001036  C01E  F014         	movff	crc16_ibm@crc+1,?_crc16_ibm+1
   750  00103A  0012               	return	
   751  00103C                     l239:
   752  00103C  0615               	decf	crc16_ibm@len,f,c
   753  00103E  A0D8               	btfss	status,0,c
   754  001040  0616               	decf	crc16_ibm@len+1,f,c
   755  001042  2815               	incf	crc16_ibm@len,w,c
   756  001044  E1C8               	bnz	l1337
   757  001046  2816               	incf	crc16_ibm@len+1,w,c
   758  001048  B4D8               	btfsc	status,2,c
   759  00104A  0012               	return	
   760  00104C  D7C4               	goto	l240
   761  00104E                     __end_of_crc16_ibm:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           indf2	equ	0xFDF
   770                           fsr2h	equ	0xFDA
   771                           fsr2l	equ	0xFD9
   772                           status	equ	0xFD8
   773                           
   774 ;; *************** function _SYSTEM_Initialize *****************
   775 ;; Defined at:
   776 ;;		line 112 in file "mcc_generated_files/mcc.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    4
   797 ;; This function calls:
   798 ;;		_EUSART1_Initialize
   799 ;;		_INTERRUPT_Initialize
   800 ;;		_OSCILLATOR_Initialize
   801 ;;		_PIN_MANAGER_Initialize
   802 ;;		_TMR0_Initialize
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text4
   809  001156                     __ptext4:
   810                           	opt stack 0
   811  001156                     _SYSTEM_Initialize:
   812                           	opt stack 26
   813                           
   814                           ;mcc.c: 114: INTERRUPT_Initialize();
   815                           
   816                           ;incstack = 0
   817  001156  ECD0  F008         	call	_INTERRUPT_Initialize	;wreg free
   818                           
   819                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   820  00115A  EC7A  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   821                           
   822                           ;mcc.c: 116: OSCILLATOR_Initialize();
   823  00115E  ECB6  F008         	call	_OSCILLATOR_Initialize	;wreg free
   824                           
   825                           ;mcc.c: 117: TMR0_Initialize();
   826  001162  EC8E  F008         	call	_TMR0_Initialize	;wreg free
   827                           
   828                           ;mcc.c: 118: EUSART1_Initialize();
   829  001166  EC27  F008         	call	_EUSART1_Initialize	;wreg free
   830  00116A  0012               	return		;funcret
   831  00116C                     __end_of_SYSTEM_Initialize:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           indf2	equ	0xFDF
   840                           fsr2h	equ	0xFDA
   841                           fsr2l	equ	0xFD9
   842                           status	equ	0xFD8
   843                           
   844 ;; *************** function _TMR0_Initialize *****************
   845 ;; Defined at:
   846 ;;		line 65 in file "mcc_generated_files/tmr0.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   864 ;;Total ram usage:        2 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    2
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_SYSTEM_Initialize
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text5
   875  00111C                     __ptext5:
   876                           	opt stack 0
   877  00111C                     _TMR0_Initialize:
   878                           	opt stack 27
   879                           
   880                           ;tmr0.c: 70: TMR0H = 0xFF;
   881                           
   882                           ;incstack = 0
   883  00111C  68D7               	setf	4055,c	;volatile
   884                           
   885                           ;tmr0.c: 73: TMR0L = 0xEF;
   886  00111E  0EEF               	movlw	239
   887  001120  6ED6               	movwf	4054,c	;volatile
   888                           
   889                           ;tmr0.c: 77: timer0ReloadVal = (TMR0H << 8) | TMR0L;
   890  001122  50D6               	movf	4054,w,c	;volatile
   891  001124  CFD7 F013          	movff	4055,??_TMR0_Initialize	;volatile
   892  001128  6A14               	clrf	(??_TMR0_Initialize+1)& (0+255),c
   893  00112A  C013  F014         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   894  00112E  6A13               	clrf	??_TMR0_Initialize,c
   895  001130  1013               	iorwf	??_TMR0_Initialize,w,c
   896  001132  6E3F               	movwf	_timer0ReloadVal,c	;volatile
   897  001134  5014               	movf	??_TMR0_Initialize+1,w,c
   898  001136  6E40               	movwf	_timer0ReloadVal+1,c	;volatile
   899                           
   900                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
   901  001138  94F2               	bcf	intcon,2,c	;volatile
   902                           
   903                           ;tmr0.c: 83: T0CON = 0x95;
   904  00113A  0E95               	movlw	149
   905  00113C  6ED5               	movwf	4053,c	;volatile
   906  00113E  0012               	return		;funcret
   907  001140                     __end_of_TMR0_Initialize:
   908                           	opt stack 0
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           intcon	equ	0xFF2
   914                           postinc0	equ	0xFEE
   915                           wreg	equ	0xFE8
   916                           indf2	equ	0xFDF
   917                           fsr2h	equ	0xFDA
   918                           fsr2l	equ	0xFD9
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _PIN_MANAGER_Initialize *****************
   922 ;; Defined at:
   923 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_SYSTEM_Initialize
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text6
   952  0010F4                     __ptext6:
   953                           	opt stack 0
   954  0010F4                     _PIN_MANAGER_Initialize:
   955                           	opt stack 27
   956                           
   957                           ;pin_manager.c: 57: LATA = 0x00;
   958                           
   959                           ;incstack = 0
   960  0010F4  0E00               	movlw	0
   961  0010F6  6E89               	movwf	3977,c	;volatile
   962                           
   963                           ;pin_manager.c: 58: LATB = 0x00;
   964  0010F8  0E00               	movlw	0
   965  0010FA  6E8A               	movwf	3978,c	;volatile
   966                           
   967                           ;pin_manager.c: 59: LATC = 0x00;
   968  0010FC  0E00               	movlw	0
   969  0010FE  6E8B               	movwf	3979,c	;volatile
   970                           
   971                           ;pin_manager.c: 64: TRISA = 0xEF;
   972  001100  0EEF               	movlw	239
   973  001102  6E92               	movwf	3986,c	;volatile
   974                           
   975                           ;pin_manager.c: 65: TRISB = 0xFF;
   976  001104  6893               	setf	3987,c	;volatile
   977                           
   978                           ;pin_manager.c: 66: TRISC = 0xBF;
   979  001106  0EBF               	movlw	191
   980  001108  6E94               	movwf	3988,c	;volatile
   981                           
   982                           ;pin_manager.c: 71: ANCON0 = 0x1F;
   983  00110A  0E1F               	movlw	31
   984  00110C  010F               	movlb	15	; () banked
   985  00110E  6F5D               	movwf	93,b	;volatile
   986                           
   987                           ;pin_manager.c: 72: ANCON1 = 0x07;
   988  001110  0E07               	movlw	7
   989  001112  6F5C               	movwf	92,b	;volatile
   990                           
   991                           ;pin_manager.c: 77: WPUB = 0x00;
   992  001114  0E00               	movlw	0
   993  001116  6F5B               	movwf	91,b	;volatile
   994                           
   995                           ; BSR set to: 15
   996                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 1;
   997  001118  8EF1               	bsf	intcon2,7,c	;volatile
   998                           
   999                           ; BSR set to: 15
  1000  00111A  0012               	return		;funcret
  1001  00111C                     __end_of_PIN_MANAGER_Initialize:
  1002                           	opt stack 0
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           intcon	equ	0xFF2
  1008                           intcon2	equ	0xFF1
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           indf2	equ	0xFDF
  1012                           fsr2h	equ	0xFDA
  1013                           fsr2l	equ	0xFD9
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _OSCILLATOR_Initialize *****************
  1017 ;; Defined at:
  1018 ;;		line 121 in file "mcc_generated_files/mcc.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    2
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_SYSTEM_Initialize
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047  00116C                     __ptext7:
  1048                           	opt stack 0
  1049  00116C                     _OSCILLATOR_Initialize:
  1050                           	opt stack 27
  1051                           
  1052                           ;mcc.c: 124: OSCCON = 0x60;
  1053                           
  1054                           ; BSR set to: 15
  1055                           ;incstack = 0
  1056  00116C  0E60               	movlw	96
  1057  00116E  6ED3               	movwf	4051,c	;volatile
  1058                           
  1059                           ;mcc.c: 126: OSCCON2 = 0x00;
  1060  001170  0E00               	movlw	0
  1061  001172  6ED2               	movwf	4050,c	;volatile
  1062                           
  1063                           ;mcc.c: 128: OSCTUNE = 0x00;
  1064  001174  0E00               	movlw	0
  1065  001176  6E9B               	movwf	3995,c	;volatile
  1066                           
  1067                           ;mcc.c: 130: REFOCON = 0x00;
  1068  001178  0E00               	movlw	0
  1069  00117A  6E9A               	movwf	3994,c	;volatile
  1070  00117C  0012               	return		;funcret
  1071  00117E                     __end_of_OSCILLATOR_Initialize:
  1072                           	opt stack 0
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           intcon	equ	0xFF2
  1078                           intcon2	equ	0xFF1
  1079                           postinc0	equ	0xFEE
  1080                           wreg	equ	0xFE8
  1081                           indf2	equ	0xFDF
  1082                           fsr2h	equ	0xFDA
  1083                           fsr2l	equ	0xFD9
  1084                           status	equ	0xFD8
  1085                           
  1086 ;; *************** function _INTERRUPT_Initialize *****************
  1087 ;; Defined at:
  1088 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		None
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_SYSTEM_Initialize
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text8
  1117  0011A0                     __ptext8:
  1118                           	opt stack 0
  1119  0011A0                     _INTERRUPT_Initialize:
  1120                           	opt stack 27
  1121                           
  1122                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1123                           
  1124                           ;incstack = 0
  1125  0011A0  9ED0               	bcf	4048,7,c	;volatile
  1126  0011A2  0012               	return		;funcret
  1127  0011A4                     __end_of_INTERRUPT_Initialize:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           intcon	equ	0xFF2
  1134                           intcon2	equ	0xFF1
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           indf2	equ	0xFDF
  1138                           fsr2h	equ	0xFDA
  1139                           fsr2l	equ	0xFD9
  1140                           status	equ	0xFD8
  1141                           
  1142 ;; *************** function _EUSART1_Initialize *****************
  1143 ;; Defined at:
  1144 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    3
  1165 ;; This function calls:
  1166 ;;		_EUSART1_SetRxInterruptHandler
  1167 ;;		_EUSART1_SetTxInterruptHandler
  1168 ;; This function is called by:
  1169 ;;		_SYSTEM_Initialize
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text9
  1174  00104E                     __ptext9:
  1175                           	opt stack 0
  1176  00104E                     _EUSART1_Initialize:
  1177                           	opt stack 26
  1178                           
  1179                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1180                           
  1181                           ;incstack = 0
  1182  00104E  9A9D               	bcf	3997,5,c	;volatile
  1183                           
  1184                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1185  001050  989D               	bcf	3997,4,c	;volatile
  1186                           
  1187                           ;eusart1.c: 81: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  1188  001052  0E00               	movlw	0
  1189  001054  6E13               	movwf	EUSART1_SetTxInterruptHandler@handler,c
  1190  001056  0E00               	movlw	0
  1191  001058  6E14               	movwf	EUSART1_SetTxInterruptHandler@handler+1,c
  1192  00105A  ECC6  F008         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1193                           
  1194                           ;eusart1.c: 82: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  1195  00105E  0EC8               	movlw	low _EUSART1_Receive_ISR
  1196  001060  6E13               	movwf	EUSART1_SetRxInterruptHandler@handler,c
  1197  001062  0E10               	movlw	high _EUSART1_Receive_ISR
  1198  001064  6E14               	movwf	EUSART1_SetRxInterruptHandler@handler+1,c
  1199  001066  ECCB  F008         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1200                           
  1201                           ;eusart1.c: 87: BAUDCON1 = 0x08;
  1202  00106A  0E08               	movlw	8
  1203  00106C  6EA7               	movwf	4007,c	;volatile
  1204                           
  1205                           ;eusart1.c: 90: RCSTA1 = 0x90;
  1206  00106E  0E90               	movlw	144
  1207  001070  6EAB               	movwf	4011,c	;volatile
  1208                           
  1209                           ;eusart1.c: 93: TXSTA1 = 0x24;
  1210  001072  0E24               	movlw	36
  1211  001074  6EAC               	movwf	4012,c	;volatile
  1212                           
  1213                           ;eusart1.c: 96: SPBRG1 = 0xCF;
  1214  001076  0ECF               	movlw	207
  1215  001078  6EAF               	movwf	4015,c	;volatile
  1216                           
  1217                           ;eusart1.c: 99: SPBRGH1 = 0x00;
  1218  00107A  0E00               	movlw	0
  1219  00107C  6E7D               	movwf	3965,c	;volatile
  1220                           
  1221                           ;eusart1.c: 103: eusart1TxHead = 0;
  1222  00107E  0E00               	movlw	0
  1223  001080  6E3A               	movwf	_eusart1TxHead,c	;volatile
  1224                           
  1225                           ;eusart1.c: 104: eusart1TxTail = 0;
  1226  001082  0E00               	movlw	0
  1227  001084  6E39               	movwf	_eusart1TxTail,c	;volatile
  1228                           
  1229                           ;eusart1.c: 105: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1230  001086  0E08               	movlw	8
  1231  001088  6E41               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1232                           
  1233                           ;eusart1.c: 107: eusart1RxHead = 0;
  1234  00108A  0E00               	movlw	0
  1235  00108C  6E38               	movwf	_eusart1RxHead,c	;volatile
  1236                           
  1237                           ;eusart1.c: 108: eusart1RxTail = 0;
  1238  00108E  0E00               	movlw	0
  1239  001090  6E37               	movwf	_eusart1RxTail,c	;volatile
  1240                           
  1241                           ;eusart1.c: 109: eusart1RxCount = 0;
  1242  001092  0E00               	movlw	0
  1243  001094  6E36               	movwf	_eusart1RxCount,c	;volatile
  1244                           
  1245                           ;eusart1.c: 112: PIE1bits.RC1IE = 1;
  1246  001096  8A9D               	bsf	3997,5,c	;volatile
  1247  001098  0012               	return		;funcret
  1248  00109A                     __end_of_EUSART1_Initialize:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           intcon	equ	0xFF2
  1255                           intcon2	equ	0xFF1
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           indf2	equ	0xFDF
  1259                           fsr2h	equ	0xFDA
  1260                           fsr2l	equ	0xFD9
  1261                           status	equ	0xFD8
  1262                           
  1263 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  1264 ;; Defined at:
  1265 ;;		line 213 in file "mcc_generated_files/eusart1.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  handler         2   18[COMRAM] PTR void 
  1268 ;;		 -> EUSART1_Transmit_ISR(1), 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1284 ;;Total ram usage:        2 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_EUSART1_Initialize
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text10
  1295  00118C                     __ptext10:
  1296                           	opt stack 0
  1297  00118C                     _EUSART1_SetTxInterruptHandler:
  1298                           	opt stack 26
  1299                           
  1300                           ;eusart1.c: 214: EUSART1_TxDefaultInterruptHandler = handler;
  1301                           
  1302                           ;incstack = 0
  1303  00118C  C013  F03D         	movff	EUSART1_SetTxInterruptHandler@handler,_EUSART1_TxDefaultInterruptHandler
  1304  001190  C014  F03E         	movff	EUSART1_SetTxInterruptHandler@handler+1,_EUSART1_TxDefaultInterruptHandler+1
  1305  001194  0012               	return		;funcret
  1306  001196                     __end_of_EUSART1_SetTxInterruptHandler:
  1307                           	opt stack 0
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           intcon	equ	0xFF2
  1313                           intcon2	equ	0xFF1
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           indf2	equ	0xFDF
  1317                           fsr2h	equ	0xFDA
  1318                           fsr2l	equ	0xFD9
  1319                           status	equ	0xFD8
  1320                           
  1321 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1322 ;; Defined at:
  1323 ;;		line 217 in file "mcc_generated_files/eusart1.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  handler         2   18[COMRAM] PTR void 
  1326 ;;		 -> EUSART1_Receive_ISR(1), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1342 ;;Total ram usage:        2 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    2
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_EUSART1_Initialize
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text11
  1353  001196                     __ptext11:
  1354                           	opt stack 0
  1355  001196                     _EUSART1_SetRxInterruptHandler:
  1356                           	opt stack 26
  1357                           
  1358                           ;eusart1.c: 218: EUSART1_RxDefaultInterruptHandler = handler;
  1359                           
  1360                           ;incstack = 0
  1361  001196  C013  F03B         	movff	EUSART1_SetRxInterruptHandler@handler,_EUSART1_RxDefaultInterruptHandler
  1362  00119A  C014  F03C         	movff	EUSART1_SetRxInterruptHandler@handler+1,_EUSART1_RxDefaultInterruptHandler+1
  1363  00119E  0012               	return		;funcret
  1364  0011A0                     __end_of_EUSART1_SetRxInterruptHandler:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           intcon	equ	0xFF2
  1371                           intcon2	equ	0xFF1
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _INTERRUPT_InterruptManager *****************
  1380 ;; Defined at:
  1381 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;Total ram usage:       18 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		Absolute function
  1404 ;;		_EUSART1_Receive_ISR
  1405 ;; This function is called by:
  1406 ;;		Interrupt level 2
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	intcode
  1411  000008                     __pintcode:
  1412                           	opt stack 0
  1413  000008                     _INTERRUPT_InterruptManager:
  1414                           	opt stack 26
  1415                           
  1416                           ;incstack = 0
  1417  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1418  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1419  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1420  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1421  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1422  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1423  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1424  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1425  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1426  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1427  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1428  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1429  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1430  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1431  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1432  000042  C042  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1433  000046  C043  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1434  00004A  C044  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1435  00004E  C045  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1436                           
  1437                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  1438  000052  BCF2               	btfsc	intcon,6,c	;volatile
  1439                           
  1440                           ;interrupt_manager.c: 61: {
  1441                           ;interrupt_manager.c: 62: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1442  000054  AA9D               	btfss	3997,5,c	;volatile
  1443  000056  D00D               	goto	i2u16_49
  1444  000058  AA9E               	btfss	3998,5,c	;volatile
  1445  00005A  D00B               	goto	i2u16_49
  1446                           
  1447                           ;interrupt_manager.c: 63: {
  1448                           ;interrupt_manager.c: 64: EUSART1_RxDefaultInterruptHandler();
  1449  00005C  D801               	call	i2u16_48
  1450  00005E  D009               	goto	i2u16_49
  1451  000060                     i2u16_48:
  1452  000060  0005               	push	
  1453  000062  6EFA               	movwf	pclath,c
  1454  000064  503B               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
  1455  000066  6EFD               	movwf	tosl,c
  1456  000068  503C               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
  1457  00006A  6EFE               	movwf	tosh,c
  1458  00006C  6AFF               	clrf	tosu,c
  1459  00006E  50FA               	movf	pclath,w,c
  1460  000070  0012               	return		;indir
  1461  000072                     i2u16_49:
  1462                           
  1463                           ;interrupt_manager.c: 71: else
  1464                           ;interrupt_manager.c: 72: {
  1465                           
  1466                           ;interrupt_manager.c: 69: }
  1467                           ;interrupt_manager.c: 70: }
  1468                           
  1469                           ;interrupt_manager.c: 66: else
  1470                           ;interrupt_manager.c: 67: {
  1471                           
  1472                           ;interrupt_manager.c: 65: }
  1473  000072  C012  F045         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1474  000076  C011  F044         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1475  00007A  C010  F043         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1476  00007E  C00F  F042         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1477  000082  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1478  000086  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1479  00008A  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1480  00008E  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1481  000092  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1482  000096  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1483  00009A  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1484  00009E  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1485  0000A2  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1486  0000A6  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1487  0000AA  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1488  0000AE  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1489  0000B2  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1490  0000B6  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1491  0000BA  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1492  0000BC  0011               	retfie		f
  1493  0000BE                     __end_of_INTERRUPT_InterruptManager:
  1494                           	opt stack 0
  1495                           tosu	equ	0xFFF
  1496                           tosh	equ	0xFFE
  1497                           tosl	equ	0xFFD
  1498                           pclatu	equ	0xFFB
  1499                           pclath	equ	0xFFA
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           prodh	equ	0xFF4
  1505                           prodl	equ	0xFF3
  1506                           intcon	equ	0xFF2
  1507                           intcon2	equ	0xFF1
  1508                           postinc0	equ	0xFEE
  1509                           fsr0h	equ	0xFEA
  1510                           fsr0l	equ	0xFE9
  1511                           wreg	equ	0xFE8
  1512                           fsr1h	equ	0xFE2
  1513                           fsr1l	equ	0xFE1
  1514                           indf2	equ	0xFDF
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _EUSART1_Receive_ISR *****************
  1520 ;; Defined at:
  1521 ;;		line 193 in file "mcc_generated_files/eusart1.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_EUSART1_Initialize
  1545 ;;		_INTERRUPT_InterruptManager
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text13
  1550  0010C8                     __ptext13:
  1551                           	opt stack 0
  1552  0010C8                     _EUSART1_Receive_ISR:
  1553                           	opt stack 26
  1554                           
  1555                           ;eusart1.c: 196: if(1 == RCSTA1bits.OERR)
  1556                           
  1557                           ;incstack = 0
  1558  0010C8  A2AB               	btfss	4011,1,c	;volatile
  1559  0010CA  D002               	goto	i2l169
  1560                           
  1561                           ;eusart1.c: 197: {
  1562                           ;eusart1.c: 200: RCSTA1bits.CREN = 0;
  1563  0010CC  98AB               	bcf	4011,4,c	;volatile
  1564                           
  1565                           ;eusart1.c: 201: RCSTA1bits.CREN = 1;
  1566  0010CE  88AB               	bsf	4011,4,c	;volatile
  1567  0010D0                     i2l169:
  1568                           
  1569                           ;eusart1.c: 202: }
  1570                           ;eusart1.c: 205: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1571  0010D0  5038               	movf	_eusart1RxHead,w,c	;volatile
  1572  0010D2  0D01               	mullw	1
  1573  0010D4  0E26               	movlw	low _eusart1RxBuffer
  1574  0010D6  24F3               	addwf	prodl,w,c
  1575  0010D8  6ED9               	movwf	fsr2l,c
  1576  0010DA  0E00               	movlw	high _eusart1RxBuffer
  1577  0010DC  20F4               	addwfc	prodh,w,c
  1578  0010DE  6EDA               	movwf	fsr2h,c
  1579  0010E0  CFAE FFDF          	movff	4014,indf2	;volatile
  1580  0010E4  2A38               	incf	_eusart1RxHead,f,c	;volatile
  1581                           
  1582                           ;eusart1.c: 206: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1583  0010E6  0E07               	movlw	7
  1584  0010E8  6438               	cpfsgt	_eusart1RxHead,c	;volatile
  1585  0010EA  D002               	goto	i2l170
  1586                           
  1587                           ;eusart1.c: 207: {
  1588                           ;eusart1.c: 208: eusart1RxHead = 0;
  1589  0010EC  0E00               	movlw	0
  1590  0010EE  6E38               	movwf	_eusart1RxHead,c	;volatile
  1591  0010F0                     i2l170:
  1592                           
  1593                           ;eusart1.c: 209: }
  1594                           ;eusart1.c: 210: eusart1RxCount++;
  1595  0010F0  2A36               	incf	_eusart1RxCount,f,c	;volatile
  1596  0010F2  0012               	return		;funcret
  1597  0010F4                     __end_of_EUSART1_Receive_ISR:
  1598                           	opt stack 0
  1599                           tosu	equ	0xFFF
  1600                           tosh	equ	0xFFE
  1601                           tosl	equ	0xFFD
  1602                           pclatu	equ	0xFFB
  1603                           pclath	equ	0xFFA
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           prodh	equ	0xFF4
  1609                           prodl	equ	0xFF3
  1610                           intcon	equ	0xFF2
  1611                           intcon2	equ	0xFF1
  1612                           postinc0	equ	0xFEE
  1613                           fsr0h	equ	0xFEA
  1614                           fsr0l	equ	0xFE9
  1615                           wreg	equ	0xFE8
  1616                           fsr1h	equ	0xFE2
  1617                           fsr1l	equ	0xFE1
  1618                           indf2	equ	0xFDF
  1619                           fsr2h	equ	0xFDA
  1620                           fsr2l	equ	0xFD9
  1621                           status	equ	0xFD8
  1622                           tosu	equ	0xFFF
  1623                           tosh	equ	0xFFE
  1624                           tosl	equ	0xFFD
  1625                           pclatu	equ	0xFFB
  1626                           pclath	equ	0xFFA
  1627                           tblptru	equ	0xFF8
  1628                           tblptrh	equ	0xFF7
  1629                           tblptrl	equ	0xFF6
  1630                           tablat	equ	0xFF5
  1631                           prodh	equ	0xFF4
  1632                           prodl	equ	0xFF3
  1633                           intcon	equ	0xFF2
  1634                           intcon2	equ	0xFF1
  1635                           postinc0	equ	0xFEE
  1636                           fsr0h	equ	0xFEA
  1637                           fsr0l	equ	0xFE9
  1638                           wreg	equ	0xFE8
  1639                           fsr1h	equ	0xFE2
  1640                           fsr1l	equ	0xFE1
  1641                           indf2	equ	0xFDF
  1642                           fsr2h	equ	0xFDA
  1643                           fsr2l	equ	0xFD9
  1644                           status	equ	0xFD8
  1645                           
  1646                           	psect	text14
  1647  000000                     __ptext14:
  1648                           	opt stack 0
  1649                           tosu	equ	0xFFF
  1650                           tosh	equ	0xFFE
  1651                           tosl	equ	0xFFD
  1652                           pclatu	equ	0xFFB
  1653                           pclath	equ	0xFFA
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           intcon	equ	0xFF2
  1661                           intcon2	equ	0xFF1
  1662                           postinc0	equ	0xFEE
  1663                           fsr0h	equ	0xFEA
  1664                           fsr0l	equ	0xFE9
  1665                           wreg	equ	0xFE8
  1666                           fsr1h	equ	0xFE2
  1667                           fsr1l	equ	0xFE1
  1668                           indf2	equ	0xFDF
  1669                           fsr2h	equ	0xFDA
  1670                           fsr2l	equ	0xFD9
  1671                           status	equ	0xFD8
  1672                           
  1673                           	psect	rparam
  1674  0000                     tosu	equ	0xFFF
  1675                           tosh	equ	0xFFE
  1676                           tosl	equ	0xFFD
  1677                           pclatu	equ	0xFFB
  1678                           pclath	equ	0xFFA
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           intcon	equ	0xFF2
  1686                           intcon2	equ	0xFF1
  1687                           postinc0	equ	0xFEE
  1688                           fsr0h	equ	0xFEA
  1689                           fsr0l	equ	0xFE9
  1690                           wreg	equ	0xFE8
  1691                           fsr1h	equ	0xFE2
  1692                           fsr1l	equ	0xFE1
  1693                           indf2	equ	0xFDF
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698                           	psect	temp
  1699  000042                     btemp:
  1700                           	opt stack 0
  1701  000042                     	ds	1
  1702  0000                     int$flags	set	btemp
  1703  0000                     wtemp6	set	btemp+1
  1704                           tosu	equ	0xFFF
  1705                           tosh	equ	0xFFE
  1706                           tosl	equ	0xFFD
  1707                           pclatu	equ	0xFFB
  1708                           pclath	equ	0xFFA
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           prodh	equ	0xFF4
  1714                           prodl	equ	0xFF3
  1715                           intcon	equ	0xFF2
  1716                           intcon2	equ	0xFF1
  1717                           postinc0	equ	0xFEE
  1718                           fsr0h	equ	0xFEA
  1719                           fsr0l	equ	0xFE9
  1720                           wreg	equ	0xFE8
  1721                           fsr1h	equ	0xFE2
  1722                           fsr1l	equ	0xFE1
  1723                           indf2	equ	0xFDF
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         21
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      65
    BANK0           160     13      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    send_string@Txdata	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_1(CODE[31]), 

    crc16_ibm@buf	PTR unsigned char  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    main@p_data	PTR unsigned int  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    EUSART1_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_crc16_ibm
    _send_string->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    15      5    1022
                                             30 COMRAM     7     2      5
                                              0 BANK0     13    13      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
                          _crc16_ibm
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     177
                                             19 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _crc16_ibm                                           12     8      4     452
                                             18 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     242
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     242
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _crc16_ibm
   _send_string
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D       D       5        8.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      41       1       69.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E       6        0.0%
DATA                 0      0      4E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 09 00:31:58 2018

              _eusart1TxBufferRemaining 0041                             __CFG_BORV$3 000000  
                       _timer0ReloadVal 003F                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                                     l240 0FD6  
                                   l224 0F88                                     l241 0FF8  
                                   l242 1032                                     l244 1004  
                                   l239 103C                                     l266 10B2  
                                   l267 109C                            __CFG_CPB$OFF 000000  
                                   u400 1032                            __CFG_CPD$OFF 000000  
                                   u427 0F96                                     u437 0FB0  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
                                  l1313 1180                                    l1337 0FD6  
                                  STR_1 0F01                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                           main@counter 0065                                    _WPUB 000F5B  
                         _EUSART1_Write 117E                                    _main 0F22  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0042  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 00BE                           __CFG_IESO$OFF 000000  
                         __CFG_MCLRE$ON 000000                            ___param_bank 000000  
               __end_of_TMR0_Initialize 1140          __size_of_OSCILLATOR_Initialize 0012  
         __end_of_OSCILLATOR_Initialize 117E                                   ?_main 001F  
                                 _T0CON 000FD5                                   i2l170 10F0  
                                 i2l169 10D0                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                  _EUSART1_Transmit_ISR 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                          __CFG_EBTRB$OFF 000000  
                                 main@i 0063                          ?_EUSART1_Write 0001  
                                 pclath 000FFA                                   tablat 000FF5  
                                 status 000FD8                                   wtemp6 0043  
                       __initialization 1140              __end_of_EUSART1_Initialize 109A  
                          __end_of_main 0FCC             ?_INTERRUPT_InterruptManager 0001  
                         _crc16_ibm$693 0019                                  ??_main 0024  
                         __activetblptr 000003                          __CFG_PLLCFG$ON 000000  
                        __CFG_RETEN$OFF 000000                                  _ANCON0 000F5D  
                                _ANCON1 000F5C                         __CFG_BBSIZ$BB2K 000000  
                        __CFG_WDTEN$OFF 000000                            ?_send_string 0014  
                                _RCREG1 000FAE                                  _RCSTA1 000FAB  
                                _OSCCON 000FD3                                  _SPBRG1 000FAF  
                                _TXREG1 000FAD                                  _TXSTA1 000FAC  
                        __CFG_XINST$OFF 000000                          __CFG_STVREN$ON 000000  
                      ?_TMR0_Initialize 0001                                  clear_0 1146  
                          __mediumconst 0000                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                       ??_EUSART1_Write 0013                         _eusart1RxBuffer 0026  
  EUSART1_SetTxInterruptHandler@handler 0013           __size_of_INTERRUPT_Initialize 0004  
                       _eusart1TxBuffer 002E                       _SYSTEM_Initialize 1156  
                            __accesstop 0060                 __end_of__initialization 114C  
                    __size_of_crc16_ibm 0082                      ?_SYSTEM_Initialize 0001  
                         ___rparam_used 000001                          __pcstackCOMRAM 0001  
                   ??_SYSTEM_Initialize 0015                          main@baudconfig 0062  
                          crc16_ibm@crc 001D                            crc16_ibm@buf 0013  
                          crc16_ibm@len 0015             __end_of_EUSART1_Receive_ISR 10F4  
             __end_of_SYSTEM_Initialize 116C                           _eusart1RxHead 0038  
                         _eusart1TxHead 003A                           _eusart1RxTail 0037  
                         _eusart1TxTail 0039       _EUSART1_TxDefaultInterruptHandler 003D  
       ??_EUSART1_SetRxInterruptHandler 0015                              __pnvCOMRAM 003B  
                            crc16_ibm@j 001B                       __end_of_crc16_ibm 104E  
                      __CFG_CANMX$PORTB 000000                                 _REFOCON 000F9A  
                               _OSCCON2 000FD2                                 i2u16_48 0060  
                               i2u16_49 0072                                 _OSCTUNE 000F9B  
                               _SPBRGH1 000F7D                    __size_of_send_string 002E  
                       __CFG_PWRTEN$OFF 000000                                 __Hparam 0000  
                               __Lparam 0000                            __psmallconst 0F00  
                               __pcinit 1140                                 __ramtop 0F00  
                               __ptext0 0F22                                 __ptext1 109A  
                               __ptext2 117E                                 __ptext3 0FCC  
                               __ptext4 1156                                 __ptext5 111C  
                               __ptext6 10F4                                 __ptext7 116C  
                               __ptext8 11A0                                 __ptext9 104E  
                             _T0CONbits 000FD5                   _OSCILLATOR_Initialize 116C  
                    _EUSART1_Initialize 104E                ??_PIN_MANAGER_Initialize 0013  
                     __CFG_MSSPMSK$MSK7 000000                                 main@crc 006B  
            __size_of_SYSTEM_Initialize 0016                    end_of_initialization 114C  
                   ?_EUSART1_Initialize 0001   __end_of_EUSART1_SetRxInterruptHandler 11A0  
__size_of_EUSART1_SetRxInterruptHandler 000A           _EUSART1_SetRxInterruptHandler 1196  
                               postinc0 000FEE                    ??_EUSART1_Initialize 0015  
                      __CFG_FOSC$INTIO2 000000                     EUSART1_Write@txData 0013  
                            main@Txdata 0064                       send_string@Txdata 0014  
                            main@config 0060                              main@p_data 0067  
          __end_of_INTERRUPT_Initialize 11A4                  ?_OSCILLATOR_Initialize 0001  
                   start_initialization 1140                __size_of_TMR0_Initialize 0024  
       __size_of_PIN_MANAGER_Initialize 0028                   __end_of_EUSART1_Write 118C  
        ?_EUSART1_SetRxInterruptHandler 0013                          _eusart1RxCount 0036  
                           __pbssCOMRAM 0026       _EUSART1_RxDefaultInterruptHandler 003B  
                         __pcstackBANK0 0060                               _crc16_ibm 0FCC  
       ??_EUSART1_SetTxInterruptHandler 0015            __size_of_EUSART1_Receive_ISR 002C  
                _PIN_MANAGER_Initialize 10F4                               __pintcode 0008  
          ??_INTERRUPT_InterruptManager 0001                             __smallconst 0F00  
                              _BAUDCON1 000FA7                              ?_crc16_ibm 0013  
                  _INTERRUPT_Initialize 11A0                           ??_send_string 0016  
                     ??_TMR0_Initialize 0013                                _PIE1bits 000F9D  
   __size_of_INTERRUPT_InterruptManager 00B6                                _PIR1bits 000F9E  
                              _RCONbits 000FD0                        __CFG_SOSCSEL$DIG 000000  
                             main@spbrg 0061                             _INTCON2bits 000FF1  
                 ?_INTERRUPT_Initialize 0001   __end_of_EUSART1_SetTxInterruptHandler 1196  
__size_of_EUSART1_SetTxInterruptHandler 000A           _EUSART1_SetTxInterruptHandler 118C  
                              __Hrparam 0000                     __end_of_send_string 10C8  
                              __Lrparam 0000                      __CFG_BOREN$SBORDIS 000000  
               ??_OSCILLATOR_Initialize 0013             __size_of_EUSART1_Initialize 004C  
                           ??_crc16_ibm 0017                                __ptext10 118C  
                              __ptext11 1196                                __ptext13 10C8  
                              __ptext14 0000                           __size_of_main 00AA  
                              int$flags 0042    EUSART1_SetRxInterruptHandler@handler 0013  
    __end_of_INTERRUPT_InterruptManager 00BE              _INTERRUPT_InterruptManager 0008  
                              main@data 0069                                main@argc 001F  
                              main@argv 0021                     __CFG_INTOSCSEL$HIGH 000000  
                   _EUSART1_Receive_ISR 10C8                              _INTCONbits 000FF2  
                ??_INTERRUPT_Initialize 0013                                intlevel2 0000  
                           _send_string 109A                    ?_EUSART1_Receive_ISR 0001  
               ?_PIN_MANAGER_Initialize 0001                              _RCSTA1bits 000FAB  
                    __CFG_WDTPS$1048576 000000          ?_EUSART1_SetTxInterruptHandler 0013  
                __size_of_EUSART1_Write 000E                         _TMR0_Initialize 111C  
                 ??_EUSART1_Receive_ISR 0001          __end_of_PIN_MANAGER_Initialize 111C  
                   __CFG_BORPWR$ZPBORMV 000000  
