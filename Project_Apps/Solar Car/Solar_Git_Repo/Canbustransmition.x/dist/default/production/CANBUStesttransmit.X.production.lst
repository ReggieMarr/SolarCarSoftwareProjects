

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 06 01:11:10 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F26K80 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _B5D7	set	3805
    55  0000                     _B5D6	set	3804
    56  0000                     _B5D5	set	3803
    57  0000                     _B5D4	set	3802
    58  0000                     _B5D3	set	3801
    59  0000                     _B5D2	set	3800
    60  0000                     _B5D1	set	3799
    61  0000                     _B5D0	set	3798
    62  0000                     _B5DLC	set	3797
    63  0000                     _B5SIDL	set	3794
    64  0000                     _B5SIDH	set	3793
    65  0000                     _B5EIDL	set	3796
    66  0000                     _B5EIDH	set	3795
    67  0000                     _B5CONbits	set	3792
    68  0000                     _B4D7	set	3789
    69  0000                     _B4D6	set	3788
    70  0000                     _B4D5	set	3787
    71  0000                     _B4D4	set	3786
    72  0000                     _B4D3	set	3785
    73  0000                     _B4D2	set	3784
    74  0000                     _B4D1	set	3783
    75  0000                     _B4D0	set	3782
    76  0000                     _B4DLC	set	3781
    77  0000                     _B4SIDL	set	3778
    78  0000                     _B4SIDH	set	3777
    79  0000                     _B4EIDL	set	3780
    80  0000                     _B4EIDH	set	3779
    81  0000                     _B4CONbits	set	3776
    82  0000                     _B3D7	set	3773
    83  0000                     _B3D6	set	3772
    84  0000                     _B3D5	set	3771
    85  0000                     _B3D4	set	3770
    86  0000                     _B3D3	set	3769
    87  0000                     _B3D2	set	3768
    88  0000                     _B3D1	set	3767
    89  0000                     _B3D0	set	3766
    90  0000                     _B3DLC	set	3765
    91  0000                     _B3SIDL	set	3762
    92  0000                     _B3SIDH	set	3761
    93  0000                     _B3EIDL	set	3764
    94  0000                     _B3EIDH	set	3763
    95  0000                     _B3CONbits	set	3760
    96  0000                     _B2D7	set	3757
    97  0000                     _B2D6	set	3756
    98  0000                     _B2D5	set	3755
    99  0000                     _B2D4	set	3754
   100  0000                     _B2D3	set	3753
   101  0000                     _B2D2	set	3752
   102  0000                     _B2D1	set	3751
   103  0000                     _B2D0	set	3750
   104  0000                     _B2DLC	set	3749
   105  0000                     _B2SIDL	set	3746
   106  0000                     _B2SIDH	set	3745
   107  0000                     _B2EIDL	set	3748
   108  0000                     _B2EIDH	set	3747
   109  0000                     _B2CONbits	set	3744
   110  0000                     _B1D7	set	3741
   111  0000                     _B1D6	set	3740
   112  0000                     _B1D5	set	3739
   113  0000                     _B1D4	set	3738
   114  0000                     _B1D3	set	3737
   115  0000                     _B1D2	set	3736
   116  0000                     _B1D1	set	3735
   117  0000                     _B1D0	set	3734
   118  0000                     _B1DLC	set	3733
   119  0000                     _B1SIDL	set	3730
   120  0000                     _B1SIDH	set	3729
   121  0000                     _B1EIDL	set	3732
   122  0000                     _B1EIDH	set	3731
   123  0000                     _B1CONbits	set	3728
   124  0000                     _B0D7	set	3725
   125  0000                     _B0D6	set	3724
   126  0000                     _B0D5	set	3723
   127  0000                     _B0D4	set	3722
   128  0000                     _B0D3	set	3721
   129  0000                     _B0D2	set	3720
   130  0000                     _B0D1	set	3719
   131  0000                     _B0D0	set	3718
   132  0000                     _B0DLC	set	3717
   133  0000                     _B0SIDL	set	3714
   134  0000                     _B0SIDH	set	3713
   135  0000                     _B0EIDL	set	3716
   136  0000                     _B0EIDH	set	3715
   137  0000                     _B0CONbits	set	3712
   138  0000                     _BRGCON3	set	3653
   139  0000                     _BRGCON2	set	3652
   140  0000                     _BRGCON1	set	3651
   141  0000                     _RXF15SIDL	set	3693
   142  0000                     _RXF15SIDH	set	3692
   143  0000                     _RXF15EIDL	set	3695
   144  0000                     _RXF15EIDH	set	3694
   145  0000                     _RXF14SIDL	set	3689
   146  0000                     _RXF14SIDH	set	3688
   147  0000                     _RXF14EIDL	set	3691
   148  0000                     _RXF14EIDH	set	3690
   149  0000                     _RXF13SIDL	set	3685
   150  0000                     _RXF13SIDH	set	3684
   151  0000                     _RXF13EIDL	set	3687
   152  0000                     _RXF13EIDH	set	3686
   153  0000                     _RXF12SIDL	set	3681
   154  0000                     _RXF12SIDH	set	3680
   155  0000                     _RXF12EIDL	set	3683
   156  0000                     _RXF12EIDH	set	3682
   157  0000                     _RXF11SIDL	set	3677
   158  0000                     _RXF11SIDH	set	3676
   159  0000                     _RXF11EIDL	set	3679
   160  0000                     _RXF11EIDH	set	3678
   161  0000                     _RXF10SIDL	set	3673
   162  0000                     _RXF10SIDH	set	3672
   163  0000                     _RXF10EIDL	set	3675
   164  0000                     _RXF10EIDH	set	3674
   165  0000                     _RXF9SIDL	set	3669
   166  0000                     _RXF9SIDH	set	3668
   167  0000                     _RXF9EIDL	set	3671
   168  0000                     _RXF9EIDH	set	3670
   169  0000                     _RXF8SIDL	set	3665
   170  0000                     _RXF8SIDH	set	3664
   171  0000                     _RXF8EIDL	set	3667
   172  0000                     _RXF8EIDH	set	3666
   173  0000                     _RXF7SIDL	set	3661
   174  0000                     _RXF7SIDH	set	3660
   175  0000                     _RXF7EIDL	set	3663
   176  0000                     _RXF7EIDH	set	3662
   177  0000                     _RXF6SIDL	set	3657
   178  0000                     _RXF6SIDH	set	3656
   179  0000                     _RXF6EIDL	set	3659
   180  0000                     _RXF6EIDH	set	3658
   181  0000                     _RXF5SIDL	set	3829
   182  0000                     _RXF5SIDH	set	3828
   183  0000                     _RXF5EIDL	set	3831
   184  0000                     _RXF5EIDH	set	3830
   185  0000                     _RXF4SIDL	set	3825
   186  0000                     _RXF4SIDH	set	3824
   187  0000                     _RXF4EIDL	set	3827
   188  0000                     _RXF4EIDH	set	3826
   189  0000                     _RXF3SIDL	set	3821
   190  0000                     _RXF3SIDH	set	3820
   191  0000                     _RXF3EIDL	set	3823
   192  0000                     _RXF3EIDH	set	3822
   193  0000                     _RXF2SIDL	set	3817
   194  0000                     _RXF2SIDH	set	3816
   195  0000                     _RXF2EIDL	set	3819
   196  0000                     _RXF2EIDH	set	3818
   197  0000                     _RXF1SIDL	set	3813
   198  0000                     _RXF1SIDH	set	3812
   199  0000                     _RXF1EIDL	set	3815
   200  0000                     _RXF1EIDH	set	3814
   201  0000                     _RXF0SIDL	set	3809
   202  0000                     _RXF0SIDH	set	3808
   203  0000                     _RXF0EIDL	set	3811
   204  0000                     _RXF0EIDH	set	3810
   205  0000                     _RXFBCON7	set	3704
   206  0000                     _RXFBCON6	set	3703
   207  0000                     _RXFBCON5	set	3702
   208  0000                     _RXFBCON4	set	3701
   209  0000                     _RXFBCON3	set	3700
   210  0000                     _RXFBCON2	set	3699
   211  0000                     _RXFBCON1	set	3698
   212  0000                     _RXFBCON0	set	3697
   213  0000                     _MSEL3	set	3708
   214  0000                     _MSEL2	set	3707
   215  0000                     _MSEL1	set	3706
   216  0000                     _MSEL0	set	3705
   217  0000                     _RXFCON1	set	3655
   218  0000                     _RXFCON0	set	3654
   219  0000                     _RXM1SIDL	set	3837
   220  0000                     _RXM1SIDH	set	3836
   221  0000                     _RXM1EIDL	set	3839
   222  0000                     _RXM1EIDH	set	3838
   223  0000                     _RXM0SIDL	set	3833
   224  0000                     _RXM0SIDH	set	3832
   225  0000                     _RXM0EIDL	set	3835
   226  0000                     _RXM0EIDH	set	3834
   227  0000                     _BSEL0	set	3709
   228  0000                     _RXB1D7	set	3901
   229  0000                     _RXB1D6	set	3900
   230  0000                     _RXB1D5	set	3899
   231  0000                     _RXB1D4	set	3898
   232  0000                     _RXB1D3	set	3897
   233  0000                     _RXB1D2	set	3896
   234  0000                     _RXB1D1	set	3895
   235  0000                     _RXB1D0	set	3894
   236  0000                     _RXB1DLC	set	3893
   237  0000                     _RXB1SIDH	set	3889
   238  0000                     _RXB1EIDL	set	3892
   239  0000                     _RXB1EIDH	set	3891
   240  0000                     _RXB1SIDL	set	3890
   241  0000                     _RXB1CONbits	set	3888
   242  0000                     _TXB2D7	set	3853
   243  0000                     _TXB2D6	set	3852
   244  0000                     _TXB2D5	set	3851
   245  0000                     _TXB2D4	set	3850
   246  0000                     _TXB2D3	set	3849
   247  0000                     _TXB2D2	set	3848
   248  0000                     _TXB2D1	set	3847
   249  0000                     _TXB2D0	set	3846
   250  0000                     _TXB2DLC	set	3845
   251  0000                     _TXB2SIDL	set	3842
   252  0000                     _TXB2SIDH	set	3841
   253  0000                     _TXB2EIDL	set	3844
   254  0000                     _TXB2EIDH	set	3843
   255  0000                     _TXB2CONbits	set	3840
   256  0000                     _TXB1D7	set	3869
   257  0000                     _TXB1D6	set	3868
   258  0000                     _TXB1D5	set	3867
   259  0000                     _TXB1D4	set	3866
   260  0000                     _TXB1D3	set	3865
   261  0000                     _TXB1D2	set	3864
   262  0000                     _TXB1D1	set	3863
   263  0000                     _TXB1D0	set	3862
   264  0000                     _TXB1DLC	set	3861
   265  0000                     _TXB1SIDL	set	3858
   266  0000                     _TXB1SIDH	set	3857
   267  0000                     _TXB1EIDL	set	3860
   268  0000                     _TXB1EIDH	set	3859
   269  0000                     _TXB1CONbits	set	3856
   270  0000                     _TXB0D7	set	3885
   271  0000                     _TXB0D6	set	3884
   272  0000                     _TXB0D5	set	3883
   273  0000                     _TXB0D4	set	3882
   274  0000                     _TXB0D3	set	3881
   275  0000                     _TXB0D2	set	3880
   276  0000                     _TXB0D1	set	3879
   277  0000                     _TXB0D0	set	3878
   278  0000                     _TXB0DLC	set	3877
   279  0000                     _TXB0SIDL	set	3874
   280  0000                     _TXB0SIDH	set	3873
   281  0000                     _TXB0EIDL	set	3876
   282  0000                     _TXB0EIDH	set	3875
   283  0000                     _TXB0CONbits	set	3872
   284  0000                     _WPUB	set	3931
   285  0000                     _ANCON1	set	3932
   286  0000                     _ANCON0	set	3933
   287  0000                     _COMSTATbits	set	3953
   288  0000                     _RXB0D7	set	3949
   289  0000                     _RXB0D6	set	3948
   290  0000                     _RXB0D5	set	3947
   291  0000                     _RXB0D4	set	3946
   292  0000                     _RXB0D3	set	3945
   293  0000                     _RXB0D2	set	3944
   294  0000                     _RXB0D1	set	3943
   295  0000                     _RXB0D0	set	3942
   296  0000                     _RXB0DLC	set	3941
   297  0000                     _RXB0SIDH	set	3937
   298  0000                     _RXB0EIDL	set	3940
   299  0000                     _RXB0EIDH	set	3939
   300  0000                     _RXB0SIDL	set	3938
   301  0000                     _RXB0CONbits	set	3936
   302  0000                     _PIE5bits	set	3958
   303  0000                     _PIR5bits	set	3959
   304  0000                     _ECANCON	set	3954
   305  0000                     _CANSTAT	set	3950
   306  0000                     _CANCON	set	3951
   307  0000                     _REFOCON	set	3994
   308  0000                     _OSCTUNE	set	3995
   309  0000                     _OSCCON2	set	4050
   310  0000                     _OSCCON	set	4051
   311  0000                     _INTCON2bits	set	4081
   312  0000                     _TRISC	set	3988
   313  0000                     _TRISB	set	3987
   314  0000                     _TRISA	set	3986
   315  0000                     _LATC	set	3979
   316  0000                     _LATB	set	3978
   317  0000                     _LATA	set	3977
   318  0000                     _RB4	set	31756
   319                           
   320                           	psect	smallconst
   321  000F00                     __psmallconst:
   322                           	opt stack 0
   323  000F00  00                 	db	0
   324  000F01  30                 	db	48	;'0'
   325  000F02  78                 	db	120	;'x'
   326  000F03  34                 	db	52	;'4'
   327  000F04  38                 	db	56	;'8'
   328  000F05  00                 	db	0
   329  000F06                     STR_2:
   330  000F06  61                 	db	97	;'a'
   331  000F07  00                 	db	0
   332  0000                     
   333                           ; #config settings
   334  000F08  00                 	db	0	; dummy byte at the end
   335  0000                     
   336                           	psect	cinit
   337  001BD2                     __pcinit:
   338                           	opt stack 0
   339  001BD2                     start_initialization:
   340                           	opt stack 0
   341  001BD2                     __initialization:
   342                           	opt stack 0
   343  001BD2                     end_of_initialization:
   344                           	opt stack 0
   345  001BD2                     __end_of__initialization:
   346                           	opt stack 0
   347  001BD2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   348  001BD4  6EF8               	movwf	tblptru,c
   349  001BD6  0E0F               	movlw	high __Lsmallconst
   350  001BD8  6EF7               	movwf	tblptrh,c
   351  001BDA  0100               	movlb	0
   352  001BDC  EF7D  F00D         	goto	_main	;jump to C main() function
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     ??_ECAN_Initialize:
   360  000001                     ??_testmodule:
   361  000001                     ??_testmodule1:
   362  000001                     convertCANid2Reg@tempPassedInID:
   363                           	opt stack 0
   364                           
   365                           ; 4 bytes @ 0x0
   366  000001                     	ds	1
   367  000002                     
   368                           ; 1 bytes @ 0x1
   369  000002                     	ds	3
   370  000005                     convertCANid2Reg@canIdType:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x4
   374  000005                     	ds	1
   375  000006                     convertCANid2Reg@passedInEIDH:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x5
   379  000006                     	ds	2
   380  000008                     convertCANid2Reg@passedInEIDL:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x7
   384  000008                     	ds	2
   385  00000A                     convertCANid2Reg@passedInSIDH:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x9
   389  00000A                     	ds	2
   390  00000C                     convertCANid2Reg@passedInSIDL:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0xB
   394  00000C                     	ds	2
   395  00000E                     ??_convertCANid2Reg:
   396                           
   397                           ; 1 bytes @ 0xD
   398  00000E                     	ds	4
   399  000012                     convertCANid2Reg@wipSIDL:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x11
   403  000012                     	ds	1
   404  000013                     CAN_transmit@tempCanMsg:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x12
   408  000013                     	ds	2
   409  000015                     CAN_transmit@returnValue:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x14
   413  000015                     	ds	1
   414  000016                     CAN_transmit@tempEIDH:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x15
   418  000016                     	ds	1
   419  000017                     CAN_transmit@tempEIDL:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x16
   423  000017                     	ds	1
   424  000018                     CAN_transmit@tempSIDH:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x17
   428  000018                     	ds	1
   429  000019                     CAN_transmit@tempSIDL:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x18
   433  000019                     	ds	1
   434  00001A                     ??_main:
   435                           
   436                           ; 1 bytes @ 0x19
   437  00001A                     	ds	2
   438  00001C                     main@msg:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x1B
   442  00001C                     	ds	2
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 68 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  msg             2   27[COMRAM] PTR struct .
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   469 ;;Total ram usage:        4 bytes
   470 ;; Hardware stack levels required when called:    2
   471 ;; This function calls:
   472 ;;		_CAN_transmit
   473 ;;		_SYSTEM_Initialize
   474 ;;		_testmodule
   475 ;;		_testmodule1
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text0
   482  001AFA                     __ptext0:
   483                           	opt stack 0
   484  001AFA                     _main:
   485                           	opt stack 29
   486                           
   487                           ;main.c: 101: msg->frame.data7 = "a";
   488                           
   489                           ;incstack = 0
   490  001AFA  ECF0  F00D         	call	_SYSTEM_Initialize	;wreg free
   491  001AFE                     
   492                           ;main.c: 104: {
   493                           ;main.c: 105: testmodule();
   494  001AFE  ECB2  F00D         	call	_testmodule	;wreg free
   495                           
   496                           ;main.c: 107: if(CAN_transmit(&msg) == 1){
   497  001B02  0E1C               	movlw	low main@msg
   498  001B04  6E13               	movwf	CAN_transmit@tempCanMsg,c
   499  001B06  0E00               	movlw	high main@msg
   500  001B08  6E14               	movwf	CAN_transmit@tempCanMsg+1,c
   501  001B0A  EC85  F007         	call	_CAN_transmit	;wreg free
   502  001B0E  06E8               	decf	wreg,f,c
   503  001B10  B4D8               	btfsc	status,2,c
   504                           
   505                           ;main.c: 108: testmodule1();
   506  001B12  EC99  F00D         	call	_testmodule1	;wreg free
   507                           
   508                           ;main.c: 109: }
   509                           ;main.c: 110: RB4 = 0;
   510  001B16  9881               	bcf	3969,4,c	;volatile
   511                           
   512                           ;main.c: 111: _delay((unsigned long)((10000)*(8000000/4000.0)));
   513  001B18  0E66               	movlw	102
   514  001B1A  6E1B               	movwf	(??_main+1)& (0+255),c
   515  001B1C  0E76               	movlw	118
   516  001B1E  6E1A               	movwf	??_main& (0+255),c
   517  001B20  0EC1               	movlw	193
   518  001B22                     u417:
   519  001B22  2EE8               	decfsz	wreg,f,c
   520  001B24  D7FE               	bra	u417
   521  001B26  2E1A               	decfsz	??_main& (0+255),f,c
   522  001B28  D7FC               	bra	u417
   523  001B2A  2E1B               	decfsz	(??_main+1)& (0+255),f,c
   524  001B2C  D7FA               	bra	u417
   525  001B2E  F000               	nop	
   526  001B30  D7E6               	goto	l65
   527  001B32                     __end_of_main:
   528                           	opt stack 0
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           wreg	equ	0xFE8
   532                           status	equ	0xFD8
   533                           
   534 ;; *************** function _testmodule1 *****************
   535 ;; Defined at:
   536 ;;		line 59 in file "main.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   554 ;;Total ram usage:        2 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text1
   564  001B32                     __ptext1:
   565                           	opt stack 0
   566  001B32                     _testmodule1:
   567                           	opt stack 30
   568                           
   569                           ;main.c: 60: RB4 = 1;
   570                           
   571                           ;incstack = 0
   572  001B32  8881               	bsf	3969,4,c	;volatile
   573                           
   574                           ;main.c: 61: _delay((unsigned long)((5000)*(8000000/4000.0)));
   575  001B34  0E33               	movlw	51
   576  001B36  6E02               	movwf	(??_testmodule1+1)& (0+255),c
   577  001B38  0EBB               	movlw	187
   578  001B3A  6E01               	movwf	??_testmodule1& (0+255),c
   579  001B3C  0EE0               	movlw	224
   580  001B3E                     u427:
   581  001B3E  2EE8               	decfsz	wreg,f,c
   582  001B40  D7FE               	bra	u427
   583  001B42  2E01               	decfsz	??_testmodule1& (0+255),f,c
   584  001B44  D7FC               	bra	u427
   585  001B46  2E02               	decfsz	(??_testmodule1+1)& (0+255),f,c
   586  001B48  D7FA               	bra	u427
   587                           
   588                           ;main.c: 62: RB4 = 0;
   589  001B4A  9881               	bcf	3969,4,c	;volatile
   590                           
   591                           ;main.c: 63: _delay((unsigned long)((5000)*(8000000/4000.0)));
   592  001B4C  0E33               	movlw	51
   593  001B4E  6E02               	movwf	(??_testmodule1+1)& (0+255),c
   594  001B50  0EBB               	movlw	187
   595  001B52  6E01               	movwf	??_testmodule1& (0+255),c
   596  001B54  0EE0               	movlw	224
   597  001B56                     u437:
   598  001B56  2EE8               	decfsz	wreg,f,c
   599  001B58  D7FE               	bra	u437
   600  001B5A  2E01               	decfsz	??_testmodule1& (0+255),f,c
   601  001B5C  D7FC               	bra	u437
   602  001B5E  2E02               	decfsz	(??_testmodule1+1)& (0+255),f,c
   603  001B60  D7FA               	bra	u437
   604  001B62  0012               	return		;funcret
   605  001B64                     __end_of_testmodule1:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           wreg	equ	0xFE8
   610                           status	equ	0xFD8
   611                           
   612 ;; *************** function _testmodule *****************
   613 ;; Defined at:
   614 ;;		line 50 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text2
   642  001B64                     __ptext2:
   643                           	opt stack 0
   644  001B64                     _testmodule:
   645                           	opt stack 30
   646                           
   647                           ;main.c: 51: RB4 = 1;
   648                           
   649                           ;incstack = 0
   650  001B64  8881               	bsf	3969,4,c	;volatile
   651                           
   652                           ;main.c: 52: _delay((unsigned long)((1000)*(8000000/4000.0)));
   653  001B66  0E0B               	movlw	11
   654  001B68  6E02               	movwf	(??_testmodule+1)& (0+255),c
   655  001B6A  0E26               	movlw	38
   656  001B6C  6E01               	movwf	??_testmodule& (0+255),c
   657  001B6E  0E5E               	movlw	94
   658  001B70                     u447:
   659  001B70  2EE8               	decfsz	wreg,f,c
   660  001B72  D7FE               	bra	u447
   661  001B74  2E01               	decfsz	??_testmodule& (0+255),f,c
   662  001B76  D7FC               	bra	u447
   663  001B78  2E02               	decfsz	(??_testmodule+1)& (0+255),f,c
   664  001B7A  D7FA               	bra	u447
   665                           
   666                           ;main.c: 53: RB4 = 0;
   667  001B7C  9881               	bcf	3969,4,c	;volatile
   668                           
   669                           ;main.c: 54: _delay((unsigned long)((1000)*(8000000/4000.0)));
   670  001B7E  0E0B               	movlw	11
   671  001B80  6E02               	movwf	(??_testmodule+1)& (0+255),c
   672  001B82  0E26               	movlw	38
   673  001B84  6E01               	movwf	??_testmodule& (0+255),c
   674  001B86  0E5E               	movlw	94
   675  001B88                     u457:
   676  001B88  2EE8               	decfsz	wreg,f,c
   677  001B8A  D7FE               	bra	u457
   678  001B8C  2E01               	decfsz	??_testmodule& (0+255),f,c
   679  001B8E  D7FC               	bra	u457
   680  001B90  2E02               	decfsz	(??_testmodule+1)& (0+255),f,c
   681  001B92  D7FA               	bra	u457
   682  001B94  0012               	return		;funcret
   683  001B96                     __end_of_testmodule:
   684                           	opt stack 0
   685                           tblptru	equ	0xFF8
   686                           tblptrh	equ	0xFF7
   687                           wreg	equ	0xFE8
   688                           status	equ	0xFD8
   689                           
   690 ;; *************** function _SYSTEM_Initialize *****************
   691 ;; Defined at:
   692 ;;		line 112 in file "mcc_generated_files/mcc.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    1
   713 ;; This function calls:
   714 ;;		_ECAN_Initialize
   715 ;;		_OSCILLATOR_Initialize
   716 ;;		_PIN_MANAGER_Initialize
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723  001BE0                     __ptext3:
   724                           	opt stack 0
   725  001BE0                     _SYSTEM_Initialize:
   726                           	opt stack 29
   727                           
   728                           ;mcc.c: 114: PIN_MANAGER_Initialize();
   729                           
   730                           ;incstack = 0
   731  001BE0  ECCB  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
   732                           
   733                           ;mcc.c: 115: OSCILLATOR_Initialize();
   734  001BE4  ECE0  F00D         	call	_OSCILLATOR_Initialize	;wreg free
   735                           
   736                           ;mcc.c: 116: ECAN_Initialize();
   737  001BE8  ECB6  F00C         	call	_ECAN_Initialize	;wreg free
   738  001BEC  0012               	return		;funcret
   739  001BEE                     __end_of_SYSTEM_Initialize:
   740                           	opt stack 0
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           wreg	equ	0xFE8
   744                           status	equ	0xFD8
   745                           
   746 ;; *************** function _PIN_MANAGER_Initialize *****************
   747 ;; Defined at:
   748 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_SYSTEM_Initialize
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text4
   776  001B96                     __ptext4:
   777                           	opt stack 0
   778  001B96                     _PIN_MANAGER_Initialize:
   779                           	opt stack 29
   780                           
   781                           ;pin_manager.c: 57: LATA = 0x00;
   782                           
   783                           ;incstack = 0
   784  001B96  0E00               	movlw	0
   785  001B98  6E89               	movwf	3977,c	;volatile
   786                           
   787                           ;pin_manager.c: 58: LATB = 0x00;
   788  001B9A  0E00               	movlw	0
   789  001B9C  6E8A               	movwf	3978,c	;volatile
   790                           
   791                           ;pin_manager.c: 59: LATC = 0x00;
   792  001B9E  0E00               	movlw	0
   793  001BA0  6E8B               	movwf	3979,c	;volatile
   794                           
   795                           ;pin_manager.c: 64: TRISA = 0xEF;
   796  001BA2  0EEF               	movlw	239
   797  001BA4  6E92               	movwf	3986,c	;volatile
   798                           
   799                           ;pin_manager.c: 65: TRISB = 0xEF;
   800  001BA6  0EEF               	movlw	239
   801  001BA8  6E93               	movwf	3987,c	;volatile
   802                           
   803                           ;pin_manager.c: 66: TRISC = 0xBF;
   804  001BAA  0EBF               	movlw	191
   805  001BAC  6E94               	movwf	3988,c	;volatile
   806                           
   807                           ;pin_manager.c: 71: ANCON0 = 0x1F;
   808  001BAE  0E1F               	movlw	31
   809  001BB0  010F               	movlb	15	; () banked
   810  001BB2  6F5D               	movwf	93,b	;volatile
   811                           
   812                           ;pin_manager.c: 72: ANCON1 = 0x05;
   813  001BB4  0E05               	movlw	5
   814  001BB6  6F5C               	movwf	92,b	;volatile
   815                           
   816                           ;pin_manager.c: 77: WPUB = 0x00;
   817  001BB8  0E00               	movlw	0
   818  001BBA  6F5B               	movwf	91,b	;volatile
   819                           
   820                           ; BSR set to: 15
   821                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 1;
   822  001BBC  8EF1               	bsf	intcon2,7,c	;volatile
   823                           
   824                           ; BSR set to: 15
   825  001BBE  0012               	return		;funcret
   826  001BC0                     __end_of_PIN_MANAGER_Initialize:
   827                           	opt stack 0
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           intcon2	equ	0xFF1
   831                           wreg	equ	0xFE8
   832                           status	equ	0xFD8
   833                           
   834 ;; *************** function _OSCILLATOR_Initialize *****************
   835 ;; Defined at:
   836 ;;		line 119 in file "mcc_generated_files/mcc.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_SYSTEM_Initialize
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text5
   864  001BC0                     __ptext5:
   865                           	opt stack 0
   866  001BC0                     _OSCILLATOR_Initialize:
   867                           	opt stack 29
   868                           
   869                           ;mcc.c: 122: OSCCON = 0x60;
   870                           
   871                           ; BSR set to: 15
   872                           ;incstack = 0
   873  001BC0  0E60               	movlw	96
   874  001BC2  6ED3               	movwf	4051,c	;volatile
   875                           
   876                           ;mcc.c: 124: OSCCON2 = 0x00;
   877  001BC4  0E00               	movlw	0
   878  001BC6  6ED2               	movwf	4050,c	;volatile
   879                           
   880                           ;mcc.c: 126: OSCTUNE = 0x00;
   881  001BC8  0E00               	movlw	0
   882  001BCA  6E9B               	movwf	3995,c	;volatile
   883                           
   884                           ;mcc.c: 128: REFOCON = 0x00;
   885  001BCC  0E00               	movlw	0
   886  001BCE  6E9A               	movwf	3994,c	;volatile
   887  001BD0  0012               	return		;funcret
   888  001BD2                     __end_of_OSCILLATOR_Initialize:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           intcon2	equ	0xFF1
   893                           wreg	equ	0xFE8
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _ECAN_Initialize *****************
   897 ;; Defined at:
   898 ;;		line 58 in file "mcc_generated_files/ecan.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   916 ;;Total ram usage:        1 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_SYSTEM_Initialize
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text6
   926  00196C                     __ptext6:
   927                           	opt stack 0
   928  00196C                     _ECAN_Initialize:
   929                           	opt stack 29
   930                           
   931                           ;ecan.c: 60: CANCON = 0x80;
   932                           
   933                           ;incstack = 0
   934  00196C  0E80               	movlw	128
   935  00196E  6E6F               	movwf	3951,c	;volatile
   936  001970  506E               	movf	3950,w,c	;volatile
   937  001972  0BE0               	andlw	224
   938  001974  0A80               	xorlw	128
   939  001976  A4D8               	btfss	status,2,c
   940  001978  D7FB               	goto	l579
   941                           
   942                           ;ecan.c: 66: ECANCON = 0x40;
   943  00197A  0E40               	movlw	64
   944  00197C  6E72               	movwf	3954,c	;volatile
   945                           
   946                           ;ecan.c: 77: BSEL0 = 0x00;
   947  00197E  0E00               	movlw	0
   948  001980  010E               	movlb	14	; () banked
   949  001982  6F7D               	movwf	125,b	;volatile
   950                           
   951                           ;ecan.c: 82: RXM0EIDH = 0x00;
   952  001984  0E00               	movlw	0
   953  001986  6FFA               	movwf	250,b	;volatile
   954                           
   955                           ;ecan.c: 83: RXM0EIDL = 0x00;
   956  001988  0E00               	movlw	0
   957  00198A  6FFB               	movwf	251,b	;volatile
   958                           
   959                           ;ecan.c: 84: RXM0SIDH = 0x00;
   960  00198C  0E00               	movlw	0
   961  00198E  6FF8               	movwf	248,b	;volatile
   962                           
   963                           ;ecan.c: 85: RXM0SIDL = 0x00;
   964  001990  0E00               	movlw	0
   965  001992  6FF9               	movwf	249,b	;volatile
   966                           
   967                           ;ecan.c: 86: RXM1EIDH = 0x00;
   968  001994  0E00               	movlw	0
   969  001996  6FFE               	movwf	254,b	;volatile
   970                           
   971                           ;ecan.c: 87: RXM1EIDL = 0x00;
   972  001998  0E00               	movlw	0
   973  00199A  6FFF               	movwf	255,b	;volatile
   974                           
   975                           ;ecan.c: 88: RXM1SIDH = 0x00;
   976  00199C  0E00               	movlw	0
   977  00199E  6FFC               	movwf	252,b	;volatile
   978                           
   979                           ;ecan.c: 89: RXM1SIDL = 0x00;
   980  0019A0  0E00               	movlw	0
   981  0019A2  6FFD               	movwf	253,b	;volatile
   982                           
   983                           ;ecan.c: 94: RXFCON0 = 0x00;
   984  0019A4  0E00               	movlw	0
   985  0019A6  6F46               	movwf	70,b	;volatile
   986                           
   987                           ;ecan.c: 95: RXFCON1 = 0x00;
   988  0019A8  0E00               	movlw	0
   989  0019AA  6F47               	movwf	71,b	;volatile
   990                           
   991                           ;ecan.c: 99: MSEL0 = 0x00;
   992  0019AC  0E00               	movlw	0
   993  0019AE  6F79               	movwf	121,b	;volatile
   994                           
   995                           ;ecan.c: 100: MSEL1 = 0x00;
   996  0019B0  0E00               	movlw	0
   997  0019B2  6F7A               	movwf	122,b	;volatile
   998                           
   999                           ;ecan.c: 101: MSEL2 = 0x00;
  1000  0019B4  0E00               	movlw	0
  1001  0019B6  6F7B               	movwf	123,b	;volatile
  1002                           
  1003                           ;ecan.c: 102: MSEL3 = 0x00;
  1004  0019B8  0E00               	movlw	0
  1005  0019BA  6F7C               	movwf	124,b	;volatile
  1006                           
  1007                           ;ecan.c: 107: RXFBCON0 = 0x00;
  1008  0019BC  0E00               	movlw	0
  1009  0019BE  6F71               	movwf	113,b	;volatile
  1010                           
  1011                           ;ecan.c: 108: RXFBCON1 = 0x00;
  1012  0019C0  0E00               	movlw	0
  1013  0019C2  6F72               	movwf	114,b	;volatile
  1014                           
  1015                           ;ecan.c: 109: RXFBCON2 = 0x00;
  1016  0019C4  0E00               	movlw	0
  1017  0019C6  6F73               	movwf	115,b	;volatile
  1018                           
  1019                           ;ecan.c: 110: RXFBCON3 = 0x00;
  1020  0019C8  0E00               	movlw	0
  1021  0019CA  6F74               	movwf	116,b	;volatile
  1022                           
  1023                           ;ecan.c: 111: RXFBCON4 = 0x00;
  1024  0019CC  0E00               	movlw	0
  1025  0019CE  6F75               	movwf	117,b	;volatile
  1026                           
  1027                           ;ecan.c: 112: RXFBCON5 = 0x00;
  1028  0019D0  0E00               	movlw	0
  1029  0019D2  6F76               	movwf	118,b	;volatile
  1030                           
  1031                           ;ecan.c: 113: RXFBCON6 = 0x00;
  1032  0019D4  0E00               	movlw	0
  1033  0019D6  6F77               	movwf	119,b	;volatile
  1034                           
  1035                           ;ecan.c: 114: RXFBCON7 = 0x00;
  1036  0019D8  0E00               	movlw	0
  1037  0019DA  6F78               	movwf	120,b	;volatile
  1038                           
  1039                           ;ecan.c: 119: RXF0EIDH = 0x00;
  1040  0019DC  0E00               	movlw	0
  1041  0019DE  6FE2               	movwf	226,b	;volatile
  1042                           
  1043                           ;ecan.c: 120: RXF0EIDL = 0x00;
  1044  0019E0  0E00               	movlw	0
  1045  0019E2  6FE3               	movwf	227,b	;volatile
  1046                           
  1047                           ;ecan.c: 121: RXF0SIDH = 0x00;
  1048  0019E4  0E00               	movlw	0
  1049  0019E6  6FE0               	movwf	224,b	;volatile
  1050                           
  1051                           ;ecan.c: 122: RXF0SIDL = 0x00;
  1052  0019E8  0E00               	movlw	0
  1053  0019EA  6FE1               	movwf	225,b	;volatile
  1054                           
  1055                           ;ecan.c: 123: RXF1EIDH = 0x00;
  1056  0019EC  0E00               	movlw	0
  1057  0019EE  6FE6               	movwf	230,b	;volatile
  1058                           
  1059                           ;ecan.c: 124: RXF1EIDL = 0x00;
  1060  0019F0  0E00               	movlw	0
  1061  0019F2  6FE7               	movwf	231,b	;volatile
  1062                           
  1063                           ;ecan.c: 125: RXF1SIDH = 0x00;
  1064  0019F4  0E00               	movlw	0
  1065  0019F6  6FE4               	movwf	228,b	;volatile
  1066                           
  1067                           ;ecan.c: 126: RXF1SIDL = 0x00;
  1068  0019F8  0E00               	movlw	0
  1069  0019FA  6FE5               	movwf	229,b	;volatile
  1070                           
  1071                           ;ecan.c: 127: RXF2EIDH = 0x00;
  1072  0019FC  0E00               	movlw	0
  1073  0019FE  6FEA               	movwf	234,b	;volatile
  1074                           
  1075                           ;ecan.c: 128: RXF2EIDL = 0x00;
  1076  001A00  0E00               	movlw	0
  1077  001A02  6FEB               	movwf	235,b	;volatile
  1078                           
  1079                           ;ecan.c: 129: RXF2SIDH = 0x00;
  1080  001A04  0E00               	movlw	0
  1081  001A06  6FE8               	movwf	232,b	;volatile
  1082                           
  1083                           ;ecan.c: 130: RXF2SIDL = 0x00;
  1084  001A08  0E00               	movlw	0
  1085  001A0A  6FE9               	movwf	233,b	;volatile
  1086                           
  1087                           ;ecan.c: 131: RXF3EIDH = 0x00;
  1088  001A0C  0E00               	movlw	0
  1089  001A0E  6FEE               	movwf	238,b	;volatile
  1090                           
  1091                           ;ecan.c: 132: RXF3EIDL = 0x00;
  1092  001A10  0E00               	movlw	0
  1093  001A12  6FEF               	movwf	239,b	;volatile
  1094                           
  1095                           ;ecan.c: 133: RXF3SIDH = 0x00;
  1096  001A14  0E00               	movlw	0
  1097  001A16  6FEC               	movwf	236,b	;volatile
  1098                           
  1099                           ;ecan.c: 134: RXF3SIDL = 0x00;
  1100  001A18  0E00               	movlw	0
  1101  001A1A  6FED               	movwf	237,b	;volatile
  1102                           
  1103                           ;ecan.c: 135: RXF4EIDH = 0x00;
  1104  001A1C  0E00               	movlw	0
  1105  001A1E  6FF2               	movwf	242,b	;volatile
  1106                           
  1107                           ;ecan.c: 136: RXF4EIDL = 0x00;
  1108  001A20  0E00               	movlw	0
  1109  001A22  6FF3               	movwf	243,b	;volatile
  1110                           
  1111                           ;ecan.c: 137: RXF4SIDH = 0x00;
  1112  001A24  0E00               	movlw	0
  1113  001A26  6FF0               	movwf	240,b	;volatile
  1114                           
  1115                           ;ecan.c: 138: RXF4SIDL = 0x00;
  1116  001A28  0E00               	movlw	0
  1117  001A2A  6FF1               	movwf	241,b	;volatile
  1118                           
  1119                           ;ecan.c: 139: RXF5EIDH = 0x00;
  1120  001A2C  0E00               	movlw	0
  1121  001A2E  6FF6               	movwf	246,b	;volatile
  1122                           
  1123                           ;ecan.c: 140: RXF5EIDL = 0x00;
  1124  001A30  0E00               	movlw	0
  1125  001A32  6FF7               	movwf	247,b	;volatile
  1126                           
  1127                           ;ecan.c: 141: RXF5SIDH = 0x00;
  1128  001A34  0E00               	movlw	0
  1129  001A36  6FF4               	movwf	244,b	;volatile
  1130                           
  1131                           ;ecan.c: 142: RXF5SIDL = 0x00;
  1132  001A38  0E00               	movlw	0
  1133  001A3A  6FF5               	movwf	245,b	;volatile
  1134                           
  1135                           ;ecan.c: 144: RXF6EIDH = 0x00;
  1136  001A3C  0E00               	movlw	0
  1137  001A3E  6F4A               	movwf	74,b	;volatile
  1138                           
  1139                           ;ecan.c: 145: RXF6EIDL = 0x00;
  1140  001A40  0E00               	movlw	0
  1141  001A42  6F4B               	movwf	75,b	;volatile
  1142                           
  1143                           ;ecan.c: 146: RXF6SIDH = 0x00;
  1144  001A44  0E00               	movlw	0
  1145  001A46  6F48               	movwf	72,b	;volatile
  1146                           
  1147                           ;ecan.c: 147: RXF6SIDL = 0x00;
  1148  001A48  0E00               	movlw	0
  1149  001A4A  6F49               	movwf	73,b	;volatile
  1150                           
  1151                           ;ecan.c: 148: RXF7EIDH = 0x00;
  1152  001A4C  0E00               	movlw	0
  1153  001A4E  6F4E               	movwf	78,b	;volatile
  1154                           
  1155                           ;ecan.c: 149: RXF7EIDL = 0x00;
  1156  001A50  0E00               	movlw	0
  1157  001A52  6F4F               	movwf	79,b	;volatile
  1158                           
  1159                           ;ecan.c: 150: RXF7SIDH = 0x00;
  1160  001A54  0E00               	movlw	0
  1161  001A56  6F4C               	movwf	76,b	;volatile
  1162                           
  1163                           ;ecan.c: 151: RXF7SIDL = 0x00;
  1164  001A58  0E00               	movlw	0
  1165  001A5A  6F4D               	movwf	77,b	;volatile
  1166                           
  1167                           ;ecan.c: 152: RXF8EIDH = 0x00;
  1168  001A5C  0E00               	movlw	0
  1169  001A5E  6F52               	movwf	82,b	;volatile
  1170                           
  1171                           ;ecan.c: 153: RXF8EIDL = 0x00;
  1172  001A60  0E00               	movlw	0
  1173  001A62  6F53               	movwf	83,b	;volatile
  1174                           
  1175                           ;ecan.c: 154: RXF8SIDH = 0x00;
  1176  001A64  0E00               	movlw	0
  1177  001A66  6F50               	movwf	80,b	;volatile
  1178                           
  1179                           ;ecan.c: 155: RXF8SIDL = 0x00;
  1180  001A68  0E00               	movlw	0
  1181  001A6A  6F51               	movwf	81,b	;volatile
  1182                           
  1183                           ;ecan.c: 156: RXF9EIDH = 0x00;
  1184  001A6C  0E00               	movlw	0
  1185  001A6E  6F56               	movwf	86,b	;volatile
  1186                           
  1187                           ;ecan.c: 157: RXF9EIDL = 0x00;
  1188  001A70  0E00               	movlw	0
  1189  001A72  6F57               	movwf	87,b	;volatile
  1190                           
  1191                           ;ecan.c: 158: RXF9SIDH = 0x00;
  1192  001A74  0E00               	movlw	0
  1193  001A76  6F54               	movwf	84,b	;volatile
  1194                           
  1195                           ;ecan.c: 159: RXF9SIDL = 0x00;
  1196  001A78  0E00               	movlw	0
  1197  001A7A  6F55               	movwf	85,b	;volatile
  1198                           
  1199                           ;ecan.c: 160: RXF10EIDH = 0x00;
  1200  001A7C  0E00               	movlw	0
  1201  001A7E  6F5A               	movwf	90,b	;volatile
  1202                           
  1203                           ;ecan.c: 161: RXF10EIDL = 0x00;
  1204  001A80  0E00               	movlw	0
  1205  001A82  6F5B               	movwf	91,b	;volatile
  1206                           
  1207                           ;ecan.c: 162: RXF10SIDH = 0x00;
  1208  001A84  0E00               	movlw	0
  1209  001A86  6F58               	movwf	88,b	;volatile
  1210                           
  1211                           ;ecan.c: 163: RXF10SIDL = 0x00;
  1212  001A88  0E00               	movlw	0
  1213  001A8A  6F59               	movwf	89,b	;volatile
  1214                           
  1215                           ;ecan.c: 164: RXF11EIDH = 0x00;
  1216  001A8C  0E00               	movlw	0
  1217  001A8E  6F5E               	movwf	94,b	;volatile
  1218                           
  1219                           ;ecan.c: 165: RXF11EIDL = 0x00;
  1220  001A90  0E00               	movlw	0
  1221  001A92  6F5F               	movwf	95,b	;volatile
  1222                           
  1223                           ;ecan.c: 166: RXF11SIDH = 0x00;
  1224  001A94  0E00               	movlw	0
  1225  001A96  6F5C               	movwf	92,b	;volatile
  1226                           
  1227                           ;ecan.c: 167: RXF11SIDL = 0x00;
  1228  001A98  0E00               	movlw	0
  1229  001A9A  6F5D               	movwf	93,b	;volatile
  1230                           
  1231                           ;ecan.c: 168: RXF12EIDH = 0x00;
  1232  001A9C  0E00               	movlw	0
  1233  001A9E  6F62               	movwf	98,b	;volatile
  1234                           
  1235                           ;ecan.c: 169: RXF12EIDL = 0x00;
  1236  001AA0  0E00               	movlw	0
  1237  001AA2  6F63               	movwf	99,b	;volatile
  1238                           
  1239                           ;ecan.c: 170: RXF12SIDH = 0x00;
  1240  001AA4  0E00               	movlw	0
  1241  001AA6  6F60               	movwf	96,b	;volatile
  1242                           
  1243                           ;ecan.c: 171: RXF12SIDL = 0x00;
  1244  001AA8  0E00               	movlw	0
  1245  001AAA  6F61               	movwf	97,b	;volatile
  1246                           
  1247                           ;ecan.c: 172: RXF13EIDH = 0x00;
  1248  001AAC  0E00               	movlw	0
  1249  001AAE  6F66               	movwf	102,b	;volatile
  1250                           
  1251                           ;ecan.c: 173: RXF13EIDL = 0x00;
  1252  001AB0  0E00               	movlw	0
  1253  001AB2  6F67               	movwf	103,b	;volatile
  1254                           
  1255                           ;ecan.c: 174: RXF13SIDH = 0x00;
  1256  001AB4  0E00               	movlw	0
  1257  001AB6  6F64               	movwf	100,b	;volatile
  1258                           
  1259                           ;ecan.c: 175: RXF13SIDL = 0x00;
  1260  001AB8  0E00               	movlw	0
  1261  001ABA  6F65               	movwf	101,b	;volatile
  1262                           
  1263                           ;ecan.c: 176: RXF14EIDH = 0x00;
  1264  001ABC  0E00               	movlw	0
  1265  001ABE  6F6A               	movwf	106,b	;volatile
  1266                           
  1267                           ;ecan.c: 177: RXF14EIDL = 0x00;
  1268  001AC0  0E00               	movlw	0
  1269  001AC2  6F6B               	movwf	107,b	;volatile
  1270                           
  1271                           ;ecan.c: 178: RXF14SIDH = 0x00;
  1272  001AC4  0E00               	movlw	0
  1273  001AC6  6F68               	movwf	104,b	;volatile
  1274                           
  1275                           ;ecan.c: 179: RXF14SIDL = 0x00;
  1276  001AC8  0E00               	movlw	0
  1277  001ACA  6F69               	movwf	105,b	;volatile
  1278                           
  1279                           ;ecan.c: 180: RXF15EIDH = 0x00;
  1280  001ACC  0E00               	movlw	0
  1281  001ACE  6F6E               	movwf	110,b	;volatile
  1282                           
  1283                           ;ecan.c: 181: RXF15EIDL = 0x00;
  1284  001AD0  0E00               	movlw	0
  1285  001AD2  6F6F               	movwf	111,b	;volatile
  1286                           
  1287                           ;ecan.c: 182: RXF15SIDH = 0x00;
  1288  001AD4  0E00               	movlw	0
  1289  001AD6  6F6C               	movwf	108,b	;volatile
  1290                           
  1291                           ;ecan.c: 183: RXF15SIDL = 0x00;
  1292  001AD8  0E00               	movlw	0
  1293  001ADA  6F6D               	movwf	109,b	;volatile
  1294                           
  1295                           ;ecan.c: 197: BRGCON1 = 0x18;
  1296  001ADC  0E18               	movlw	24
  1297  001ADE  6F43               	movwf	67,b	;volatile
  1298                           
  1299                           ;ecan.c: 198: BRGCON2 = 0x98;
  1300  001AE0  0E98               	movlw	152
  1301  001AE2  6F44               	movwf	68,b	;volatile
  1302                           
  1303                           ;ecan.c: 199: BRGCON3 = 0x01;
  1304  001AE4  0E01               	movlw	1
  1305  001AE6  6F45               	movwf	69,b	;volatile
  1306                           
  1307                           ;ecan.c: 201: CANCON = 0x00;
  1308  001AE8  0E00               	movlw	0
  1309  001AEA  6E6F               	movwf	3951,c	;volatile
  1310  001AEC                     
  1311                           ; BSR set to: 14
  1312                           
  1313                           ; BSR set to: 14
  1314  001AEC  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  1315  001AF0  0EE0               	movlw	224
  1316  001AF2  1601               	andwf	??_ECAN_Initialize,f,c
  1317  001AF4  B4D8               	btfsc	status,2,c
  1318  001AF6  0012               	return	
  1319  001AF8  D7F9               	goto	l582
  1320  001AFA                     __end_of_ECAN_Initialize:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           intcon2	equ	0xFF1
  1325                           wreg	equ	0xFE8
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _CAN_transmit *****************
  1329 ;; Defined at:
  1330 ;;		line 219 in file "mcc_generated_files/ecan.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  tempCanMsg      2   18[COMRAM] PTR struct .
  1333 ;;		 -> main@msg(2), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  tempSIDL        1   24[COMRAM] unsigned char 
  1336 ;;  tempSIDH        1   23[COMRAM] unsigned char 
  1337 ;;  tempEIDL        1   22[COMRAM] unsigned char 
  1338 ;;  tempEIDH        1   21[COMRAM] unsigned char 
  1339 ;;  returnValue     1   20[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      unsigned char 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1350 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;Total ram usage:        7 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    1
  1356 ;; This function calls:
  1357 ;;		_convertCANid2Reg
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text7
  1364  000F0A                     __ptext7:
  1365                           	opt stack 0
  1366  000F0A                     _CAN_transmit:
  1367                           	opt stack 29
  1368                           
  1369                           ;ecan.c: 221: unsigned char tempEIDH = 0;
  1370                           
  1371                           ;incstack = 0
  1372  000F0A  0E00               	movlw	0
  1373  000F0C  6E16               	movwf	CAN_transmit@tempEIDH,c
  1374                           
  1375                           ;ecan.c: 222: unsigned char tempEIDL = 0;
  1376  000F0E  0E00               	movlw	0
  1377  000F10  6E17               	movwf	CAN_transmit@tempEIDL,c
  1378                           
  1379                           ;ecan.c: 223: unsigned char tempSIDH = 0;
  1380  000F12  0E00               	movlw	0
  1381  000F14  6E18               	movwf	CAN_transmit@tempSIDH,c
  1382                           
  1383                           ;ecan.c: 224: unsigned char tempSIDL = 0;
  1384  000F16  0E00               	movlw	0
  1385  000F18  6E19               	movwf	CAN_transmit@tempSIDL,c
  1386                           
  1387                           ;ecan.c: 225: unsigned char returnValue = 0;
  1388  000F1A  0E00               	movlw	0
  1389  000F1C  6E15               	movwf	CAN_transmit@returnValue,c
  1390                           
  1391                           ;ecan.c: 227: if (TXB0CONbits.TXREQ != 1)
  1392  000F1E  010F               	movlb	15	; () banked
  1393  000F20  B720               	btfsc	32,3,b	;volatile
  1394  000F22  D079               	goto	l593
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;ecan.c: 228: {
  1398                           ;ecan.c: 229: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1399  000F24  EE20 F001          	lfsr	2,1
  1400  000F28  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1401  000F2A  26D9               	addwf	fsr2l,f,c
  1402  000F2C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1403  000F2E  22DA               	addwfc	fsr2h,f,c
  1404  000F30  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1405  000F34  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1406  000F38  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1407  000F3C  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1408  000F40  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1409  000F44  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1410  000F48  50DF               	movf	indf2,w,c
  1411  000F4A  6E05               	movwf	convertCANid2Reg@canIdType,c
  1412  000F4C  0E16               	movlw	low CAN_transmit@tempEIDH
  1413  000F4E  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1414  000F50  0E00               	movlw	high CAN_transmit@tempEIDH
  1415  000F52  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1416  000F54  0E17               	movlw	low CAN_transmit@tempEIDL
  1417  000F56  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1418  000F58  0E00               	movlw	high CAN_transmit@tempEIDL
  1419  000F5A  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1420  000F5C  0E18               	movlw	low CAN_transmit@tempSIDH
  1421  000F5E  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1422  000F60  0E00               	movlw	high CAN_transmit@tempSIDH
  1423  000F62  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1424  000F64  0E19               	movlw	low CAN_transmit@tempSIDL
  1425  000F66  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1426  000F68  0E00               	movlw	high CAN_transmit@tempSIDL
  1427  000F6A  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1428  000F6C  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  1429                           
  1430                           ;ecan.c: 231: TXB0EIDH = tempEIDH;
  1431  000F70  C016  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  1432                           
  1433                           ;ecan.c: 232: TXB0EIDL = tempEIDL;
  1434  000F74  C017  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  1435                           
  1436                           ;ecan.c: 233: TXB0SIDH = tempSIDH;
  1437  000F78  C018  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  1438                           
  1439                           ;ecan.c: 234: TXB0SIDL = tempSIDL;
  1440  000F7C  C019  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  1441                           
  1442                           ;ecan.c: 235: TXB0DLC = tempCanMsg->frame.dlc;
  1443  000F80  EE20 F005          	lfsr	2,5
  1444  000F84  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1445  000F86  26D9               	addwf	fsr2l,f,c
  1446  000F88  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1447  000F8A  22DA               	addwfc	fsr2h,f,c
  1448  000F8C  50DF               	movf	indf2,w,c
  1449  000F8E  010F               	movlb	15	; () banked
  1450  000F90  6F25               	movwf	37,b	;volatile
  1451                           
  1452                           ; BSR set to: 15
  1453                           ;ecan.c: 236: TXB0D0 = tempCanMsg->frame.data0;
  1454  000F92  EE20 F006          	lfsr	2,6
  1455  000F96  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1456  000F98  26D9               	addwf	fsr2l,f,c
  1457  000F9A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1458  000F9C  22DA               	addwfc	fsr2h,f,c
  1459  000F9E  50DF               	movf	indf2,w,c
  1460  000FA0  6F26               	movwf	38,b	;volatile
  1461                           
  1462                           ; BSR set to: 15
  1463                           ;ecan.c: 237: TXB0D1 = tempCanMsg->frame.data1;
  1464  000FA2  EE20 F007          	lfsr	2,7
  1465  000FA6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1466  000FA8  26D9               	addwf	fsr2l,f,c
  1467  000FAA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1468  000FAC  22DA               	addwfc	fsr2h,f,c
  1469  000FAE  50DF               	movf	indf2,w,c
  1470  000FB0  6F27               	movwf	39,b	;volatile
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;ecan.c: 238: TXB0D2 = tempCanMsg->frame.data2;
  1474  000FB2  EE20 F008          	lfsr	2,8
  1475  000FB6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1476  000FB8  26D9               	addwf	fsr2l,f,c
  1477  000FBA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1478  000FBC  22DA               	addwfc	fsr2h,f,c
  1479  000FBE  50DF               	movf	indf2,w,c
  1480  000FC0  6F28               	movwf	40,b	;volatile
  1481                           
  1482                           ; BSR set to: 15
  1483                           ;ecan.c: 239: TXB0D3 = tempCanMsg->frame.data3;
  1484  000FC2  EE20 F009          	lfsr	2,9
  1485  000FC6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1486  000FC8  26D9               	addwf	fsr2l,f,c
  1487  000FCA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1488  000FCC  22DA               	addwfc	fsr2h,f,c
  1489  000FCE  50DF               	movf	indf2,w,c
  1490  000FD0  6F29               	movwf	41,b	;volatile
  1491                           
  1492                           ; BSR set to: 15
  1493                           ;ecan.c: 240: TXB0D4 = tempCanMsg->frame.data4;
  1494  000FD2  EE20 F00A          	lfsr	2,10
  1495  000FD6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1496  000FD8  26D9               	addwf	fsr2l,f,c
  1497  000FDA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1498  000FDC  22DA               	addwfc	fsr2h,f,c
  1499  000FDE  50DF               	movf	indf2,w,c
  1500  000FE0  6F2A               	movwf	42,b	;volatile
  1501                           
  1502                           ; BSR set to: 15
  1503                           ;ecan.c: 241: TXB0D5 = tempCanMsg->frame.data5;
  1504  000FE2  EE20 F00B          	lfsr	2,11
  1505  000FE6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1506  000FE8  26D9               	addwf	fsr2l,f,c
  1507  000FEA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1508  000FEC  22DA               	addwfc	fsr2h,f,c
  1509  000FEE  50DF               	movf	indf2,w,c
  1510  000FF0  6F2B               	movwf	43,b	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;ecan.c: 242: TXB0D6 = tempCanMsg->frame.data6;
  1514  000FF2  EE20 F00C          	lfsr	2,12
  1515  000FF6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1516  000FF8  26D9               	addwf	fsr2l,f,c
  1517  000FFA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1518  000FFC  22DA               	addwfc	fsr2h,f,c
  1519  000FFE  50DF               	movf	indf2,w,c
  1520  001000  6F2C               	movwf	44,b	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523                           ;ecan.c: 243: TXB0D7 = tempCanMsg->frame.data7;
  1524  001002  EE20 F00D          	lfsr	2,13
  1525  001006  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1526  001008  26D9               	addwf	fsr2l,f,c
  1527  00100A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1528  00100C  22DA               	addwfc	fsr2h,f,c
  1529  00100E  50DF               	movf	indf2,w,c
  1530  001010  6F2D               	movwf	45,b	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;ecan.c: 245: TXB0CONbits.TXREQ = 1;
  1534  001012  8720               	bsf	32,3,b	;volatile
  1535  001014  D3D8               	goto	l2106
  1536  001016                     l593:
  1537                           
  1538                           ; BSR set to: 15
  1539                           ;ecan.c: 249: else if (TXB1CONbits.TXREQ != 1)
  1540  001016  B710               	btfsc	16,3,b	;volatile
  1541  001018  D079               	goto	l595
  1542                           
  1543                           ; BSR set to: 15
  1544                           ;ecan.c: 250: {
  1545                           ;ecan.c: 252: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1546  00101A  EE20 F001          	lfsr	2,1
  1547  00101E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1548  001020  26D9               	addwf	fsr2l,f,c
  1549  001022  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1550  001024  22DA               	addwfc	fsr2h,f,c
  1551  001026  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1552  00102A  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1553  00102E  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1554  001032  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1555  001036  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1556  00103A  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1557  00103E  50DF               	movf	indf2,w,c
  1558  001040  6E05               	movwf	convertCANid2Reg@canIdType,c
  1559  001042  0E16               	movlw	low CAN_transmit@tempEIDH
  1560  001044  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1561  001046  0E00               	movlw	high CAN_transmit@tempEIDH
  1562  001048  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1563  00104A  0E17               	movlw	low CAN_transmit@tempEIDL
  1564  00104C  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1565  00104E  0E00               	movlw	high CAN_transmit@tempEIDL
  1566  001050  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1567  001052  0E18               	movlw	low CAN_transmit@tempSIDH
  1568  001054  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1569  001056  0E00               	movlw	high CAN_transmit@tempSIDH
  1570  001058  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1571  00105A  0E19               	movlw	low CAN_transmit@tempSIDL
  1572  00105C  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1573  00105E  0E00               	movlw	high CAN_transmit@tempSIDL
  1574  001060  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1575  001062  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  1576                           
  1577                           ;ecan.c: 254: TXB1EIDH = tempEIDH;
  1578  001066  C016  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  1579                           
  1580                           ;ecan.c: 255: TXB1EIDL = tempEIDL;
  1581  00106A  C017  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  1582                           
  1583                           ;ecan.c: 256: TXB1SIDH = tempSIDH;
  1584  00106E  C018  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  1585                           
  1586                           ;ecan.c: 257: TXB1SIDL = tempSIDL;
  1587  001072  C019  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  1588                           
  1589                           ;ecan.c: 258: TXB1DLC = tempCanMsg->frame.dlc;
  1590  001076  EE20 F005          	lfsr	2,5
  1591  00107A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1592  00107C  26D9               	addwf	fsr2l,f,c
  1593  00107E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1594  001080  22DA               	addwfc	fsr2h,f,c
  1595  001082  50DF               	movf	indf2,w,c
  1596  001084  010F               	movlb	15	; () banked
  1597  001086  6F15               	movwf	21,b	;volatile
  1598                           
  1599                           ; BSR set to: 15
  1600                           ;ecan.c: 259: TXB1D0 = tempCanMsg->frame.data0;
  1601  001088  EE20 F006          	lfsr	2,6
  1602  00108C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1603  00108E  26D9               	addwf	fsr2l,f,c
  1604  001090  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1605  001092  22DA               	addwfc	fsr2h,f,c
  1606  001094  50DF               	movf	indf2,w,c
  1607  001096  6F16               	movwf	22,b	;volatile
  1608                           
  1609                           ; BSR set to: 15
  1610                           ;ecan.c: 260: TXB1D1 = tempCanMsg->frame.data1;
  1611  001098  EE20 F007          	lfsr	2,7
  1612  00109C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1613  00109E  26D9               	addwf	fsr2l,f,c
  1614  0010A0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1615  0010A2  22DA               	addwfc	fsr2h,f,c
  1616  0010A4  50DF               	movf	indf2,w,c
  1617  0010A6  6F17               	movwf	23,b	;volatile
  1618                           
  1619                           ; BSR set to: 15
  1620                           ;ecan.c: 261: TXB1D2 = tempCanMsg->frame.data2;
  1621  0010A8  EE20 F008          	lfsr	2,8
  1622  0010AC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1623  0010AE  26D9               	addwf	fsr2l,f,c
  1624  0010B0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1625  0010B2  22DA               	addwfc	fsr2h,f,c
  1626  0010B4  50DF               	movf	indf2,w,c
  1627  0010B6  6F18               	movwf	24,b	;volatile
  1628                           
  1629                           ; BSR set to: 15
  1630                           ;ecan.c: 262: TXB1D3 = tempCanMsg->frame.data3;
  1631  0010B8  EE20 F009          	lfsr	2,9
  1632  0010BC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1633  0010BE  26D9               	addwf	fsr2l,f,c
  1634  0010C0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1635  0010C2  22DA               	addwfc	fsr2h,f,c
  1636  0010C4  50DF               	movf	indf2,w,c
  1637  0010C6  6F19               	movwf	25,b	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640                           ;ecan.c: 263: TXB1D4 = tempCanMsg->frame.data4;
  1641  0010C8  EE20 F00A          	lfsr	2,10
  1642  0010CC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1643  0010CE  26D9               	addwf	fsr2l,f,c
  1644  0010D0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1645  0010D2  22DA               	addwfc	fsr2h,f,c
  1646  0010D4  50DF               	movf	indf2,w,c
  1647  0010D6  6F1A               	movwf	26,b	;volatile
  1648                           
  1649                           ; BSR set to: 15
  1650                           ;ecan.c: 264: TXB1D5 = tempCanMsg->frame.data5;
  1651  0010D8  EE20 F00B          	lfsr	2,11
  1652  0010DC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1653  0010DE  26D9               	addwf	fsr2l,f,c
  1654  0010E0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1655  0010E2  22DA               	addwfc	fsr2h,f,c
  1656  0010E4  50DF               	movf	indf2,w,c
  1657  0010E6  6F1B               	movwf	27,b	;volatile
  1658                           
  1659                           ; BSR set to: 15
  1660                           ;ecan.c: 265: TXB1D6 = tempCanMsg->frame.data6;
  1661  0010E8  EE20 F00C          	lfsr	2,12
  1662  0010EC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1663  0010EE  26D9               	addwf	fsr2l,f,c
  1664  0010F0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1665  0010F2  22DA               	addwfc	fsr2h,f,c
  1666  0010F4  50DF               	movf	indf2,w,c
  1667  0010F6  6F1C               	movwf	28,b	;volatile
  1668                           
  1669                           ; BSR set to: 15
  1670                           ;ecan.c: 266: TXB1D7 = tempCanMsg->frame.data7;
  1671  0010F8  EE20 F00D          	lfsr	2,13
  1672  0010FC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1673  0010FE  26D9               	addwf	fsr2l,f,c
  1674  001100  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1675  001102  22DA               	addwfc	fsr2h,f,c
  1676  001104  50DF               	movf	indf2,w,c
  1677  001106  6F1D               	movwf	29,b	;volatile
  1678                           
  1679                           ; BSR set to: 15
  1680                           ;ecan.c: 268: TXB1CONbits.TXREQ = 1;
  1681  001108  8710               	bsf	16,3,b	;volatile
  1682  00110A  D35D               	goto	l2106
  1683  00110C                     l595:
  1684                           
  1685                           ; BSR set to: 15
  1686                           ;ecan.c: 271: else if (TXB2CONbits.TXREQ != 1)
  1687  00110C  B700               	btfsc	0,3,b	;volatile
  1688  00110E  D079               	goto	l597
  1689                           
  1690                           ; BSR set to: 15
  1691                           ;ecan.c: 272: {
  1692                           ;ecan.c: 274: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1693  001110  EE20 F001          	lfsr	2,1
  1694  001114  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1695  001116  26D9               	addwf	fsr2l,f,c
  1696  001118  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1697  00111A  22DA               	addwfc	fsr2h,f,c
  1698  00111C  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1699  001120  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1700  001124  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1701  001128  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1702  00112C  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1703  001130  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1704  001134  50DF               	movf	indf2,w,c
  1705  001136  6E05               	movwf	convertCANid2Reg@canIdType,c
  1706  001138  0E16               	movlw	low CAN_transmit@tempEIDH
  1707  00113A  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1708  00113C  0E00               	movlw	high CAN_transmit@tempEIDH
  1709  00113E  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1710  001140  0E17               	movlw	low CAN_transmit@tempEIDL
  1711  001142  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1712  001144  0E00               	movlw	high CAN_transmit@tempEIDL
  1713  001146  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1714  001148  0E18               	movlw	low CAN_transmit@tempSIDH
  1715  00114A  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1716  00114C  0E00               	movlw	high CAN_transmit@tempSIDH
  1717  00114E  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1718  001150  0E19               	movlw	low CAN_transmit@tempSIDL
  1719  001152  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1720  001154  0E00               	movlw	high CAN_transmit@tempSIDL
  1721  001156  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1722  001158  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  1723                           
  1724                           ;ecan.c: 276: TXB2EIDH = tempEIDH;
  1725  00115C  C016  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  1726                           
  1727                           ;ecan.c: 277: TXB2EIDL = tempEIDL;
  1728  001160  C017  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  1729                           
  1730                           ;ecan.c: 278: TXB2SIDH = tempSIDH;
  1731  001164  C018  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  1732                           
  1733                           ;ecan.c: 279: TXB2SIDL = tempSIDL;
  1734  001168  C019  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  1735                           
  1736                           ;ecan.c: 280: TXB2DLC = tempCanMsg->frame.dlc;
  1737  00116C  EE20 F005          	lfsr	2,5
  1738  001170  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1739  001172  26D9               	addwf	fsr2l,f,c
  1740  001174  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1741  001176  22DA               	addwfc	fsr2h,f,c
  1742  001178  50DF               	movf	indf2,w,c
  1743  00117A  010F               	movlb	15	; () banked
  1744  00117C  6F05               	movwf	5,b	;volatile
  1745                           
  1746                           ; BSR set to: 15
  1747                           ;ecan.c: 281: TXB2D0 = tempCanMsg->frame.data0;
  1748  00117E  EE20 F006          	lfsr	2,6
  1749  001182  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1750  001184  26D9               	addwf	fsr2l,f,c
  1751  001186  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1752  001188  22DA               	addwfc	fsr2h,f,c
  1753  00118A  50DF               	movf	indf2,w,c
  1754  00118C  6F06               	movwf	6,b	;volatile
  1755                           
  1756                           ; BSR set to: 15
  1757                           ;ecan.c: 282: TXB2D1 = tempCanMsg->frame.data1;
  1758  00118E  EE20 F007          	lfsr	2,7
  1759  001192  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1760  001194  26D9               	addwf	fsr2l,f,c
  1761  001196  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1762  001198  22DA               	addwfc	fsr2h,f,c
  1763  00119A  50DF               	movf	indf2,w,c
  1764  00119C  6F07               	movwf	7,b	;volatile
  1765                           
  1766                           ; BSR set to: 15
  1767                           ;ecan.c: 283: TXB2D2 = tempCanMsg->frame.data2;
  1768  00119E  EE20 F008          	lfsr	2,8
  1769  0011A2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1770  0011A4  26D9               	addwf	fsr2l,f,c
  1771  0011A6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1772  0011A8  22DA               	addwfc	fsr2h,f,c
  1773  0011AA  50DF               	movf	indf2,w,c
  1774  0011AC  6F08               	movwf	8,b	;volatile
  1775                           
  1776                           ; BSR set to: 15
  1777                           ;ecan.c: 284: TXB2D3 = tempCanMsg->frame.data3;
  1778  0011AE  EE20 F009          	lfsr	2,9
  1779  0011B2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1780  0011B4  26D9               	addwf	fsr2l,f,c
  1781  0011B6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1782  0011B8  22DA               	addwfc	fsr2h,f,c
  1783  0011BA  50DF               	movf	indf2,w,c
  1784  0011BC  6F09               	movwf	9,b	;volatile
  1785                           
  1786                           ; BSR set to: 15
  1787                           ;ecan.c: 285: TXB2D4 = tempCanMsg->frame.data4;
  1788  0011BE  EE20 F00A          	lfsr	2,10
  1789  0011C2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1790  0011C4  26D9               	addwf	fsr2l,f,c
  1791  0011C6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1792  0011C8  22DA               	addwfc	fsr2h,f,c
  1793  0011CA  50DF               	movf	indf2,w,c
  1794  0011CC  6F0A               	movwf	10,b	;volatile
  1795                           
  1796                           ; BSR set to: 15
  1797                           ;ecan.c: 286: TXB2D5 = tempCanMsg->frame.data5;
  1798  0011CE  EE20 F00B          	lfsr	2,11
  1799  0011D2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1800  0011D4  26D9               	addwf	fsr2l,f,c
  1801  0011D6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1802  0011D8  22DA               	addwfc	fsr2h,f,c
  1803  0011DA  50DF               	movf	indf2,w,c
  1804  0011DC  6F0B               	movwf	11,b	;volatile
  1805                           
  1806                           ; BSR set to: 15
  1807                           ;ecan.c: 287: TXB2D6 = tempCanMsg->frame.data6;
  1808  0011DE  EE20 F00C          	lfsr	2,12
  1809  0011E2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1810  0011E4  26D9               	addwf	fsr2l,f,c
  1811  0011E6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1812  0011E8  22DA               	addwfc	fsr2h,f,c
  1813  0011EA  50DF               	movf	indf2,w,c
  1814  0011EC  6F0C               	movwf	12,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;ecan.c: 288: TXB2D7 = tempCanMsg->frame.data7;
  1818  0011EE  EE20 F00D          	lfsr	2,13
  1819  0011F2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1820  0011F4  26D9               	addwf	fsr2l,f,c
  1821  0011F6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1822  0011F8  22DA               	addwfc	fsr2h,f,c
  1823  0011FA  50DF               	movf	indf2,w,c
  1824  0011FC  6F0D               	movwf	13,b	;volatile
  1825                           
  1826                           ; BSR set to: 15
  1827                           ;ecan.c: 290: TXB2CONbits.TXREQ = 1;
  1828  0011FE  8700               	bsf	0,3,b	;volatile
  1829  001200  D2E2               	goto	l2106
  1830  001202                     l597:
  1831                           
  1832                           ; BSR set to: 15
  1833                           ;ecan.c: 293: else if (B0CONbits.RXFUL_TXBIF != 1)
  1834  001202  010E               	movlb	14	; () banked
  1835  001204  BF80               	btfsc	128,7,b	;volatile
  1836  001206  D079               	goto	l599
  1837                           
  1838                           ; BSR set to: 14
  1839                           ;ecan.c: 294: {
  1840                           ;ecan.c: 295: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1841  001208  EE20 F001          	lfsr	2,1
  1842  00120C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1843  00120E  26D9               	addwf	fsr2l,f,c
  1844  001210  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1845  001212  22DA               	addwfc	fsr2h,f,c
  1846  001214  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1847  001218  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1848  00121C  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1849  001220  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1850  001224  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1851  001228  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1852  00122C  50DF               	movf	indf2,w,c
  1853  00122E  6E05               	movwf	convertCANid2Reg@canIdType,c
  1854  001230  0E16               	movlw	low CAN_transmit@tempEIDH
  1855  001232  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  1856  001234  0E00               	movlw	high CAN_transmit@tempEIDH
  1857  001236  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1858  001238  0E17               	movlw	low CAN_transmit@tempEIDL
  1859  00123A  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  1860  00123C  0E00               	movlw	high CAN_transmit@tempEIDL
  1861  00123E  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1862  001240  0E18               	movlw	low CAN_transmit@tempSIDH
  1863  001242  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  1864  001244  0E00               	movlw	high CAN_transmit@tempSIDH
  1865  001246  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1866  001248  0E19               	movlw	low CAN_transmit@tempSIDL
  1867  00124A  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  1868  00124C  0E00               	movlw	high CAN_transmit@tempSIDL
  1869  00124E  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1870  001250  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  1871                           
  1872                           ;ecan.c: 297: B0EIDH = tempEIDH;
  1873  001254  C016  FE83         	movff	CAN_transmit@tempEIDH,3715	;volatile
  1874                           
  1875                           ;ecan.c: 298: B0EIDL = tempEIDL;
  1876  001258  C017  FE84         	movff	CAN_transmit@tempEIDL,3716	;volatile
  1877                           
  1878                           ;ecan.c: 299: B0SIDH = tempSIDH;
  1879  00125C  C018  FE81         	movff	CAN_transmit@tempSIDH,3713	;volatile
  1880                           
  1881                           ;ecan.c: 300: B0SIDL = tempSIDL;
  1882  001260  C019  FE82         	movff	CAN_transmit@tempSIDL,3714	;volatile
  1883                           
  1884                           ;ecan.c: 302: B0DLC = tempCanMsg->frame.dlc;
  1885  001264  EE20 F005          	lfsr	2,5
  1886  001268  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1887  00126A  26D9               	addwf	fsr2l,f,c
  1888  00126C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1889  00126E  22DA               	addwfc	fsr2h,f,c
  1890  001270  50DF               	movf	indf2,w,c
  1891  001272  010E               	movlb	14	; () banked
  1892  001274  6F85               	movwf	133,b	;volatile
  1893                           
  1894                           ; BSR set to: 14
  1895                           ;ecan.c: 303: B0D0 = tempCanMsg->frame.data0;
  1896  001276  EE20 F006          	lfsr	2,6
  1897  00127A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1898  00127C  26D9               	addwf	fsr2l,f,c
  1899  00127E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1900  001280  22DA               	addwfc	fsr2h,f,c
  1901  001282  50DF               	movf	indf2,w,c
  1902  001284  6F86               	movwf	134,b	;volatile
  1903                           
  1904                           ; BSR set to: 14
  1905                           ;ecan.c: 304: B0D1 = tempCanMsg->frame.data1;
  1906  001286  EE20 F007          	lfsr	2,7
  1907  00128A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1908  00128C  26D9               	addwf	fsr2l,f,c
  1909  00128E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1910  001290  22DA               	addwfc	fsr2h,f,c
  1911  001292  50DF               	movf	indf2,w,c
  1912  001294  6F87               	movwf	135,b	;volatile
  1913                           
  1914                           ; BSR set to: 14
  1915                           ;ecan.c: 305: B0D2 = tempCanMsg->frame.data2;
  1916  001296  EE20 F008          	lfsr	2,8
  1917  00129A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1918  00129C  26D9               	addwf	fsr2l,f,c
  1919  00129E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1920  0012A0  22DA               	addwfc	fsr2h,f,c
  1921  0012A2  50DF               	movf	indf2,w,c
  1922  0012A4  6F88               	movwf	136,b	;volatile
  1923                           
  1924                           ; BSR set to: 14
  1925                           ;ecan.c: 306: B0D3 = tempCanMsg->frame.data3;
  1926  0012A6  EE20 F009          	lfsr	2,9
  1927  0012AA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1928  0012AC  26D9               	addwf	fsr2l,f,c
  1929  0012AE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1930  0012B0  22DA               	addwfc	fsr2h,f,c
  1931  0012B2  50DF               	movf	indf2,w,c
  1932  0012B4  6F89               	movwf	137,b	;volatile
  1933                           
  1934                           ; BSR set to: 14
  1935                           ;ecan.c: 307: B0D4 = tempCanMsg->frame.data4;
  1936  0012B6  EE20 F00A          	lfsr	2,10
  1937  0012BA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1938  0012BC  26D9               	addwf	fsr2l,f,c
  1939  0012BE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1940  0012C0  22DA               	addwfc	fsr2h,f,c
  1941  0012C2  50DF               	movf	indf2,w,c
  1942  0012C4  6F8A               	movwf	138,b	;volatile
  1943                           
  1944                           ; BSR set to: 14
  1945                           ;ecan.c: 308: B0D5 = tempCanMsg->frame.data5;
  1946  0012C6  EE20 F00B          	lfsr	2,11
  1947  0012CA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1948  0012CC  26D9               	addwf	fsr2l,f,c
  1949  0012CE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1950  0012D0  22DA               	addwfc	fsr2h,f,c
  1951  0012D2  50DF               	movf	indf2,w,c
  1952  0012D4  6F8B               	movwf	139,b	;volatile
  1953                           
  1954                           ; BSR set to: 14
  1955                           ;ecan.c: 309: B0D6 = tempCanMsg->frame.data6;
  1956  0012D6  EE20 F00C          	lfsr	2,12
  1957  0012DA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1958  0012DC  26D9               	addwf	fsr2l,f,c
  1959  0012DE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1960  0012E0  22DA               	addwfc	fsr2h,f,c
  1961  0012E2  50DF               	movf	indf2,w,c
  1962  0012E4  6F8C               	movwf	140,b	;volatile
  1963                           
  1964                           ; BSR set to: 14
  1965                           ;ecan.c: 310: B0D7 = tempCanMsg->frame.data7;
  1966  0012E6  EE20 F00D          	lfsr	2,13
  1967  0012EA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1968  0012EC  26D9               	addwf	fsr2l,f,c
  1969  0012EE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1970  0012F0  22DA               	addwfc	fsr2h,f,c
  1971  0012F2  50DF               	movf	indf2,w,c
  1972  0012F4  6F8D               	movwf	141,b	;volatile
  1973                           
  1974                           ; BSR set to: 14
  1975                           ;ecan.c: 312: B0CONbits.RXFUL_TXBIF = 1;
  1976  0012F6  8F80               	bsf	128,7,b	;volatile
  1977  0012F8  D266               	goto	l2106
  1978  0012FA                     l599:
  1979                           
  1980                           ; BSR set to: 14
  1981                           ;ecan.c: 315: else if (B1CONbits.RXFUL_TXBIF != 1)
  1982  0012FA  BF90               	btfsc	144,7,b	;volatile
  1983  0012FC  D079               	goto	l601
  1984                           
  1985                           ; BSR set to: 14
  1986                           ;ecan.c: 316: {
  1987                           ;ecan.c: 317: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1988  0012FE  EE20 F001          	lfsr	2,1
  1989  001302  5013               	movf	CAN_transmit@tempCanMsg,w,c
  1990  001304  26D9               	addwf	fsr2l,f,c
  1991  001306  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  1992  001308  22DA               	addwfc	fsr2h,f,c
  1993  00130A  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1994  00130E  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1995  001312  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1996  001316  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1997  00131A  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1998  00131E  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1999  001322  50DF               	movf	indf2,w,c
  2000  001324  6E05               	movwf	convertCANid2Reg@canIdType,c
  2001  001326  0E16               	movlw	low CAN_transmit@tempEIDH
  2002  001328  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2003  00132A  0E00               	movlw	high CAN_transmit@tempEIDH
  2004  00132C  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2005  00132E  0E17               	movlw	low CAN_transmit@tempEIDL
  2006  001330  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2007  001332  0E00               	movlw	high CAN_transmit@tempEIDL
  2008  001334  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2009  001336  0E18               	movlw	low CAN_transmit@tempSIDH
  2010  001338  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2011  00133A  0E00               	movlw	high CAN_transmit@tempSIDH
  2012  00133C  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2013  00133E  0E19               	movlw	low CAN_transmit@tempSIDL
  2014  001340  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2015  001342  0E00               	movlw	high CAN_transmit@tempSIDL
  2016  001344  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2017  001346  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  2018                           
  2019                           ;ecan.c: 319: B1EIDH = tempEIDH;
  2020  00134A  C016  FE93         	movff	CAN_transmit@tempEIDH,3731	;volatile
  2021                           
  2022                           ;ecan.c: 320: B1EIDL = tempEIDL;
  2023  00134E  C017  FE94         	movff	CAN_transmit@tempEIDL,3732	;volatile
  2024                           
  2025                           ;ecan.c: 321: B1SIDH = tempSIDH;
  2026  001352  C018  FE91         	movff	CAN_transmit@tempSIDH,3729	;volatile
  2027                           
  2028                           ;ecan.c: 322: B1SIDL = tempSIDL;
  2029  001356  C019  FE92         	movff	CAN_transmit@tempSIDL,3730	;volatile
  2030                           
  2031                           ;ecan.c: 324: B1DLC = tempCanMsg->frame.dlc;
  2032  00135A  EE20 F005          	lfsr	2,5
  2033  00135E  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2034  001360  26D9               	addwf	fsr2l,f,c
  2035  001362  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2036  001364  22DA               	addwfc	fsr2h,f,c
  2037  001366  50DF               	movf	indf2,w,c
  2038  001368  010E               	movlb	14	; () banked
  2039  00136A  6F95               	movwf	149,b	;volatile
  2040                           
  2041                           ; BSR set to: 14
  2042                           ;ecan.c: 325: B1D0 = tempCanMsg->frame.data0;
  2043  00136C  EE20 F006          	lfsr	2,6
  2044  001370  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2045  001372  26D9               	addwf	fsr2l,f,c
  2046  001374  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2047  001376  22DA               	addwfc	fsr2h,f,c
  2048  001378  50DF               	movf	indf2,w,c
  2049  00137A  6F96               	movwf	150,b	;volatile
  2050                           
  2051                           ; BSR set to: 14
  2052                           ;ecan.c: 326: B1D1 = tempCanMsg->frame.data1;
  2053  00137C  EE20 F007          	lfsr	2,7
  2054  001380  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2055  001382  26D9               	addwf	fsr2l,f,c
  2056  001384  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2057  001386  22DA               	addwfc	fsr2h,f,c
  2058  001388  50DF               	movf	indf2,w,c
  2059  00138A  6F97               	movwf	151,b	;volatile
  2060                           
  2061                           ; BSR set to: 14
  2062                           ;ecan.c: 327: B1D2 = tempCanMsg->frame.data2;
  2063  00138C  EE20 F008          	lfsr	2,8
  2064  001390  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2065  001392  26D9               	addwf	fsr2l,f,c
  2066  001394  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2067  001396  22DA               	addwfc	fsr2h,f,c
  2068  001398  50DF               	movf	indf2,w,c
  2069  00139A  6F98               	movwf	152,b	;volatile
  2070                           
  2071                           ; BSR set to: 14
  2072                           ;ecan.c: 328: B1D3 = tempCanMsg->frame.data3;
  2073  00139C  EE20 F009          	lfsr	2,9
  2074  0013A0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2075  0013A2  26D9               	addwf	fsr2l,f,c
  2076  0013A4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2077  0013A6  22DA               	addwfc	fsr2h,f,c
  2078  0013A8  50DF               	movf	indf2,w,c
  2079  0013AA  6F99               	movwf	153,b	;volatile
  2080                           
  2081                           ; BSR set to: 14
  2082                           ;ecan.c: 329: B1D4 = tempCanMsg->frame.data4;
  2083  0013AC  EE20 F00A          	lfsr	2,10
  2084  0013B0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2085  0013B2  26D9               	addwf	fsr2l,f,c
  2086  0013B4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2087  0013B6  22DA               	addwfc	fsr2h,f,c
  2088  0013B8  50DF               	movf	indf2,w,c
  2089  0013BA  6F9A               	movwf	154,b	;volatile
  2090                           
  2091                           ; BSR set to: 14
  2092                           ;ecan.c: 330: B1D5 = tempCanMsg->frame.data5;
  2093  0013BC  EE20 F00B          	lfsr	2,11
  2094  0013C0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2095  0013C2  26D9               	addwf	fsr2l,f,c
  2096  0013C4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2097  0013C6  22DA               	addwfc	fsr2h,f,c
  2098  0013C8  50DF               	movf	indf2,w,c
  2099  0013CA  6F9B               	movwf	155,b	;volatile
  2100                           
  2101                           ; BSR set to: 14
  2102                           ;ecan.c: 331: B1D6 = tempCanMsg->frame.data6;
  2103  0013CC  EE20 F00C          	lfsr	2,12
  2104  0013D0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2105  0013D2  26D9               	addwf	fsr2l,f,c
  2106  0013D4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2107  0013D6  22DA               	addwfc	fsr2h,f,c
  2108  0013D8  50DF               	movf	indf2,w,c
  2109  0013DA  6F9C               	movwf	156,b	;volatile
  2110                           
  2111                           ; BSR set to: 14
  2112                           ;ecan.c: 332: B1D7 = tempCanMsg->frame.data7;
  2113  0013DC  EE20 F00D          	lfsr	2,13
  2114  0013E0  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2115  0013E2  26D9               	addwf	fsr2l,f,c
  2116  0013E4  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2117  0013E6  22DA               	addwfc	fsr2h,f,c
  2118  0013E8  50DF               	movf	indf2,w,c
  2119  0013EA  6F9D               	movwf	157,b	;volatile
  2120                           
  2121                           ; BSR set to: 14
  2122                           ;ecan.c: 334: B1CONbits.RXFUL_TXBIF = 1;
  2123  0013EC  8F90               	bsf	144,7,b	;volatile
  2124  0013EE  D1EB               	goto	l2106
  2125  0013F0                     l601:
  2126                           
  2127                           ; BSR set to: 14
  2128                           ;ecan.c: 337: else if (B2CONbits.RXFUL_TXBIF != 1)
  2129  0013F0  BFA0               	btfsc	160,7,b	;volatile
  2130  0013F2  D079               	goto	l603
  2131                           
  2132                           ; BSR set to: 14
  2133                           ;ecan.c: 338: {
  2134                           ;ecan.c: 339: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2135  0013F4  EE20 F001          	lfsr	2,1
  2136  0013F8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2137  0013FA  26D9               	addwf	fsr2l,f,c
  2138  0013FC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2139  0013FE  22DA               	addwfc	fsr2h,f,c
  2140  001400  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2141  001404  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2142  001408  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2143  00140C  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2144  001410  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2145  001414  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2146  001418  50DF               	movf	indf2,w,c
  2147  00141A  6E05               	movwf	convertCANid2Reg@canIdType,c
  2148  00141C  0E16               	movlw	low CAN_transmit@tempEIDH
  2149  00141E  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2150  001420  0E00               	movlw	high CAN_transmit@tempEIDH
  2151  001422  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2152  001424  0E17               	movlw	low CAN_transmit@tempEIDL
  2153  001426  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2154  001428  0E00               	movlw	high CAN_transmit@tempEIDL
  2155  00142A  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2156  00142C  0E18               	movlw	low CAN_transmit@tempSIDH
  2157  00142E  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2158  001430  0E00               	movlw	high CAN_transmit@tempSIDH
  2159  001432  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2160  001434  0E19               	movlw	low CAN_transmit@tempSIDL
  2161  001436  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2162  001438  0E00               	movlw	high CAN_transmit@tempSIDL
  2163  00143A  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2164  00143C  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  2165                           
  2166                           ;ecan.c: 341: B2EIDH = tempEIDH;
  2167  001440  C016  FEA3         	movff	CAN_transmit@tempEIDH,3747	;volatile
  2168                           
  2169                           ;ecan.c: 342: B2EIDL = tempEIDL;
  2170  001444  C017  FEA4         	movff	CAN_transmit@tempEIDL,3748	;volatile
  2171                           
  2172                           ;ecan.c: 343: B2SIDH = tempSIDH;
  2173  001448  C018  FEA1         	movff	CAN_transmit@tempSIDH,3745	;volatile
  2174                           
  2175                           ;ecan.c: 344: B2SIDL = tempSIDL;
  2176  00144C  C019  FEA2         	movff	CAN_transmit@tempSIDL,3746	;volatile
  2177                           
  2178                           ;ecan.c: 346: B2DLC = tempCanMsg->frame.dlc;
  2179  001450  EE20 F005          	lfsr	2,5
  2180  001454  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2181  001456  26D9               	addwf	fsr2l,f,c
  2182  001458  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2183  00145A  22DA               	addwfc	fsr2h,f,c
  2184  00145C  50DF               	movf	indf2,w,c
  2185  00145E  010E               	movlb	14	; () banked
  2186  001460  6FA5               	movwf	165,b	;volatile
  2187                           
  2188                           ; BSR set to: 14
  2189                           ;ecan.c: 347: B2D0 = tempCanMsg->frame.data0;
  2190  001462  EE20 F006          	lfsr	2,6
  2191  001466  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2192  001468  26D9               	addwf	fsr2l,f,c
  2193  00146A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2194  00146C  22DA               	addwfc	fsr2h,f,c
  2195  00146E  50DF               	movf	indf2,w,c
  2196  001470  6FA6               	movwf	166,b	;volatile
  2197                           
  2198                           ; BSR set to: 14
  2199                           ;ecan.c: 348: B2D1 = tempCanMsg->frame.data1;
  2200  001472  EE20 F007          	lfsr	2,7
  2201  001476  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2202  001478  26D9               	addwf	fsr2l,f,c
  2203  00147A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2204  00147C  22DA               	addwfc	fsr2h,f,c
  2205  00147E  50DF               	movf	indf2,w,c
  2206  001480  6FA7               	movwf	167,b	;volatile
  2207                           
  2208                           ; BSR set to: 14
  2209                           ;ecan.c: 349: B2D2 = tempCanMsg->frame.data2;
  2210  001482  EE20 F008          	lfsr	2,8
  2211  001486  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2212  001488  26D9               	addwf	fsr2l,f,c
  2213  00148A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2214  00148C  22DA               	addwfc	fsr2h,f,c
  2215  00148E  50DF               	movf	indf2,w,c
  2216  001490  6FA8               	movwf	168,b	;volatile
  2217                           
  2218                           ; BSR set to: 14
  2219                           ;ecan.c: 350: B2D3 = tempCanMsg->frame.data3;
  2220  001492  EE20 F009          	lfsr	2,9
  2221  001496  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2222  001498  26D9               	addwf	fsr2l,f,c
  2223  00149A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2224  00149C  22DA               	addwfc	fsr2h,f,c
  2225  00149E  50DF               	movf	indf2,w,c
  2226  0014A0  6FA9               	movwf	169,b	;volatile
  2227                           
  2228                           ; BSR set to: 14
  2229                           ;ecan.c: 351: B2D4 = tempCanMsg->frame.data4;
  2230  0014A2  EE20 F00A          	lfsr	2,10
  2231  0014A6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2232  0014A8  26D9               	addwf	fsr2l,f,c
  2233  0014AA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2234  0014AC  22DA               	addwfc	fsr2h,f,c
  2235  0014AE  50DF               	movf	indf2,w,c
  2236  0014B0  6FAA               	movwf	170,b	;volatile
  2237                           
  2238                           ; BSR set to: 14
  2239                           ;ecan.c: 352: B2D5 = tempCanMsg->frame.data5;
  2240  0014B2  EE20 F00B          	lfsr	2,11
  2241  0014B6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2242  0014B8  26D9               	addwf	fsr2l,f,c
  2243  0014BA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2244  0014BC  22DA               	addwfc	fsr2h,f,c
  2245  0014BE  50DF               	movf	indf2,w,c
  2246  0014C0  6FAB               	movwf	171,b	;volatile
  2247                           
  2248                           ; BSR set to: 14
  2249                           ;ecan.c: 353: B2D6 = tempCanMsg->frame.data6;
  2250  0014C2  EE20 F00C          	lfsr	2,12
  2251  0014C6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2252  0014C8  26D9               	addwf	fsr2l,f,c
  2253  0014CA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2254  0014CC  22DA               	addwfc	fsr2h,f,c
  2255  0014CE  50DF               	movf	indf2,w,c
  2256  0014D0  6FAC               	movwf	172,b	;volatile
  2257                           
  2258                           ; BSR set to: 14
  2259                           ;ecan.c: 354: B2D7 = tempCanMsg->frame.data7;
  2260  0014D2  EE20 F00D          	lfsr	2,13
  2261  0014D6  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2262  0014D8  26D9               	addwf	fsr2l,f,c
  2263  0014DA  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2264  0014DC  22DA               	addwfc	fsr2h,f,c
  2265  0014DE  50DF               	movf	indf2,w,c
  2266  0014E0  6FAD               	movwf	173,b	;volatile
  2267                           
  2268                           ; BSR set to: 14
  2269                           ;ecan.c: 356: B2CONbits.RXFUL_TXBIF = 1;
  2270  0014E2  8FA0               	bsf	160,7,b	;volatile
  2271  0014E4  D170               	goto	l2106
  2272  0014E6                     l603:
  2273                           
  2274                           ; BSR set to: 14
  2275                           ;ecan.c: 359: else if (B3CONbits.RXFUL_TXBIF != 1)
  2276  0014E6  BFB0               	btfsc	176,7,b	;volatile
  2277  0014E8  D079               	goto	l605
  2278                           
  2279                           ; BSR set to: 14
  2280                           ;ecan.c: 360: {
  2281                           ;ecan.c: 361: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2282  0014EA  EE20 F001          	lfsr	2,1
  2283  0014EE  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2284  0014F0  26D9               	addwf	fsr2l,f,c
  2285  0014F2  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2286  0014F4  22DA               	addwfc	fsr2h,f,c
  2287  0014F6  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2288  0014FA  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2289  0014FE  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2290  001502  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2291  001506  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2292  00150A  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2293  00150E  50DF               	movf	indf2,w,c
  2294  001510  6E05               	movwf	convertCANid2Reg@canIdType,c
  2295  001512  0E16               	movlw	low CAN_transmit@tempEIDH
  2296  001514  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2297  001516  0E00               	movlw	high CAN_transmit@tempEIDH
  2298  001518  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2299  00151A  0E17               	movlw	low CAN_transmit@tempEIDL
  2300  00151C  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2301  00151E  0E00               	movlw	high CAN_transmit@tempEIDL
  2302  001520  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2303  001522  0E18               	movlw	low CAN_transmit@tempSIDH
  2304  001524  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2305  001526  0E00               	movlw	high CAN_transmit@tempSIDH
  2306  001528  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2307  00152A  0E19               	movlw	low CAN_transmit@tempSIDL
  2308  00152C  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2309  00152E  0E00               	movlw	high CAN_transmit@tempSIDL
  2310  001530  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2311  001532  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  2312                           
  2313                           ;ecan.c: 363: B3EIDH = tempEIDH;
  2314  001536  C016  FEB3         	movff	CAN_transmit@tempEIDH,3763	;volatile
  2315                           
  2316                           ;ecan.c: 364: B3EIDL = tempEIDL;
  2317  00153A  C017  FEB4         	movff	CAN_transmit@tempEIDL,3764	;volatile
  2318                           
  2319                           ;ecan.c: 365: B3SIDH = tempSIDH;
  2320  00153E  C018  FEB1         	movff	CAN_transmit@tempSIDH,3761	;volatile
  2321                           
  2322                           ;ecan.c: 366: B3SIDL = tempSIDL;
  2323  001542  C019  FEB2         	movff	CAN_transmit@tempSIDL,3762	;volatile
  2324                           
  2325                           ;ecan.c: 368: B3DLC = tempCanMsg->frame.dlc;
  2326  001546  EE20 F005          	lfsr	2,5
  2327  00154A  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2328  00154C  26D9               	addwf	fsr2l,f,c
  2329  00154E  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2330  001550  22DA               	addwfc	fsr2h,f,c
  2331  001552  50DF               	movf	indf2,w,c
  2332  001554  010E               	movlb	14	; () banked
  2333  001556  6FB5               	movwf	181,b	;volatile
  2334                           
  2335                           ; BSR set to: 14
  2336                           ;ecan.c: 369: B3D0 = tempCanMsg->frame.data0;
  2337  001558  EE20 F006          	lfsr	2,6
  2338  00155C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2339  00155E  26D9               	addwf	fsr2l,f,c
  2340  001560  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2341  001562  22DA               	addwfc	fsr2h,f,c
  2342  001564  50DF               	movf	indf2,w,c
  2343  001566  6FB6               	movwf	182,b	;volatile
  2344                           
  2345                           ; BSR set to: 14
  2346                           ;ecan.c: 370: B3D1 = tempCanMsg->frame.data1;
  2347  001568  EE20 F007          	lfsr	2,7
  2348  00156C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2349  00156E  26D9               	addwf	fsr2l,f,c
  2350  001570  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2351  001572  22DA               	addwfc	fsr2h,f,c
  2352  001574  50DF               	movf	indf2,w,c
  2353  001576  6FB7               	movwf	183,b	;volatile
  2354                           
  2355                           ; BSR set to: 14
  2356                           ;ecan.c: 371: B3D2 = tempCanMsg->frame.data2;
  2357  001578  EE20 F008          	lfsr	2,8
  2358  00157C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2359  00157E  26D9               	addwf	fsr2l,f,c
  2360  001580  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2361  001582  22DA               	addwfc	fsr2h,f,c
  2362  001584  50DF               	movf	indf2,w,c
  2363  001586  6FB8               	movwf	184,b	;volatile
  2364                           
  2365                           ; BSR set to: 14
  2366                           ;ecan.c: 372: B3D3 = tempCanMsg->frame.data3;
  2367  001588  EE20 F009          	lfsr	2,9
  2368  00158C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2369  00158E  26D9               	addwf	fsr2l,f,c
  2370  001590  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2371  001592  22DA               	addwfc	fsr2h,f,c
  2372  001594  50DF               	movf	indf2,w,c
  2373  001596  6FB9               	movwf	185,b	;volatile
  2374                           
  2375                           ; BSR set to: 14
  2376                           ;ecan.c: 373: B3D4 = tempCanMsg->frame.data4;
  2377  001598  EE20 F00A          	lfsr	2,10
  2378  00159C  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2379  00159E  26D9               	addwf	fsr2l,f,c
  2380  0015A0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2381  0015A2  22DA               	addwfc	fsr2h,f,c
  2382  0015A4  50DF               	movf	indf2,w,c
  2383  0015A6  6FBA               	movwf	186,b	;volatile
  2384                           
  2385                           ; BSR set to: 14
  2386                           ;ecan.c: 374: B3D5 = tempCanMsg->frame.data5;
  2387  0015A8  EE20 F00B          	lfsr	2,11
  2388  0015AC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2389  0015AE  26D9               	addwf	fsr2l,f,c
  2390  0015B0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2391  0015B2  22DA               	addwfc	fsr2h,f,c
  2392  0015B4  50DF               	movf	indf2,w,c
  2393  0015B6  6FBB               	movwf	187,b	;volatile
  2394                           
  2395                           ; BSR set to: 14
  2396                           ;ecan.c: 375: B3D6 = tempCanMsg->frame.data6;
  2397  0015B8  EE20 F00C          	lfsr	2,12
  2398  0015BC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2399  0015BE  26D9               	addwf	fsr2l,f,c
  2400  0015C0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2401  0015C2  22DA               	addwfc	fsr2h,f,c
  2402  0015C4  50DF               	movf	indf2,w,c
  2403  0015C6  6FBC               	movwf	188,b	;volatile
  2404                           
  2405                           ; BSR set to: 14
  2406                           ;ecan.c: 376: B3D7 = tempCanMsg->frame.data7;
  2407  0015C8  EE20 F00D          	lfsr	2,13
  2408  0015CC  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2409  0015CE  26D9               	addwf	fsr2l,f,c
  2410  0015D0  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2411  0015D2  22DA               	addwfc	fsr2h,f,c
  2412  0015D4  50DF               	movf	indf2,w,c
  2413  0015D6  6FBD               	movwf	189,b	;volatile
  2414                           
  2415                           ; BSR set to: 14
  2416                           ;ecan.c: 378: B3CONbits.RXFUL_TXBIF = 1;
  2417  0015D8  8FB0               	bsf	176,7,b	;volatile
  2418  0015DA  D0F5               	goto	l2106
  2419  0015DC                     l605:
  2420                           
  2421                           ; BSR set to: 14
  2422                           ;ecan.c: 381: else if (B4CONbits.RXFUL_TXBIF != 1)
  2423  0015DC  BFC0               	btfsc	192,7,b	;volatile
  2424  0015DE  D079               	goto	l607
  2425                           
  2426                           ; BSR set to: 14
  2427                           ;ecan.c: 382: {
  2428                           ;ecan.c: 383: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2429  0015E0  EE20 F001          	lfsr	2,1
  2430  0015E4  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2431  0015E6  26D9               	addwf	fsr2l,f,c
  2432  0015E8  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2433  0015EA  22DA               	addwfc	fsr2h,f,c
  2434  0015EC  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2435  0015F0  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2436  0015F4  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2437  0015F8  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2438  0015FC  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2439  001600  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2440  001604  50DF               	movf	indf2,w,c
  2441  001606  6E05               	movwf	convertCANid2Reg@canIdType,c
  2442  001608  0E16               	movlw	low CAN_transmit@tempEIDH
  2443  00160A  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2444  00160C  0E00               	movlw	high CAN_transmit@tempEIDH
  2445  00160E  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2446  001610  0E17               	movlw	low CAN_transmit@tempEIDL
  2447  001612  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2448  001614  0E00               	movlw	high CAN_transmit@tempEIDL
  2449  001616  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2450  001618  0E18               	movlw	low CAN_transmit@tempSIDH
  2451  00161A  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2452  00161C  0E00               	movlw	high CAN_transmit@tempSIDH
  2453  00161E  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2454  001620  0E19               	movlw	low CAN_transmit@tempSIDL
  2455  001622  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2456  001624  0E00               	movlw	high CAN_transmit@tempSIDL
  2457  001626  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2458  001628  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  2459                           
  2460                           ;ecan.c: 385: B4EIDH = tempEIDH;
  2461  00162C  C016  FEC3         	movff	CAN_transmit@tempEIDH,3779	;volatile
  2462                           
  2463                           ;ecan.c: 386: B4EIDL = tempEIDL;
  2464  001630  C017  FEC4         	movff	CAN_transmit@tempEIDL,3780	;volatile
  2465                           
  2466                           ;ecan.c: 387: B4SIDH = tempSIDH;
  2467  001634  C018  FEC1         	movff	CAN_transmit@tempSIDH,3777	;volatile
  2468                           
  2469                           ;ecan.c: 388: B4SIDL = tempSIDL;
  2470  001638  C019  FEC2         	movff	CAN_transmit@tempSIDL,3778	;volatile
  2471                           
  2472                           ;ecan.c: 390: B4DLC = tempCanMsg->frame.dlc;
  2473  00163C  EE20 F005          	lfsr	2,5
  2474  001640  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2475  001642  26D9               	addwf	fsr2l,f,c
  2476  001644  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2477  001646  22DA               	addwfc	fsr2h,f,c
  2478  001648  50DF               	movf	indf2,w,c
  2479  00164A  010E               	movlb	14	; () banked
  2480  00164C  6FC5               	movwf	197,b	;volatile
  2481                           
  2482                           ; BSR set to: 14
  2483                           ;ecan.c: 391: B4D0 = tempCanMsg->frame.data0;
  2484  00164E  EE20 F006          	lfsr	2,6
  2485  001652  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2486  001654  26D9               	addwf	fsr2l,f,c
  2487  001656  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2488  001658  22DA               	addwfc	fsr2h,f,c
  2489  00165A  50DF               	movf	indf2,w,c
  2490  00165C  6FC6               	movwf	198,b	;volatile
  2491                           
  2492                           ; BSR set to: 14
  2493                           ;ecan.c: 392: B4D1 = tempCanMsg->frame.data1;
  2494  00165E  EE20 F007          	lfsr	2,7
  2495  001662  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2496  001664  26D9               	addwf	fsr2l,f,c
  2497  001666  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2498  001668  22DA               	addwfc	fsr2h,f,c
  2499  00166A  50DF               	movf	indf2,w,c
  2500  00166C  6FC7               	movwf	199,b	;volatile
  2501                           
  2502                           ; BSR set to: 14
  2503                           ;ecan.c: 393: B4D2 = tempCanMsg->frame.data2;
  2504  00166E  EE20 F008          	lfsr	2,8
  2505  001672  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2506  001674  26D9               	addwf	fsr2l,f,c
  2507  001676  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2508  001678  22DA               	addwfc	fsr2h,f,c
  2509  00167A  50DF               	movf	indf2,w,c
  2510  00167C  6FC8               	movwf	200,b	;volatile
  2511                           
  2512                           ; BSR set to: 14
  2513                           ;ecan.c: 394: B4D3 = tempCanMsg->frame.data3;
  2514  00167E  EE20 F009          	lfsr	2,9
  2515  001682  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2516  001684  26D9               	addwf	fsr2l,f,c
  2517  001686  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2518  001688  22DA               	addwfc	fsr2h,f,c
  2519  00168A  50DF               	movf	indf2,w,c
  2520  00168C  6FC9               	movwf	201,b	;volatile
  2521                           
  2522                           ; BSR set to: 14
  2523                           ;ecan.c: 395: B4D4 = tempCanMsg->frame.data4;
  2524  00168E  EE20 F00A          	lfsr	2,10
  2525  001692  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2526  001694  26D9               	addwf	fsr2l,f,c
  2527  001696  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2528  001698  22DA               	addwfc	fsr2h,f,c
  2529  00169A  50DF               	movf	indf2,w,c
  2530  00169C  6FCA               	movwf	202,b	;volatile
  2531                           
  2532                           ; BSR set to: 14
  2533                           ;ecan.c: 396: B4D5 = tempCanMsg->frame.data5;
  2534  00169E  EE20 F00B          	lfsr	2,11
  2535  0016A2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2536  0016A4  26D9               	addwf	fsr2l,f,c
  2537  0016A6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2538  0016A8  22DA               	addwfc	fsr2h,f,c
  2539  0016AA  50DF               	movf	indf2,w,c
  2540  0016AC  6FCB               	movwf	203,b	;volatile
  2541                           
  2542                           ; BSR set to: 14
  2543                           ;ecan.c: 397: B4D6 = tempCanMsg->frame.data6;
  2544  0016AE  EE20 F00C          	lfsr	2,12
  2545  0016B2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2546  0016B4  26D9               	addwf	fsr2l,f,c
  2547  0016B6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2548  0016B8  22DA               	addwfc	fsr2h,f,c
  2549  0016BA  50DF               	movf	indf2,w,c
  2550  0016BC  6FCC               	movwf	204,b	;volatile
  2551                           
  2552                           ; BSR set to: 14
  2553                           ;ecan.c: 398: B4D7 = tempCanMsg->frame.data7;
  2554  0016BE  EE20 F00D          	lfsr	2,13
  2555  0016C2  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2556  0016C4  26D9               	addwf	fsr2l,f,c
  2557  0016C6  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2558  0016C8  22DA               	addwfc	fsr2h,f,c
  2559  0016CA  50DF               	movf	indf2,w,c
  2560  0016CC  6FCD               	movwf	205,b	;volatile
  2561                           
  2562                           ; BSR set to: 14
  2563                           ;ecan.c: 400: B4CONbits.RXFUL_TXBIF = 1;
  2564  0016CE  8FC0               	bsf	192,7,b	;volatile
  2565  0016D0  D07A               	goto	l2106
  2566  0016D2                     l607:
  2567                           
  2568                           ; BSR set to: 14
  2569                           ;ecan.c: 403: else if (B5CONbits.RXFUL_TXBIF != 1)
  2570  0016D2  BFD0               	btfsc	208,7,b	;volatile
  2571  0016D4  D07A               	goto	l609
  2572                           
  2573                           ; BSR set to: 14
  2574                           ;ecan.c: 404: {
  2575                           ;ecan.c: 405: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2576  0016D6  EE20 F001          	lfsr	2,1
  2577  0016DA  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2578  0016DC  26D9               	addwf	fsr2l,f,c
  2579  0016DE  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2580  0016E0  22DA               	addwfc	fsr2h,f,c
  2581  0016E2  CFDE F001          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2582  0016E6  CFDE F002          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2583  0016EA  CFDE F003          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2584  0016EE  CFDE F004          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2585  0016F2  C013  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2586  0016F6  C014  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2587  0016FA  50DF               	movf	indf2,w,c
  2588  0016FC  6E05               	movwf	convertCANid2Reg@canIdType,c
  2589  0016FE  0E16               	movlw	low CAN_transmit@tempEIDH
  2590  001700  6E06               	movwf	convertCANid2Reg@passedInEIDH,c
  2591  001702  0E00               	movlw	high CAN_transmit@tempEIDH
  2592  001704  6E07               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2593  001706  0E17               	movlw	low CAN_transmit@tempEIDL
  2594  001708  6E08               	movwf	convertCANid2Reg@passedInEIDL,c
  2595  00170A  0E00               	movlw	high CAN_transmit@tempEIDL
  2596  00170C  6E09               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2597  00170E  0E18               	movlw	low CAN_transmit@tempSIDH
  2598  001710  6E0A               	movwf	convertCANid2Reg@passedInSIDH,c
  2599  001712  0E00               	movlw	high CAN_transmit@tempSIDH
  2600  001714  6E0B               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2601  001716  0E19               	movlw	low CAN_transmit@tempSIDL
  2602  001718  6E0C               	movwf	convertCANid2Reg@passedInSIDL,c
  2603  00171A  0E00               	movlw	high CAN_transmit@tempSIDL
  2604  00171C  6E0D               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2605  00171E  ECE7  F00B         	call	_convertCANid2Reg	;wreg free
  2606                           
  2607                           ;ecan.c: 407: B5EIDH = tempEIDH;
  2608  001722  C016  FED3         	movff	CAN_transmit@tempEIDH,3795	;volatile
  2609                           
  2610                           ;ecan.c: 408: B5EIDL = tempEIDL;
  2611  001726  C017  FED4         	movff	CAN_transmit@tempEIDL,3796	;volatile
  2612                           
  2613                           ;ecan.c: 409: B5SIDH = tempSIDH;
  2614  00172A  C018  FED1         	movff	CAN_transmit@tempSIDH,3793	;volatile
  2615                           
  2616                           ;ecan.c: 410: B5SIDL = tempSIDL;
  2617  00172E  C019  FED2         	movff	CAN_transmit@tempSIDL,3794	;volatile
  2618                           
  2619                           ;ecan.c: 412: B5DLC = tempCanMsg->frame.dlc;
  2620  001732  EE20 F005          	lfsr	2,5
  2621  001736  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2622  001738  26D9               	addwf	fsr2l,f,c
  2623  00173A  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2624  00173C  22DA               	addwfc	fsr2h,f,c
  2625  00173E  50DF               	movf	indf2,w,c
  2626  001740  010E               	movlb	14	; () banked
  2627  001742  6FD5               	movwf	213,b	;volatile
  2628                           
  2629                           ; BSR set to: 14
  2630                           ;ecan.c: 413: B5D0 = tempCanMsg->frame.data0;
  2631  001744  EE20 F006          	lfsr	2,6
  2632  001748  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2633  00174A  26D9               	addwf	fsr2l,f,c
  2634  00174C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2635  00174E  22DA               	addwfc	fsr2h,f,c
  2636  001750  50DF               	movf	indf2,w,c
  2637  001752  6FD6               	movwf	214,b	;volatile
  2638                           
  2639                           ; BSR set to: 14
  2640                           ;ecan.c: 414: B5D1 = tempCanMsg->frame.data1;
  2641  001754  EE20 F007          	lfsr	2,7
  2642  001758  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2643  00175A  26D9               	addwf	fsr2l,f,c
  2644  00175C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2645  00175E  22DA               	addwfc	fsr2h,f,c
  2646  001760  50DF               	movf	indf2,w,c
  2647  001762  6FD7               	movwf	215,b	;volatile
  2648                           
  2649                           ; BSR set to: 14
  2650                           ;ecan.c: 415: B5D2 = tempCanMsg->frame.data2;
  2651  001764  EE20 F008          	lfsr	2,8
  2652  001768  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2653  00176A  26D9               	addwf	fsr2l,f,c
  2654  00176C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2655  00176E  22DA               	addwfc	fsr2h,f,c
  2656  001770  50DF               	movf	indf2,w,c
  2657  001772  6FD8               	movwf	216,b	;volatile
  2658                           
  2659                           ; BSR set to: 14
  2660                           ;ecan.c: 416: B5D3 = tempCanMsg->frame.data3;
  2661  001774  EE20 F009          	lfsr	2,9
  2662  001778  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2663  00177A  26D9               	addwf	fsr2l,f,c
  2664  00177C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2665  00177E  22DA               	addwfc	fsr2h,f,c
  2666  001780  50DF               	movf	indf2,w,c
  2667  001782  6FD9               	movwf	217,b	;volatile
  2668                           
  2669                           ; BSR set to: 14
  2670                           ;ecan.c: 417: B5D4 = tempCanMsg->frame.data4;
  2671  001784  EE20 F00A          	lfsr	2,10
  2672  001788  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2673  00178A  26D9               	addwf	fsr2l,f,c
  2674  00178C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2675  00178E  22DA               	addwfc	fsr2h,f,c
  2676  001790  50DF               	movf	indf2,w,c
  2677  001792  6FDA               	movwf	218,b	;volatile
  2678                           
  2679                           ; BSR set to: 14
  2680                           ;ecan.c: 418: B5D5 = tempCanMsg->frame.data5;
  2681  001794  EE20 F00B          	lfsr	2,11
  2682  001798  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2683  00179A  26D9               	addwf	fsr2l,f,c
  2684  00179C  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2685  00179E  22DA               	addwfc	fsr2h,f,c
  2686  0017A0  50DF               	movf	indf2,w,c
  2687  0017A2  6FDB               	movwf	219,b	;volatile
  2688                           
  2689                           ; BSR set to: 14
  2690                           ;ecan.c: 419: B5D6 = tempCanMsg->frame.data6;
  2691  0017A4  EE20 F00C          	lfsr	2,12
  2692  0017A8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2693  0017AA  26D9               	addwf	fsr2l,f,c
  2694  0017AC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2695  0017AE  22DA               	addwfc	fsr2h,f,c
  2696  0017B0  50DF               	movf	indf2,w,c
  2697  0017B2  6FDC               	movwf	220,b	;volatile
  2698                           
  2699                           ; BSR set to: 14
  2700                           ;ecan.c: 420: B5D7 = tempCanMsg->frame.data7;
  2701  0017B4  EE20 F00D          	lfsr	2,13
  2702  0017B8  5013               	movf	CAN_transmit@tempCanMsg,w,c
  2703  0017BA  26D9               	addwf	fsr2l,f,c
  2704  0017BC  5014               	movf	CAN_transmit@tempCanMsg+1,w,c
  2705  0017BE  22DA               	addwfc	fsr2h,f,c
  2706  0017C0  50DF               	movf	indf2,w,c
  2707  0017C2  6FDD               	movwf	221,b	;volatile
  2708                           
  2709                           ; BSR set to: 14
  2710                           ;ecan.c: 422: B5CONbits.RXFUL_TXBIF = 1;
  2711  0017C4  8FD0               	bsf	208,7,b	;volatile
  2712  0017C6                     l2106:
  2713                           
  2714                           ; BSR set to: 14
  2715                           ;ecan.c: 423: returnValue = 1;
  2716  0017C6  0E01               	movlw	1
  2717  0017C8  6E15               	movwf	CAN_transmit@returnValue,c
  2718  0017CA                     l609:
  2719                           
  2720                           ;ecan.c: 424: }
  2721                           ;ecan.c: 425: return (returnValue);
  2722                           
  2723                           ; BSR set to: 14
  2724                           
  2725                           ; BSR set to: 14
  2726                           
  2727                           ; BSR set to: 14
  2728                           
  2729                           ; BSR set to: 14
  2730                           
  2731                           ; BSR set to: 14
  2732                           
  2733                           ; BSR set to: 14
  2734                           
  2735                           ; BSR set to: 14
  2736                           
  2737                           ; BSR set to: 14
  2738                           
  2739                           ; BSR set to: 14
  2740  0017CA  5015               	movf	CAN_transmit@returnValue,w,c
  2741  0017CC  0012               	return	
  2742  0017CE                     __end_of_CAN_transmit:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           intcon2	equ	0xFF1
  2747                           wreg	equ	0xFE8
  2748                           indf2	equ	0xFDF
  2749                           postinc2	equ	0xFDE
  2750                           fsr2h	equ	0xFDA
  2751                           fsr2l	equ	0xFD9
  2752                           status	equ	0xFD8
  2753                           
  2754 ;; *************** function _convertCANid2Reg *****************
  2755 ;; Defined at:
  2756 ;;		line 578 in file "mcc_generated_files/ecan.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  tempPassedIn    4    0[COMRAM] unsigned long 
  2759 ;;  canIdType       1    4[COMRAM] unsigned char 
  2760 ;;  passedInEIDH    2    5[COMRAM] PTR unsigned char 
  2761 ;;		 -> CAN_transmit@tempEIDH(1), 
  2762 ;;  passedInEIDL    2    7[COMRAM] PTR unsigned char 
  2763 ;;		 -> CAN_transmit@tempEIDL(1), 
  2764 ;;  passedInSIDH    2    9[COMRAM] PTR unsigned char 
  2765 ;;		 -> CAN_transmit@tempSIDH(1), 
  2766 ;;  passedInSIDL    2   11[COMRAM] PTR unsigned char 
  2767 ;;		 -> CAN_transmit@tempSIDL(1), 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  wipSIDL         1   17[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2779 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;Total ram usage:       18 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_CAN_transmit
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text8
  2793  0017CE                     __ptext8:
  2794                           	opt stack 0
  2795  0017CE                     _convertCANid2Reg:
  2796                           	opt stack 29
  2797                           
  2798                           ;ecan.c: 579: unsigned char wipSIDL = 0;
  2799                           
  2800                           ;incstack = 0
  2801  0017CE  0E00               	movlw	0
  2802  0017D0  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2803                           
  2804                           ;ecan.c: 581: if (canIdType == 2) {
  2805  0017D2  0E02               	movlw	2
  2806  0017D4  1805               	xorwf	convertCANid2Reg@canIdType,w,c
  2807  0017D6  A4D8               	btfss	status,2,c
  2808  0017D8  D081               	goto	l646
  2809                           
  2810                           ;ecan.c: 584: *passedInEIDL = 0xFF & tempPassedInID;
  2811  0017DA  C008  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  2812  0017DE  C009  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  2813  0017E2  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2814                           
  2815                           ;ecan.c: 585: tempPassedInID = tempPassedInID >> 8;
  2816  0017E6  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2817  0017EA  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2818  0017EE  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2819  0017F2  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2820  0017F6  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2821  0017FA  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2822  0017FE  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2823  001802  6A11               	clrf	??_convertCANid2Reg+3,c
  2824  001804  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2825  001808  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2826  00180C  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2827  001810  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2828                           
  2829                           ;ecan.c: 588: *passedInEIDH = 0xFF & tempPassedInID;
  2830  001814  C006  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  2831  001818  C007  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  2832  00181C  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2833                           
  2834                           ;ecan.c: 589: tempPassedInID = tempPassedInID >> 8;
  2835  001820  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2836  001824  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2837  001828  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2838  00182C  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2839  001830  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2840  001834  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2841  001838  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2842  00183C  6A11               	clrf	??_convertCANid2Reg+3,c
  2843  00183E  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2844  001842  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2845  001846  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2846  00184A  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2847                           
  2848                           ;ecan.c: 593: wipSIDL = 0x03 & tempPassedInID;
  2849  00184E  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  2850  001850  0B03               	andlw	3
  2851  001852  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2852                           
  2853                           ;ecan.c: 594: tempPassedInID = tempPassedInID << 3;
  2854  001854  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2855  001858  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2856  00185C  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2857  001860  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2858  001864  0E03               	movlw	3
  2859  001866                     u295:
  2860  001866  90D8               	bcf	status,0,c
  2861  001868  360E               	rlcf	??_convertCANid2Reg,f,c
  2862  00186A  360F               	rlcf	??_convertCANid2Reg+1,f,c
  2863  00186C  3610               	rlcf	??_convertCANid2Reg+2,f,c
  2864  00186E  3611               	rlcf	??_convertCANid2Reg+3,f,c
  2865  001870  2EE8               	decfsz	wreg,f,c
  2866  001872  D7F9               	goto	u295
  2867  001874  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2868  001878  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2869  00187C  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2870  001880  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2871                           
  2872                           ;ecan.c: 595: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  2873  001884  5001               	movf	convertCANid2Reg@tempPassedInID,w,c
  2874  001886  0BE0               	andlw	224
  2875  001888  2412               	addwf	convertCANid2Reg@wipSIDL,w,c
  2876  00188A  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2877                           
  2878                           ;ecan.c: 596: wipSIDL = (unsigned char)(wipSIDL + 0x08);
  2879  00188C  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  2880  00188E  0F08               	addlw	8
  2881  001890  6E12               	movwf	convertCANid2Reg@wipSIDL,c
  2882                           
  2883                           ;ecan.c: 597: *passedInSIDL = (unsigned char)(0xEB & wipSIDL);
  2884  001892  5012               	movf	convertCANid2Reg@wipSIDL,w,c
  2885  001894  0BEB               	andlw	235
  2886  001896  C00C  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  2887  00189A  C00D  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  2888  00189E  6EDF               	movwf	indf2,c
  2889                           
  2890                           ;ecan.c: 600: tempPassedInID = tempPassedInID >> 8;
  2891  0018A0  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2892  0018A4  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2893  0018A8  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2894  0018AC  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2895  0018B0  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2896  0018B4  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2897  0018B8  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2898  0018BC  6A11               	clrf	??_convertCANid2Reg+3,c
  2899  0018BE  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2900  0018C2  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2901  0018C6  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2902  0018CA  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2903                           
  2904                           ;ecan.c: 601: *passedInSIDH = 0xFF & tempPassedInID;
  2905  0018CE  C00A  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  2906  0018D2  C00B  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  2907  0018D6  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2908                           
  2909                           ;ecan.c: 602: } else
  2910  0018DA  0012               	return	
  2911  0018DC                     l646:
  2912                           
  2913                           ;ecan.c: 603: {
  2914                           ;ecan.c: 604: *passedInEIDH = 0;
  2915  0018DC  C006  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  2916  0018E0  C007  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  2917  0018E4  0E00               	movlw	0
  2918  0018E6  6EDF               	movwf	indf2,c
  2919                           
  2920                           ;ecan.c: 605: *passedInEIDL = 0;
  2921  0018E8  C008  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  2922  0018EC  C009  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  2923  0018F0  0E00               	movlw	0
  2924  0018F2  6EDF               	movwf	indf2,c
  2925                           
  2926                           ;ecan.c: 606: tempPassedInID = tempPassedInID << 5;
  2927  0018F4  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2928  0018F8  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2929  0018FC  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2930  001900  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2931  001904  0E05               	movlw	5
  2932  001906                     u305:
  2933  001906  90D8               	bcf	status,0,c
  2934  001908  360E               	rlcf	??_convertCANid2Reg,f,c
  2935  00190A  360F               	rlcf	??_convertCANid2Reg+1,f,c
  2936  00190C  3610               	rlcf	??_convertCANid2Reg+2,f,c
  2937  00190E  3611               	rlcf	??_convertCANid2Reg+3,f,c
  2938  001910  2EE8               	decfsz	wreg,f,c
  2939  001912  D7F9               	goto	u305
  2940  001914  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2941  001918  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2942  00191C  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2943  001920  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2944                           
  2945                           ;ecan.c: 607: *passedInSIDL = 0xFF & tempPassedInID;
  2946  001924  C00C  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  2947  001928  C00D  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  2948  00192C  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2949                           
  2950                           ;ecan.c: 608: tempPassedInID = tempPassedInID >> 8;
  2951  001930  C001  F00E         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2952  001934  C002  F00F         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2953  001938  C003  F010         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2954  00193C  C004  F011         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2955  001940  C00F  F00E         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2956  001944  C010  F00F         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2957  001948  C011  F010         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2958  00194C  6A11               	clrf	??_convertCANid2Reg+3,c
  2959  00194E  C00E  F001         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2960  001952  C00F  F002         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2961  001956  C010  F003         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2962  00195A  C011  F004         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2963                           
  2964                           ;ecan.c: 609: *passedInSIDH = 0xFF & tempPassedInID;
  2965  00195E  C00A  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  2966  001962  C00B  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  2967  001966  C001  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2968  00196A  0012               	return	
  2969  00196C                     __end_of_convertCANid2Reg:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           intcon2	equ	0xFF1
  2974                           wreg	equ	0xFE8
  2975                           indf2	equ	0xFDF
  2976                           postinc2	equ	0xFDE
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           tblptru	equ	0xFF8
  2981                           tblptrh	equ	0xFF7
  2982                           intcon2	equ	0xFF1
  2983                           wreg	equ	0xFE8
  2984                           indf2	equ	0xFDF
  2985                           postinc2	equ	0xFDE
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990                           	psect	rparam
  2991  0000                     tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           intcon2	equ	0xFF1
  2994                           wreg	equ	0xFE8
  2995                           indf2	equ	0xFDF
  2996                           postinc2	equ	0xFDE
  2997                           fsr2h	equ	0xFDA
  2998                           fsr2l	equ	0xFD9
  2999                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 3
		 -> main@msg(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_CAN_transmit
    _SYSTEM_Initialize->_ECAN_Initialize
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8675
                                             25 COMRAM     4     4      0
                       _CAN_transmit
                  _SYSTEM_Initialize
                         _testmodule
                        _testmodule1
 ---------------------------------------------------------------------------------
 (1) _testmodule1                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _testmodule                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ECAN_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    8554
                                             18 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    4664
                                              0 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_transmit
     _convertCANid2Reg
   _SYSTEM_Initialize
     _ECAN_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _testmodule
   _testmodule1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1D      1D       1       30.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BIGRAM             E40      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 06 01:11:10 2018

                             l65 1AFE         __size_of_ECAN_Initialize 018E  
                    __CFG_BORV$0 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l601 13F0  
                            l603 14E6                              l605 15DC  
                            l607 16D2                              l609 17CA  
                            l646 18DC                              l582 1AEC  
                            l593 1016                              l595 110C  
                            l579 1970                              l597 1202  
                            l599 12FA                     __CFG_CPB$OFF 000000  
                            _RB4 007C0C                              u305 1906  
                            u417 1B22                     __CFG_CPD$OFF 000000  
                            u427 1B3E                              u437 1B56  
                            u295 1866                              u447 1B70  
                            u457 1B88                              wreg 000FE8  
                           _B0D0 000E86                             _B0D1 000E87  
                           _B0D2 000E88                             _B0D3 000E89  
                           _B0D4 000E8A                             _B1D0 000E96  
                           _B0D5 000E8B                             _B1D1 000E97  
                           _B0D6 000E8C                             _B1D2 000E98  
                           _B0D7 000E8D                             _B1D3 000E99  
                           _B1D4 000E9A                             _B2D0 000EA6  
                           _B1D5 000E9B                             _B2D1 000EA7  
                           _B1D6 000E9C                             _B2D2 000EA8  
                           _B1D7 000E9D                             _B2D3 000EA9  
                           _B2D4 000EAA                             _B3D0 000EB6  
                           _B2D5 000EAB                             _B3D1 000EB7  
                           _B2D6 000EAC                             _B3D2 000EB8  
                           _B2D7 000EAD                             _B3D3 000EB9  
                           _B3D4 000EBA                             _B4D0 000EC6  
                           _B3D5 000EBB                             _B4D1 000EC7  
                           _B3D6 000EBC                             _B4D2 000EC8  
                           _B3D7 000EBD                             _B4D3 000EC9  
                           _B4D4 000ECA                             _B5D0 000ED6  
                           _B4D5 000ECB                             _B5D1 000ED7  
                           _B4D6 000ECC                             _B5D2 000ED8  
                           _B4D7 000ECD                             _B5D3 000ED9  
                           _B5D4 000EDA                             _B5D5 000EDB  
                           _B5D6 000EDC                             _B5D7 000EDD  
                           l2106 17C6                             STR_1 0F01  
                           STR_2 0F06                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _WPUB 000F5B                             _main 1AFA  
   convertCANid2Reg@passedInEIDH 0006     convertCANid2Reg@passedInEIDL 0008  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr2l 000FD9     convertCANid2Reg@passedInSIDH 000A  
   convertCANid2Reg@passedInSIDL 000C          CAN_transmit@returnValue 0015  
                           start 0000                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 0012  
  __end_of_OSCILLATOR_Initialize 1BD2                            _B0DLC 000E85  
                          _B1DLC 000E95                            _B2DLC 000EA5  
                          _B3DLC 000EB5                            _B4DLC 000EC5  
                          _B5DLC 000ED5                            ?_main 0001  
                          _BSEL0 000E7D                            _MSEL0 000E79  
                          _MSEL1 000E7A                            _MSEL2 000E7B  
                          _MSEL3 000E7C                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000             __end_of_CAN_transmit 17CE  
                          status 000FD8             CAN_transmit@tempEIDH 0016  
           CAN_transmit@tempEIDL 0017             CAN_transmit@tempSIDH 0018  
           CAN_transmit@tempSIDL 0019                   __CFG_MCLRE$OFF 000000  
                __initialization 1BD2                     __end_of_main 1B32  
                         ??_main 001A                    __activetblptr 000001  
                 __CFG_RETEN$OFF 000000                ??_ECAN_Initialize 0001  
                         _B0EIDH 000E83                           _B0EIDL 000E84  
                         _B1EIDH 000E93                           _B1EIDL 000E94  
                         _B2EIDH 000EA3                           _B2EIDL 000EA4  
                         _B3EIDH 000EB3                           _B3EIDL 000EB4  
                         _B4EIDH 000EC3                           _B4EIDL 000EC4  
                         _B5EIDH 000ED3                           _B5EIDL 000ED4  
                         _B0SIDH 000E81                           _B0SIDL 000E82  
                         _B1SIDH 000E91                           _B1SIDL 000E92  
                         _B2SIDH 000EA1                           _B2SIDL 000EA2  
                         _B3SIDH 000EB1                           _B3SIDL 000EB2  
                         _B4SIDH 000EC1                           _B4SIDL 000EC2  
                         _B5SIDH 000ED1                           _B5SIDL 000ED2  
                         _CANCON 000F6F                           _ANCON0 000F5D  
                         _ANCON1 000F5C                  __CFG_BBSIZ$BB2K 000000  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F36  
                         _RXB0D5 000F6B                           _RXB1D1 000F37  
                         _RXB0D6 000F6C                           _RXB1D2 000F38  
                         _RXB0D7 000F6D                           _RXB1D3 000F39  
                         _RXB1D4 000F3A                           _RXB1D5 000F3B  
                         _RXB1D6 000F3C                           _RXB1D7 000F3D  
                         _TXB0D0 000F26                           _TXB0D1 000F27  
                         _TXB0D2 000F28                           _TXB0D3 000F29  
                         _TXB0D4 000F2A                           _TXB1D0 000F16  
                         _TXB0D5 000F2B                           _TXB1D1 000F17  
                         _TXB0D6 000F2C                           _TXB1D2 000F18  
                         _TXB0D7 000F2D                           _TXB1D3 000F19  
                         _TXB1D4 000F1A                           _TXB2D0 000F06  
                         _TXB1D5 000F1B                           _TXB2D1 000F07  
                         _TXB1D6 000F1C                           _TXB2D2 000F08  
                         _TXB1D7 000F1D                           _TXB2D3 000F09  
                         _TXB2D4 000F0A                           _TXB2D5 000F0B  
                         _TXB2D6 000F0C                           _TXB2D7 000F0D  
                 __CFG_XINST$OFF 000000                   __CFG_STVREN$ON 000000  
                   __mediumconst 0000        __size_of_convertCANid2Reg 019E  
                         tblptrh 000FF7                           tblptru 000FF8  
              _SYSTEM_Initialize 1BE0                       __accesstop 0060  
        __end_of__initialization 1BD2               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                     ?_testmodule1 0001  
                 __pcstackCOMRAM 0001              ??_SYSTEM_Initialize 0002  
          __size_of_CAN_transmit 08C4        __end_of_SYSTEM_Initialize 1BEE  
                __CFG_PLLCFG$OFF 000000                     _CAN_transmit 0F0A  
                      _B0CONbits 000E80                          _ECANCON 000F72  
                      _B1CONbits 000E90                          _CANSTAT 000F6E  
                      _B2CONbits 000EA0                        _B3CONbits 000EB0  
                        _BRGCON1 000E43                          _BRGCON2 000E44  
                        _BRGCON3 000E45                        _B4CONbits 000EC0  
                      _B5CONbits 000ED0                 __CFG_CANMX$PORTC 000000  
                        _REFOCON 000F9A                          _OSCCON2 000FD2  
                        _RXB0DLC 000F65                          _RXB1DLC 000F35  
                        _OSCTUNE 000F9B                          _TXB0DLC 000F25  
                        _TXB1DLC 000F15                          _TXB2DLC 000F05  
                        _RXFCON0 000E46                          _RXFCON1 000E47  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                  _ECAN_Initialize 196C  
                   __psmallconst 0F00                          __pcinit 1BD2  
                        __ramtop 0F00                          __ptext0 1AFA  
                        __ptext1 1B32                          __ptext2 1B64  
                        __ptext3 1BE0                          __ptext4 1B96  
                        __ptext5 1BC0                          __ptext6 196C  
                        __ptext7 0F0A                          __ptext8 17CE  
          _OSCILLATOR_Initialize 1BC0                 _convertCANid2Reg 17CE  
       ??_PIN_MANAGER_Initialize 0001                __CFG_MSSPMSK$MSK5 000000  
     __size_of_SYSTEM_Initialize 000E                          main@msg 001C  
           end_of_initialization 1BD2                        _RXF10EIDH 000E5A  
                      _RXF10EIDL 000E5B                        _RXF11EIDH 000E5E  
                      _RXF11EIDL 000E5F                        _RXF12EIDH 000E62  
                      _RXF12EIDL 000E63                        _RXF13EIDH 000E66  
                      _RXF13EIDL 000E67                        _RXF14EIDH 000E6A  
                      _RXF14EIDL 000E6B                        _RXF15EIDH 000E6E  
                      _RXF15EIDL 000E6F                        _RXF10SIDH 000E58  
                      _RXF10SIDL 000E59             __size_of_testmodule1 0032  
                      _RXF11SIDH 000E5C                        _RXF11SIDL 000E5D  
                      _RXF12SIDH 000E60                        _RXF12SIDL 000E61  
                      _RXF13SIDH 000E64                        _RXF13SIDL 000E65  
                      _RXF14SIDH 000E68                        _RXF14SIDL 000E69  
                      _RXF15SIDH 000E6C                        _RXF15SIDL 000E6D  
                        postinc2 000FDE                 __CFG_FOSC$INTIO2 000000  
                     _testmodule 1B64           CAN_transmit@tempCanMsg 0013  
        __end_of_ECAN_Initialize 1AFA           ?_OSCILLATOR_Initialize 0001  
            start_initialization 1BD2  __size_of_PIN_MANAGER_Initialize 002A  
                    ?_testmodule 0001                 ?_ECAN_Initialize 0001  
         _PIN_MANAGER_Initialize 1B96         __end_of_convertCANid2Reg 196C  
                    __smallconst 0F00                      _COMSTATbits 000F71  
 convertCANid2Reg@tempPassedInID 0001                         _PIE5bits 000F76  
                       _PIR5bits 000F77                         _RXB0EIDH 000F63  
                       _RXB0EIDL 000F64                         _RXB1EIDH 000F33  
                       _RXB1EIDL 000F34              __size_of_testmodule 0032  
                       _RXB0SIDH 000F61                         _RXB0SIDL 000F62  
                       _RXB1SIDH 000F31                         _RXF0EIDH 000EE2  
                       _RXB1SIDL 000F32                         _RXF0EIDL 000EE3  
                       _RXF1EIDH 000EE6                         _RXF1EIDL 000EE7  
                       _RXF2EIDH 000EEA                         _RXF2EIDL 000EEB  
                       _RXF3EIDH 000EEE                         _RXF3EIDL 000EEF  
                       _RXF4EIDH 000EF2                         _RXF4EIDL 000EF3  
                       _RXF5EIDH 000EF6                         _RXF5EIDL 000EF7  
                       _RXF6EIDH 000E4A                         _RXF6EIDL 000E4B  
                       _RXF0SIDH 000EE0                         _RXF7EIDH 000E4E  
                       _RXF0SIDL 000EE1                         _RXF7EIDL 000E4F  
                       _TXB0EIDH 000F23                         _RXF1SIDH 000EE4  
                       _RXF8EIDH 000E52                         _TXB0EIDL 000F24  
                       _RXF1SIDL 000EE5                         _RXF8EIDL 000E53  
                       _TXB1EIDH 000F13                         _RXF2SIDH 000EE8  
                       _RXF9EIDH 000E56                         _TXB1EIDL 000F14  
                       _RXF2SIDL 000EE9                         _RXF9EIDL 000E57  
                       _TXB2EIDH 000F03                         _RXF3SIDH 000EEC  
                       _TXB2EIDL 000F04                         _RXF3SIDL 000EED  
                       _RXF4SIDH 000EF0                         _RXF4SIDL 000EF1  
                       _RXF5SIDH 000EF4                         _RXF5SIDL 000EF5  
                       _RXF6SIDH 000E48                         _RXF6SIDL 000E49  
                       _RXM0EIDH 000EFA                         _RXF7SIDH 000E4C  
                       _RXM0EIDL 000EFB                         _RXF7SIDL 000E4D  
                       _TXB0SIDH 000F21                         _RXM1EIDH 000EFE  
                       _RXF8SIDH 000E50                         _TXB0SIDL 000F22  
                       _RXM1EIDL 000EFF                         _RXF8SIDL 000E51  
                       _TXB1SIDH 000F11                         _RXF9SIDH 000E54  
                       _TXB1SIDL 000F12                         _RXF9SIDL 000E55  
                       _TXB2SIDH 000F01                         _TXB2SIDL 000F02  
                       _RXFBCON0 000E71                         _RXFBCON1 000E72  
                       _RXFBCON2 000E73                         _RXFBCON3 000E74  
                       _RXFBCON4 000E75                         _RXFBCON5 000E76  
                       _RXFBCON6 000E77                         _RXFBCON7 000E78  
                       _RXM0SIDH 000EF8                         _RXM0SIDL 000EF9  
                       _RXM1SIDH 000EFC                         _RXM1SIDL 000EFD  
               __CFG_SOSCSEL$DIG 000000                      _INTCON2bits 000FF1  
                  ??_testmodule1 0001                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0F00  
             __CFG_BOREN$SBORDIS 000000        convertCANid2Reg@canIdType 0005  
        ??_OSCILLATOR_Initialize 0001          convertCANid2Reg@wipSIDL 0012  
                  __size_of_main 0038                    ?_CAN_transmit 0013  
            __end_of_testmodule1 1B64              __CFG_INTOSCSEL$HIGH 000000  
                    _RXB0CONbits 000F60                      _RXB1CONbits 000F30  
                   ??_testmodule 0001          ?_PIN_MANAGER_Initialize 0001  
                    _TXB0CONbits 000F20                      _TXB1CONbits 000F10  
                    _TXB2CONbits 000F00                   ??_CAN_transmit 0015  
              ?_convertCANid2Reg 0001               __end_of_testmodule 1B96  
             __CFG_WDTPS$1048576 000000               ??_convertCANid2Reg 000E  
 __end_of_PIN_MANAGER_Initialize 1BC0              __CFG_BORPWR$ZPBORMV 000000  
                    _testmodule1 1B32  
