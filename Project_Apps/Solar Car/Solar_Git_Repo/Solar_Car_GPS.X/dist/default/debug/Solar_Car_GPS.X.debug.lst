

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr  5 17:13:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           ; Version 1.45
    63                           ; Generated 16/11/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F26K80 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataBANK0
    98  002A54                     __pidataBANK0:
    99                           	opt stack 0
   100                           
   101                           ;initializer for cvtGPStoDecimal@F15319
   102  002A54  30                 	db	48
   103  002A55  31                 	db	49
   104  002A56  32                 	db	50
   105  002A57  2E                 	db	46
   106  002A58  30                 	db	48
   107  002A59  31                 	db	49
   108  002A5A  32                 	db	50
   109  002A5B  33                 	db	51
   110  002A5C  34                 	db	52
   111  002A5D  35                 	db	53
   112  002A5E  00                 	db	0
   113  002A5F  00                 	db	0
   114                           
   115                           ;initializer for cvtGPStoDecimal@F15316
   116  002A60  30                 	db	48
   117  002A61  31                 	db	49
   118  002A62  2E                 	db	46
   119  002A63  30                 	db	48
   120  002A64  31                 	db	49
   121  002A65  32                 	db	50
   122  002A66  33                 	db	51
   123  002A67  34                 	db	52
   124  002A68  35                 	db	53
   125  002A69  00                 	db	0
   126  002A6A  00                 	db	0
   127                           
   128                           	psect	nvCOMRAM
   129  000048                     __pnvCOMRAM:
   130                           	opt stack 0
   131  000048                     _TMR0_InterruptHandler:
   132                           	opt stack 0
   133  000048                     	ds	2
   134  00004A                     _eusart1TxBufferRemaining:
   135                           	opt stack 0
   136  00004A                     	ds	1
   137  00004B                     _timer0ReloadVal:
   138                           	opt stack 0
   139  00004B                     	ds	1
   140  0000                     _BRGCON3	set	3653
   141  0000                     _BRGCON2	set	3652
   142  0000                     _BRGCON1	set	3651
   143  0000                     _RXF5SIDL	set	3829
   144  0000                     _RXF5SIDH	set	3828
   145  0000                     _RXF5EIDL	set	3831
   146  0000                     _RXF5EIDH	set	3830
   147  0000                     _RXF4SIDL	set	3825
   148  0000                     _RXF4SIDH	set	3824
   149  0000                     _RXF4EIDL	set	3827
   150  0000                     _RXF4EIDH	set	3826
   151  0000                     _RXF3SIDL	set	3821
   152  0000                     _RXF3SIDH	set	3820
   153  0000                     _RXF3EIDL	set	3823
   154  0000                     _RXF3EIDH	set	3822
   155  0000                     _RXF2SIDL	set	3817
   156  0000                     _RXF2SIDH	set	3816
   157  0000                     _RXF2EIDL	set	3819
   158  0000                     _RXF2EIDH	set	3818
   159  0000                     _RXF1SIDL	set	3813
   160  0000                     _RXF1SIDH	set	3812
   161  0000                     _RXF1EIDL	set	3815
   162  0000                     _RXF1EIDH	set	3814
   163  0000                     _RXF0SIDL	set	3809
   164  0000                     _RXF0SIDH	set	3808
   165  0000                     _RXF0EIDL	set	3811
   166  0000                     _RXF0EIDH	set	3810
   167  0000                     _RXM1SIDL	set	3837
   168  0000                     _RXM1SIDH	set	3836
   169  0000                     _RXM1EIDL	set	3839
   170  0000                     _RXM1EIDH	set	3838
   171  0000                     _RXM0SIDL	set	3833
   172  0000                     _RXM0SIDH	set	3832
   173  0000                     _RXM0EIDL	set	3835
   174  0000                     _RXM0EIDH	set	3834
   175  0000                     _RXB1D7	set	3901
   176  0000                     _RXB1D6	set	3900
   177  0000                     _RXB1D5	set	3899
   178  0000                     _RXB1D4	set	3898
   179  0000                     _RXB1D3	set	3897
   180  0000                     _RXB1D2	set	3896
   181  0000                     _RXB1D1	set	3895
   182  0000                     _RXB1D0	set	3894
   183  0000                     _RXB1DLC	set	3893
   184  0000                     _RXB1SIDH	set	3889
   185  0000                     _RXB1EIDL	set	3892
   186  0000                     _RXB1EIDH	set	3891
   187  0000                     _RXB1SIDL	set	3890
   188  0000                     _RXB1CONbits	set	3888
   189  0000                     _TXB2D7	set	3853
   190  0000                     _TXB2D6	set	3852
   191  0000                     _TXB2D5	set	3851
   192  0000                     _TXB2D4	set	3850
   193  0000                     _TXB2D3	set	3849
   194  0000                     _TXB2D2	set	3848
   195  0000                     _TXB2D1	set	3847
   196  0000                     _TXB2D0	set	3846
   197  0000                     _TXB2DLC	set	3845
   198  0000                     _TXB2SIDL	set	3842
   199  0000                     _TXB2SIDH	set	3841
   200  0000                     _TXB2EIDL	set	3844
   201  0000                     _TXB2EIDH	set	3843
   202  0000                     _TXB2CONbits	set	3840
   203  0000                     _TXB1D7	set	3869
   204  0000                     _TXB1D6	set	3868
   205  0000                     _TXB1D5	set	3867
   206  0000                     _TXB1D4	set	3866
   207  0000                     _TXB1D3	set	3865
   208  0000                     _TXB1D2	set	3864
   209  0000                     _TXB1D1	set	3863
   210  0000                     _TXB1D0	set	3862
   211  0000                     _TXB1DLC	set	3861
   212  0000                     _TXB1SIDL	set	3858
   213  0000                     _TXB1SIDH	set	3857
   214  0000                     _TXB1EIDL	set	3860
   215  0000                     _TXB1EIDH	set	3859
   216  0000                     _TXB1CONbits	set	3856
   217  0000                     _TXB0D7	set	3885
   218  0000                     _TXB0D6	set	3884
   219  0000                     _TXB0D5	set	3883
   220  0000                     _TXB0D4	set	3882
   221  0000                     _TXB0D3	set	3881
   222  0000                     _TXB0D2	set	3880
   223  0000                     _TXB0D1	set	3879
   224  0000                     _TXB0D0	set	3878
   225  0000                     _TXB0DLC	set	3877
   226  0000                     _TXB0SIDL	set	3874
   227  0000                     _TXB0SIDH	set	3873
   228  0000                     _TXB0EIDL	set	3876
   229  0000                     _TXB0EIDH	set	3875
   230  0000                     _TXB0CONbits	set	3872
   231  0000                     _WPUB	set	3931
   232  0000                     _ANCON1	set	3932
   233  0000                     _ANCON0	set	3933
   234  0000                     _COMSTATbits	set	3953
   235  0000                     _RXB0D7	set	3949
   236  0000                     _RXB0D6	set	3948
   237  0000                     _RXB0D5	set	3947
   238  0000                     _RXB0D4	set	3946
   239  0000                     _RXB0D3	set	3945
   240  0000                     _RXB0D2	set	3944
   241  0000                     _RXB0D1	set	3943
   242  0000                     _RXB0D0	set	3942
   243  0000                     _RXB0DLC	set	3941
   244  0000                     _RXB0SIDH	set	3937
   245  0000                     _RXB0EIDL	set	3940
   246  0000                     _RXB0EIDH	set	3939
   247  0000                     _RXB0SIDL	set	3938
   248  0000                     _RXB0CONbits	set	3936
   249  0000                     _ECANCON	set	3954
   250  0000                     _CANSTAT	set	3950
   251  0000                     _CANCON	set	3951
   252  0000                     _RCREG1	set	4014
   253  0000                     _RCSTA1bits	set	4011
   254  0000                     _TXREG1	set	4013
   255  0000                     _SPBRGH1	set	3965
   256  0000                     _SPBRG1	set	4015
   257  0000                     _TXSTA1	set	4012
   258  0000                     _RCSTA1	set	4011
   259  0000                     _BAUDCON1	set	4007
   260  0000                     _PIR1bits	set	3998
   261  0000                     _PIE1bits	set	3997
   262  0000                     _PIR5bits	set	3959
   263  0000                     _PIE5bits	set	3958
   264  0000                     _RCONbits	set	4048
   265  0000                     _T0CONbits	set	4053
   266  0000                     _T0CON	set	4053
   267  0000                     _INTCONbits	set	4082
   268  0000                     _TMR0L	set	4054
   269  0000                     _TMR0H	set	4055
   270  0000                     _REFOCON	set	3994
   271  0000                     _OSCTUNE	set	3995
   272  0000                     _OSCCON2	set	4050
   273  0000                     _OSCCON	set	4051
   274  0000                     _INTCON2bits	set	4081
   275  0000                     _TRISC	set	3988
   276  0000                     _TRISB	set	3987
   277  0000                     _TRISA	set	3986
   278  0000                     _LATC	set	3979
   279  0000                     _LATB	set	3978
   280  0000                     _LATA	set	3977
   281                           
   282                           	psect	smallconst
   283  000F00                     __psmallconst:
   284                           	opt stack 0
   285  000F00  00                 	db	0
   286  000F01                     STR_1:
   287  000F01  47                 	db	71	;'G'
   288  000F02  50                 	db	80	;'P'
   289  000F03  52                 	db	82	;'R'
   290  000F04  4D                 	db	77	;'M'
   291  000F05  43                 	db	67	;'C'
   292  000F06  00                 	db	0
   293  000F07  00                 	db	0
   294  0000                     
   295                           ; #config settings
   296  000F08  00                 	db	0	; dummy byte at the end
   297  0000                     
   298                           	psect	cinit
   299  002772                     __pcinit:
   300                           	opt stack 0
   301  002772                     start_initialization:
   302                           	opt stack 0
   303  002772                     __initialization:
   304                           	opt stack 0
   305                           
   306                           ; Initialize objects allocated to BANK0 (23 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308  002772  0E54               	movlw	low __pidataBANK0
   309  002774  6EF6               	movwf	tblptrl,c
   310  002776  0E2A               	movlw	high __pidataBANK0
   311  002778  6EF7               	movwf	tblptrh,c
   312  00277A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313  00277C  6EF8               	movwf	tblptru,c
   314  00277E  EE00  F0A0         	lfsr	0,__pdataBANK0
   315  002782  EE10 F017          	lfsr	1,23
   316  002786                     copy_data0:
   317  002786  0009               	tblrd		*+
   318  002788  CFF5 FFEE          	movff	tablat,postinc0
   319  00278C  50E5               	movf	postdec1,w,c
   320  00278E  50E1               	movf	fsr1l,w,c
   321  002790  E1FA               	bnz	copy_data0
   322                           
   323                           ; Clear objects allocated to BANK0 (8 bytes)
   324  002792  EE00  F0B7         	lfsr	0,__pbssBANK0
   325  002796  0E08               	movlw	8
   326  002798                     clear_0:
   327  002798  6AEE               	clrf	postinc0,c
   328  00279A  06E8               	decf	wreg,f,c
   329  00279C  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to COMRAM (13 bytes)
   332  00279E  EE00  F03B         	lfsr	0,__pbssCOMRAM
   333  0027A2  0E0D               	movlw	13
   334  0027A4                     clear_1:
   335  0027A4  6AEE               	clrf	postinc0,c
   336  0027A6  06E8               	decf	wreg,f,c
   337  0027A8  E1FD               	bnz	clear_1
   338  0027AA                     end_of_initialization:
   339                           	opt stack 0
   340  0027AA                     __end_of__initialization:
   341                           	opt stack 0
   342  0027AA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343  0027AC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344  0027AE  0100               	movlb	0
   345  0027B0  EF85  F007         	goto	_main	;jump to C main() function
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	bssCOMRAM
   356  00003B                     __pbssCOMRAM:
   357                           	opt stack 0
   358  00003B                     _eusart1TxBuffer:
   359                           	opt stack 0
   360  00003B                     	ds	8
   361  000043                     _eusart1RxCount:
   362                           	opt stack 0
   363  000043                     	ds	1
   364  000044                     _eusart1RxTail:
   365                           	opt stack 0
   366  000044                     	ds	1
   367  000045                     _eusart1RxHead:
   368                           	opt stack 0
   369  000045                     	ds	1
   370  000046                     _eusart1TxTail:
   371                           	opt stack 0
   372  000046                     	ds	1
   373  000047                     _eusart1TxHead:
   374                           	opt stack 0
   375  000047                     	ds	1
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bssBANK0
   386  0000B7                     __pbssBANK0:
   387                           	opt stack 0
   388  0000B7                     _eusart1RxBuffer:
   389                           	opt stack 0
   390  0000B7                     	ds	8
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	dataBANK0
   401  0000A0                     __pdataBANK0:
   402                           	opt stack 0
   403  0000A0                     cvtGPStoDecimal@F15319:
   404                           	opt stack 0
   405  0000A0                     	ds	12
   406  0000AC                     cvtGPStoDecimal@F15316:
   407                           	opt stack 0
   408  0000AC                     	ds	11
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	cstackBANK1
   419  000100                     __pcstackBANK1:
   420                           	opt stack 0
   421  000100                     main@i:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x0
   425  000100                     	ds	2
   426  000102                     main@testSize:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  000102                     	ds	2
   431  000104                     main@longi_data:
   432                           	opt stack 0
   433                           
   434                           ; 12 bytes @ 0x4
   435  000104                     	ds	12
   436  000110                     main@lati_data:
   437                           	opt stack 0
   438                           
   439                           ; 12 bytes @ 0x10
   440  000110                     	ds	12
   441  00011C                     main@value:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x1C
   445  00011C                     	ds	1
   446  00011D                     main@rawData:
   447                           	opt stack 0
   448                           
   449                           ; 60 bytes @ 0x1D
   450  00011D                     	ds	60
   451  000159                     main@testInt:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x59
   455  000159                     	ds	2
   456  00015B                     main@testInt_1429:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x5B
   460  00015B                     	ds	2
   461  00015D                     main@testString:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x5D
   465  00015D                     	ds	1
   466  00015E                     main@testCan:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x5E
   470  00015E                     	ds	2
   471  000160                     main@gpsByte:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x60
   475  000160                     	ds	1
   476  000161                     main@latDec:
   477                           	opt stack 0
   478                           
   479                           ; 3 bytes @ 0x61
   480  000161                     	ds	3
   481  000164                     main@longDec:
   482                           	opt stack 0
   483                           
   484                           ; 3 bytes @ 0x64
   485  000164                     	ds	3
   486  000167                     main@count:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x67
   490  000167                     	ds	2
   491  000169                     main@count_1418:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x69
   495  000169                     	ds	2
   496  00016B                     main@longitude:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x6B
   500  00016B                     	ds	3
   501  00016E                     main@i_1423:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x6E
   505  00016E                     	ds	2
   506  000170                     main@i_1424:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x70
   510  000170                     	ds	2
   511  000172                     main@i_1427:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x72
   515  000172                     	ds	2
   516  000174                     main@i_1428:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x74
   520  000174                     	ds	2
   521  000176                     main@testString_1422:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x76
   525  000176                     	ds	1
   526  000177                     main@testString_1426:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x77
   530  000177                     	ds	1
   531  000178                     main@gotGPS:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x78
   535  000178                     	ds	1
   536  000179                     main@latitude:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x79
   540  000179                     	ds	3
   541  00017C                     main@data:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x7C
   545  00017C                     	ds	1
   546  00017D                     main@gpsMSG:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x7D
   550  00017D                     	ds	2
   551  00017F                     main@rawCycle:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x7F
   555  00017F                     	ds	2
   556  000181                     main@dataCount:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x81
   560  000181                     	ds	2
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           wreg	equ	0xFE8
   567                           postdec1	equ	0xFE5
   568                           fsr1l	equ	0xFE1
   569                           
   570                           	psect	cstackBANK0
   571  000060                     __pcstackBANK0:
   572                           	opt stack 0
   573  000060                     ?_strtod:
   574                           	opt stack 0
   575  000060                     strtod@s:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x0
   579  000060                     	ds	2
   580  000062                     strtod@res:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x2
   584  000062                     	ds	2
   585  000064                     strtod@eexp:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x4
   589  000064                     	ds	1
   590  000065                     strtod@flags:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x5
   594  000065                     	ds	1
   595  000066                     strtod@expon:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x6
   599  000066                     	ds	1
   600  000067                     strtod@_u:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0x7
   604  000067                     	ds	4
   605  00006B                     ?_atof:
   606                           	opt stack 0
   607  00006B                     atof@s:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xB
   611  00006B                     	ds	3
   612  00006E                     ?_cvtGPStoDecimal:
   613                           	opt stack 0
   614  00006E                     cvtGPStoDecimal@inputGPS:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0xE
   618  00006E                     	ds	2
   619  000070                     cvtGPStoDecimal@latMode:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x10
   623  000070                     	ds	1
   624  000071                     cvtGPStoDecimal@tempStr_1459:
   625                           	opt stack 0
   626                           
   627                           ; 12 bytes @ 0x11
   628  000071                     	ds	12
   629  00007D                     cvtGPStoDecimal@tempStr:
   630                           	opt stack 0
   631                           
   632                           ; 11 bytes @ 0x1D
   633  00007D                     	ds	11
   634  000088                     _cvtGPStoDecimal$1457:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x28
   638  000088                     	ds	3
   639  00008B                     _cvtGPStoDecimal$1460:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x2B
   643  00008B                     	ds	3
   644  00008E                     cvtGPStoDecimal@decPart:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x2E
   648  00008E                     	ds	3
   649  000091                     _cvtGPStoDecimal$2126:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x31
   653  000091                     	ds	3
   654  000094                     cvtGPStoDecimal@intPart:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x34
   658  000094                     	ds	3
   659  000097                     cvtGPStoDecimal@convertedGPS:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x37
   663  000097                     	ds	3
   664  00009A                     ??_main:
   665                           
   666                           ; 1 bytes @ 0x3A
   667  00009A                     	ds	6
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           postdec1	equ	0xFE5
   675                           fsr1l	equ	0xFE1
   676                           
   677                           	psect	cstackCOMRAM
   678  000001                     __pcstackCOMRAM:
   679                           	opt stack 0
   680  000001                     ??_INTERRUPT_InterruptManager:
   681  000001                     
   682                           ; 1 bytes @ 0x0
   683  000001                     	ds	18
   684  000013                     ??_isspace:
   685  000013                     ??_isdigit:
   686  000013                     ??_isupper:
   687  000013                     ?_strlen:
   688                           	opt stack 0
   689  000013                     ?___ftpack:
   690                           	opt stack 0
   691  000013                     ?___ftneg:
   692                           	opt stack 0
   693  000013                     ?___lmul:
   694                           	opt stack 0
   695  000013                     ?___fttol:
   696                           	opt stack 0
   697  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   698                           	opt stack 0
   699  000013                     EUSART1_Read@timeOutCount:
   700                           	opt stack 0
   701  000013                     fillString@outputString:
   702                           	opt stack 0
   703  000013                     memcpy@d1:
   704                           	opt stack 0
   705  000013                     memset@p1:
   706                           	opt stack 0
   707  000013                     strlen@s:
   708                           	opt stack 0
   709  000013                     ___ftpack@arg:
   710                           	opt stack 0
   711  000013                     ___ftge@ff1:
   712                           	opt stack 0
   713  000013                     ___ftneg@f1:
   714                           	opt stack 0
   715  000013                     ___fttol@f1:
   716                           	opt stack 0
   717  000013                     convertCANid2Reg@tempPassedInID:
   718                           	opt stack 0
   719  000013                     ___lmul@multiplier:
   720                           	opt stack 0
   721                           
   722                           ; 4 bytes @ 0x12
   723  000013                     	ds	1
   724  000014                     _isdigit$1718:
   725                           	opt stack 0
   726  000014                     _isspace$1721:
   727                           	opt stack 0
   728  000014                     _isupper$1724:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x13
   732  000014                     	ds	1
   733  000015                     ??_strlen:
   734  000015                     EUSART1_Read@readValue:
   735                           	opt stack 0
   736  000015                     isdigit@c:
   737                           	opt stack 0
   738  000015                     isspace@c:
   739                           	opt stack 0
   740  000015                     isupper@c:
   741                           	opt stack 0
   742  000015                     fillString@stringSource:
   743                           	opt stack 0
   744  000015                     memcpy@s1:
   745                           	opt stack 0
   746  000015                     memset@c:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     ??_isalpha:
   752  000016                     ___ftpack@exp:
   753                           	opt stack 0
   754  000016                     ___ftge@ff2:
   755                           	opt stack 0
   756                           
   757                           ; 3 bytes @ 0x15
   758  000016                     	ds	1
   759  000017                     ??___fttol:
   760  000017                     convertCANid2Reg@canIdType:
   761                           	opt stack 0
   762  000017                     ___ftpack@sign:
   763                           	opt stack 0
   764  000017                     _isalpha$1715:
   765                           	opt stack 0
   766  000017                     fillString@startOfCycle:
   767                           	opt stack 0
   768  000017                     memcpy@n:
   769                           	opt stack 0
   770  000017                     memset@n:
   771                           	opt stack 0
   772  000017                     strlen@cp:
   773                           	opt stack 0
   774  000017                     ___lmul@multiplicand:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x16
   778  000017                     	ds	1
   779  000018                     ??___ftpack:
   780  000018                     isalpha@c:
   781                           	opt stack 0
   782  000018                     convertCANid2Reg@passedInEIDH:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x17
   786  000018                     	ds	1
   787  000019                     ??_isalnum:
   788  000019                     ??___ftge:
   789  000019                     getString@testSize:
   790                           	opt stack 0
   791  000019                     fillString@fillCycle:
   792                           	opt stack 0
   793  000019                     memcpy@d:
   794                           	opt stack 0
   795  000019                     memset@p:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x18
   799  000019                     	ds	1
   800  00001A                     _isalnum$1707:
   801                           	opt stack 0
   802  00001A                     convertCANid2Reg@passedInEIDL:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x19
   806  00001A                     	ds	1
   807  00001B                     ??_getString:
   808  00001B                     ?___ftadd:
   809                           	opt stack 0
   810  00001B                     ?___ftmul:
   811                           	opt stack 0
   812  00001B                     ?___altoft:
   813                           	opt stack 0
   814  00001B                     isalnum@c:
   815                           	opt stack 0
   816  00001B                     fillString@commaFound:
   817                           	opt stack 0
   818  00001B                     memcpy@s:
   819                           	opt stack 0
   820  00001B                     ___ftadd@f1:
   821                           	opt stack 0
   822  00001B                     ___ftmul@f1:
   823                           	opt stack 0
   824  00001B                     ___lmul@product:
   825                           	opt stack 0
   826  00001B                     ___altoft@c:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x1A
   830  00001B                     	ds	1
   831  00001C                     ___fttol@sign1:
   832                           	opt stack 0
   833  00001C                     convertCANid2Reg@passedInSIDH:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x1B
   837  00001C                     	ds	1
   838  00001D                     memcpy@tmp:
   839                           	opt stack 0
   840  00001D                     getString@testCycle:
   841                           	opt stack 0
   842  00001D                     fillString@findCycle:
   843                           	opt stack 0
   844  00001D                     ___fttol@lval:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x1C
   848  00001D                     	ds	1
   849  00001E                     convertCANid2Reg@passedInSIDL:
   850                           	opt stack 0
   851  00001E                     ___ftadd@f2:
   852                           	opt stack 0
   853  00001E                     ___ftmul@f2:
   854                           	opt stack 0
   855                           
   856                           ; 3 bytes @ 0x1D
   857  00001E                     	ds	1
   858  00001F                     ??___altoft:
   859  00001F                     fillString@currentChar:
   860                           	opt stack 0
   861  00001F                     getString@testString:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x1E
   865  00001F                     	ds	1
   866  000020                     ??_convertCANid2Reg:
   867                           
   868                           ; 1 bytes @ 0x1F
   869  000020                     	ds	1
   870  000021                     ??___ftadd:
   871  000021                     ??___ftmul:
   872  000021                     ?_strcmp:
   873                           	opt stack 0
   874  000021                     ___fttol@exp1:
   875                           	opt stack 0
   876  000021                     strcmp@s1:
   877                           	opt stack 0
   878                           
   879                           ; 3 bytes @ 0x20
   880  000021                     	ds	1
   881  000022                     ?___attoft:
   882                           	opt stack 0
   883  000022                     ___attoft@c:
   884                           	opt stack 0
   885                           
   886                           ; 3 bytes @ 0x21
   887  000022                     	ds	1
   888  000023                     ___altoft@exp:
   889                           	opt stack 0
   890                           
   891                           ; 1 bytes @ 0x22
   892  000023                     	ds	1
   893  000024                     convertCANid2Reg@wipSIDL:
   894                           	opt stack 0
   895  000024                     ___altoft@sign:
   896                           	opt stack 0
   897  000024                     ___ftadd@sign:
   898                           	opt stack 0
   899  000024                     ___ftmul@exp:
   900                           	opt stack 0
   901  000024                     strcmp@s2:
   902                           	opt stack 0
   903                           
   904                           ; 3 bytes @ 0x23
   905  000024                     	ds	1
   906  000025                     ___attoft@sign:
   907                           	opt stack 0
   908  000025                     ___ftadd@exp2:
   909                           	opt stack 0
   910  000025                     CAN_transmit@tempCanMsg:
   911                           	opt stack 0
   912  000025                     ___ftmul@f3_as_product:
   913                           	opt stack 0
   914                           
   915                           ; 3 bytes @ 0x24
   916  000025                     	ds	1
   917  000026                     ___ftadd@exp1:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x25
   921  000026                     	ds	1
   922  000027                     ??_strcmp:
   923  000027                     ?_modf:
   924                           	opt stack 0
   925  000027                     CAN_transmit@returnValue:
   926                           	opt stack 0
   927  000027                     modf@value:
   928                           	opt stack 0
   929                           
   930                           ; 3 bytes @ 0x26
   931  000027                     	ds	1
   932  000028                     CAN_transmit@tempEIDH:
   933                           	opt stack 0
   934  000028                     ___ftmul@cntr:
   935                           	opt stack 0
   936  000028                     strcmp@r:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x27
   940  000028                     	ds	1
   941  000029                     CAN_transmit@tempEIDL:
   942                           	opt stack 0
   943  000029                     ___ftmul@sign:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x28
   947  000029                     	ds	1
   948  00002A                     ?___ftdiv:
   949                           	opt stack 0
   950  00002A                     CAN_transmit@tempSIDH:
   951                           	opt stack 0
   952  00002A                     modf@iptr:
   953                           	opt stack 0
   954  00002A                     ___ftdiv@f1:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0x29
   958  00002A                     	ds	1
   959  00002B                     CAN_transmit@tempSIDL:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x2A
   963  00002B                     	ds	1
   964  00002C                     
   965                           ; 1 bytes @ 0x2B
   966  00002C                     	ds	1
   967  00002D                     ___ftdiv@f2:
   968                           	opt stack 0
   969                           
   970                           ; 3 bytes @ 0x2C
   971  00002D                     	ds	3
   972  000030                     ??___ftdiv:
   973                           
   974                           ; 1 bytes @ 0x2F
   975  000030                     	ds	3
   976  000033                     ___ftdiv@cntr:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x32
   980  000033                     	ds	1
   981  000034                     ___ftdiv@f3:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x33
   985  000034                     	ds	3
   986  000037                     ___ftdiv@exp:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x36
   990  000037                     	ds	1
   991  000038                     ___ftdiv@sign:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x37
   995  000038                     	ds	1
   996  000039                     ??_strtod:
   997                           
   998                           ; 1 bytes @ 0x38
   999  000039                     	ds	1
  1000  00003A                     
  1001                           ; 1 bytes @ 0x39
  1002  00003A                     	ds	1
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           postinc0	equ	0xFEE
  1008                           wreg	equ	0xFE8
  1009                           postdec1	equ	0xFE5
  1010                           fsr1l	equ	0xFE1
  1011                           
  1012 ;;
  1013 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1014 ;;
  1015 ;; *************** function _main *****************
  1016 ;; Defined at:
  1017 ;;		line 62 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  testInt         2   91[BANK1 ] int 
  1022 ;;  i               2  116[BANK1 ] int 
  1023 ;;  i               2  114[BANK1 ] int 
  1024 ;;  testInt         2   89[BANK1 ] int 
  1025 ;;  i               2  112[BANK1 ] int 
  1026 ;;  i               2  110[BANK1 ] int 
  1027 ;;  testString      1  119[BANK1 ] unsigned char 
  1028 ;;  testString      1  118[BANK1 ] unsigned char 
  1029 ;;  dataCount       2  129[BANK1 ] int 
  1030 ;;  testCan         2   94[BANK1 ] int 
  1031 ;;  testSize        2    2[BANK1 ] unsigned int 
  1032 ;;  gpsByte         1   96[BANK1 ] unsigned char 
  1033 ;;  rawCycle        2  127[BANK1 ] int 
  1034 ;;  longDec         3  100[BANK1 ] float 
  1035 ;;  latDec          3   97[BANK1 ] float 
  1036 ;;  count           2  105[BANK1 ] int 
  1037 ;;  count           2  103[BANK1 ] int 
  1038 ;;  rawData        60   29[BANK1 ] volatile unsigned char [
  1039 ;;  lati_data      12   16[BANK1 ] unsigned char [12]
  1040 ;;  longi_data     12    4[BANK1 ] unsigned char [12]
  1041 ;;  latitude        3  121[BANK1 ] struct coordinate
  1042 ;;  longitude       3  107[BANK1 ] struct coordinate
  1043 ;;  gpsMSG          2  125[BANK1 ] PTR struct .
  1044 ;;  i               2    0[BANK1 ] unsigned int 
  1045 ;;  pos             2    0        unsigned int 
  1046 ;;  data            1  124[BANK1 ] unsigned char 
  1047 ;;  gotGPS          1  120[BANK1 ] unsigned char 
  1048 ;;  testString      1   93[BANK1 ] unsigned char 
  1049 ;;  value           1   28[BANK1 ] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Locals:         0       0     131       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;      Totals:         0       6     131       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;Total ram usage:      137 bytes
  1064 ;; Hardware stack levels required when called:    8
  1065 ;; This function calls:
  1066 ;;		_CAN_transmit
  1067 ;;		_EUSART1_Read
  1068 ;;		_SYSTEM_Initialize
  1069 ;;		___fttol
  1070 ;;		_cvtGPStoDecimal
  1071 ;;		_fillString
  1072 ;;		_getString
  1073 ;;		_isalnum
  1074 ;;		_memset
  1075 ;;		_strcmp
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text0
  1082  000F0A                     __ptext0:
  1083                           	opt stack 0
  1084  000F0A                     _main:
  1085                           	opt stack 23
  1086                           
  1087                           ;main.c: 65: SYSTEM_Initialize();
  1088                           
  1089                           ;incstack = 0
  1090  000F0A  EC36  F015         	call	_SYSTEM_Initialize	;wreg free
  1091                           
  1092                           ;main.c: 72: (INTCONbits.GIE = 1);
  1093  000F0E  8EF2               	bsf	intcon,7,c	;volatile
  1094                           
  1095                           ;main.c: 78: (INTCONbits.PEIE = 1);
  1096  000F10  8CF2               	bsf	intcon,6,c	;volatile
  1097                           
  1098                           ;main.c: 84: unsigned char longi_data[12];
  1099                           ;main.c: 85: unsigned char lati_data[12];
  1100                           ;main.c: 86: unsigned char data,value=0;
  1101  000F12  0E00               	movlw	0
  1102  000F14  0101               	movlb	1	; () banked
  1103  000F16  6F1C               	movwf	main@value& (0+255),b
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;main.c: 92: gpsMSG->frame.dlc = 8;
  1107  000F18  0E00               	movlw	0
  1108  000F1A  6F01               	movwf	(main@i+1)& (0+255),b
  1109  000F1C  0E00               	movlw	0
  1110  000F1E  6F00               	movwf	main@i& (0+255),b
  1111                           
  1112                           ; BSR set to: 1
  1113                           ;main.c: 94: union coordinate{
  1114                           ;main.c: 95: float decimal;
  1115                           ;main.c: 96: unsigned char byteArray[sizeof(float)];
  1116                           ;main.c: 97: };
  1117                           ;main.c: 99: union coordinate latitude;
  1118                           ;main.c: 100: union coordinate longitude;
  1119                           ;main.c: 102: volatile unsigned char rawData[60];
  1120                           ;main.c: 104: bool gotGPS = 0;
  1121  000F20  0E00               	movlw	0
  1122  000F22  6F78               	movwf	main@gotGPS& (0+255),b
  1123                           
  1124                           ; BSR set to: 1
  1125                           ;main.c: 105: unsigned char testString = "GPRMC\0";
  1126  000F24  0E01               	movlw	low STR_1
  1127  000F26  6F5D               	movwf	main@testString& (0+255),b
  1128  000F28                     
  1129                           ;main.c: 110: {
  1130                           ;main.c: 118: gotGPS = 0;
  1131                           
  1132                           ; BSR set to: 1
  1133  000F28  0E00               	movlw	0
  1134  000F2A  0101               	movlb	1	; () banked
  1135  000F2C  6F78               	movwf	main@gotGPS& (0+255),b
  1136                           
  1137                           ; BSR set to: 1
  1138                           ;main.c: 119: data=EUSART1_Read();
  1139  000F2E  EC6F  F013         	call	_EUSART1_Read	;wreg free
  1140  000F32  0101               	movlb	1	; () banked
  1141  000F34  6F7C               	movwf	main@data& (0+255),b
  1142                           
  1143                           ; BSR set to: 1
  1144                           ;main.c: 122: if(data=='$')
  1145  000F36  0E24               	movlw	36
  1146  000F38  197C               	xorwf	main@data& (0+255),w,b
  1147  000F3A  A4D8               	btfss	status,2,c
  1148  000F3C  D022               	goto	l529
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 123: {
  1152                           ;main.c: 125: int count = 0;
  1153  000F3E  0E00               	movlw	0
  1154  000F40  6F68               	movwf	(main@count+1)& (0+255),b
  1155  000F42  0E00               	movlw	0
  1156  000F44  6F67               	movwf	main@count& (0+255),b
  1157                           
  1158                           ; BSR set to: 1
  1159                           ;main.c: 126: data = EUSART1_Read();
  1160  000F46  EC6F  F013         	call	_EUSART1_Read	;wreg free
  1161  000F4A  D014               	goto	L1
  1162  000F4C                     
  1163                           ; BSR set to: 1
  1164                           ;main.c: 128: {
  1165                           ;main.c: 129: if(count < 60)
  1166                           
  1167                           ; BSR set to: 1
  1168  000F4C  BF68               	btfsc	(main@count+1)& (0+255),7,b
  1169  000F4E  D006               	goto	u4720
  1170  000F50  5168               	movf	(main@count+1)& (0+255),w,b
  1171  000F52  E15D               	bnz	l4439
  1172  000F54  0E3C               	movlw	60
  1173  000F56  5D67               	subwf	main@count& (0+255),w,b
  1174  000F58  B0D8               	btfsc	status,0,c
  1175  000F5A  D059               	goto	u4760
  1176  000F5C                     u4720:
  1177                           
  1178                           ; BSR set to: 1
  1179                           ;main.c: 130: {
  1180                           ;main.c: 131: rawData[count] = data;
  1181  000F5C  0E1D               	movlw	low main@rawData
  1182  000F5E  2567               	addwf	main@count& (0+255),w,b
  1183  000F60  6ED9               	movwf	fsr2l,c
  1184  000F62  0E01               	movlw	high main@rawData
  1185  000F64  2168               	addwfc	(main@count+1)& (0+255),w,b
  1186  000F66  6EDA               	movwf	fsr2h,c
  1187  000F68  C17C  FFDF         	movff	main@data,indf2
  1188                           
  1189                           ; BSR set to: 1
  1190                           ;main.c: 132: count++;
  1191  000F6C  4B67               	infsnz	main@count& (0+255),f,b
  1192  000F6E  2B68               	incf	(main@count+1)& (0+255),f,b
  1193                           
  1194                           ; BSR set to: 1
  1195                           ;main.c: 133: data = EUSART1_Read();
  1196  000F70  EC6F  F013         	call	_EUSART1_Read	;wreg free
  1197  000F74                     L1:
  1198  000F74  0101               	movlb	1	; () banked
  1199  000F76  6F7C               	movwf	main@data& (0+255),b
  1200                           
  1201                           ; BSR set to: 1
  1202                           
  1203                           ; BSR set to: 1
  1204                           
  1205                           ; BSR set to: 1
  1206                           
  1207                           ; BSR set to: 1
  1208                           ;main.c: 135: else
  1209                           ;main.c: 136: {
  1210                           ;main.c: 137: break;
  1211                           
  1212                           ;main.c: 134: }
  1213  000F78  0E2A               	movlw	42
  1214  000F7A  197C               	xorwf	main@data& (0+255),w,b
  1215  000F7C  B4D8               	btfsc	status,2,c
  1216  000F7E  D047               	goto	u4760
  1217  000F80  D7E5               	goto	l531
  1218  000F82                     l529:
  1219                           
  1220                           ; BSR set to: 1
  1221                           ;main.c: 141: else if(strcmp(getString(4),testString) == 0)
  1222                           
  1223                           ; BSR set to: 1
  1224  000F82  0E00               	movlw	0
  1225  000F84  6E1A               	movwf	getString@testSize+1,c
  1226  000F86  0E04               	movlw	4
  1227  000F88  6E19               	movwf	getString@testSize,c
  1228  000F8A  EC14  F013         	call	_getString	;wreg free
  1229  000F8E  0100               	movlb	0	; () banked
  1230  000F90  6F9A               	movwf	??_main& (0+255),b
  1231  000F92  6B9B               	clrf	(??_main+1)& (0+255),b
  1232  000F94  6B9C               	clrf	(??_main+2)& (0+255),b
  1233  000F96  C09A  F021         	movff	??_main,strcmp@s1
  1234  000F9A  C09B  F022         	movff	??_main+1,strcmp@s1+1
  1235  000F9E  C09C  F023         	movff	??_main+2,strcmp@s1+2
  1236  000FA2  0101               	movlb	1	; () banked
  1237  000FA4  515D               	movf	main@testString& (0+255),w,b
  1238  000FA6  0100               	movlb	0	; () banked
  1239  000FA8  6F9D               	movwf	(??_main+3)& (0+255),b
  1240  000FAA  6B9E               	clrf	(??_main+4)& (0+255),b
  1241  000FAC  6B9F               	clrf	(??_main+5)& (0+255),b
  1242  000FAE  C09D  F024         	movff	??_main+3,strcmp@s2
  1243  000FB2  C09E  F025         	movff	??_main+4,strcmp@s2+1
  1244  000FB6  C09F  F026         	movff	??_main+5,strcmp@s2+2
  1245  000FBA  ECDF  F012         	call	_strcmp	;wreg free
  1246  000FBE  5021               	movf	?_strcmp,w,c
  1247  000FC0  1022               	iorwf	?_strcmp+1,w,c
  1248  000FC2  A4D8               	btfss	status,2,c
  1249  000FC4  D024               	goto	u4760
  1250                           
  1251                           ;main.c: 142: {
  1252                           ;main.c: 143: gotGPS = 1;
  1253  000FC6  0E01               	movlw	1
  1254  000FC8  0101               	movlb	1	; () banked
  1255  000FCA  6F78               	movwf	main@gotGPS& (0+255),b
  1256                           
  1257                           ;main.c: 144: int count = 0;
  1258  000FCC  0E00               	movlw	0
  1259  000FCE  6F6A               	movwf	(main@count_1418+1)& (0+255),b
  1260  000FD0  0E00               	movlw	0
  1261  000FD2  6F69               	movwf	main@count_1418& (0+255),b
  1262                           
  1263                           ; BSR set to: 1
  1264                           ;main.c: 145: data = EUSART1_Read();
  1265  000FD4  EC6F  F013         	call	_EUSART1_Read	;wreg free
  1266  000FD8  D014               	goto	L2
  1267  000FDA                     
  1268                           ; BSR set to: 1
  1269                           ;main.c: 147: {
  1270                           ;main.c: 148: if(count < 60)
  1271                           
  1272                           ; BSR set to: 1
  1273  000FDA  BF6A               	btfsc	(main@count_1418+1)& (0+255),7,b
  1274  000FDC  D006               	goto	u4750
  1275  000FDE  516A               	movf	(main@count_1418+1)& (0+255),w,b
  1276  000FE0  E116               	bnz	l4439
  1277  000FE2  0E3C               	movlw	60
  1278  000FE4  5D69               	subwf	main@count_1418& (0+255),w,b
  1279  000FE6  B0D8               	btfsc	status,0,c
  1280  000FE8  D012               	goto	u4760
  1281  000FEA                     u4750:
  1282                           
  1283                           ; BSR set to: 1
  1284                           ;main.c: 149: {
  1285                           ;main.c: 150: rawData[count] = data;
  1286  000FEA  0E1D               	movlw	low main@rawData
  1287  000FEC  2569               	addwf	main@count_1418& (0+255),w,b
  1288  000FEE  6ED9               	movwf	fsr2l,c
  1289  000FF0  0E01               	movlw	high main@rawData
  1290  000FF2  216A               	addwfc	(main@count_1418+1)& (0+255),w,b
  1291  000FF4  6EDA               	movwf	fsr2h,c
  1292  000FF6  C17C  FFDF         	movff	main@data,indf2
  1293                           
  1294                           ; BSR set to: 1
  1295                           ;main.c: 151: count++;
  1296  000FFA  4B69               	infsnz	main@count_1418& (0+255),f,b
  1297  000FFC  2B6A               	incf	(main@count_1418+1)& (0+255),f,b
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 152: data = EUSART1_Read();
  1301  000FFE  EC6F  F013         	call	_EUSART1_Read	;wreg free
  1302  001002                     L2:
  1303  001002  0101               	movlb	1	; () banked
  1304  001004  6F7C               	movwf	main@data& (0+255),b
  1305                           
  1306                           ; BSR set to: 1
  1307                           
  1308                           ; BSR set to: 1
  1309                           
  1310                           ; BSR set to: 1
  1311                           
  1312                           ; BSR set to: 1
  1313                           ;main.c: 154: else
  1314                           ;main.c: 155: {
  1315                           ;main.c: 156: break;
  1316                           
  1317                           ;main.c: 153: }
  1318  001006  0E2A               	movlw	42
  1319  001008  197C               	xorwf	main@data& (0+255),w,b
  1320  00100A  A4D8               	btfss	status,2,c
  1321  00100C  D7E6               	goto	l538
  1322  00100E                     u4760:
  1323  00100E                     l4439:
  1324                           
  1325                           ;main.c: 157: }
  1326                           ;main.c: 158: }
  1327                           ;main.c: 159: }
  1328                           ;main.c: 162: if(gotGPS)
  1329  00100E  0101               	movlb	1	; () banked
  1330  001010  5178               	movf	main@gotGPS& (0+255),w,b
  1331  001012  B4D8               	btfsc	status,2,c
  1332  001014  D1BB               	goto	l542
  1333                           
  1334                           ; BSR set to: 1
  1335                           ;main.c: 163: {
  1336                           ;main.c: 164: float latDec = 0,longDec = 0;
  1337  001016  0E00               	movlw	0
  1338  001018  6F61               	movwf	main@latDec& (0+255),b
  1339  00101A  0E00               	movlw	0
  1340  00101C  6F62               	movwf	(main@latDec+1)& (0+255),b
  1341  00101E  0E00               	movlw	0
  1342  001020  6F63               	movwf	(main@latDec+2)& (0+255),b
  1343  001022  0E00               	movlw	0
  1344  001024  6F64               	movwf	main@longDec& (0+255),b
  1345  001026  0E00               	movlw	0
  1346  001028  6F65               	movwf	(main@longDec+1)& (0+255),b
  1347  00102A  0E00               	movlw	0
  1348  00102C  6F66               	movwf	(main@longDec+2)& (0+255),b
  1349                           
  1350                           ;main.c: 166: gotGPS = 0;
  1351  00102E  0E00               	movlw	0
  1352  001030  6F78               	movwf	main@gotGPS& (0+255),b
  1353                           
  1354                           ;main.c: 167: for(int rawCycle = 0;rawCycle<60;rawCycle++)
  1355  001032  0E00               	movlw	0
  1356  001034  6F80               	movwf	(main@rawCycle+1)& (0+255),b
  1357  001036  0E00               	movlw	0
  1358  001038  6F7F               	movwf	main@rawCycle& (0+255),b
  1359                           
  1360                           ; BSR set to: 1
  1361  00103A  BF80               	btfsc	(main@rawCycle+1)& (0+255),7,b
  1362  00103C  D008               	goto	l543
  1363  00103E  5180               	movf	(main@rawCycle+1)& (0+255),w,b
  1364  001040  E105               	bnz	u4780
  1365  001042  0E3C               	movlw	60
  1366  001044  5D7F               	subwf	main@rawCycle& (0+255),w,b
  1367  001046  B0D8               	btfsc	status,0,c
  1368  001048  D130               	goto	u5090
  1369  00104A  D001               	goto	l543
  1370  00104C                     u4780:
  1371                           
  1372                           ; BSR set to: 1
  1373  00104C  D12E               	goto	u5090
  1374  00104E                     l543:
  1375                           
  1376                           ; BSR set to: 1
  1377                           ;main.c: 168: {
  1378                           ;main.c: 169: if(rawData[rawCycle] == 'N' || rawData[rawCycle] == 'S')
  1379                           
  1380                           ; BSR set to: 1
  1381  00104E  0E1D               	movlw	low main@rawData
  1382  001050  257F               	addwf	main@rawCycle& (0+255),w,b
  1383  001052  6ED9               	movwf	fsr2l,c
  1384  001054  0E01               	movlw	high main@rawData
  1385  001056  2180               	addwfc	(main@rawCycle+1)& (0+255),w,b
  1386  001058  6EDA               	movwf	fsr2h,c
  1387  00105A  0E4E               	movlw	78
  1388  00105C  18DE               	xorwf	postinc2,w,c
  1389  00105E  B4D8               	btfsc	status,2,c
  1390  001060  D00A               	goto	u4800
  1391                           
  1392                           ; BSR set to: 1
  1393  001062  0E1D               	movlw	low main@rawData
  1394  001064  257F               	addwf	main@rawCycle& (0+255),w,b
  1395  001066  6ED9               	movwf	fsr2l,c
  1396  001068  0E01               	movlw	high main@rawData
  1397  00106A  2180               	addwfc	(main@rawCycle+1)& (0+255),w,b
  1398  00106C  6EDA               	movwf	fsr2h,c
  1399  00106E  0E53               	movlw	83
  1400  001070  18DE               	xorwf	postinc2,w,c
  1401  001072  A4D8               	btfss	status,2,c
  1402  001074  D07D               	goto	l545
  1403  001076                     u4800:
  1404                           
  1405                           ; BSR set to: 1
  1406                           ;main.c: 170: {
  1407                           ;main.c: 171: fillString(longi_data,rawData,rawCycle);
  1408                           
  1409                           ; BSR set to: 1
  1410  001076  0E04               	movlw	low main@longi_data
  1411  001078  6E13               	movwf	fillString@outputString,c
  1412  00107A  0E01               	movlw	high main@longi_data
  1413  00107C  6E14               	movwf	fillString@outputString+1,c
  1414  00107E  0E1D               	movlw	low main@rawData
  1415  001080  6E15               	movwf	fillString@stringSource,c
  1416  001082  0E01               	movlw	high main@rawData
  1417  001084  6E16               	movwf	fillString@stringSource+1,c
  1418  001086  C17F  F017         	movff	main@rawCycle,fillString@startOfCycle
  1419  00108A  C180  F018         	movff	main@rawCycle+1,fillString@startOfCycle+1
  1420  00108E  ECA7  F012         	call	_fillString	;wreg free
  1421                           
  1422                           ;main.c: 172: bool testString = 0;
  1423  001092  0E00               	movlw	0
  1424  001094  0101               	movlb	1	; () banked
  1425  001096  6F76               	movwf	main@testString_1422& (0+255),b
  1426                           
  1427                           ; BSR set to: 1
  1428                           ;main.c: 174: for(int i = 0;i<5;i++)
  1429  001098  0E00               	movlw	0
  1430  00109A  6F6F               	movwf	(main@i_1423+1)& (0+255),b
  1431  00109C  0E00               	movlw	0
  1432  00109E  6F6E               	movwf	main@i_1423& (0+255),b
  1433  0010A0                     l4457:
  1434                           
  1435                           ; BSR set to: 1
  1436  0010A0  BF6F               	btfsc	(main@i_1423+1)& (0+255),7,b
  1437  0010A2  D006               	goto	l548
  1438  0010A4  516F               	movf	(main@i_1423+1)& (0+255),w,b
  1439  0010A6  E11A               	bnz	l4471
  1440  0010A8  0E05               	movlw	5
  1441  0010AA  5D6E               	subwf	main@i_1423& (0+255),w,b
  1442  0010AC  B0D8               	btfsc	status,0,c
  1443  0010AE  D016               	goto	u4850
  1444  0010B0                     l548:
  1445                           
  1446                           ; BSR set to: 1
  1447                           ;main.c: 175: {
  1448                           ;main.c: 176: testString = isalnum(longi_data[i]);
  1449                           
  1450                           ; BSR set to: 1
  1451  0010B0  0E04               	movlw	low main@longi_data
  1452  0010B2  256E               	addwf	main@i_1423& (0+255),w,b
  1453  0010B4  6ED9               	movwf	fsr2l,c
  1454  0010B6  0E01               	movlw	high main@longi_data
  1455  0010B8  216F               	addwfc	(main@i_1423+1)& (0+255),w,b
  1456  0010BA  6EDA               	movwf	fsr2h,c
  1457  0010BC  50DF               	movf	indf2,w,c
  1458  0010BE  EC76  F014         	call	_isalnum
  1459  0010C2  A0D8               	btfss	status,0,c
  1460  0010C4  D002               	goto	u4820
  1461  0010C6  0E01               	movlw	1
  1462  0010C8  D001               	goto	u4830
  1463  0010CA                     u4820:
  1464  0010CA  0E00               	movlw	0
  1465  0010CC                     u4830:
  1466  0010CC  0101               	movlb	1	; () banked
  1467  0010CE  6F76               	movwf	main@testString_1422& (0+255),b
  1468                           
  1469                           ; BSR set to: 1
  1470                           ;main.c: 177: if(!testString) break;
  1471  0010D0  5176               	movf	main@testString_1422& (0+255),w,b
  1472  0010D2  B4D8               	btfsc	status,2,c
  1473  0010D4  D003               	goto	u4850
  1474                           
  1475                           ; BSR set to: 1
  1476                           
  1477                           ; BSR set to: 1
  1478                           
  1479                           ; BSR set to: 1
  1480  0010D6  4B6E               	infsnz	main@i_1423& (0+255),f,b
  1481  0010D8  2B6F               	incf	(main@i_1423+1)& (0+255),f,b
  1482  0010DA  D7E2               	goto	l4457
  1483  0010DC                     u4850:
  1484  0010DC                     l4471:
  1485                           
  1486                           ; BSR set to: 1
  1487                           ;main.c: 178: }
  1488                           ;main.c: 180: for(int i = 6;i<10;i++)
  1489  0010DC  0E00               	movlw	0
  1490  0010DE  6F71               	movwf	(main@i_1424+1)& (0+255),b
  1491  0010E0  0E06               	movlw	6
  1492  0010E2  6F70               	movwf	main@i_1424& (0+255),b
  1493  0010E4                     l4473:
  1494                           
  1495                           ; BSR set to: 1
  1496  0010E4  BF71               	btfsc	(main@i_1424+1)& (0+255),7,b
  1497  0010E6  D006               	goto	l551
  1498  0010E8  5171               	movf	(main@i_1424+1)& (0+255),w,b
  1499  0010EA  E11A               	bnz	l4487
  1500  0010EC  0E0A               	movlw	10
  1501  0010EE  5D70               	subwf	main@i_1424& (0+255),w,b
  1502  0010F0  B0D8               	btfsc	status,0,c
  1503  0010F2  D016               	goto	u4900
  1504  0010F4                     l551:
  1505                           
  1506                           ; BSR set to: 1
  1507                           ;main.c: 181: {
  1508                           ;main.c: 182: testString = isalnum(longi_data[i]);
  1509                           
  1510                           ; BSR set to: 1
  1511  0010F4  0E04               	movlw	low main@longi_data
  1512  0010F6  2570               	addwf	main@i_1424& (0+255),w,b
  1513  0010F8  6ED9               	movwf	fsr2l,c
  1514  0010FA  0E01               	movlw	high main@longi_data
  1515  0010FC  2171               	addwfc	(main@i_1424+1)& (0+255),w,b
  1516  0010FE  6EDA               	movwf	fsr2h,c
  1517  001100  50DF               	movf	indf2,w,c
  1518  001102  EC76  F014         	call	_isalnum
  1519  001106  A0D8               	btfss	status,0,c
  1520  001108  D002               	goto	u4870
  1521  00110A  0E01               	movlw	1
  1522  00110C  D001               	goto	u4880
  1523  00110E                     u4870:
  1524  00110E  0E00               	movlw	0
  1525  001110                     u4880:
  1526  001110  0101               	movlb	1	; () banked
  1527  001112  6F76               	movwf	main@testString_1422& (0+255),b
  1528                           
  1529                           ; BSR set to: 1
  1530                           ;main.c: 183: if(!testString) break;
  1531  001114  5176               	movf	main@testString_1422& (0+255),w,b
  1532  001116  B4D8               	btfsc	status,2,c
  1533  001118  D003               	goto	u4900
  1534                           
  1535                           ; BSR set to: 1
  1536                           
  1537                           ; BSR set to: 1
  1538                           
  1539                           ; BSR set to: 1
  1540  00111A  4B70               	infsnz	main@i_1424& (0+255),f,b
  1541  00111C  2B71               	incf	(main@i_1424+1)& (0+255),f,b
  1542  00111E  D7E2               	goto	l4473
  1543  001120                     u4900:
  1544  001120                     l4487:
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;main.c: 184: }
  1548                           ;main.c: 186: if(testString)
  1549  001120  5176               	movf	main@testString_1422& (0+255),w,b
  1550  001122  B4D8               	btfsc	status,2,c
  1551  001124  D0B9               	goto	u5070
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;main.c: 187: {
  1555                           ;main.c: 188: longDec = cvtGPStoDecimal(longi_data,0);
  1556  001126  0E04               	movlw	low main@longi_data
  1557  001128  0100               	movlb	0	; () banked
  1558  00112A  6F6E               	movwf	cvtGPStoDecimal@inputGPS& (0+255),b
  1559  00112C  0E01               	movlw	high main@longi_data
  1560  00112E  6F6F               	movwf	(cvtGPStoDecimal@inputGPS+1)& (0+255),b
  1561  001130  0E00               	movlw	0
  1562  001132  6F70               	movwf	cvtGPStoDecimal@latMode& (0+255),b
  1563  001134  EC71  F00D         	call	_cvtGPStoDecimal	;wreg free
  1564  001138  C06E  F164         	movff	?_cvtGPStoDecimal,main@longDec
  1565  00113C  C06F  F165         	movff	?_cvtGPStoDecimal+1,main@longDec+1
  1566  001140  C070  F166         	movff	?_cvtGPStoDecimal+2,main@longDec+2
  1567                           
  1568                           ;main.c: 190: longitude.decimal = longDec;
  1569  001144  C164  F16B         	movff	main@longDec,main@longitude
  1570  001148  C165  F16C         	movff	main@longDec+1,main@longitude+1
  1571  00114C  C166  F16D         	movff	main@longDec+2,main@longitude+2
  1572                           
  1573                           ;main.c: 192: int testInt = (int)longDec;
  1574  001150  C164  F013         	movff	main@longDec,___fttol@f1
  1575  001154  C165  F014         	movff	main@longDec+1,___fttol@f1+1
  1576  001158  C166  F015         	movff	main@longDec+2,___fttol@f1+2
  1577  00115C  EC2A  F010         	call	___fttol	;wreg free
  1578  001160  C013  F159         	movff	?___fttol,main@testInt
  1579  001164  C014  F15A         	movff	?___fttol+1,main@testInt+1
  1580                           
  1581                           ;main.c: 193: gotGPS = (testInt != 0) ? 1 : 0;
  1582  001168  0101               	movlb	1	; () banked
  1583  00116A  5159               	movf	main@testInt& (0+255),w,b
  1584  00116C  115A               	iorwf	(main@testInt+1)& (0+255),w,b
  1585  00116E  D090               	goto	L5
  1586  001170                     l545:
  1587                           
  1588                           ; BSR set to: 1
  1589                           ;main.c: 201: else if(rawData[rawCycle] == 'A' || rawData[rawCycle] == 'V')
  1590                           
  1591                           ; BSR set to: 1
  1592  001170  0E1D               	movlw	low main@rawData
  1593  001172  257F               	addwf	main@rawCycle& (0+255),w,b
  1594  001174  6ED9               	movwf	fsr2l,c
  1595  001176  0E01               	movlw	high main@rawData
  1596  001178  2180               	addwfc	(main@rawCycle+1)& (0+255),w,b
  1597  00117A  6EDA               	movwf	fsr2h,c
  1598  00117C  0E41               	movlw	65
  1599  00117E  18DE               	xorwf	postinc2,w,c
  1600  001180  B4D8               	btfsc	status,2,c
  1601  001182  D00A               	goto	u4950
  1602                           
  1603                           ; BSR set to: 1
  1604  001184  0E1D               	movlw	low main@rawData
  1605  001186  257F               	addwf	main@rawCycle& (0+255),w,b
  1606  001188  6ED9               	movwf	fsr2l,c
  1607  00118A  0E01               	movlw	high main@rawData
  1608  00118C  2180               	addwfc	(main@rawCycle+1)& (0+255),w,b
  1609  00118E  6EDA               	movwf	fsr2h,c
  1610  001190  0E56               	movlw	86
  1611  001192  18DE               	xorwf	postinc2,w,c
  1612  001194  A4D8               	btfss	status,2,c
  1613  001196  D082               	goto	l567
  1614  001198                     u4950:
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 202: {
  1618                           ;main.c: 203: fillString(lati_data,rawData,rawCycle);
  1619                           
  1620                           ; BSR set to: 1
  1621  001198  0E10               	movlw	low main@lati_data
  1622  00119A  6E13               	movwf	fillString@outputString,c
  1623  00119C  0E01               	movlw	high main@lati_data
  1624  00119E  6E14               	movwf	fillString@outputString+1,c
  1625  0011A0  0E1D               	movlw	low main@rawData
  1626  0011A2  6E15               	movwf	fillString@stringSource,c
  1627  0011A4  0E01               	movlw	high main@rawData
  1628  0011A6  6E16               	movwf	fillString@stringSource+1,c
  1629  0011A8  C17F  F017         	movff	main@rawCycle,fillString@startOfCycle
  1630  0011AC  C180  F018         	movff	main@rawCycle+1,fillString@startOfCycle+1
  1631  0011B0  ECA7  F012         	call	_fillString	;wreg free
  1632                           
  1633                           ;main.c: 204: bool testString = 0;
  1634  0011B4  0E00               	movlw	0
  1635  0011B6  0101               	movlb	1	; () banked
  1636  0011B8  6F77               	movwf	main@testString_1426& (0+255),b
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;main.c: 205: for(int i = 0;i<4;i++)
  1640  0011BA  0E00               	movlw	0
  1641  0011BC  6F73               	movwf	(main@i_1427+1)& (0+255),b
  1642  0011BE  0E00               	movlw	0
  1643  0011C0  6F72               	movwf	main@i_1427& (0+255),b
  1644  0011C2                     l4509:
  1645                           
  1646                           ; BSR set to: 1
  1647  0011C2  BF73               	btfsc	(main@i_1427+1)& (0+255),7,b
  1648  0011C4  D006               	goto	l560
  1649  0011C6  5173               	movf	(main@i_1427+1)& (0+255),w,b
  1650  0011C8  E11A               	bnz	l4523
  1651  0011CA  0E04               	movlw	4
  1652  0011CC  5D72               	subwf	main@i_1427& (0+255),w,b
  1653  0011CE  B0D8               	btfsc	status,0,c
  1654  0011D0  D016               	goto	u5000
  1655  0011D2                     l560:
  1656                           
  1657                           ; BSR set to: 1
  1658                           ;main.c: 206: {
  1659                           ;main.c: 207: testString = isalnum(lati_data[i]);
  1660                           
  1661                           ; BSR set to: 1
  1662  0011D2  0E10               	movlw	low main@lati_data
  1663  0011D4  2572               	addwf	main@i_1427& (0+255),w,b
  1664  0011D6  6ED9               	movwf	fsr2l,c
  1665  0011D8  0E01               	movlw	high main@lati_data
  1666  0011DA  2173               	addwfc	(main@i_1427+1)& (0+255),w,b
  1667  0011DC  6EDA               	movwf	fsr2h,c
  1668  0011DE  50DF               	movf	indf2,w,c
  1669  0011E0  EC76  F014         	call	_isalnum
  1670  0011E4  A0D8               	btfss	status,0,c
  1671  0011E6  D002               	goto	u4970
  1672  0011E8  0E01               	movlw	1
  1673  0011EA  D001               	goto	u4980
  1674  0011EC                     u4970:
  1675  0011EC  0E00               	movlw	0
  1676  0011EE                     u4980:
  1677  0011EE  0101               	movlb	1	; () banked
  1678  0011F0  6F77               	movwf	main@testString_1426& (0+255),b
  1679                           
  1680                           ; BSR set to: 1
  1681                           ;main.c: 208: if(!testString) break;
  1682  0011F2  5177               	movf	main@testString_1426& (0+255),w,b
  1683  0011F4  B4D8               	btfsc	status,2,c
  1684  0011F6  D003               	goto	u5000
  1685                           
  1686                           ; BSR set to: 1
  1687                           
  1688                           ; BSR set to: 1
  1689                           
  1690                           ; BSR set to: 1
  1691  0011F8  4B72               	infsnz	main@i_1427& (0+255),f,b
  1692  0011FA  2B73               	incf	(main@i_1427+1)& (0+255),f,b
  1693  0011FC  D7E2               	goto	l4509
  1694  0011FE                     u5000:
  1695  0011FE                     l4523:
  1696                           
  1697                           ; BSR set to: 1
  1698                           ;main.c: 209: }
  1699                           ;main.c: 211: for(int i = 5;i<10;i++)
  1700  0011FE  0E00               	movlw	0
  1701  001200  6F75               	movwf	(main@i_1428+1)& (0+255),b
  1702  001202  0E05               	movlw	5
  1703  001204  6F74               	movwf	main@i_1428& (0+255),b
  1704  001206                     l4525:
  1705                           
  1706                           ; BSR set to: 1
  1707  001206  BF75               	btfsc	(main@i_1428+1)& (0+255),7,b
  1708  001208  D006               	goto	l563
  1709  00120A  5175               	movf	(main@i_1428+1)& (0+255),w,b
  1710  00120C  E11A               	bnz	l4539
  1711  00120E  0E0A               	movlw	10
  1712  001210  5D74               	subwf	main@i_1428& (0+255),w,b
  1713  001212  B0D8               	btfsc	status,0,c
  1714  001214  D016               	goto	u5050
  1715  001216                     l563:
  1716                           
  1717                           ; BSR set to: 1
  1718                           ;main.c: 212: {
  1719                           ;main.c: 213: testString = isalnum(lati_data[i]);
  1720                           
  1721                           ; BSR set to: 1
  1722  001216  0E10               	movlw	low main@lati_data
  1723  001218  2574               	addwf	main@i_1428& (0+255),w,b
  1724  00121A  6ED9               	movwf	fsr2l,c
  1725  00121C  0E01               	movlw	high main@lati_data
  1726  00121E  2175               	addwfc	(main@i_1428+1)& (0+255),w,b
  1727  001220  6EDA               	movwf	fsr2h,c
  1728  001222  50DF               	movf	indf2,w,c
  1729  001224  EC76  F014         	call	_isalnum
  1730  001228  A0D8               	btfss	status,0,c
  1731  00122A  D002               	goto	u5020
  1732  00122C  0E01               	movlw	1
  1733  00122E  D001               	goto	u5030
  1734  001230                     u5020:
  1735  001230  0E00               	movlw	0
  1736  001232                     u5030:
  1737  001232  0101               	movlb	1	; () banked
  1738  001234  6F77               	movwf	main@testString_1426& (0+255),b
  1739                           
  1740                           ; BSR set to: 1
  1741                           ;main.c: 214: if(!testString) break;
  1742  001236  5177               	movf	main@testString_1426& (0+255),w,b
  1743  001238  B4D8               	btfsc	status,2,c
  1744  00123A  D003               	goto	u5050
  1745                           
  1746                           ; BSR set to: 1
  1747                           
  1748                           ; BSR set to: 1
  1749                           
  1750                           ; BSR set to: 1
  1751  00123C  4B74               	infsnz	main@i_1428& (0+255),f,b
  1752  00123E  2B75               	incf	(main@i_1428+1)& (0+255),f,b
  1753  001240  D7E2               	goto	l4525
  1754  001242                     u5050:
  1755  001242                     l4539:
  1756                           
  1757                           ; BSR set to: 1
  1758                           ;main.c: 215: }
  1759                           ;main.c: 217: if(testString)
  1760  001242  5177               	movf	main@testString_1426& (0+255),w,b
  1761  001244  B4D8               	btfsc	status,2,c
  1762  001246  D028               	goto	u5070
  1763                           
  1764                           ; BSR set to: 1
  1765                           ;main.c: 218: {
  1766                           ;main.c: 219: latDec = cvtGPStoDecimal(lati_data,1);
  1767  001248  0E10               	movlw	low main@lati_data
  1768  00124A  0100               	movlb	0	; () banked
  1769  00124C  6F6E               	movwf	cvtGPStoDecimal@inputGPS& (0+255),b
  1770  00124E  0E01               	movlw	high main@lati_data
  1771  001250  6F6F               	movwf	(cvtGPStoDecimal@inputGPS+1)& (0+255),b
  1772  001252  0E01               	movlw	1
  1773  001254  6F70               	movwf	cvtGPStoDecimal@latMode& (0+255),b
  1774  001256  EC71  F00D         	call	_cvtGPStoDecimal	;wreg free
  1775  00125A  C06E  F161         	movff	?_cvtGPStoDecimal,main@latDec
  1776  00125E  C06F  F162         	movff	?_cvtGPStoDecimal+1,main@latDec+1
  1777  001262  C070  F163         	movff	?_cvtGPStoDecimal+2,main@latDec+2
  1778                           
  1779                           ;main.c: 221: latitude.decimal = latDec;
  1780  001266  C161  F179         	movff	main@latDec,main@latitude
  1781  00126A  C162  F17A         	movff	main@latDec+1,main@latitude+1
  1782  00126E  C163  F17B         	movff	main@latDec+2,main@latitude+2
  1783                           
  1784                           ;main.c: 223: int testInt = (int)latDec;
  1785  001272  C161  F013         	movff	main@latDec,___fttol@f1
  1786  001276  C162  F014         	movff	main@latDec+1,___fttol@f1+1
  1787  00127A  C163  F015         	movff	main@latDec+2,___fttol@f1+2
  1788  00127E  EC2A  F010         	call	___fttol	;wreg free
  1789  001282  C013  F15B         	movff	?___fttol,main@testInt_1429
  1790  001286  C014  F15C         	movff	?___fttol+1,main@testInt_1429+1
  1791                           
  1792                           ;main.c: 224: gotGPS = (testInt != 0) ? 1 : 0;
  1793  00128A  0101               	movlb	1	; () banked
  1794  00128C  515B               	movf	main@testInt_1429& (0+255),w,b
  1795  00128E  115C               	iorwf	(main@testInt_1429+1)& (0+255),w,b
  1796  001290                     L5:
  1797  001290  B4D8               	btfsc	status,2,c
  1798  001292  D002               	goto	u5070
  1799  001294  0E01               	movlw	1
  1800  001296  D001               	goto	L4
  1801  001298                     u5070:
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;main.c: 227: else
  1805                           ;main.c: 228: {
  1806                           ;main.c: 229: gotGPS = 0;
  1807                           
  1808                           ; BSR set to: 1
  1809                           
  1810                           ;main.c: 226: }
  1811  001298  0E00               	movlw	0
  1812  00129A                     L4:
  1813  00129A  6F78               	movwf	main@gotGPS& (0+255),b
  1814  00129C                     l567:
  1815                           
  1816                           ; BSR set to: 1
  1817                           
  1818                           ; BSR set to: 1
  1819                           
  1820                           ; BSR set to: 1
  1821                           
  1822                           ; BSR set to: 1
  1823  00129C  4B7F               	infsnz	main@rawCycle& (0+255),f,b
  1824  00129E  2B80               	incf	(main@rawCycle+1)& (0+255),f,b
  1825                           
  1826                           ; BSR set to: 1
  1827  0012A0  BF80               	btfsc	(main@rawCycle+1)& (0+255),7,b
  1828  0012A2  D6D5               	goto	l543
  1829  0012A4  5180               	movf	(main@rawCycle+1)& (0+255),w,b
  1830  0012A6  E101               	bnz	l4555
  1831  0012A8  D6CC               	goto	L3
  1832  0012AA                     u5090:
  1833  0012AA                     l4555:
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main.c: 230: }
  1837                           ;main.c: 232: }
  1838                           ;main.c: 233: }
  1839                           ;main.c: 235: if(gotGPS)
  1840  0012AA  5178               	movf	main@gotGPS& (0+255),w,b
  1841  0012AC  B4D8               	btfsc	status,2,c
  1842  0012AE  D06C               	goto	u5110
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;main.c: 236: {
  1846                           ;main.c: 258: int dataCount = 0;
  1847  0012B0  0E00               	movlw	0
  1848  0012B2  6F82               	movwf	(main@dataCount+1)& (0+255),b
  1849  0012B4  0E00               	movlw	0
  1850  0012B6  6F81               	movwf	main@dataCount& (0+255),b
  1851                           
  1852                           ;main.c: 260: unsigned char gpsByte;
  1853                           ;main.c: 261: size_t testSize = sizeof(float);
  1854  0012B8  0E00               	movlw	0
  1855  0012BA  6F03               	movwf	(main@testSize+1)& (0+255),b
  1856  0012BC  0E03               	movlw	3
  1857  0012BE  6F02               	movwf	main@testSize& (0+255),b
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;main.c: 263: gpsMSG->frame.data0 = gpsByte;
  1861  0012C0  0E79               	movlw	low main@latitude
  1862  0012C2  2581               	addwf	main@dataCount& (0+255),w,b
  1863  0012C4  6ED9               	movwf	fsr2l,c
  1864  0012C6  0E01               	movlw	high main@latitude
  1865  0012C8  2182               	addwfc	(main@dataCount+1)& (0+255),w,b
  1866  0012CA  6EDA               	movwf	fsr2h,c
  1867  0012CC  50DF               	movf	indf2,w,c
  1868  0012CE  6F60               	movwf	main@gpsByte& (0+255),b
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;main.c: 264: dataCount++;
  1872  0012D0  4B81               	infsnz	main@dataCount& (0+255),f,b
  1873  0012D2  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;main.c: 266: gpsMSG->frame.data1 = gpsByte;
  1877  0012D4  0E79               	movlw	low main@latitude
  1878  0012D6  2581               	addwf	main@dataCount& (0+255),w,b
  1879  0012D8  6ED9               	movwf	fsr2l,c
  1880  0012DA  0E01               	movlw	high main@latitude
  1881  0012DC  2182               	addwfc	(main@dataCount+1)& (0+255),w,b
  1882  0012DE  6EDA               	movwf	fsr2h,c
  1883  0012E0  50DF               	movf	indf2,w,c
  1884  0012E2  6F60               	movwf	main@gpsByte& (0+255),b
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;main.c: 267: dataCount++;
  1888  0012E4  4B81               	infsnz	main@dataCount& (0+255),f,b
  1889  0012E6  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1890                           
  1891                           ; BSR set to: 1
  1892                           ;main.c: 269: gpsMSG->frame.data2 = gpsByte;
  1893  0012E8  0E79               	movlw	low main@latitude
  1894  0012EA  2581               	addwf	main@dataCount& (0+255),w,b
  1895  0012EC  6ED9               	movwf	fsr2l,c
  1896  0012EE  0E01               	movlw	high main@latitude
  1897  0012F0  2182               	addwfc	(main@dataCount+1)& (0+255),w,b
  1898  0012F2  6EDA               	movwf	fsr2h,c
  1899  0012F4  50DF               	movf	indf2,w,c
  1900  0012F6  6F60               	movwf	main@gpsByte& (0+255),b
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;main.c: 270: dataCount++;
  1904  0012F8  4B81               	infsnz	main@dataCount& (0+255),f,b
  1905  0012FA  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;main.c: 272: gpsMSG->frame.data3 = gpsByte;
  1909  0012FC  0E79               	movlw	low main@latitude
  1910  0012FE  2581               	addwf	main@dataCount& (0+255),w,b
  1911  001300  6ED9               	movwf	fsr2l,c
  1912  001302  0E01               	movlw	high main@latitude
  1913  001304  2182               	addwfc	(main@dataCount+1)& (0+255),w,b
  1914  001306  6EDA               	movwf	fsr2h,c
  1915  001308  50DF               	movf	indf2,w,c
  1916  00130A  6F60               	movwf	main@gpsByte& (0+255),b
  1917                           
  1918                           ; BSR set to: 1
  1919                           ;main.c: 275: gpsMSG->frame.data4 = gpsByte;
  1920  00130C  0E00               	movlw	0
  1921  00130E  6F82               	movwf	(main@dataCount+1)& (0+255),b
  1922  001310  0E00               	movlw	0
  1923  001312  6F81               	movwf	main@dataCount& (0+255),b
  1924                           
  1925                           ;main.c: 276: dataCount++;
  1926  001314  4B81               	infsnz	main@dataCount& (0+255),f,b
  1927  001316  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;main.c: 278: gpsMSG->frame.data5 = gpsByte;
  1931  001318  0E6B               	movlw	low main@longitude
  1932  00131A  2581               	addwf	main@dataCount& (0+255),w,b
  1933  00131C  6ED9               	movwf	fsr2l,c
  1934  00131E  0E01               	movlw	high main@longitude
  1935  001320  2182               	addwfc	(main@dataCount+1)& (0+255),w,b
  1936  001322  6EDA               	movwf	fsr2h,c
  1937  001324  50DF               	movf	indf2,w,c
  1938  001326  6F60               	movwf	main@gpsByte& (0+255),b
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;main.c: 279: dataCount++;
  1942  001328  4B81               	infsnz	main@dataCount& (0+255),f,b
  1943  00132A  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1944                           
  1945                           ;main.c: 281: gpsMSG->frame.data6 = gpsByte;
  1946  00132C  0E6B               	movlw	low main@longitude
  1947  00132E  2581               	addwf	main@dataCount& (0+255),w,b
  1948  001330  6ED9               	movwf	fsr2l,c
  1949  001332  0E01               	movlw	high main@longitude
  1950  001334  2182               	addwfc	(main@dataCount+1)& (0+255),w,b
  1951  001336  6EDA               	movwf	fsr2h,c
  1952  001338  50DF               	movf	indf2,w,c
  1953  00133A  6F60               	movwf	main@gpsByte& (0+255),b
  1954                           
  1955                           ; BSR set to: 1
  1956                           ;main.c: 284: gpsMSG->frame.data7 = gpsByte;
  1957  00133C  4B81               	infsnz	main@dataCount& (0+255),f,b
  1958  00133E  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1959                           
  1960                           ; BSR set to: 1
  1961                           ;main.c: 285: dataCount++;
  1962  001340  4B81               	infsnz	main@dataCount& (0+255),f,b
  1963  001342  2B82               	incf	(main@dataCount+1)& (0+255),f,b
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;main.c: 287: int testCan = 0;
  1967  001344  0E00               	movlw	0
  1968  001346  6F5F               	movwf	(main@testCan+1)& (0+255),b
  1969  001348  0E00               	movlw	0
  1970  00134A  6F5E               	movwf	main@testCan& (0+255),b
  1971  00134C                     
  1972                           ; BSR set to: 1
  1973                           ;main.c: 290: {
  1974                           ;main.c: 291: testCan = CAN_transmit(&gpsMSG);
  1975                           
  1976                           ; BSR set to: 1
  1977  00134C  0E7D               	movlw	low main@gpsMSG
  1978  00134E  6E25               	movwf	CAN_transmit@tempCanMsg,c
  1979  001350  0E01               	movlw	high main@gpsMSG
  1980  001352  6E26               	movwf	CAN_transmit@tempCanMsg+1,c
  1981  001354  ECF2  F00B         	call	_CAN_transmit	;wreg free
  1982  001358  0100               	movlb	0	; () banked
  1983  00135A  6F9A               	movwf	??_main& (0+255),b
  1984  00135C  519A               	movf	??_main& (0+255),w,b
  1985  00135E  0101               	movlb	1	; () banked
  1986  001360  6F5E               	movwf	main@testCan& (0+255),b
  1987  001362  6B5F               	clrf	(main@testCan+1)& (0+255),b
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;main.c: 293: _delay((unsigned long)((500)*(8000000/4000.0)));
  1991  001364  0E06               	movlw	6
  1992  001366  0100               	movlb	0	; () banked
  1993  001368  6F9B               	movwf	(??_main+1)& (0+255),b
  1994  00136A  0E13               	movlw	19
  1995  00136C  6F9A               	movwf	??_main& (0+255),b
  1996  00136E  0EAD               	movlw	173
  1997  001370                     u5127:
  1998  001370  2EE8               	decfsz	wreg,f,c
  1999  001372  D7FE               	bra	u5127
  2000  001374  2F9A               	decfsz	??_main& (0+255),f,b
  2001  001376  D7FC               	bra	u5127
  2002  001378  2F9B               	decfsz	(??_main+1)& (0+255),f,b
  2003  00137A  D7FA               	bra	u5127
  2004  00137C  D000               	nop2	
  2005                           
  2006                           ;main.c: 294: } while(testCan != 1);
  2007  00137E  0101               	movlb	1	; () banked
  2008  001380  055E               	decf	main@testCan& (0+255),w,b
  2009  001382  115F               	iorwf	(main@testCan+1)& (0+255),w,b
  2010  001384  A4D8               	btfss	status,2,c
  2011  001386  D7E2               	goto	l569
  2012  001388                     u5110:
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main.c: 297: }
  2016                           ;main.c: 299: gotGPS = 0;
  2017                           
  2018                           ; BSR set to: 1
  2019                           
  2020                           ; BSR set to: 1
  2021  001388  0E00               	movlw	0
  2022  00138A  6F78               	movwf	main@gotGPS& (0+255),b
  2023  00138C                     l542:
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;main.c: 300: }
  2027                           ;main.c: 303: memset(rawData, 0,sizeof(rawData));
  2028                           
  2029                           ; BSR set to: 1
  2030  00138C  0E1D               	movlw	low main@rawData
  2031  00138E  6E13               	movwf	memset@p1,c
  2032  001390  0E01               	movlw	high main@rawData
  2033  001392  6E14               	movwf	memset@p1+1,c
  2034  001394  0E00               	movlw	0
  2035  001396  6E16               	movwf	memset@c+1,c
  2036  001398  0E00               	movlw	0
  2037  00139A  6E15               	movwf	memset@c,c
  2038  00139C  0E00               	movlw	0
  2039  00139E  6E18               	movwf	memset@n+1,c
  2040  0013A0  0E3C               	movlw	60
  2041  0013A2  6E17               	movwf	memset@n,c
  2042  0013A4  EC4A  F014         	call	_memset	;wreg free
  2043                           
  2044                           ;main.c: 304: memset(lati_data, 0,sizeof(lati_data));
  2045  0013A8  0E10               	movlw	low main@lati_data
  2046  0013AA  6E13               	movwf	memset@p1,c
  2047  0013AC  0E01               	movlw	high main@lati_data
  2048  0013AE  6E14               	movwf	memset@p1+1,c
  2049  0013B0  0E00               	movlw	0
  2050  0013B2  6E16               	movwf	memset@c+1,c
  2051  0013B4  0E00               	movlw	0
  2052  0013B6  6E15               	movwf	memset@c,c
  2053  0013B8  0E00               	movlw	0
  2054  0013BA  6E18               	movwf	memset@n+1,c
  2055  0013BC  0E0C               	movlw	12
  2056  0013BE  6E17               	movwf	memset@n,c
  2057  0013C0  EC4A  F014         	call	_memset	;wreg free
  2058                           
  2059                           ;main.c: 305: memset(longi_data, 0,sizeof(longi_data));
  2060  0013C4  0E04               	movlw	low main@longi_data
  2061  0013C6  6E13               	movwf	memset@p1,c
  2062  0013C8  0E01               	movlw	high main@longi_data
  2063  0013CA  6E14               	movwf	memset@p1+1,c
  2064  0013CC  0E00               	movlw	0
  2065  0013CE  6E16               	movwf	memset@c+1,c
  2066  0013D0  0E00               	movlw	0
  2067  0013D2  6E15               	movwf	memset@c,c
  2068  0013D4  0E00               	movlw	0
  2069  0013D6  6E18               	movwf	memset@n+1,c
  2070  0013D8  0E0C               	movlw	12
  2071  0013DA  6E17               	movwf	memset@n,c
  2072  0013DC  EC4A  F014         	call	_memset	;wreg free
  2073                           
  2074                           ;main.c: 306: _delay((unsigned long)((500)*(8000000/4000.0)));
  2075  0013E0  0E06               	movlw	6
  2076  0013E2  0100               	movlb	0	; () banked
  2077  0013E4  6F9B               	movwf	(??_main+1)& (0+255),b
  2078  0013E6  0E13               	movlw	19
  2079  0013E8  6F9A               	movwf	??_main& (0+255),b
  2080  0013EA  0EAD               	movlw	173
  2081  0013EC                     u5137:
  2082  0013EC  2EE8               	decfsz	wreg,f,c
  2083  0013EE  D7FE               	bra	u5137
  2084  0013F0  2F9A               	decfsz	??_main& (0+255),f,b
  2085  0013F2  D7FC               	bra	u5137
  2086  0013F4  2F9B               	decfsz	(??_main+1)& (0+255),f,b
  2087  0013F6  D7FA               	bra	u5137
  2088  0013F8  D000               	nop2	
  2089  0013FA  D596               	goto	l528
  2090  0013FC                     __end_of_main:
  2091                           	opt stack 0
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1l	equ	0xFE1
  2101                           indf2	equ	0xFDF
  2102                           postinc2	equ	0xFDE
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _strcmp *****************
  2108 ;; Defined at:
  2109 ;;		line 33 in file "/opt/microchip/xc8/v1.45/sources/common/strcmp.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  s1              3   32[COMRAM] PTR const unsigned char 
  2112 ;;		 -> ROM(65535), 
  2113 ;;  s2              3   35[COMRAM] PTR const unsigned char 
  2114 ;;		 -> ROM(65535), 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  r               1   39[COMRAM] char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2   32[COMRAM] int 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2126 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;Total ram usage:        8 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    3
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text1
  2141  0025BE                     __ptext1:
  2142                           	opt stack 0
  2143  0025BE                     _strcmp:
  2144                           	opt stack 27
  2145                           
  2146                           ;incstack = 0
  2147  0025BE  D00C               	goto	l1265
  2148  0025C0  0E01               	movlw	1
  2149  0025C2  2621               	addwf	strcmp@s1,f,c
  2150  0025C4  0E00               	movlw	0
  2151  0025C6  2222               	addwfc	strcmp@s1+1,f,c
  2152  0025C8  0E00               	movlw	0
  2153  0025CA  2223               	addwfc	strcmp@s1+2,f,c
  2154  0025CC  0E01               	movlw	1
  2155  0025CE  2624               	addwf	strcmp@s2,f,c
  2156  0025D0  0E00               	movlw	0
  2157  0025D2  2225               	addwfc	strcmp@s2+1,f,c
  2158  0025D4  0E00               	movlw	0
  2159  0025D6  2226               	addwfc	strcmp@s2+2,f,c
  2160  0025D8                     l1265:
  2161  0025D8  C021  FFF6         	movff	strcmp@s1,tblptrl
  2162  0025DC  C022  FFF7         	movff	strcmp@s1+1,tblptrh
  2163  0025E0  C023  FFF8         	movff	strcmp@s1+2,tblptru
  2164  0025E4  0008               	tblrd		*
  2165  0025E6  CFF5 F027          	movff	tablat,??_strcmp
  2166  0025EA  C024  FFF6         	movff	strcmp@s2,tblptrl
  2167  0025EE  C025  FFF7         	movff	strcmp@s2+1,tblptrh
  2168  0025F2  C026  FFF8         	movff	strcmp@s2+2,tblptru
  2169  0025F6  0008               	tblrd		*
  2170  0025F8  50F5               	movf	tablat,w,c
  2171  0025FA  0800               	sublw	0
  2172  0025FC  2427               	addwf	??_strcmp,w,c
  2173  0025FE  6E28               	movwf	strcmp@r,c
  2174  002600  5028               	movf	strcmp@r,w,c
  2175  002602  A4D8               	btfss	status,2,c
  2176  002604  D00B               	goto	u3160
  2177  002606  C021  FFF6         	movff	strcmp@s1,tblptrl
  2178  00260A  C022  FFF7         	movff	strcmp@s1+1,tblptrh
  2179  00260E  C023  FFF8         	movff	strcmp@s1+2,tblptru
  2180  002612  0008               	tblrd		*
  2181  002614  50F5               	movf	tablat,w,c
  2182  002616  0900               	iorlw	0
  2183  002618  A4D8               	btfss	status,2,c
  2184  00261A  D7D2               	goto	l1266
  2185  00261C                     u3160:
  2186  00261C  5028               	movf	strcmp@r,w,c
  2187  00261E  6E21               	movwf	?_strcmp,c
  2188  002620  6A22               	clrf	?_strcmp+1,c
  2189  002622  BE21               	btfsc	?_strcmp,7,c
  2190  002624  0622               	decf	?_strcmp+1,f,c
  2191  002626  0012               	return	
  2192  002628                     __end_of_strcmp:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           intcon	equ	0xFF2
  2199                           postinc0	equ	0xFEE
  2200                           wreg	equ	0xFE8
  2201                           postdec1	equ	0xFE5
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           postinc2	equ	0xFDE
  2205                           fsr2h	equ	0xFDA
  2206                           fsr2l	equ	0xFD9
  2207                           status	equ	0xFD8
  2208                           
  2209 ;; *************** function _memset *****************
  2210 ;; Defined at:
  2211 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  p1              2   18[COMRAM] PTR void 
  2214 ;;		 -> main@lati_data(12), main@longi_data(12), main@rawData(60), 
  2215 ;;  c               2   20[COMRAM] int 
  2216 ;;  n               2   22[COMRAM] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  p               2   24[COMRAM] PTR unsigned char 
  2219 ;;		 -> main@lati_data(12), main@longi_data(12), main@rawData(60), 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2   18[COMRAM] PTR void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2229 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;Total ram usage:        8 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    3
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text2
  2244  002894                     __ptext2:
  2245                           	opt stack 0
  2246  002894                     _memset:
  2247                           	opt stack 27
  2248                           
  2249                           ;incstack = 0
  2250  002894  C013  F019         	movff	memset@p1,memset@p
  2251  002898  C014  F01A         	movff	memset@p1+1,memset@p+1
  2252  00289C  D008               	goto	l1136
  2253  00289E                     l3643:
  2254  00289E  C019  FFD9         	movff	memset@p,fsr2l
  2255  0028A2  C01A  FFDA         	movff	memset@p+1,fsr2h
  2256  0028A6  C015  FFDF         	movff	memset@c,indf2
  2257  0028AA  4A19               	infsnz	memset@p,f,c
  2258  0028AC  2A1A               	incf	memset@p+1,f,c
  2259  0028AE                     l1136:
  2260  0028AE  0617               	decf	memset@n,f,c
  2261  0028B0  A0D8               	btfss	status,0,c
  2262  0028B2  0618               	decf	memset@n+1,f,c
  2263  0028B4  2817               	incf	memset@n,w,c
  2264  0028B6  E1F3               	bnz	l3643
  2265  0028B8  2818               	incf	memset@n+1,w,c
  2266  0028BA  B4D8               	btfsc	status,2,c
  2267  0028BC  0012               	return	
  2268  0028BE  D7EF               	goto	l1137
  2269  0028C0                     __end_of_memset:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           intcon	equ	0xFF2
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           postdec1	equ	0xFE5
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           postinc2	equ	0xFDE
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _isalnum *****************
  2287 ;; Defined at:
  2288 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalnum.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  c               1    wreg     unsigned char 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  c               1   26[COMRAM] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;Total ram usage:        3 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    5
  2309 ;; This function calls:
  2310 ;;		_isalpha
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text3
  2317  0028EC                     __ptext3:
  2318                           	opt stack 0
  2319  0028EC                     _isalnum:
  2320                           	opt stack 25
  2321                           
  2322                           ;incstack = 0
  2323                           ;isalnum@c stored from wreg
  2324  0028EC  6E1B               	movwf	isalnum@c,c
  2325  0028EE  0E01               	movlw	1
  2326  0028F0  6E1A               	movwf	_isalnum$1707,c
  2327  0028F2  0E3A               	movlw	58
  2328  0028F4  601B               	cpfslt	isalnum@c,c
  2329  0028F6  D003               	goto	u3210
  2330  0028F8  0E30               	movlw	48
  2331  0028FA  601B               	cpfslt	isalnum@c,c
  2332  0028FC  D007               	goto	l1005
  2333  0028FE                     u3210:
  2334  0028FE  501B               	movf	isalnum@c,w,c
  2335  002900  EC8A  F014         	call	_isalpha
  2336  002904  B0D8               	btfsc	status,0,c
  2337  002906  D002               	goto	l1005
  2338  002908  0E00               	movlw	0
  2339  00290A  6E1A               	movwf	_isalnum$1707,c
  2340  00290C                     l1005:
  2341  00290C  C01A  F019         	movff	_isalnum$1707,??_isalnum
  2342  002910  3019               	rrcf	??_isalnum,w,c
  2343  002912  0012               	return	
  2344  002914                     __end_of_isalnum:
  2345                           	opt stack 0
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           intcon	equ	0xFF2
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           postdec1	equ	0xFE5
  2354                           fsr1l	equ	0xFE1
  2355                           indf2	equ	0xFDF
  2356                           postinc2	equ	0xFDE
  2357                           fsr2h	equ	0xFDA
  2358                           fsr2l	equ	0xFD9
  2359                           status	equ	0xFD8
  2360                           
  2361 ;; *************** function _isalpha *****************
  2362 ;; Defined at:
  2363 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  c               1    wreg     unsigned char 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  c               1   23[COMRAM] unsigned char 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;		None               void
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2381 ;;Total ram usage:        3 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    4
  2384 ;; This function calls:
  2385 ;;		_isupper
  2386 ;; This function is called by:
  2387 ;;		_isalnum
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text4
  2392  002914                     __ptext4:
  2393                           	opt stack 0
  2394  002914                     _isalpha:
  2395                           	opt stack 25
  2396                           
  2397                           ;incstack = 0
  2398                           ;isalpha@c stored from wreg
  2399  002914  6E18               	movwf	isalpha@c,c
  2400  002916  0E01               	movlw	1
  2401  002918  6E17               	movwf	_isalpha$1715,c
  2402  00291A  0E7B               	movlw	123
  2403  00291C  6018               	cpfslt	isalpha@c,c
  2404  00291E  D003               	goto	u3070
  2405  002920  0E61               	movlw	97
  2406  002922  6018               	cpfslt	isalpha@c,c
  2407  002924  D007               	goto	l1012
  2408  002926                     u3070:
  2409  002926  5018               	movf	isalpha@c,w,c
  2410  002928  EC0C  F015         	call	_isupper
  2411  00292C  B0D8               	btfsc	status,0,c
  2412  00292E  D002               	goto	l1012
  2413  002930  0E00               	movlw	0
  2414  002932  6E17               	movwf	_isalpha$1715,c
  2415  002934                     l1012:
  2416  002934  C017  F016         	movff	_isalpha$1715,??_isalpha
  2417  002938  3016               	rrcf	??_isalpha,w,c
  2418  00293A  0012               	return	
  2419  00293C                     __end_of_isalpha:
  2420                           	opt stack 0
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           intcon	equ	0xFF2
  2426                           postinc0	equ	0xFEE
  2427                           wreg	equ	0xFE8
  2428                           postdec1	equ	0xFE5
  2429                           fsr1l	equ	0xFE1
  2430                           indf2	equ	0xFDF
  2431                           postinc2	equ	0xFDE
  2432                           fsr2h	equ	0xFDA
  2433                           fsr2l	equ	0xFD9
  2434                           status	equ	0xFD8
  2435                           
  2436 ;; *************** function _isupper *****************
  2437 ;; Defined at:
  2438 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  c               1    wreg     unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  c               1   20[COMRAM] unsigned char 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;		None               void
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2456 ;;Total ram usage:        3 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    3
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_isalpha
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text5
  2467  002A18                     __ptext5:
  2468                           	opt stack 0
  2469  002A18                     _isupper:
  2470                           	opt stack 25
  2471                           
  2472                           ;incstack = 0
  2473                           ;isupper@c stored from wreg
  2474  002A18  6E15               	movwf	isupper@c,c
  2475  002A1A  0E00               	movlw	0
  2476  002A1C  6E14               	movwf	_isupper$1724,c
  2477  002A1E  0E5B               	movlw	91
  2478  002A20  6015               	cpfslt	isupper@c,c
  2479  002A22  D005               	goto	l1027
  2480  002A24  0E40               	movlw	64
  2481  002A26  6415               	cpfsgt	isupper@c,c
  2482  002A28  D002               	goto	l1027
  2483  002A2A  0E01               	movlw	1
  2484  002A2C  6E14               	movwf	_isupper$1724,c
  2485  002A2E                     l1027:
  2486  002A2E  C014  F013         	movff	_isupper$1724,??_isupper
  2487  002A32  3013               	rrcf	??_isupper,w,c
  2488  002A34  0012               	return	
  2489  002A36                     __end_of_isupper:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           postinc2	equ	0xFDE
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _getString *****************
  2507 ;; Defined at:
  2508 ;;		line 313 in file "main.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  testSize        2   24[COMRAM] int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  testString      2   30[COMRAM] PTR unsigned char 
  2513 ;;		 -> STR_2(7), 
  2514 ;;  testCycle       2   28[COMRAM] int 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      unsigned char 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2528 ;;Total ram usage:        8 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    4
  2531 ;; This function calls:
  2532 ;;		_EUSART1_Read
  2533 ;;		_strlen
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text6
  2540  002628                     __ptext6:
  2541                           	opt stack 0
  2542  002628                     _getString:
  2543                           	opt stack 26
  2544                           
  2545                           ;main.c: 315: int testCycle = 0;
  2546                           
  2547                           ;incstack = 0
  2548  002628  0E00               	movlw	0
  2549  00262A  6E1E               	movwf	getString@testCycle+1,c
  2550  00262C  0E00               	movlw	0
  2551  00262E  6E1D               	movwf	getString@testCycle,c
  2552                           
  2553                           ;main.c: 316: unsigned char *testString = "GPRMC\0";
  2554  002630  0E01               	movlw	low STR_1
  2555  002632  6E1F               	movwf	getString@testString,c
  2556  002634  0E0F               	movlw	high STR_1
  2557  002636  6E20               	movwf	getString@testString+1,c
  2558                           
  2559                           ;main.c: 317: testSize = strlen(testString);
  2560  002638  C01F  F013         	movff	getString@testString,strlen@s
  2561  00263C  C020  F014         	movff	getString@testString+1,strlen@s+1
  2562  002640  ECDA  F013         	call	_strlen	;wreg free
  2563  002644  C013  F019         	movff	?_strlen,getString@testSize
  2564  002648  C014  F01A         	movff	?_strlen+1,getString@testSize+1
  2565                           
  2566                           ;main.c: 318: while(testCycle < testSize)
  2567  00264C  D011               	goto	l576
  2568  00264E                     
  2569                           ;main.c: 319: {
  2570                           ;main.c: 320: testString[testCycle] = EUSART1_Read();
  2571  00264E  501D               	movf	getString@testCycle,w,c
  2572  002650  241F               	addwf	getString@testString,w,c
  2573  002652  6E1B               	movwf	??_getString& (0+255),c
  2574  002654  501E               	movf	getString@testCycle+1,w,c
  2575  002656  2020               	addwfc	getString@testString+1,w,c
  2576  002658  6E1C               	movwf	(??_getString+1)& (0+255),c
  2577  00265A  C01B  FFF6         	movff	??_getString,tblptrl
  2578  00265E  C01C  FFF7         	movff	??_getString+1,tblptrh
  2579  002662                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2580  002662  6AF8               	clrf	tblptru,c
  2581  002664                     	endif
  2582  002664                     	if	0	;tblptru may be non-zero
  2583  002664                     	endif
  2584  002664  EC6F  F013         	call	_EUSART1_Read	;wreg free
  2585  002668  6EF5               	movwf	tablat,c
  2586  00266A  000C               	tblwt		*
  2587                           
  2588                           ;main.c: 321: testCycle++;
  2589  00266C  4A1D               	infsnz	getString@testCycle,f,c
  2590  00266E  2A1E               	incf	getString@testCycle+1,f,c
  2591  002670                     l576:
  2592  002670  5019               	movf	getString@testSize,w,c
  2593  002672  5C1D               	subwf	getString@testCycle,w,c
  2594  002674  501E               	movf	getString@testCycle+1,w,c
  2595  002676  0A80               	xorlw	128
  2596  002678  6E1B               	movwf	??_getString& (0+255),c
  2597  00267A  501A               	movf	getString@testSize+1,w,c
  2598  00267C  0A80               	xorlw	128
  2599  00267E  581B               	subwfb	??_getString& (0+255),w,c
  2600  002680  A0D8               	btfss	status,0,c
  2601  002682  D7E5               	goto	l577
  2602                           
  2603                           ;main.c: 322: }
  2604                           ;main.c: 324: return testString;
  2605  002684  501F               	movf	getString@testString,w,c
  2606  002686  0012               	return	
  2607  002688                     __end_of_getString:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           intcon	equ	0xFF2
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _strlen *****************
  2625 ;; Defined at:
  2626 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  s               2   18[COMRAM] PTR const unsigned char 
  2629 ;;		 -> STR_2(7), 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  cp              2   22[COMRAM] PTR const unsigned char 
  2632 ;;		 -> STR_2(7), 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2   18[COMRAM] unsigned int 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;Total ram usage:        6 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    3
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_getString
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text7
  2657  0027B4                     __ptext7:
  2658                           	opt stack 0
  2659  0027B4                     _strlen:
  2660                           	opt stack 26
  2661                           
  2662                           ;incstack = 0
  2663  0027B4  C013  F017         	movff	strlen@s,strlen@cp
  2664  0027B8  C014  F018         	movff	strlen@s+1,strlen@cp+1
  2665  0027BC  D002               	goto	l1273
  2666  0027BE  4A17               	infsnz	strlen@cp,f,c
  2667  0027C0  2A18               	incf	strlen@cp+1,f,c
  2668  0027C2                     l1273:
  2669  0027C2  C017  FFF6         	movff	strlen@cp,tblptrl
  2670  0027C6  C018  FFF7         	movff	strlen@cp+1,tblptrh
  2671  0027CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2672  0027CA  6AF8               	clrf	tblptru,c
  2673  0027CC                     	endif
  2674  0027CC                     	if	0	;tblptru may be non-zero
  2675  0027CC                     	endif
  2676  0027CC  0008               	tblrd		*
  2677  0027CE  50F5               	movf	tablat,w,c
  2678  0027D0  0900               	iorlw	0
  2679  0027D2  A4D8               	btfss	status,2,c
  2680  0027D4  D7F4               	goto	l1274
  2681  0027D6  C013  F015         	movff	strlen@s,??_strlen
  2682  0027DA  C014  F016         	movff	strlen@s+1,??_strlen+1
  2683  0027DE  1E15               	comf	??_strlen,f,c
  2684  0027E0  1E16               	comf	??_strlen+1,f,c
  2685  0027E2  4A15               	infsnz	??_strlen,f,c
  2686  0027E4  2A16               	incf	??_strlen+1,f,c
  2687  0027E6  5017               	movf	strlen@cp,w,c
  2688  0027E8  2415               	addwf	??_strlen,w,c
  2689  0027EA  6E13               	movwf	?_strlen,c
  2690  0027EC  5018               	movf	strlen@cp+1,w,c
  2691  0027EE  2016               	addwfc	??_strlen+1,w,c
  2692  0027F0  6E14               	movwf	?_strlen+1,c
  2693  0027F2  0012               	return	
  2694  0027F4                     __end_of_strlen:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           intcon	equ	0xFF2
  2701                           postinc0	equ	0xFEE
  2702                           wreg	equ	0xFE8
  2703                           postdec1	equ	0xFE5
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           postinc2	equ	0xFDE
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _EUSART1_Read *****************
  2712 ;; Defined at:
  2713 ;;		line 108 in file "mcc_generated_files/eusart1.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  timeOutCount    2   18[COMRAM] int 
  2718 ;;  readValue       1   20[COMRAM] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      unsigned char 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;Total ram usage:        3 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    3
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;;		_getString
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text8
  2744  0026DE                     __ptext8:
  2745                           	opt stack 0
  2746  0026DE                     _EUSART1_Read:
  2747                           	opt stack 26
  2748                           
  2749                           ;eusart1.c: 110: uint8_t readValue = 0;
  2750                           
  2751                           ;incstack = 0
  2752  0026DE  0E00               	movlw	0
  2753  0026E0  6E15               	movwf	EUSART1_Read@readValue,c
  2754                           
  2755                           ;eusart1.c: 114: int timeOutCount = 0;
  2756  0026E2  0E00               	movlw	0
  2757  0026E4  6E14               	movwf	EUSART1_Read@timeOutCount+1,c
  2758  0026E6  0E00               	movlw	0
  2759  0026E8  6E13               	movwf	EUSART1_Read@timeOutCount,c
  2760                           
  2761                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  2762  0026EA  D009               	goto	l176
  2763  0026EC                     
  2764                           ;eusart1.c: 117: {
  2765                           ;eusart1.c: 118: timeOutCount++;
  2766  0026EC  4A13               	infsnz	EUSART1_Read@timeOutCount,f,c
  2767  0026EE  2A14               	incf	EUSART1_Read@timeOutCount+1,f,c
  2768                           
  2769                           ;eusart1.c: 119: if(timeOutCount > 255)
  2770  0026F0  BE14               	btfsc	EUSART1_Read@timeOutCount+1,7,c
  2771  0026F2  D005               	goto	l176
  2772  0026F4  0414               	decf	EUSART1_Read@timeOutCount+1,w,c
  2773  0026F6  A0D8               	btfss	status,0,c
  2774  0026F8  D002               	goto	l176
  2775                           
  2776                           ;eusart1.c: 120: {
  2777                           ;eusart1.c: 121: return '\0';
  2778  0026FA  0E00               	movlw	0
  2779  0026FC  0012               	return	
  2780  0026FE                     l176:
  2781  0026FE  5043               	movf	_eusart1RxCount,w,c	;volatile
  2782  002700  B4D8               	btfsc	status,2,c
  2783  002702  D7F4               	goto	l175
  2784                           
  2785                           ;eusart1.c: 122: }
  2786                           ;eusart1.c: 123: }
  2787                           ;eusart1.c: 125: readValue = eusart1RxBuffer[eusart1RxTail++];
  2788  002704  5044               	movf	_eusart1RxTail,w,c	;volatile
  2789  002706  0D01               	mullw	1
  2790  002708  0EB7               	movlw	low _eusart1RxBuffer
  2791  00270A  24F3               	addwf	prodl,w,c
  2792  00270C  6ED9               	movwf	fsr2l,c
  2793  00270E  0E00               	movlw	high _eusart1RxBuffer
  2794  002710  20F4               	addwfc	prodh,w,c
  2795  002712  6EDA               	movwf	fsr2h,c
  2796  002714  50DF               	movf	indf2,w,c
  2797  002716  6E15               	movwf	EUSART1_Read@readValue,c
  2798  002718  2A44               	incf	_eusart1RxTail,f,c	;volatile
  2799                           
  2800                           ;eusart1.c: 126: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2801  00271A  0E07               	movlw	7
  2802  00271C  6444               	cpfsgt	_eusart1RxTail,c	;volatile
  2803  00271E  D002               	goto	l179
  2804                           
  2805                           ;eusart1.c: 127: {
  2806                           ;eusart1.c: 128: eusart1RxTail = 0;
  2807  002720  0E00               	movlw	0
  2808  002722  6E44               	movwf	_eusart1RxTail,c	;volatile
  2809  002724                     l179:
  2810                           
  2811                           ;eusart1.c: 129: }
  2812                           ;eusart1.c: 130: PIE1bits.RC1IE = 0;
  2813  002724  9A9D               	bcf	3997,5,c	;volatile
  2814                           
  2815                           ;eusart1.c: 131: eusart1RxCount--;
  2816  002726  0643               	decf	_eusart1RxCount,f,c	;volatile
  2817                           
  2818                           ;eusart1.c: 132: PIE1bits.RC1IE = 1;
  2819  002728  8A9D               	bsf	3997,5,c	;volatile
  2820                           
  2821                           ;eusart1.c: 134: return readValue;
  2822  00272A  5015               	movf	EUSART1_Read@readValue,w,c
  2823  00272C  0012               	return	
  2824  00272E                     __end_of_EUSART1_Read:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           prodh	equ	0xFF4
  2831                           prodl	equ	0xFF3
  2832                           intcon	equ	0xFF2
  2833                           postinc0	equ	0xFEE
  2834                           wreg	equ	0xFE8
  2835                           postdec1	equ	0xFE5
  2836                           fsr1l	equ	0xFE1
  2837                           indf2	equ	0xFDF
  2838                           postinc2	equ	0xFDE
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _fillString *****************
  2844 ;; Defined at:
  2845 ;;		line 335 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  outputString    2   18[COMRAM] PTR unsigned char 
  2848 ;;		 -> main@lati_data(12), main@longi_data(12), 
  2849 ;;  stringSource    2   20[COMRAM] PTR const unsigned char 
  2850 ;;		 -> main@rawData(60), 
  2851 ;;  startOfCycle    2   22[COMRAM] int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  findCycle       2   28[COMRAM] unsigned int 
  2854 ;;  commaFound      2   26[COMRAM] unsigned int 
  2855 ;;  fillCycle       2   24[COMRAM] unsigned int 
  2856 ;;  currentChar     1   30[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2866 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2867 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;Total ram usage:       13 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    3
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text9
  2881  00254E                     __ptext9:
  2882                           	opt stack 0
  2883  00254E                     _fillString:
  2884                           	opt stack 27
  2885                           
  2886                           ;main.c: 337: unsigned int findCycle = startOfCycle+2,fillCycle=0;
  2887                           
  2888                           ;incstack = 0
  2889  00254E  0E02               	movlw	2
  2890  002550  2417               	addwf	fillString@startOfCycle,w,c
  2891  002552  6E1D               	movwf	fillString@findCycle,c
  2892  002554  0E00               	movlw	0
  2893  002556  2018               	addwfc	fillString@startOfCycle+1,w,c
  2894  002558  6E1E               	movwf	fillString@findCycle+1,c
  2895  00255A  0E00               	movlw	0
  2896  00255C  6E1A               	movwf	fillString@fillCycle+1,c
  2897  00255E  0E00               	movlw	0
  2898  002560  6E19               	movwf	fillString@fillCycle,c
  2899                           
  2900                           ;main.c: 339: unsigned int commaFound = 0;
  2901  002562  0E00               	movlw	0
  2902  002564  6E1C               	movwf	fillString@commaFound+1,c
  2903  002566  0E00               	movlw	0
  2904  002568  6E1B               	movwf	fillString@commaFound,c
  2905                           
  2906                           ;main.c: 341: unsigned char currentChar;
  2907                           ;main.c: 343: while(commaFound < 2 && findCycle < 60)
  2908  00256A  D01B               	goto	l588
  2909  00256C                     
  2910                           ;main.c: 344: {
  2911                           ;main.c: 345: currentChar = stringSource[findCycle];
  2912  00256C  501D               	movf	fillString@findCycle,w,c
  2913  00256E  2415               	addwf	fillString@stringSource,w,c
  2914  002570  6ED9               	movwf	fsr2l,c
  2915  002572  501E               	movf	fillString@findCycle+1,w,c
  2916  002574  2016               	addwfc	fillString@stringSource+1,w,c
  2917  002576  6EDA               	movwf	fsr2h,c
  2918  002578  50DF               	movf	indf2,w,c
  2919  00257A  6E1F               	movwf	fillString@currentChar,c
  2920                           
  2921                           ;main.c: 347: if(currentChar == ',')
  2922  00257C  0E2C               	movlw	44
  2923  00257E  181F               	xorwf	fillString@currentChar,w,c
  2924  002580  A4D8               	btfss	status,2,c
  2925  002582  D003               	goto	l590
  2926                           
  2927                           ;main.c: 348: {
  2928                           ;main.c: 349: commaFound++;
  2929  002584  4A1B               	infsnz	fillString@commaFound,f,c
  2930  002586  2A1C               	incf	fillString@commaFound+1,f,c
  2931                           
  2932                           ;main.c: 350: }
  2933  002588  D00A               	goto	l591
  2934  00258A                     l590:
  2935                           
  2936                           ;main.c: 351: else
  2937                           ;main.c: 352: {
  2938                           ;main.c: 353: outputString[fillCycle] = currentChar;
  2939  00258A  5019               	movf	fillString@fillCycle,w,c
  2940  00258C  2413               	addwf	fillString@outputString,w,c
  2941  00258E  6ED9               	movwf	fsr2l,c
  2942  002590  501A               	movf	fillString@fillCycle+1,w,c
  2943  002592  2014               	addwfc	fillString@outputString+1,w,c
  2944  002594  6EDA               	movwf	fsr2h,c
  2945  002596  C01F  FFDF         	movff	fillString@currentChar,indf2
  2946                           
  2947                           ;main.c: 354: fillCycle++;
  2948  00259A  4A19               	infsnz	fillString@fillCycle,f,c
  2949  00259C  2A1A               	incf	fillString@fillCycle+1,f,c
  2950  00259E                     l591:
  2951                           
  2952                           ;main.c: 355: }
  2953                           ;main.c: 356: findCycle++;
  2954  00259E  4A1D               	infsnz	fillString@findCycle,f,c
  2955  0025A0  2A1E               	incf	fillString@findCycle+1,f,c
  2956  0025A2                     l588:
  2957  0025A2  501C               	movf	fillString@commaFound+1,w,c
  2958  0025A4  E10B               	bnz	l595
  2959  0025A6  0E02               	movlw	2
  2960  0025A8  5C1B               	subwf	fillString@commaFound,w,c
  2961  0025AA  B0D8               	btfsc	status,0,c
  2962  0025AC  0012               	return	
  2963  0025AE  501E               	movf	fillString@findCycle+1,w,c
  2964  0025B0  E105               	bnz	l595
  2965  0025B2  0E3C               	movlw	60
  2966  0025B4  5C1D               	subwf	fillString@findCycle,w,c
  2967  0025B6  B0D8               	btfsc	status,0,c
  2968  0025B8  0012               	return	
  2969  0025BA  D7D8               	goto	l589
  2970  0025BC                     l595:
  2971  0025BC  0012               	return		;funcret
  2972  0025BE                     __end_of_fillString:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           postinc0	equ	0xFEE
  2982                           wreg	equ	0xFE8
  2983                           postdec1	equ	0xFE5
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           fsr2h	equ	0xFDA
  2988                           fsr2l	equ	0xFD9
  2989                           status	equ	0xFD8
  2990                           
  2991 ;; *************** function _cvtGPStoDecimal *****************
  2992 ;; Defined at:
  2993 ;;		line 365 in file "main.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  inputGPS        2   14[BANK0 ] PTR const unsigned char 
  2996 ;;		 -> main@lati_data(12), main@longi_data(12), 
  2997 ;;  latMode         1   16[BANK0 ] unsigned char 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  tempStr        12   17[BANK0 ] unsigned char [12]
  3000 ;;  tempStr        11   29[BANK0 ] unsigned char [11]
  3001 ;;  convertedGPS    3   55[BANK0 ] float 
  3002 ;;  intPart         3   52[BANK0 ] float 
  3003 ;;  decPart         3   46[BANK0 ] float 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  3   14[BANK0 ] float 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3013 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Totals:         1      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;Total ram usage:       45 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    7
  3020 ;; This function calls:
  3021 ;;		___ftadd
  3022 ;;		___ftdiv
  3023 ;;		___ftmul
  3024 ;;		_atof
  3025 ;;		_memcpy
  3026 ;;		_modf
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text10
  3033  001AE2                     __ptext10:
  3034                           	opt stack 0
  3035  001AE2                     _cvtGPStoDecimal:
  3036                           	opt stack 23
  3037                           
  3038                           ;main.c: 367: float convertedGPS;
  3039                           ;main.c: 369: if(latMode)
  3040                           
  3041                           ;incstack = 0
  3042  001AE2  0100               	movlb	0	; () banked
  3043  001AE4  5170               	movf	cvtGPStoDecimal@latMode& (0+255),w,b
  3044  001AE6  B4D8               	btfsc	status,2,c
  3045  001AE8  D057               	goto	l598
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;main.c: 370: {
  3049                           ;main.c: 371: unsigned char tempStr[] = "01.012345\0";
  3050  001AEA  EE20  F0AC         	lfsr	2,cvtGPStoDecimal@F15316
  3051  001AEE  EE10  F07D         	lfsr	1,cvtGPStoDecimal@tempStr
  3052  001AF2  0E0A               	movlw	10
  3053  001AF4                     u4671:
  3054  001AF4  CFDB FFE3          	movff	plusw2,plusw1
  3055  001AF8  06E8               	decf	wreg,f,c
  3056  001AFA  E2FC               	bc	u4671
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;main.c: 372: memcpy(tempStr,inputGPS,9);
  3060  001AFC  0E7D               	movlw	low cvtGPStoDecimal@tempStr
  3061  001AFE  6E13               	movwf	memcpy@d1,c
  3062  001B00  0E00               	movlw	high cvtGPStoDecimal@tempStr
  3063  001B02  6E14               	movwf	memcpy@d1+1,c
  3064  001B04  C06E  F015         	movff	cvtGPStoDecimal@inputGPS,memcpy@s1
  3065  001B08  C06F  F016         	movff	cvtGPStoDecimal@inputGPS+1,memcpy@s1+1
  3066  001B0C  0E00               	movlw	0
  3067  001B0E  6E18               	movwf	memcpy@n+1,c
  3068  001B10  0E09               	movlw	9
  3069  001B12  6E17               	movwf	memcpy@n,c
  3070  001B14  EC97  F013         	call	_memcpy	;wreg free
  3071                           
  3072                           ;main.c: 374: convertedGPS = (float)((inputGPS[8] == 'S') ? -1*atof(tempStr) : atof(temp
      +                          Str));
  3073  001B18  0100               	movlb	0	; () banked
  3074  001B1A  EE20 F008          	lfsr	2,8
  3075  001B1E  516E               	movf	cvtGPStoDecimal@inputGPS& (0+255),w,b
  3076  001B20  26D9               	addwf	fsr2l,f,c
  3077  001B22  516F               	movf	(cvtGPStoDecimal@inputGPS+1)& (0+255),w,b
  3078  001B24  22DA               	addwfc	fsr2h,f,c
  3079  001B26  0E53               	movlw	83
  3080  001B28  18DE               	xorwf	postinc2,w,c
  3081  001B2A  B4D8               	btfsc	status,2,c
  3082  001B2C  D00D               	goto	l602
  3083                           
  3084                           ; BSR set to: 0
  3085  001B2E  0E7D               	movlw	low cvtGPStoDecimal@tempStr
  3086  001B30  6F6B               	movwf	atof@s& (0+255),b
  3087  001B32  0E00               	movlw	high cvtGPStoDecimal@tempStr
  3088  001B34  6F6C               	movwf	(atof@s+1)& (0+255),b
  3089  001B36  ECC5  F014         	call	_atof	;wreg free
  3090  001B3A  C06B  F088         	movff	?_atof,_cvtGPStoDecimal$1457
  3091  001B3E  C06C  F089         	movff	?_atof+1,_cvtGPStoDecimal$1457+1
  3092  001B42  C06D  F08A         	movff	?_atof+2,_cvtGPStoDecimal$1457+2
  3093  001B46  D021               	goto	l604
  3094  001B48                     l602:
  3095  001B48  0E7D               	movlw	low cvtGPStoDecimal@tempStr
  3096  001B4A  0100               	movlb	0	; () banked
  3097  001B4C  6F6B               	movwf	atof@s& (0+255),b
  3098  001B4E  0E00               	movlw	high cvtGPStoDecimal@tempStr
  3099  001B50  6F6C               	movwf	(atof@s+1)& (0+255),b
  3100  001B52  ECC5  F014         	call	_atof	;wreg free
  3101  001B56  C06B  F091         	movff	?_atof,_cvtGPStoDecimal$2126
  3102  001B5A  C06C  F092         	movff	?_atof+1,_cvtGPStoDecimal$2126+1
  3103  001B5E  C06D  F093         	movff	?_atof+2,_cvtGPStoDecimal$2126+2
  3104  001B62  C091  F01B         	movff	_cvtGPStoDecimal$2126,___ftmul@f1
  3105  001B66  C092  F01C         	movff	_cvtGPStoDecimal$2126+1,___ftmul@f1+1
  3106  001B6A  C093  F01D         	movff	_cvtGPStoDecimal$2126+2,___ftmul@f1+2
  3107  001B6E  0E00               	movlw	0
  3108  001B70  6E1E               	movwf	___ftmul@f2,c
  3109  001B72  0E80               	movlw	128
  3110  001B74  6E1F               	movwf	___ftmul@f2+1,c
  3111  001B76  0EBF               	movlw	191
  3112  001B78  6E20               	movwf	___ftmul@f2+2,c
  3113  001B7A  ECA4  F010         	call	___ftmul	;wreg free
  3114  001B7E  C01B  F088         	movff	?___ftmul,_cvtGPStoDecimal$1457
  3115  001B82  C01C  F089         	movff	?___ftmul+1,_cvtGPStoDecimal$1457+1
  3116  001B86  C01D  F08A         	movff	?___ftmul+2,_cvtGPStoDecimal$1457+2
  3117  001B8A                     l604:
  3118  001B8A  C088  F097         	movff	_cvtGPStoDecimal$1457,cvtGPStoDecimal@convertedGPS
  3119  001B8E  C089  F098         	movff	_cvtGPStoDecimal$1457+1,cvtGPStoDecimal@convertedGPS+1
  3120  001B92  C08A  F099         	movff	_cvtGPStoDecimal$1457+2,cvtGPStoDecimal@convertedGPS+2
  3121                           
  3122                           ;main.c: 375: }
  3123  001B96  D056               	goto	l605
  3124  001B98                     l598:
  3125                           
  3126                           ;main.c: 376: else
  3127                           ;main.c: 377: {
  3128                           ;main.c: 378: unsigned char tempStr[] = "012.012345\0";
  3129  001B98  EE20  F0A0         	lfsr	2,cvtGPStoDecimal@F15319
  3130  001B9C  EE10  F071         	lfsr	1,cvtGPStoDecimal@tempStr_1459
  3131  001BA0  0E0B               	movlw	11
  3132  001BA2                     u4691:
  3133  001BA2  CFDB FFE3          	movff	plusw2,plusw1
  3134  001BA6  06E8               	decf	wreg,f,c
  3135  001BA8  E2FC               	bc	u4691
  3136                           
  3137                           ;main.c: 379: memcpy(tempStr,inputGPS,10);
  3138  001BAA  0E71               	movlw	low cvtGPStoDecimal@tempStr_1459
  3139  001BAC  6E13               	movwf	memcpy@d1,c
  3140  001BAE  0E00               	movlw	high cvtGPStoDecimal@tempStr_1459
  3141  001BB0  6E14               	movwf	memcpy@d1+1,c
  3142  001BB2  C06E  F015         	movff	cvtGPStoDecimal@inputGPS,memcpy@s1
  3143  001BB6  C06F  F016         	movff	cvtGPStoDecimal@inputGPS+1,memcpy@s1+1
  3144  001BBA  0E00               	movlw	0
  3145  001BBC  6E18               	movwf	memcpy@n+1,c
  3146  001BBE  0E0A               	movlw	10
  3147  001BC0  6E17               	movwf	memcpy@n,c
  3148  001BC2  EC97  F013         	call	_memcpy	;wreg free
  3149                           
  3150                           ;main.c: 381: convertedGPS = (float)((inputGPS[11] == 'W') ? (-1*atof(tempStr)) : (atof(
      +                          tempStr)));
  3151  001BC6  0100               	movlb	0	; () banked
  3152  001BC8  EE20 F00B          	lfsr	2,11
  3153  001BCC  516E               	movf	cvtGPStoDecimal@inputGPS& (0+255),w,b
  3154  001BCE  26D9               	addwf	fsr2l,f,c
  3155  001BD0  516F               	movf	(cvtGPStoDecimal@inputGPS+1)& (0+255),w,b
  3156  001BD2  22DA               	addwfc	fsr2h,f,c
  3157  001BD4  0E57               	movlw	87
  3158  001BD6  18DE               	xorwf	postinc2,w,c
  3159  001BD8  B4D8               	btfsc	status,2,c
  3160  001BDA  D00D               	goto	l609
  3161                           
  3162                           ; BSR set to: 0
  3163  001BDC  0E71               	movlw	low cvtGPStoDecimal@tempStr_1459
  3164  001BDE  6F6B               	movwf	atof@s& (0+255),b
  3165  001BE0  0E00               	movlw	high cvtGPStoDecimal@tempStr_1459
  3166  001BE2  6F6C               	movwf	(atof@s+1)& (0+255),b
  3167  001BE4  ECC5  F014         	call	_atof	;wreg free
  3168  001BE8  C06B  F08B         	movff	?_atof,_cvtGPStoDecimal$1460
  3169  001BEC  C06C  F08C         	movff	?_atof+1,_cvtGPStoDecimal$1460+1
  3170  001BF0  C06D  F08D         	movff	?_atof+2,_cvtGPStoDecimal$1460+2
  3171  001BF4  D021               	goto	l611
  3172  001BF6                     l609:
  3173  001BF6  0E71               	movlw	low cvtGPStoDecimal@tempStr_1459
  3174  001BF8  0100               	movlb	0	; () banked
  3175  001BFA  6F6B               	movwf	atof@s& (0+255),b
  3176  001BFC  0E00               	movlw	high cvtGPStoDecimal@tempStr_1459
  3177  001BFE  6F6C               	movwf	(atof@s+1)& (0+255),b
  3178  001C00  ECC5  F014         	call	_atof	;wreg free
  3179  001C04  C06B  F091         	movff	?_atof,_cvtGPStoDecimal$2126
  3180  001C08  C06C  F092         	movff	?_atof+1,_cvtGPStoDecimal$2126+1
  3181  001C0C  C06D  F093         	movff	?_atof+2,_cvtGPStoDecimal$2126+2
  3182  001C10  C091  F01B         	movff	_cvtGPStoDecimal$2126,___ftmul@f1
  3183  001C14  C092  F01C         	movff	_cvtGPStoDecimal$2126+1,___ftmul@f1+1
  3184  001C18  C093  F01D         	movff	_cvtGPStoDecimal$2126+2,___ftmul@f1+2
  3185  001C1C  0E00               	movlw	0
  3186  001C1E  6E1E               	movwf	___ftmul@f2,c
  3187  001C20  0E80               	movlw	128
  3188  001C22  6E1F               	movwf	___ftmul@f2+1,c
  3189  001C24  0EBF               	movlw	191
  3190  001C26  6E20               	movwf	___ftmul@f2+2,c
  3191  001C28  ECA4  F010         	call	___ftmul	;wreg free
  3192  001C2C  C01B  F08B         	movff	?___ftmul,_cvtGPStoDecimal$1460
  3193  001C30  C01C  F08C         	movff	?___ftmul+1,_cvtGPStoDecimal$1460+1
  3194  001C34  C01D  F08D         	movff	?___ftmul+2,_cvtGPStoDecimal$1460+2
  3195  001C38                     l611:
  3196  001C38  C08B  F097         	movff	_cvtGPStoDecimal$1460,cvtGPStoDecimal@convertedGPS
  3197  001C3C  C08C  F098         	movff	_cvtGPStoDecimal$1460+1,cvtGPStoDecimal@convertedGPS+1
  3198  001C40  C08D  F099         	movff	_cvtGPStoDecimal$1460+2,cvtGPStoDecimal@convertedGPS+2
  3199  001C44                     l605:
  3200                           
  3201                           ;main.c: 382: }
  3202                           ;main.c: 386: convertedGPS /= 100;
  3203  001C44  C097  F02A         	movff	cvtGPStoDecimal@convertedGPS,___ftdiv@f1
  3204  001C48  C098  F02B         	movff	cvtGPStoDecimal@convertedGPS+1,___ftdiv@f1+1
  3205  001C4C  C099  F02C         	movff	cvtGPStoDecimal@convertedGPS+2,___ftdiv@f1+2
  3206  001C50  0E00               	movlw	0
  3207  001C52  6E2D               	movwf	___ftdiv@f2,c
  3208  001C54  0EC8               	movlw	200
  3209  001C56  6E2E               	movwf	___ftdiv@f2+1,c
  3210  001C58  0E42               	movlw	66
  3211  001C5A  6E2F               	movwf	___ftdiv@f2+2,c
  3212  001C5C  EC1E  F011         	call	___ftdiv	;wreg free
  3213  001C60  C02A  F097         	movff	?___ftdiv,cvtGPStoDecimal@convertedGPS
  3214  001C64  C02B  F098         	movff	?___ftdiv+1,cvtGPStoDecimal@convertedGPS+1
  3215  001C68  C02C  F099         	movff	?___ftdiv+2,cvtGPStoDecimal@convertedGPS+2
  3216                           
  3217                           ;main.c: 387: double decPart,intPart;
  3218                           ;main.c: 389: decPart = modf(convertedGPS,&intPart);
  3219  001C6C  C097  F027         	movff	cvtGPStoDecimal@convertedGPS,modf@value
  3220  001C70  C098  F028         	movff	cvtGPStoDecimal@convertedGPS+1,modf@value+1
  3221  001C74  C099  F029         	movff	cvtGPStoDecimal@convertedGPS+2,modf@value+2
  3222  001C78  0E94               	movlw	low cvtGPStoDecimal@intPart
  3223  001C7A  6E2A               	movwf	modf@iptr,c
  3224  001C7C  0E00               	movlw	high cvtGPStoDecimal@intPart
  3225  001C7E  6E2B               	movwf	modf@iptr+1,c
  3226  001C80  EC6C  F012         	call	_modf	;wreg free
  3227  001C84  C027  F08E         	movff	?_modf,cvtGPStoDecimal@decPart
  3228  001C88  C028  F08F         	movff	?_modf+1,cvtGPStoDecimal@decPart+1
  3229  001C8C  C029  F090         	movff	?_modf+2,cvtGPStoDecimal@decPart+2
  3230                           
  3231                           ;main.c: 391: decPart = (decPart*100)/60;
  3232  001C90  0E00               	movlw	0
  3233  001C92  6E1E               	movwf	___ftmul@f2,c
  3234  001C94  0EC8               	movlw	200
  3235  001C96  6E1F               	movwf	___ftmul@f2+1,c
  3236  001C98  0E42               	movlw	66
  3237  001C9A  6E20               	movwf	___ftmul@f2+2,c
  3238  001C9C  C08E  F01B         	movff	cvtGPStoDecimal@decPart,___ftmul@f1
  3239  001CA0  C08F  F01C         	movff	cvtGPStoDecimal@decPart+1,___ftmul@f1+1
  3240  001CA4  C090  F01D         	movff	cvtGPStoDecimal@decPart+2,___ftmul@f1+2
  3241  001CA8  ECA4  F010         	call	___ftmul	;wreg free
  3242  001CAC  C01B  F02A         	movff	?___ftmul,___ftdiv@f1
  3243  001CB0  C01C  F02B         	movff	?___ftmul+1,___ftdiv@f1+1
  3244  001CB4  C01D  F02C         	movff	?___ftmul+2,___ftdiv@f1+2
  3245  001CB8  0E00               	movlw	0
  3246  001CBA  6E2D               	movwf	___ftdiv@f2,c
  3247  001CBC  0E70               	movlw	112
  3248  001CBE  6E2E               	movwf	___ftdiv@f2+1,c
  3249  001CC0  0E42               	movlw	66
  3250  001CC2  6E2F               	movwf	___ftdiv@f2+2,c
  3251  001CC4  EC1E  F011         	call	___ftdiv	;wreg free
  3252  001CC8  C02A  F08E         	movff	?___ftdiv,cvtGPStoDecimal@decPart
  3253  001CCC  C02B  F08F         	movff	?___ftdiv+1,cvtGPStoDecimal@decPart+1
  3254  001CD0  C02C  F090         	movff	?___ftdiv+2,cvtGPStoDecimal@decPart+2
  3255                           
  3256                           ;main.c: 392: convertedGPS = intPart + decPart;
  3257  001CD4  C094  F01B         	movff	cvtGPStoDecimal@intPart,___ftadd@f1
  3258  001CD8  C095  F01C         	movff	cvtGPStoDecimal@intPart+1,___ftadd@f1+1
  3259  001CDC  C096  F01D         	movff	cvtGPStoDecimal@intPart+2,___ftadd@f1+2
  3260  001CE0  C08E  F01E         	movff	cvtGPStoDecimal@decPart,___ftadd@f2
  3261  001CE4  C08F  F01F         	movff	cvtGPStoDecimal@decPart+1,___ftadd@f2+1
  3262  001CE8  C090  F020         	movff	cvtGPStoDecimal@decPart+2,___ftadd@f2+2
  3263  001CEC  EC85  F00E         	call	___ftadd	;wreg free
  3264  001CF0  C01B  F097         	movff	?___ftadd,cvtGPStoDecimal@convertedGPS
  3265  001CF4  C01C  F098         	movff	?___ftadd+1,cvtGPStoDecimal@convertedGPS+1
  3266  001CF8  C01D  F099         	movff	?___ftadd+2,cvtGPStoDecimal@convertedGPS+2
  3267                           
  3268                           ;main.c: 394: return convertedGPS;
  3269  001CFC  C097  F06E         	movff	cvtGPStoDecimal@convertedGPS,?_cvtGPStoDecimal
  3270  001D00  C098  F06F         	movff	cvtGPStoDecimal@convertedGPS+1,?_cvtGPStoDecimal+1
  3271  001D04  C099  F070         	movff	cvtGPStoDecimal@convertedGPS+2,?_cvtGPStoDecimal+2
  3272  001D08  0012               	return	
  3273  001D0A                     __end_of_cvtGPStoDecimal:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           intcon	equ	0xFF2
  3282                           postinc0	equ	0xFEE
  3283                           wreg	equ	0xFE8
  3284                           postdec1	equ	0xFE5
  3285                           plusw1	equ	0xFE3
  3286                           fsr1l	equ	0xFE1
  3287                           indf2	equ	0xFDF
  3288                           postinc2	equ	0xFDE
  3289                           plusw2	equ	0xFDB
  3290                           fsr2h	equ	0xFDA
  3291                           fsr2l	equ	0xFD9
  3292                           status	equ	0xFD8
  3293                           
  3294 ;; *************** function _modf *****************
  3295 ;; Defined at:
  3296 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/modf.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  value           3   38[COMRAM] float 
  3299 ;;  iptr            2   41[COMRAM] PTR 
  3300 ;;		 -> cvtGPStoDecimal@intPart(3), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  3   38[COMRAM] PTR 
  3305 ;; Registers used:
  3306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3312 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3315 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3316 ;;Total ram usage:        5 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    5
  3319 ;; This function calls:
  3320 ;;		___attoft
  3321 ;;		___ftadd
  3322 ;;		___ftneg
  3323 ;;		___fttol
  3324 ;; This function is called by:
  3325 ;;		_cvtGPStoDecimal
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text11
  3330  0024D8                     __ptext11:
  3331                           	opt stack 0
  3332  0024D8                     _modf:
  3333                           	opt stack 24
  3334                           
  3335                           ;incstack = 0
  3336  0024D8  C027  F013         	movff	modf@value,___fttol@f1
  3337  0024DC  C028  F014         	movff	modf@value+1,___fttol@f1+1
  3338  0024E0  C029  F015         	movff	modf@value+2,___fttol@f1+2
  3339  0024E4  EC2A  F010         	call	___fttol	;wreg free
  3340  0024E8  C013  F022         	movff	?___fttol,___attoft@c
  3341  0024EC  C014  F023         	movff	?___fttol+1,___attoft@c+1
  3342  0024F0  C015  F024         	movff	?___fttol+2,___attoft@c+2
  3343  0024F4  ECFA  F013         	call	___attoft	;wreg free
  3344  0024F8  C02A  FFD9         	movff	modf@iptr,fsr2l
  3345  0024FC  C02B  FFDA         	movff	modf@iptr+1,fsr2h
  3346  002500  C022  FFDE         	movff	?___attoft,postinc2
  3347  002504  C023  FFDE         	movff	?___attoft+1,postinc2
  3348  002508  C024  FFDE         	movff	?___attoft+2,postinc2
  3349  00250C  C02A  FFD9         	movff	modf@iptr,fsr2l
  3350  002510  C02B  FFDA         	movff	modf@iptr+1,fsr2h
  3351  002514  CFDE F013          	movff	postinc2,___ftneg@f1
  3352  002518  CFDE F014          	movff	postinc2,___ftneg@f1+1
  3353  00251C  CFDD F015          	movff	postdec2,___ftneg@f1+2
  3354  002520  ECD7  F014         	call	___ftneg	;wreg free
  3355  002524  C013  F01B         	movff	?___ftneg,___ftadd@f1
  3356  002528  C014  F01C         	movff	?___ftneg+1,___ftadd@f1+1
  3357  00252C  C015  F01D         	movff	?___ftneg+2,___ftadd@f1+2
  3358  002530  C027  F01E         	movff	modf@value,___ftadd@f2
  3359  002534  C028  F01F         	movff	modf@value+1,___ftadd@f2+1
  3360  002538  C029  F020         	movff	modf@value+2,___ftadd@f2+2
  3361  00253C  EC85  F00E         	call	___ftadd	;wreg free
  3362  002540  C01B  F027         	movff	?___ftadd,?_modf
  3363  002544  C01C  F028         	movff	?___ftadd+1,?_modf+1
  3364  002548  C01D  F029         	movff	?___ftadd+2,?_modf+2
  3365  00254C  0012               	return	
  3366  00254E                     __end_of_modf:
  3367                           	opt stack 0
  3368                           tblptru	equ	0xFF8
  3369                           tblptrh	equ	0xFF7
  3370                           tblptrl	equ	0xFF6
  3371                           tablat	equ	0xFF5
  3372                           prodh	equ	0xFF4
  3373                           prodl	equ	0xFF3
  3374                           intcon	equ	0xFF2
  3375                           postinc0	equ	0xFEE
  3376                           wreg	equ	0xFE8
  3377                           postdec1	equ	0xFE5
  3378                           plusw1	equ	0xFE3
  3379                           fsr1l	equ	0xFE1
  3380                           indf2	equ	0xFDF
  3381                           postinc2	equ	0xFDE
  3382                           postdec2	equ	0xFDD
  3383                           plusw2	equ	0xFDB
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function ___fttol *****************
  3389 ;; Defined at:
  3390 ;;		line 44 in file "/opt/microchip/xc8/v1.45/sources/common/fttol.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  f1              3   18[COMRAM] float 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  lval            4   28[COMRAM] unsigned long 
  3395 ;;  exp1            1   32[COMRAM] unsigned char 
  3396 ;;  sign1           1   27[COMRAM] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  4   18[COMRAM] long 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3408 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3409 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3410 ;;Total ram usage:       15 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    3
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;;		_modf
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text12
  3422  002054                     __ptext12:
  3423                           	opt stack 0
  3424  002054                     ___fttol:
  3425                           	opt stack 25
  3426                           
  3427                           ;incstack = 0
  3428  002054  C015  F017         	movff	___fttol@f1+2,??___fttol
  3429  002058  6A18               	clrf	(??___fttol+1)& (0+255),c
  3430  00205A  6A19               	clrf	(??___fttol+2)& (0+255),c
  3431  00205C  3414               	rlcf	___fttol@f1+1,w,c
  3432  00205E  3617               	rlcf	??___fttol& (0+255),f,c
  3433  002060  E301               	bnc	u2881
  3434  002062  8018               	bsf	(??___fttol+1)& (0+255),0,c
  3435  002064                     u2881:
  3436  002064  5017               	movf	??___fttol,w,c
  3437  002066  6E21               	movwf	___fttol@exp1,c
  3438  002068  5021               	movf	___fttol@exp1,w,c
  3439  00206A  A4D8               	btfss	status,2,c
  3440  00206C  D009               	goto	l988
  3441  00206E  0E00               	movlw	0
  3442  002070  6E13               	movwf	?___fttol,c
  3443  002072  0E00               	movlw	0
  3444  002074  6E14               	movwf	?___fttol+1,c
  3445  002076  0E00               	movlw	0
  3446  002078  6E15               	movwf	?___fttol+2,c
  3447  00207A  0E00               	movlw	0
  3448  00207C  6E16               	movwf	?___fttol+3,c
  3449  00207E  0012               	return	
  3450  002080                     l988:
  3451  002080  0E17               	movlw	23
  3452  002082  6E17               	movwf	??___fttol& (0+255),c
  3453  002084  C013  F018         	movff	___fttol@f1,??___fttol+1
  3454  002088  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  3455  00208C  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  3456  002090  2817               	incf	??___fttol,w,c
  3457  002092  6E1B               	movwf	(??___fttol+4)& (0+255),c
  3458  002094  D004               	goto	u2900
  3459  002096                     u2905:
  3460  002096  90D8               	bcf	status,0,c
  3461  002098  321A               	rrcf	??___fttol+3,f,c
  3462  00209A  3219               	rrcf	??___fttol+2,f,c
  3463  00209C  3218               	rrcf	??___fttol+1,f,c
  3464  00209E                     u2900:
  3465  00209E  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  3466  0020A0  D7FA               	goto	u2905
  3467  0020A2  5018               	movf	??___fttol+1,w,c
  3468  0020A4  6E1C               	movwf	___fttol@sign1,c
  3469  0020A6  8E14               	bsf	___fttol@f1+1,7,c
  3470  0020A8  0EFF               	movlw	255
  3471  0020AA  1613               	andwf	___fttol@f1,f,c
  3472  0020AC  0EFF               	movlw	255
  3473  0020AE  1614               	andwf	___fttol@f1+1,f,c
  3474  0020B0  0E00               	movlw	0
  3475  0020B2  1615               	andwf	___fttol@f1+2,f,c
  3476  0020B4  5013               	movf	___fttol@f1,w,c
  3477  0020B6  6E1D               	movwf	___fttol@lval,c
  3478  0020B8  5014               	movf	___fttol@f1+1,w,c
  3479  0020BA  6E1E               	movwf	___fttol@lval+1,c
  3480  0020BC  5015               	movf	___fttol@f1+2,w,c
  3481  0020BE  6E1F               	movwf	___fttol@lval+2,c
  3482  0020C0  6A20               	clrf	___fttol@lval+3,c
  3483  0020C2  0E8E               	movlw	142
  3484  0020C4  5E21               	subwf	___fttol@exp1,f,c
  3485  0020C6  AE21               	btfss	___fttol@exp1,7,c
  3486  0020C8  D016               	goto	l990
  3487  0020CA  5021               	movf	___fttol@exp1,w,c
  3488  0020CC  0A80               	xorlw	128
  3489  0020CE  0F8F               	addlw	143
  3490  0020D0  B0D8               	btfsc	status,0,c
  3491  0020D2  D009               	goto	l991
  3492  0020D4  0E00               	movlw	0
  3493  0020D6  6E13               	movwf	?___fttol,c
  3494  0020D8  0E00               	movlw	0
  3495  0020DA  6E14               	movwf	?___fttol+1,c
  3496  0020DC  0E00               	movlw	0
  3497  0020DE  6E15               	movwf	?___fttol+2,c
  3498  0020E0  0E00               	movlw	0
  3499  0020E2  6E16               	movwf	?___fttol+3,c
  3500  0020E4  0012               	return	
  3501  0020E6                     l991:
  3502  0020E6  90D8               	bcf	status,0,c
  3503  0020E8  3220               	rrcf	___fttol@lval+3,f,c
  3504  0020EA  321F               	rrcf	___fttol@lval+2,f,c
  3505  0020EC  321E               	rrcf	___fttol@lval+1,f,c
  3506  0020EE  321D               	rrcf	___fttol@lval,f,c
  3507  0020F0  3E21               	incfsz	___fttol@exp1,f,c
  3508  0020F2  D7F9               	goto	l991
  3509  0020F4  D015               	goto	u2940
  3510  0020F6                     l990:
  3511  0020F6  0E17               	movlw	23
  3512  0020F8  6421               	cpfsgt	___fttol@exp1,c
  3513  0020FA  D00F               	goto	l996
  3514  0020FC  0E00               	movlw	0
  3515  0020FE  6E13               	movwf	?___fttol,c
  3516  002100  0E00               	movlw	0
  3517  002102  6E14               	movwf	?___fttol+1,c
  3518  002104  0E00               	movlw	0
  3519  002106  6E15               	movwf	?___fttol+2,c
  3520  002108  0E00               	movlw	0
  3521  00210A  6E16               	movwf	?___fttol+3,c
  3522  00210C  0012               	return	
  3523  00210E  90D8               	bcf	status,0,c
  3524  002110  361D               	rlcf	___fttol@lval,f,c
  3525  002112  361E               	rlcf	___fttol@lval+1,f,c
  3526  002114  361F               	rlcf	___fttol@lval+2,f,c
  3527  002116  3620               	rlcf	___fttol@lval+3,f,c
  3528  002118  0621               	decf	___fttol@exp1,f,c
  3529  00211A                     l996:
  3530  00211A  5021               	movf	___fttol@exp1,w,c
  3531  00211C  A4D8               	btfss	status,2,c
  3532  00211E  D7F7               	goto	l997
  3533  002120                     u2940:
  3534  002120  501C               	movf	___fttol@sign1,w,c
  3535  002122  B4D8               	btfsc	status,2,c
  3536  002124  D008               	goto	l999
  3537  002126  1E20               	comf	___fttol@lval+3,f,c
  3538  002128  1E1F               	comf	___fttol@lval+2,f,c
  3539  00212A  1E1E               	comf	___fttol@lval+1,f,c
  3540  00212C  6C1D               	negf	___fttol@lval,c
  3541  00212E  0E00               	movlw	0
  3542  002130  221E               	addwfc	___fttol@lval+1,f,c
  3543  002132  221F               	addwfc	___fttol@lval+2,f,c
  3544  002134  2220               	addwfc	___fttol@lval+3,f,c
  3545  002136                     l999:
  3546  002136  C01D  F013         	movff	___fttol@lval,?___fttol
  3547  00213A  C01E  F014         	movff	___fttol@lval+1,?___fttol+1
  3548  00213E  C01F  F015         	movff	___fttol@lval+2,?___fttol+2
  3549  002142  C020  F016         	movff	___fttol@lval+3,?___fttol+3
  3550  002146  0012               	return	
  3551  002148                     __end_of___fttol:
  3552                           	opt stack 0
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           postinc0	equ	0xFEE
  3561                           wreg	equ	0xFE8
  3562                           postdec1	equ	0xFE5
  3563                           plusw1	equ	0xFE3
  3564                           fsr1l	equ	0xFE1
  3565                           indf2	equ	0xFDF
  3566                           postinc2	equ	0xFDE
  3567                           postdec2	equ	0xFDD
  3568                           plusw2	equ	0xFDB
  3569                           fsr2h	equ	0xFDA
  3570                           fsr2l	equ	0xFD9
  3571                           status	equ	0xFD8
  3572                           
  3573 ;; *************** function ___ftadd *****************
  3574 ;; Defined at:
  3575 ;;		line 86 in file "/opt/microchip/xc8/v1.45/sources/common/ftadd.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  f1              3   26[COMRAM] float 
  3578 ;;  f2              3   29[COMRAM] float 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  exp1            1   37[COMRAM] unsigned char 
  3581 ;;  exp2            1   36[COMRAM] unsigned char 
  3582 ;;  sign            1   35[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  3   26[COMRAM] float 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;Total ram usage:       12 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    4
  3599 ;; This function calls:
  3600 ;;		___ftpack
  3601 ;; This function is called by:
  3602 ;;		_cvtGPStoDecimal
  3603 ;;		_modf
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text13
  3608  001D0A                     __ptext13:
  3609                           	opt stack 0
  3610  001D0A                     ___ftadd:
  3611                           	opt stack 24
  3612                           
  3613                           ;incstack = 0
  3614  001D0A  C01D  F021         	movff	___ftadd@f1+2,??___ftadd
  3615  001D0E  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3616  001D10  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3617  001D12  341C               	rlcf	___ftadd@f1+1,w,c
  3618  001D14  3621               	rlcf	??___ftadd& (0+255),f,c
  3619  001D16  E301               	bnc	u4111
  3620  001D18  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3621  001D1A                     u4111:
  3622  001D1A  5021               	movf	??___ftadd,w,c
  3623  001D1C  6E26               	movwf	___ftadd@exp1,c
  3624  001D1E  C020  F021         	movff	___ftadd@f2+2,??___ftadd
  3625  001D22  6A22               	clrf	(??___ftadd+1)& (0+255),c
  3626  001D24  6A23               	clrf	(??___ftadd+2)& (0+255),c
  3627  001D26  341F               	rlcf	___ftadd@f2+1,w,c
  3628  001D28  3621               	rlcf	??___ftadd& (0+255),f,c
  3629  001D2A  E301               	bnc	u4121
  3630  001D2C  8022               	bsf	(??___ftadd+1)& (0+255),0,c
  3631  001D2E                     u4121:
  3632  001D2E  5021               	movf	??___ftadd,w,c
  3633  001D30  6E25               	movwf	___ftadd@exp2,c
  3634  001D32  5026               	movf	___ftadd@exp1,w,c
  3635  001D34  B4D8               	btfsc	status,2,c
  3636  001D36  D00B               	goto	u4150
  3637  001D38  5025               	movf	___ftadd@exp2,w,c
  3638  001D3A  5C26               	subwf	___ftadd@exp1,w,c
  3639  001D3C  B0D8               	btfsc	status,0,c
  3640  001D3E  D00E               	goto	l919
  3641  001D40  5026               	movf	___ftadd@exp1,w,c
  3642  001D42  0800               	sublw	0
  3643  001D44  2425               	addwf	___ftadd@exp2,w,c
  3644  001D46  6E21               	movwf	??___ftadd& (0+255),c
  3645  001D48  0E18               	movlw	24
  3646  001D4A  6421               	cpfsgt	??___ftadd,c
  3647  001D4C  D007               	goto	l919
  3648  001D4E                     u4150:
  3649  001D4E  C01E  F01B         	movff	___ftadd@f2,?___ftadd
  3650  001D52  C01F  F01C         	movff	___ftadd@f2+1,?___ftadd+1
  3651  001D56  C020  F01D         	movff	___ftadd@f2+2,?___ftadd+2
  3652  001D5A  0012               	return	
  3653  001D5C                     l919:
  3654  001D5C  5025               	movf	___ftadd@exp2,w,c
  3655  001D5E  B4D8               	btfsc	status,2,c
  3656  001D60  D00B               	goto	u4180
  3657  001D62  5026               	movf	___ftadd@exp1,w,c
  3658  001D64  5C25               	subwf	___ftadd@exp2,w,c
  3659  001D66  B0D8               	btfsc	status,0,c
  3660  001D68  D00E               	goto	l923
  3661  001D6A  5025               	movf	___ftadd@exp2,w,c
  3662  001D6C  0800               	sublw	0
  3663  001D6E  2426               	addwf	___ftadd@exp1,w,c
  3664  001D70  6E21               	movwf	??___ftadd& (0+255),c
  3665  001D72  0E18               	movlw	24
  3666  001D74  6421               	cpfsgt	??___ftadd,c
  3667  001D76  D007               	goto	l923
  3668  001D78                     u4180:
  3669  001D78  C01B  F01B         	movff	___ftadd@f1,?___ftadd
  3670  001D7C  C01C  F01C         	movff	___ftadd@f1+1,?___ftadd+1
  3671  001D80  C01D  F01D         	movff	___ftadd@f1+2,?___ftadd+2
  3672  001D84  0012               	return	
  3673  001D86                     l923:
  3674  001D86  0E06               	movlw	6
  3675  001D88  6E24               	movwf	___ftadd@sign,c
  3676  001D8A  BE1D               	btfsc	___ftadd@f1+2,7,c
  3677  001D8C  8E24               	bsf	___ftadd@sign,7,c
  3678  001D8E  BE20               	btfsc	___ftadd@f2+2,7,c
  3679  001D90  8C24               	bsf	___ftadd@sign,6,c
  3680  001D92  8E1C               	bsf	___ftadd@f1+1,7,c
  3681  001D94  0EFF               	movlw	255
  3682  001D96  161B               	andwf	___ftadd@f1,f,c
  3683  001D98  0EFF               	movlw	255
  3684  001D9A  161C               	andwf	___ftadd@f1+1,f,c
  3685  001D9C  0E00               	movlw	0
  3686  001D9E  161D               	andwf	___ftadd@f1+2,f,c
  3687  001DA0  8E1F               	bsf	___ftadd@f2+1,7,c
  3688  001DA2  0EFF               	movlw	255
  3689  001DA4  161E               	andwf	___ftadd@f2,f,c
  3690  001DA6  0EFF               	movlw	255
  3691  001DA8  161F               	andwf	___ftadd@f2+1,f,c
  3692  001DAA  0E00               	movlw	0
  3693  001DAC  1620               	andwf	___ftadd@f2+2,f,c
  3694  001DAE  5025               	movf	___ftadd@exp2,w,c
  3695  001DB0  5C26               	subwf	___ftadd@exp1,w,c
  3696  001DB2  B0D8               	btfsc	status,0,c
  3697  001DB4  D01B               	goto	l928
  3698  001DB6                     u4210:
  3699  001DB6  90D8               	bcf	status,0,c
  3700  001DB8  361E               	rlcf	___ftadd@f2,f,c
  3701  001DBA  361F               	rlcf	___ftadd@f2+1,f,c
  3702  001DBC  3620               	rlcf	___ftadd@f2+2,f,c
  3703  001DBE  0625               	decf	___ftadd@exp2,f,c
  3704  001DC0  5026               	movf	___ftadd@exp1,w,c
  3705  001DC2  1825               	xorwf	___ftadd@exp2,w,c
  3706  001DC4  B4D8               	btfsc	status,2,c
  3707  001DC6  D00D               	goto	l933
  3708  001DC8  0624               	decf	___ftadd@sign,f,c
  3709  001DCA  C024  F021         	movff	___ftadd@sign,??___ftadd
  3710  001DCE  0E07               	movlw	7
  3711  001DD0  1621               	andwf	??___ftadd,f,c
  3712  001DD2  B4D8               	btfsc	status,2,c
  3713  001DD4  D006               	goto	l933
  3714  001DD6  D7EF               	goto	u4210
  3715  001DD8  90D8               	bcf	status,0,c
  3716  001DDA  321D               	rrcf	___ftadd@f1+2,f,c
  3717  001DDC  321C               	rrcf	___ftadd@f1+1,f,c
  3718  001DDE  321B               	rrcf	___ftadd@f1,f,c
  3719  001DE0  2A26               	incf	___ftadd@exp1,f,c
  3720  001DE2                     l933:
  3721  001DE2  5025               	movf	___ftadd@exp2,w,c
  3722  001DE4  1826               	xorwf	___ftadd@exp1,w,c
  3723  001DE6  B4D8               	btfsc	status,2,c
  3724  001DE8  D01F               	goto	u4280
  3725  001DEA  D7F6               	goto	l934
  3726  001DEC                     l928:
  3727  001DEC  5026               	movf	___ftadd@exp1,w,c
  3728  001DEE  5C25               	subwf	___ftadd@exp2,w,c
  3729  001DF0  B0D8               	btfsc	status,0,c
  3730  001DF2  D01A               	goto	u4280
  3731  001DF4                     u4250:
  3732  001DF4  90D8               	bcf	status,0,c
  3733  001DF6  361B               	rlcf	___ftadd@f1,f,c
  3734  001DF8  361C               	rlcf	___ftadd@f1+1,f,c
  3735  001DFA  361D               	rlcf	___ftadd@f1+2,f,c
  3736  001DFC  0626               	decf	___ftadd@exp1,f,c
  3737  001DFE  5026               	movf	___ftadd@exp1,w,c
  3738  001E00  1825               	xorwf	___ftadd@exp2,w,c
  3739  001E02  B4D8               	btfsc	status,2,c
  3740  001E04  D00D               	goto	l942
  3741  001E06  0624               	decf	___ftadd@sign,f,c
  3742  001E08  C024  F021         	movff	___ftadd@sign,??___ftadd
  3743  001E0C  0E07               	movlw	7
  3744  001E0E  1621               	andwf	??___ftadd,f,c
  3745  001E10  B4D8               	btfsc	status,2,c
  3746  001E12  D006               	goto	l942
  3747  001E14  D7EF               	goto	u4250
  3748  001E16  90D8               	bcf	status,0,c
  3749  001E18  3220               	rrcf	___ftadd@f2+2,f,c
  3750  001E1A  321F               	rrcf	___ftadd@f2+1,f,c
  3751  001E1C  321E               	rrcf	___ftadd@f2,f,c
  3752  001E1E  2A25               	incf	___ftadd@exp2,f,c
  3753  001E20                     l942:
  3754  001E20  5025               	movf	___ftadd@exp2,w,c
  3755  001E22  1826               	xorwf	___ftadd@exp1,w,c
  3756  001E24  A4D8               	btfss	status,2,c
  3757  001E26  D7F7               	goto	l943
  3758  001E28                     u4280:
  3759  001E28  AE24               	btfss	___ftadd@sign,7,c
  3760  001E2A  D00C               	goto	l945
  3761  001E2C  0EFF               	movlw	255
  3762  001E2E  1A1B               	xorwf	___ftadd@f1,f,c
  3763  001E30  0EFF               	movlw	255
  3764  001E32  1A1C               	xorwf	___ftadd@f1+1,f,c
  3765  001E34  0EFF               	movlw	255
  3766  001E36  1A1D               	xorwf	___ftadd@f1+2,f,c
  3767  001E38  0E01               	movlw	1
  3768  001E3A  261B               	addwf	___ftadd@f1,f,c
  3769  001E3C  0E00               	movlw	0
  3770  001E3E  221C               	addwfc	___ftadd@f1+1,f,c
  3771  001E40  0E00               	movlw	0
  3772  001E42  221D               	addwfc	___ftadd@f1+2,f,c
  3773  001E44                     l945:
  3774  001E44  AC24               	btfss	___ftadd@sign,6,c
  3775  001E46  D00C               	goto	l946
  3776  001E48  0EFF               	movlw	255
  3777  001E4A  1A1E               	xorwf	___ftadd@f2,f,c
  3778  001E4C  0EFF               	movlw	255
  3779  001E4E  1A1F               	xorwf	___ftadd@f2+1,f,c
  3780  001E50  0EFF               	movlw	255
  3781  001E52  1A20               	xorwf	___ftadd@f2+2,f,c
  3782  001E54  0E01               	movlw	1
  3783  001E56  261E               	addwf	___ftadd@f2,f,c
  3784  001E58  0E00               	movlw	0
  3785  001E5A  221F               	addwfc	___ftadd@f2+1,f,c
  3786  001E5C  0E00               	movlw	0
  3787  001E5E  2220               	addwfc	___ftadd@f2+2,f,c
  3788  001E60                     l946:
  3789  001E60  0E00               	movlw	0
  3790  001E62  6E24               	movwf	___ftadd@sign,c
  3791  001E64  501B               	movf	___ftadd@f1,w,c
  3792  001E66  261E               	addwf	___ftadd@f2,f,c
  3793  001E68  501C               	movf	___ftadd@f1+1,w,c
  3794  001E6A  221F               	addwfc	___ftadd@f2+1,f,c
  3795  001E6C  501D               	movf	___ftadd@f1+2,w,c
  3796  001E6E  2220               	addwfc	___ftadd@f2+2,f,c
  3797  001E70  AE20               	btfss	___ftadd@f2+2,7,c
  3798  001E72  D00E               	goto	l947
  3799  001E74  0EFF               	movlw	255
  3800  001E76  1A1E               	xorwf	___ftadd@f2,f,c
  3801  001E78  0EFF               	movlw	255
  3802  001E7A  1A1F               	xorwf	___ftadd@f2+1,f,c
  3803  001E7C  0EFF               	movlw	255
  3804  001E7E  1A20               	xorwf	___ftadd@f2+2,f,c
  3805  001E80  0E01               	movlw	1
  3806  001E82  261E               	addwf	___ftadd@f2,f,c
  3807  001E84  0E00               	movlw	0
  3808  001E86  221F               	addwfc	___ftadd@f2+1,f,c
  3809  001E88  0E00               	movlw	0
  3810  001E8A  2220               	addwfc	___ftadd@f2+2,f,c
  3811  001E8C  0E01               	movlw	1
  3812  001E8E  6E24               	movwf	___ftadd@sign,c
  3813  001E90                     l947:
  3814  001E90  C01E  F013         	movff	___ftadd@f2,___ftpack@arg
  3815  001E94  C01F  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  3816  001E98  C020  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  3817  001E9C  C026  F016         	movff	___ftadd@exp1,___ftpack@exp
  3818  001EA0  C024  F017         	movff	___ftadd@sign,___ftpack@sign
  3819  001EA4  EC91  F011         	call	___ftpack	;wreg free
  3820  001EA8  C013  F01B         	movff	?___ftpack,?___ftadd
  3821  001EAC  C014  F01C         	movff	?___ftpack+1,?___ftadd+1
  3822  001EB0  C015  F01D         	movff	?___ftpack+2,?___ftadd+2
  3823  001EB4  0012               	return	
  3824  001EB6                     __end_of___ftadd:
  3825                           	opt stack 0
  3826                           tblptru	equ	0xFF8
  3827                           tblptrh	equ	0xFF7
  3828                           tblptrl	equ	0xFF6
  3829                           tablat	equ	0xFF5
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           postdec1	equ	0xFE5
  3836                           plusw1	equ	0xFE3
  3837                           fsr1l	equ	0xFE1
  3838                           indf2	equ	0xFDF
  3839                           postinc2	equ	0xFDE
  3840                           postdec2	equ	0xFDD
  3841                           plusw2	equ	0xFDB
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function ___attoft *****************
  3847 ;; Defined at:
  3848 ;;		line 37 in file "/opt/microchip/xc8/v1.45/sources/common/attoft.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  c               3   33[COMRAM] m
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  sign            1   36[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  3   33[COMRAM] float 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;Total ram usage:        4 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    4
  3869 ;; This function calls:
  3870 ;;		___ftpack
  3871 ;; This function is called by:
  3872 ;;		_modf
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text14
  3877  0027F4                     __ptext14:
  3878                           	opt stack 0
  3879  0027F4                     ___attoft:
  3880                           	opt stack 24
  3881                           
  3882                           ;incstack = 0
  3883  0027F4  0E00               	movlw	0
  3884  0027F6  6E25               	movwf	___attoft@sign,c
  3885  0027F8  AE24               	btfss	___attoft@c+2,7,c
  3886  0027FA  D008               	goto	l837
  3887  0027FC  1E24               	comf	___attoft@c+2,f,c
  3888  0027FE  1E23               	comf	___attoft@c+1,f,c
  3889  002800  6C22               	negf	___attoft@c,c
  3890  002802  0E00               	movlw	0
  3891  002804  2223               	addwfc	___attoft@c+1,f,c
  3892  002806  2224               	addwfc	___attoft@c+2,f,c
  3893  002808  0E01               	movlw	1
  3894  00280A  6E25               	movwf	___attoft@sign,c
  3895  00280C                     l837:
  3896  00280C  C022  F013         	movff	___attoft@c,___ftpack@arg
  3897  002810  C023  F014         	movff	___attoft@c+1,___ftpack@arg+1
  3898  002814  C024  F015         	movff	___attoft@c+2,___ftpack@arg+2
  3899  002818  0E8E               	movlw	142
  3900  00281A  6E16               	movwf	___ftpack@exp,c
  3901  00281C  C025  F017         	movff	___attoft@sign,___ftpack@sign
  3902  002820  EC91  F011         	call	___ftpack	;wreg free
  3903  002824  C013  F022         	movff	?___ftpack,?___attoft
  3904  002828  C014  F023         	movff	?___ftpack+1,?___attoft+1
  3905  00282C  C015  F024         	movff	?___ftpack+2,?___attoft+2
  3906  002830  0012               	return	
  3907  002832                     __end_of___attoft:
  3908                           	opt stack 0
  3909                           tblptru	equ	0xFF8
  3910                           tblptrh	equ	0xFF7
  3911                           tblptrl	equ	0xFF6
  3912                           tablat	equ	0xFF5
  3913                           prodh	equ	0xFF4
  3914                           prodl	equ	0xFF3
  3915                           intcon	equ	0xFF2
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           postdec1	equ	0xFE5
  3919                           plusw1	equ	0xFE3
  3920                           fsr1l	equ	0xFE1
  3921                           indf2	equ	0xFDF
  3922                           postinc2	equ	0xFDE
  3923                           postdec2	equ	0xFDD
  3924                           plusw2	equ	0xFDB
  3925                           fsr2h	equ	0xFDA
  3926                           fsr2l	equ	0xFD9
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function _memcpy *****************
  3930 ;; Defined at:
  3931 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  d1              2   18[COMRAM] PTR void 
  3934 ;;		 -> cvtGPStoDecimal@tempStr_1459(12), cvtGPStoDecimal@tempStr(11), 
  3935 ;;  s1              2   20[COMRAM] PTR const void 
  3936 ;;		 -> main@lati_data(12), main@longi_data(12), 
  3937 ;;  n               2   22[COMRAM] unsigned int 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  s               2   26[COMRAM] PTR const unsigned char 
  3940 ;;		 -> main@lati_data(12), main@longi_data(12), 
  3941 ;;  d               2   24[COMRAM] PTR unsigned char 
  3942 ;;		 -> cvtGPStoDecimal@tempStr_1459(12), cvtGPStoDecimal@tempStr(11), 
  3943 ;;  tmp             1   28[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  2   18[COMRAM] PTR void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3953 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3954 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3956 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3957 ;;Total ram usage:       11 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    3
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_cvtGPStoDecimal
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text15
  3968  00272E                     __ptext15:
  3969                           	opt stack 0
  3970  00272E                     _memcpy:
  3971                           	opt stack 26
  3972                           
  3973                           ;incstack = 0
  3974  00272E  C015  F01B         	movff	memcpy@s1,memcpy@s
  3975  002732  C016  F01C         	movff	memcpy@s1+1,memcpy@s+1
  3976  002736  C013  F019         	movff	memcpy@d1,memcpy@d
  3977  00273A  C014  F01A         	movff	memcpy@d1+1,memcpy@d+1
  3978  00273E  D010               	goto	l1130
  3979  002740                     l3375:
  3980  002740  C01B  FFD9         	movff	memcpy@s,fsr2l
  3981  002744  C01C  FFDA         	movff	memcpy@s+1,fsr2h
  3982  002748  50DF               	movf	indf2,w,c
  3983  00274A  6E1D               	movwf	memcpy@tmp,c
  3984  00274C  4A1B               	infsnz	memcpy@s,f,c
  3985  00274E  2A1C               	incf	memcpy@s+1,f,c
  3986  002750  C019  FFD9         	movff	memcpy@d,fsr2l
  3987  002754  C01A  FFDA         	movff	memcpy@d+1,fsr2h
  3988  002758  C01D  FFDF         	movff	memcpy@tmp,indf2
  3989  00275C  4A19               	infsnz	memcpy@d,f,c
  3990  00275E  2A1A               	incf	memcpy@d+1,f,c
  3991  002760                     l1130:
  3992  002760  0617               	decf	memcpy@n,f,c
  3993  002762  A0D8               	btfss	status,0,c
  3994  002764  0618               	decf	memcpy@n+1,f,c
  3995  002766  2817               	incf	memcpy@n,w,c
  3996  002768  E1EB               	bnz	l3375
  3997  00276A  2818               	incf	memcpy@n+1,w,c
  3998  00276C  B4D8               	btfsc	status,2,c
  3999  00276E  0012               	return	
  4000  002770  D7E7               	goto	l1131
  4001  002772                     __end_of_memcpy:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           postdec1	equ	0xFE5
  4013                           plusw1	equ	0xFE3
  4014                           fsr1l	equ	0xFE1
  4015                           indf2	equ	0xFDF
  4016                           postinc2	equ	0xFDE
  4017                           postdec2	equ	0xFDD
  4018                           plusw2	equ	0xFDB
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           status	equ	0xFD8
  4022                           
  4023 ;; *************** function _atof *****************
  4024 ;; Defined at:
  4025 ;;		line 200 in file "/opt/microchip/xc8/v1.45/sources/common/atof.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  s               2   11[BANK0 ] PTR const unsigned char 
  4028 ;;		 -> cvtGPStoDecimal@tempStr_1459(12), cvtGPStoDecimal@tempStr(11), 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  3   11[BANK0 ] PTR const unsigned char 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4040 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4044 ;;Total ram usage:        3 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    6
  4047 ;; This function calls:
  4048 ;;		_strtod
  4049 ;; This function is called by:
  4050 ;;		_cvtGPStoDecimal
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text16
  4055  00298A                     __ptext16:
  4056                           	opt stack 0
  4057  00298A                     _atof:
  4058                           	opt stack 23
  4059                           
  4060                           ;incstack = 0
  4061  00298A  C06B  F060         	movff	atof@s,strtod@s
  4062  00298E  C06C  F061         	movff	atof@s+1,strtod@s+1
  4063  002992  0E00               	movlw	0
  4064  002994  0100               	movlb	0	; () banked
  4065  002996  6F62               	movwf	strtod@res& (0+255),b
  4066  002998  0E00               	movlw	0
  4067  00299A  6F63               	movwf	(strtod@res+1)& (0+255),b
  4068  00299C  ECFE  F009         	call	_strtod	;wreg free
  4069  0029A0  C060  F06B         	movff	?_strtod,?_atof
  4070  0029A4  C061  F06C         	movff	?_strtod+1,?_atof+1
  4071  0029A8  C062  F06D         	movff	?_strtod+2,?_atof+2
  4072  0029AC  0012               	return	
  4073  0029AE                     __end_of_atof:
  4074                           	opt stack 0
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           prodh	equ	0xFF4
  4080                           prodl	equ	0xFF3
  4081                           intcon	equ	0xFF2
  4082                           postinc0	equ	0xFEE
  4083                           wreg	equ	0xFE8
  4084                           postdec1	equ	0xFE5
  4085                           plusw1	equ	0xFE3
  4086                           fsr1l	equ	0xFE1
  4087                           indf2	equ	0xFDF
  4088                           postinc2	equ	0xFDE
  4089                           postdec2	equ	0xFDD
  4090                           plusw2	equ	0xFDB
  4091                           fsr2h	equ	0xFDA
  4092                           fsr2l	equ	0xFD9
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function _strtod *****************
  4096 ;; Defined at:
  4097 ;;		line 35 in file "/opt/microchip/xc8/v1.45/sources/common/atof.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4100 ;;		 -> cvtGPStoDecimal@tempStr_1459(12), cvtGPStoDecimal@tempStr(11), 
  4101 ;;  res             2    2[BANK0 ] PTR PTR const unsigned c
  4102 ;;		 -> NULL(0), 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  _u              4    7[BANK0 ] struct .
  4105 ;;  expon           1    6[BANK0 ] char 
  4106 ;;  flags           1    5[BANK0 ] unsigned char 
  4107 ;;  eexp            1    4[BANK0 ] char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  3    0[BANK0 ] char 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;Total ram usage:       12 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    5
  4124 ;; This function calls:
  4125 ;;		___altoft
  4126 ;;		___ftdiv
  4127 ;;		___ftge
  4128 ;;		___ftmul
  4129 ;;		___ftneg
  4130 ;;		___lmul
  4131 ;;		_isdigit
  4132 ;;		_isspace
  4133 ;; This function is called by:
  4134 ;;		_atof
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text17
  4139  0013FC                     __ptext17:
  4140                           	opt stack 0
  4141  0013FC                     _strtod:
  4142                           	opt stack 23
  4143                           
  4144                           ;incstack = 0
  4145  0013FC  0100               	movlb	0	; () banked
  4146  0013FE  5162               	movf	strtod@res& (0+255),w,b
  4147  001400  1163               	iorwf	(strtod@res+1)& (0+255),w,b
  4148  001402  B4D8               	btfsc	status,2,c
  4149  001404  D00C               	goto	l779
  4150                           
  4151                           ; BSR set to: 0
  4152  001406  C062  FFD9         	movff	strtod@res,fsr2l
  4153  00140A  C063  FFDA         	movff	strtod@res+1,fsr2h
  4154  00140E  C060  FFDE         	movff	strtod@s,postinc2
  4155  001412  C061  FFDD         	movff	strtod@s+1,postdec2
  4156                           
  4157                           ; BSR set to: 0
  4158  001416  D003               	goto	l779
  4159  001418                     
  4160                           ; BSR set to: 0
  4161  001418  0100               	movlb	0	; () banked
  4162  00141A  4B60               	infsnz	strtod@s& (0+255),f,b
  4163  00141C  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4164  00141E                     l779:
  4165                           
  4166                           ; BSR set to: 0
  4167                           
  4168                           ; BSR set to: 0
  4169  00141E  C060  FFD9         	movff	strtod@s,fsr2l
  4170  001422  C061  FFDA         	movff	strtod@s+1,fsr2h
  4171  001426  50DF               	movf	indf2,w,c
  4172  001428  6F64               	movwf	strtod@eexp& (0+255),b
  4173  00142A  5164               	movf	strtod@eexp& (0+255),w,b
  4174  00142C  ECB2  F014         	call	_isspace
  4175  001430  B0D8               	btfsc	status,0,c
  4176  001432  D7F2               	goto	l780
  4177  001434  0E00               	movlw	0
  4178  001436  0100               	movlb	0	; () banked
  4179  001438  6F65               	movwf	strtod@flags& (0+255),b
  4180                           
  4181                           ; BSR set to: 0
  4182  00143A  0E2D               	movlw	45
  4183  00143C  1964               	xorwf	strtod@eexp& (0+255),w,b
  4184  00143E  A4D8               	btfss	status,2,c
  4185  001440  D003               	goto	l782
  4186                           
  4187                           ; BSR set to: 0
  4188  001442  0E01               	movlw	1
  4189  001444  6F65               	movwf	strtod@flags& (0+255),b
  4190  001446  D004               	goto	u4350
  4191  001448                     l782:
  4192                           
  4193                           ; BSR set to: 0
  4194                           
  4195                           ; BSR set to: 0
  4196  001448  0E2B               	movlw	43
  4197  00144A  1964               	xorwf	strtod@eexp& (0+255),w,b
  4198  00144C  A4D8               	btfss	status,2,c
  4199  00144E  D002               	goto	l784
  4200  001450                     u4350:
  4201                           
  4202                           ; BSR set to: 0
  4203  001450  4B60               	infsnz	strtod@s& (0+255),f,b
  4204  001452  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4205  001454                     l784:
  4206                           
  4207                           ; BSR set to: 0
  4208                           
  4209                           ; BSR set to: 0
  4210                           
  4211                           ; BSR set to: 0
  4212  001454  0E00               	movlw	0
  4213  001456  6F64               	movwf	strtod@eexp& (0+255),b
  4214                           
  4215                           ; BSR set to: 0
  4216  001458  0E00               	movlw	0
  4217  00145A  6F67               	movwf	strtod@_u& (0+255),b
  4218  00145C  0E00               	movlw	0
  4219  00145E  6F68               	movwf	(strtod@_u+1)& (0+255),b
  4220  001460  0E00               	movlw	0
  4221  001462  6F69               	movwf	(strtod@_u+2)& (0+255),b
  4222  001464  0E00               	movlw	0
  4223  001466  6F6A               	movwf	(strtod@_u+3)& (0+255),b
  4224                           
  4225                           ; BSR set to: 0
  4226  001468  0E00               	movlw	0
  4227  00146A  6F66               	movwf	strtod@expon& (0+255),b
  4228  00146C                     
  4229                           ; BSR set to: 0
  4230                           
  4231                           ; BSR set to: 0
  4232  00146C  B965               	btfsc	strtod@flags& (0+255),4,b
  4233  00146E  D00A               	goto	l786
  4234                           
  4235                           ; BSR set to: 0
  4236  001470  C060  FFD9         	movff	strtod@s,fsr2l
  4237  001474  C061  FFDA         	movff	strtod@s+1,fsr2h
  4238  001478  0E2E               	movlw	46
  4239  00147A  18DE               	xorwf	postinc2,w,c
  4240  00147C  A4D8               	btfss	status,2,c
  4241  00147E  D002               	goto	l786
  4242                           
  4243                           ; BSR set to: 0
  4244  001480  8965               	bsf	strtod@flags& (0+255),4,b
  4245  001482  D03E               	goto	l793
  4246  001484                     l786:
  4247                           
  4248                           ; BSR set to: 0
  4249                           
  4250                           ; BSR set to: 0
  4251  001484  C060  FFD9         	movff	strtod@s,fsr2l
  4252  001488  C061  FFDA         	movff	strtod@s+1,fsr2h
  4253  00148C  50DF               	movf	indf2,w,c
  4254  00148E  EC1B  F015         	call	_isdigit
  4255  001492  A0D8               	btfss	status,0,c
  4256  001494  D038               	goto	l789
  4257  001496  0100               	movlb	0	; () banked
  4258  001498  8365               	bsf	strtod@flags& (0+255),1,b
  4259                           
  4260                           ; BSR set to: 0
  4261  00149A  0E08               	movlw	8
  4262  00149C  1964               	xorwf	strtod@eexp& (0+255),w,b
  4263  00149E  B4D8               	btfsc	status,2,c
  4264  0014A0  D02D               	goto	l790
  4265                           
  4266                           ; BSR set to: 0
  4267  0014A2  B965               	btfsc	strtod@flags& (0+255),4,b
  4268                           
  4269                           ; BSR set to: 0
  4270  0014A4  0766               	decf	strtod@expon& (0+255),f,b
  4271                           
  4272                           ; BSR set to: 0
  4273  0014A6  2B64               	incf	strtod@eexp& (0+255),f,b
  4274                           
  4275                           ; BSR set to: 0
  4276  0014A8  C067  F013         	movff	strtod@_u,___lmul@multiplier
  4277  0014AC  C068  F014         	movff	strtod@_u+1,___lmul@multiplier+1
  4278  0014B0  C069  F015         	movff	strtod@_u+2,___lmul@multiplier+2
  4279  0014B4  C06A  F016         	movff	strtod@_u+3,___lmul@multiplier+3
  4280  0014B8  0E0A               	movlw	10
  4281  0014BA  6E17               	movwf	___lmul@multiplicand,c
  4282  0014BC  0E00               	movlw	0
  4283  0014BE  6E18               	movwf	___lmul@multiplicand+1,c
  4284  0014C0  0E00               	movlw	0
  4285  0014C2  6E19               	movwf	___lmul@multiplicand+2,c
  4286  0014C4  0E00               	movlw	0
  4287  0014C6  6E1A               	movwf	___lmul@multiplicand+3,c
  4288  0014C8  EC44  F013         	call	___lmul	;wreg free
  4289  0014CC  C013  F067         	movff	?___lmul,strtod@_u
  4290  0014D0  C014  F068         	movff	?___lmul+1,strtod@_u+1
  4291  0014D4  C015  F069         	movff	?___lmul+2,strtod@_u+2
  4292  0014D8  C016  F06A         	movff	?___lmul+3,strtod@_u+3
  4293  0014DC  C060  FFD9         	movff	strtod@s,fsr2l
  4294  0014E0  C061  FFDA         	movff	strtod@s+1,fsr2h
  4295  0014E4  50DF               	movf	indf2,w,c
  4296  0014E6  6E39               	movwf	??_strtod& (0+255),c
  4297  0014E8  0ED0               	movlw	208
  4298  0014EA  2639               	addwf	??_strtod,f,c
  4299  0014EC  5039               	movf	??_strtod,w,c
  4300  0014EE  0100               	movlb	0	; () banked
  4301  0014F0  2767               	addwf	strtod@_u& (0+255),f,b
  4302  0014F2  0E00               	movlw	0
  4303  0014F4  2368               	addwfc	(strtod@_u+1)& (0+255),f,b
  4304  0014F6  2369               	addwfc	(strtod@_u+2)& (0+255),f,b
  4305  0014F8  236A               	addwfc	(strtod@_u+3)& (0+255),f,b
  4306  0014FA  D002               	goto	l793
  4307  0014FC                     l790:
  4308                           
  4309                           ; BSR set to: 0
  4310  0014FC  A965               	btfss	strtod@flags& (0+255),4,b
  4311                           
  4312                           ; BSR set to: 0
  4313  0014FE  2B66               	incf	strtod@expon& (0+255),f,b
  4314  001500                     l793:
  4315                           
  4316                           ; BSR set to: 0
  4317                           
  4318                           ; BSR set to: 0
  4319  001500  4B60               	infsnz	strtod@s& (0+255),f,b
  4320  001502  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4321                           
  4322                           ; BSR set to: 0
  4323  001504  D7B3               	goto	l785
  4324  001506                     l789:
  4325                           
  4326                           ; BSR set to: 0
  4327  001506  0E00               	movlw	0
  4328  001508  0100               	movlb	0	; () banked
  4329  00150A  6F64               	movwf	strtod@eexp& (0+255),b
  4330                           
  4331                           ; BSR set to: 0
  4332  00150C  C060  FFD9         	movff	strtod@s,fsr2l
  4333  001510  C061  FFDA         	movff	strtod@s+1,fsr2h
  4334  001514  0E65               	movlw	101
  4335  001516  18DE               	xorwf	postinc2,w,c
  4336  001518  B4D8               	btfsc	status,2,c
  4337  00151A  D008               	goto	u4430
  4338                           
  4339                           ; BSR set to: 0
  4340  00151C  C060  FFD9         	movff	strtod@s,fsr2l
  4341  001520  C061  FFDA         	movff	strtod@s+1,fsr2h
  4342  001524  0E45               	movlw	69
  4343  001526  18DE               	xorwf	postinc2,w,c
  4344  001528  A4D8               	btfss	status,2,c
  4345  00152A  D062               	goto	l806
  4346  00152C                     u4430:
  4347                           
  4348                           ; BSR set to: 0
  4349                           
  4350                           ; BSR set to: 0
  4351  00152C  4B60               	infsnz	strtod@s& (0+255),f,b
  4352  00152E  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4353  001530  C060  FFD9         	movff	strtod@s,fsr2l
  4354  001534  C061  FFDA         	movff	strtod@s+1,fsr2h
  4355  001538  0E2D               	movlw	45
  4356  00153A  18DE               	xorwf	postinc2,w,c
  4357  00153C  A4D8               	btfss	status,2,c
  4358  00153E  D002               	goto	l797
  4359                           
  4360                           ; BSR set to: 0
  4361  001540  8765               	bsf	strtod@flags& (0+255),3,b
  4362  001542  D008               	goto	u4450
  4363  001544                     l797:
  4364                           
  4365                           ; BSR set to: 0
  4366                           
  4367                           ; BSR set to: 0
  4368  001544  C060  FFD9         	movff	strtod@s,fsr2l
  4369  001548  C061  FFDA         	movff	strtod@s+1,fsr2h
  4370  00154C  0E2B               	movlw	43
  4371  00154E  18DE               	xorwf	postinc2,w,c
  4372  001550  A4D8               	btfss	status,2,c
  4373  001552  D002               	goto	l800
  4374  001554                     u4450:
  4375                           
  4376                           ; BSR set to: 0
  4377                           
  4378                           ; BSR set to: 0
  4379                           
  4380                           ; BSR set to: 0
  4381                           
  4382                           ; BSR set to: 0
  4383                           
  4384                           ; BSR set to: 0
  4385  001554  4B60               	infsnz	strtod@s& (0+255),f,b
  4386  001556  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4387  001558                     l800:
  4388                           
  4389                           ; BSR set to: 0
  4390                           
  4391                           ; BSR set to: 0
  4392  001558  C060  FFD9         	movff	strtod@s,fsr2l
  4393  00155C  C061  FFDA         	movff	strtod@s+1,fsr2h
  4394  001560  0E30               	movlw	48
  4395  001562  18DE               	xorwf	postinc2,w,c
  4396  001564  B4D8               	btfsc	status,2,c
  4397  001566  D7F6               	goto	u4450
  4398                           
  4399                           ; BSR set to: 0
  4400                           
  4401                           ; BSR set to: 0
  4402  001568  C060  FFD9         	movff	strtod@s,fsr2l
  4403  00156C  C061  FFDA         	movff	strtod@s+1,fsr2h
  4404  001570  50DF               	movf	indf2,w,c
  4405  001572  EC1B  F015         	call	_isdigit
  4406  001576  A0D8               	btfss	status,0,c
  4407  001578  D038               	goto	l805
  4408  00157A  C060  FFD9         	movff	strtod@s,fsr2l
  4409  00157E  C061  FFDA         	movff	strtod@s+1,fsr2h
  4410  001582  50DF               	movf	indf2,w,c
  4411  001584  0FD0               	addlw	208
  4412  001586  0100               	movlb	0	; () banked
  4413  001588  6F64               	movwf	strtod@eexp& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416  00158A  4B60               	infsnz	strtod@s& (0+255),f,b
  4417  00158C  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4418                           
  4419                           ; BSR set to: 0
  4420  00158E  C060  FFD9         	movff	strtod@s,fsr2l
  4421  001592  C061  FFDA         	movff	strtod@s+1,fsr2h
  4422  001596  50DF               	movf	indf2,w,c
  4423  001598  EC1B  F015         	call	_isdigit
  4424  00159C  A0D8               	btfss	status,0,c
  4425  00159E  D025               	goto	l805
  4426  0015A0  C060  FFD9         	movff	strtod@s,fsr2l
  4427  0015A4  C061  FFDA         	movff	strtod@s+1,fsr2h
  4428  0015A8  50DF               	movf	indf2,w,c
  4429  0015AA  6E39               	movwf	??_strtod& (0+255),c
  4430  0015AC  0100               	movlb	0	; () banked
  4431  0015AE  5164               	movf	strtod@eexp& (0+255),w,b
  4432  0015B0  0D0A               	mullw	10
  4433  0015B2  50F3               	movf	prodl,w,c
  4434  0015B4  2439               	addwf	??_strtod,w,c
  4435  0015B6  0FD0               	addlw	208
  4436  0015B8  6F64               	movwf	strtod@eexp& (0+255),b
  4437                           
  4438                           ; BSR set to: 0
  4439  0015BA  4B60               	infsnz	strtod@s& (0+255),f,b
  4440  0015BC  2B61               	incf	(strtod@s+1)& (0+255),f,b
  4441                           
  4442                           ; BSR set to: 0
  4443  0015BE  C060  FFD9         	movff	strtod@s,fsr2l
  4444  0015C2  C061  FFDA         	movff	strtod@s+1,fsr2h
  4445  0015C6  50DF               	movf	indf2,w,c
  4446  0015C8  EC1B  F015         	call	_isdigit
  4447  0015CC  A0D8               	btfss	status,0,c
  4448  0015CE  D00D               	goto	l805
  4449  0015D0  C060  FFD9         	movff	strtod@s,fsr2l
  4450  0015D4  C061  FFDA         	movff	strtod@s+1,fsr2h
  4451  0015D8  50DF               	movf	indf2,w,c
  4452  0015DA  6E39               	movwf	??_strtod& (0+255),c
  4453  0015DC  0100               	movlb	0	; () banked
  4454  0015DE  5164               	movf	strtod@eexp& (0+255),w,b
  4455  0015E0  0D0A               	mullw	10
  4456  0015E2  50F3               	movf	prodl,w,c
  4457  0015E4  2439               	addwf	??_strtod,w,c
  4458  0015E6  0FD0               	addlw	208
  4459  0015E8  6F64               	movwf	strtod@eexp& (0+255),b
  4460  0015EA                     l805:
  4461                           
  4462                           ; BSR set to: 0
  4463                           
  4464                           ; BSR set to: 0
  4465                           
  4466                           ; BSR set to: 0
  4467  0015EA  0100               	movlb	0	; () banked
  4468  0015EC  B765               	btfsc	strtod@flags& (0+255),3,b
  4469                           
  4470                           ; BSR set to: 0
  4471  0015EE  6D64               	negf	strtod@eexp& (0+255),b
  4472  0015F0                     l806:
  4473                           
  4474                           ; BSR set to: 0
  4475                           
  4476                           ; BSR set to: 0
  4477                           
  4478                           ; BSR set to: 0
  4479  0015F0  5164               	movf	strtod@eexp& (0+255),w,b
  4480  0015F2  2766               	addwf	strtod@expon& (0+255),f,b
  4481                           
  4482                           ; BSR set to: 0
  4483  0015F4  5162               	movf	strtod@res& (0+255),w,b
  4484  0015F6  1163               	iorwf	(strtod@res+1)& (0+255),w,b
  4485  0015F8  A4D8               	btfss	status,2,c
  4486                           
  4487                           ; BSR set to: 0
  4488  0015FA  A365               	btfss	strtod@flags& (0+255),1,b
  4489  0015FC  D008               	goto	l807
  4490                           
  4491                           ; BSR set to: 0
  4492  0015FE  C062  FFD9         	movff	strtod@res,fsr2l
  4493  001602  C063  FFDA         	movff	strtod@res+1,fsr2h
  4494  001606  C060  FFDE         	movff	strtod@s,postinc2
  4495  00160A  C061  FFDD         	movff	strtod@s+1,postdec2
  4496  00160E                     l807:
  4497                           
  4498                           ; BSR set to: 0
  4499                           
  4500                           ; BSR set to: 0
  4501  00160E  C067  F01B         	movff	strtod@_u,___altoft@c
  4502  001612  C068  F01C         	movff	strtod@_u+1,___altoft@c+1
  4503  001616  C069  F01D         	movff	strtod@_u+2,___altoft@c+2
  4504  00161A  C06A  F01E         	movff	strtod@_u+3,___altoft@c+3
  4505  00161E  EC30  F012         	call	___altoft	;wreg free
  4506  001622  C01B  F067         	movff	?___altoft,strtod@_u
  4507  001626  C01C  F068         	movff	?___altoft+1,strtod@_u+1
  4508  00162A  C01D  F069         	movff	?___altoft+2,strtod@_u+2
  4509  00162E  0100               	movlb	0	; () banked
  4510  001630  5167               	movf	strtod@_u& (0+255),w,b
  4511  001632  1168               	iorwf	(strtod@_u+1)& (0+255),w,b
  4512  001634  1169               	iorwf	(strtod@_u+2)& (0+255),w,b
  4513  001636  A4D8               	btfss	status,2,c
  4514  001638  D007               	goto	l808
  4515                           
  4516                           ; BSR set to: 0
  4517  00163A  0E00               	movlw	0
  4518  00163C  6F60               	movwf	?_strtod& (0+255),b
  4519  00163E  0E00               	movlw	0
  4520  001640  6F61               	movwf	(?_strtod+1)& (0+255),b
  4521  001642  0E00               	movlw	0
  4522  001644  6F62               	movwf	(?_strtod+2)& (0+255),b
  4523                           
  4524                           ; BSR set to: 0
  4525  001646  0012               	return	
  4526  001648                     l808:
  4527                           
  4528                           ; BSR set to: 0
  4529                           
  4530                           ; BSR set to: 0
  4531  001648  AF66               	btfss	strtod@expon& (0+255),7,b
  4532  00164A  D059               	goto	l810
  4533                           
  4534                           ; BSR set to: 0
  4535  00164C  6D66               	negf	strtod@expon& (0+255),b
  4536  00164E  D017               	goto	l811
  4537  001650                     
  4538                           ; BSR set to: 0
  4539                           
  4540                           ; BSR set to: 0
  4541  001650  C067  F02A         	movff	strtod@_u,___ftdiv@f1
  4542  001654  C068  F02B         	movff	strtod@_u+1,___ftdiv@f1+1
  4543  001658  C069  F02C         	movff	strtod@_u+2,___ftdiv@f1+2
  4544  00165C  0E03               	movlw	3
  4545  00165E  6E2D               	movwf	___ftdiv@f2,c
  4546  001660  0E15               	movlw	21
  4547  001662  6E2E               	movwf	___ftdiv@f2+1,c
  4548  001664  0E50               	movlw	80
  4549  001666  6E2F               	movwf	___ftdiv@f2+2,c
  4550  001668  EC1E  F011         	call	___ftdiv	;wreg free
  4551  00166C  C02A  F067         	movff	?___ftdiv,strtod@_u
  4552  001670  C02B  F068         	movff	?___ftdiv+1,strtod@_u+1
  4553  001674  C02C  F069         	movff	?___ftdiv+2,strtod@_u+2
  4554  001678  0EF6               	movlw	246
  4555  00167A  0100               	movlb	0	; () banked
  4556  00167C  2766               	addwf	strtod@expon& (0+255),f,b
  4557  00167E                     l811:
  4558                           
  4559                           ; BSR set to: 0
  4560                           
  4561                           ; BSR set to: 0
  4562  00167E  5166               	movf	strtod@expon& (0+255),w,b
  4563  001680  0A80               	xorlw	128
  4564  001682  0F76               	addlw	-138
  4565  001684  A0D8               	btfss	status,0,c
  4566  001686  D017               	goto	l814
  4567  001688  D7E3               	goto	l812
  4568  00168A                     
  4569                           ; BSR set to: 0
  4570                           
  4571                           ; BSR set to: 0
  4572  00168A  C067  F02A         	movff	strtod@_u,___ftdiv@f1
  4573  00168E  C068  F02B         	movff	strtod@_u+1,___ftdiv@f1+1
  4574  001692  C069  F02C         	movff	strtod@_u+2,___ftdiv@f1+2
  4575  001696  0E00               	movlw	0
  4576  001698  6E2D               	movwf	___ftdiv@f2,c
  4577  00169A  0E20               	movlw	32
  4578  00169C  6E2E               	movwf	___ftdiv@f2+1,c
  4579  00169E  0E41               	movlw	65
  4580  0016A0  6E2F               	movwf	___ftdiv@f2+2,c
  4581  0016A2  EC1E  F011         	call	___ftdiv	;wreg free
  4582  0016A6  C02A  F067         	movff	?___ftdiv,strtod@_u
  4583  0016AA  C02B  F068         	movff	?___ftdiv+1,strtod@_u+1
  4584  0016AE  C02C  F069         	movff	?___ftdiv+2,strtod@_u+2
  4585  0016B2  0100               	movlb	0	; () banked
  4586  0016B4  0766               	decf	strtod@expon& (0+255),f,b
  4587  0016B6                     l814:
  4588                           
  4589                           ; BSR set to: 0
  4590                           
  4591                           ; BSR set to: 0
  4592  0016B6  5166               	movf	strtod@expon& (0+255),w,b
  4593  0016B8  A4D8               	btfss	status,2,c
  4594  0016BA  D7E7               	goto	l815
  4595                           
  4596                           ; BSR set to: 0
  4597                           
  4598                           ; BSR set to: 0
  4599  0016BC  C067  F013         	movff	strtod@_u,___ftge@ff1
  4600  0016C0  C068  F014         	movff	strtod@_u+1,___ftge@ff1+1
  4601  0016C4  C069  F015         	movff	strtod@_u+2,___ftge@ff1+2
  4602  0016C8  0E00               	movlw	0
  4603  0016CA  6E16               	movwf	___ftge@ff2,c
  4604  0016CC  0E80               	movlw	128
  4605  0016CE  6E17               	movwf	___ftge@ff2+1,c
  4606  0016D0  0E00               	movlw	0
  4607  0016D2  6E18               	movwf	___ftge@ff2+2,c
  4608  0016D4  ECE8  F011         	call	___ftge	;wreg free
  4609  0016D8  B0D8               	btfsc	status,0,c
  4610  0016DA  D06C               	goto	l827
  4611  0016DC  0100               	movlb	0	; () banked
  4612  0016DE  A165               	btfss	strtod@flags& (0+255),0,b
  4613  0016E0  D007               	goto	l818
  4614                           
  4615                           ; BSR set to: 0
  4616  0016E2  0E00               	movlw	0
  4617  0016E4  6F60               	movwf	?_strtod& (0+255),b
  4618  0016E6  0E80               	movlw	128
  4619  0016E8  6F61               	movwf	(?_strtod+1)& (0+255),b
  4620  0016EA  0E80               	movlw	128
  4621  0016EC  6F62               	movwf	(?_strtod+2)& (0+255),b
  4622                           
  4623                           ; BSR set to: 0
  4624  0016EE  0012               	return	
  4625  0016F0                     l818:
  4626                           
  4627                           ; BSR set to: 0
  4628                           
  4629                           ; BSR set to: 0
  4630  0016F0  0E00               	movlw	0
  4631  0016F2  6F60               	movwf	?_strtod& (0+255),b
  4632  0016F4  0E80               	movlw	128
  4633  0016F6  6F61               	movwf	(?_strtod+1)& (0+255),b
  4634  0016F8  0E00               	movlw	0
  4635  0016FA  6F62               	movwf	(?_strtod+2)& (0+255),b
  4636                           
  4637                           ; BSR set to: 0
  4638  0016FC  0012               	return	
  4639  0016FE                     l810:
  4640                           
  4641                           ; BSR set to: 0
  4642                           
  4643                           ; BSR set to: 0
  4644  0016FE  5166               	movf	strtod@expon& (0+255),w,b
  4645  001700  0A80               	xorlw	128
  4646  001702  0F7F               	addlw	-129
  4647  001704  B0D8               	btfsc	status,0,c
  4648  001706  D018               	goto	l821
  4649  001708  D055               	goto	l827
  4650  00170A                     
  4651                           ; BSR set to: 0
  4652                           
  4653                           ; BSR set to: 0
  4654  00170A  C067  F01B         	movff	strtod@_u,___ftmul@f1
  4655  00170E  C068  F01C         	movff	strtod@_u+1,___ftmul@f1+1
  4656  001712  C069  F01D         	movff	strtod@_u+2,___ftmul@f1+2
  4657  001716  0E03               	movlw	3
  4658  001718  6E1E               	movwf	___ftmul@f2,c
  4659  00171A  0E15               	movlw	21
  4660  00171C  6E1F               	movwf	___ftmul@f2+1,c
  4661  00171E  0E50               	movlw	80
  4662  001720  6E20               	movwf	___ftmul@f2+2,c
  4663  001722  ECA4  F010         	call	___ftmul	;wreg free
  4664  001726  C01B  F067         	movff	?___ftmul,strtod@_u
  4665  00172A  C01C  F068         	movff	?___ftmul+1,strtod@_u+1
  4666  00172E  C01D  F069         	movff	?___ftmul+2,strtod@_u+2
  4667  001732  0EF6               	movlw	246
  4668  001734  0100               	movlb	0	; () banked
  4669  001736  2766               	addwf	strtod@expon& (0+255),f,b
  4670  001738                     l821:
  4671                           
  4672                           ; BSR set to: 0
  4673                           
  4674                           ; BSR set to: 0
  4675  001738  0E0A               	movlw	10
  4676  00173A  6166               	cpfslt	strtod@expon& (0+255),b
  4677  00173C  D7E6               	goto	l822
  4678  00173E  D016               	goto	l824
  4679  001740                     
  4680                           ; BSR set to: 0
  4681                           
  4682                           ; BSR set to: 0
  4683  001740  C067  F01B         	movff	strtod@_u,___ftmul@f1
  4684  001744  C068  F01C         	movff	strtod@_u+1,___ftmul@f1+1
  4685  001748  C069  F01D         	movff	strtod@_u+2,___ftmul@f1+2
  4686  00174C  0E00               	movlw	0
  4687  00174E  6E1E               	movwf	___ftmul@f2,c
  4688  001750  0E20               	movlw	32
  4689  001752  6E1F               	movwf	___ftmul@f2+1,c
  4690  001754  0E41               	movlw	65
  4691  001756  6E20               	movwf	___ftmul@f2+2,c
  4692  001758  ECA4  F010         	call	___ftmul	;wreg free
  4693  00175C  C01B  F067         	movff	?___ftmul,strtod@_u
  4694  001760  C01C  F068         	movff	?___ftmul+1,strtod@_u+1
  4695  001764  C01D  F069         	movff	?___ftmul+2,strtod@_u+2
  4696  001768  0100               	movlb	0	; () banked
  4697  00176A  0766               	decf	strtod@expon& (0+255),f,b
  4698  00176C                     l824:
  4699                           
  4700                           ; BSR set to: 0
  4701                           
  4702                           ; BSR set to: 0
  4703  00176C  5166               	movf	strtod@expon& (0+255),w,b
  4704  00176E  A4D8               	btfss	status,2,c
  4705  001770  D7E7               	goto	l825
  4706                           
  4707                           ; BSR set to: 0
  4708                           
  4709                           ; BSR set to: 0
  4710  001772  0EFF               	movlw	255
  4711  001774  6E13               	movwf	___ftge@ff1,c
  4712  001776  0E7F               	movlw	127
  4713  001778  6E14               	movwf	___ftge@ff1+1,c
  4714  00177A  0E7F               	movlw	127
  4715  00177C  6E15               	movwf	___ftge@ff1+2,c
  4716  00177E  C067  F016         	movff	strtod@_u,___ftge@ff2
  4717  001782  C068  F017         	movff	strtod@_u+1,___ftge@ff2+1
  4718  001786  C069  F018         	movff	strtod@_u+2,___ftge@ff2+2
  4719  00178A  ECE8  F011         	call	___ftge	;wreg free
  4720  00178E  B0D8               	btfsc	status,0,c
  4721  001790  D011               	goto	l827
  4722  001792  0100               	movlb	0	; () banked
  4723  001794  A165               	btfss	strtod@flags& (0+255),0,b
  4724  001796  D007               	goto	l828
  4725                           
  4726                           ; BSR set to: 0
  4727  001798  0E00               	movlw	0
  4728  00179A  6F60               	movwf	?_strtod& (0+255),b
  4729  00179C  0E80               	movlw	128
  4730  00179E  6F61               	movwf	(?_strtod+1)& (0+255),b
  4731  0017A0  0E80               	movlw	128
  4732  0017A2  6F62               	movwf	(?_strtod+2)& (0+255),b
  4733                           
  4734                           ; BSR set to: 0
  4735  0017A4  0012               	return	
  4736  0017A6                     l828:
  4737                           
  4738                           ; BSR set to: 0
  4739                           
  4740                           ; BSR set to: 0
  4741  0017A6  0E00               	movlw	0
  4742  0017A8  6F60               	movwf	?_strtod& (0+255),b
  4743  0017AA  0E80               	movlw	128
  4744  0017AC  6F61               	movwf	(?_strtod+1)& (0+255),b
  4745  0017AE  0E00               	movlw	0
  4746  0017B0  6F62               	movwf	(?_strtod+2)& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749  0017B2  0012               	return	
  4750  0017B4                     l827:
  4751                           
  4752                           ; BSR set to: 0
  4753                           
  4754                           ; BSR set to: 0
  4755  0017B4  0100               	movlb	0	; () banked
  4756  0017B6  A165               	btfss	strtod@flags& (0+255),0,b
  4757  0017B8  D00E               	goto	l829
  4758                           
  4759                           ; BSR set to: 0
  4760  0017BA  C067  F013         	movff	strtod@_u,___ftneg@f1
  4761  0017BE  C068  F014         	movff	strtod@_u+1,___ftneg@f1+1
  4762  0017C2  C069  F015         	movff	strtod@_u+2,___ftneg@f1+2
  4763  0017C6  ECD7  F014         	call	___ftneg	;wreg free
  4764  0017CA  C013  F067         	movff	?___ftneg,strtod@_u
  4765  0017CE  C014  F068         	movff	?___ftneg+1,strtod@_u+1
  4766  0017D2  C015  F069         	movff	?___ftneg+2,strtod@_u+2
  4767  0017D6                     l829:
  4768  0017D6  C067  F060         	movff	strtod@_u,?_strtod
  4769  0017DA  C068  F061         	movff	strtod@_u+1,?_strtod+1
  4770  0017DE  C069  F062         	movff	strtod@_u+2,?_strtod+2
  4771  0017E2  0012               	return	
  4772  0017E4                     __end_of_strtod:
  4773                           	opt stack 0
  4774                           tblptru	equ	0xFF8
  4775                           tblptrh	equ	0xFF7
  4776                           tblptrl	equ	0xFF6
  4777                           tablat	equ	0xFF5
  4778                           prodh	equ	0xFF4
  4779                           prodl	equ	0xFF3
  4780                           intcon	equ	0xFF2
  4781                           postinc0	equ	0xFEE
  4782                           wreg	equ	0xFE8
  4783                           postdec1	equ	0xFE5
  4784                           plusw1	equ	0xFE3
  4785                           fsr1l	equ	0xFE1
  4786                           indf2	equ	0xFDF
  4787                           postinc2	equ	0xFDE
  4788                           postdec2	equ	0xFDD
  4789                           plusw2	equ	0xFDB
  4790                           fsr2h	equ	0xFDA
  4791                           fsr2l	equ	0xFD9
  4792                           status	equ	0xFD8
  4793                           
  4794 ;; *************** function _isspace *****************
  4795 ;; Defined at:
  4796 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  c               1    wreg     unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  c               1   20[COMRAM] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;		None               void
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;Total ram usage:        3 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    3
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_strtod
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text18
  4825  002964                     __ptext18:
  4826                           	opt stack 0
  4827  002964                     _isspace:
  4828                           	opt stack 24
  4829                           
  4830                           ;incstack = 0
  4831                           ;isspace@c stored from wreg
  4832  002964  6E15               	movwf	isspace@c,c
  4833  002966  0E01               	movlw	1
  4834  002968  6E14               	movwf	_isspace$1721,c
  4835  00296A  0E20               	movlw	32
  4836  00296C  1815               	xorwf	isspace@c,w,c
  4837  00296E  B4D8               	btfsc	status,2,c
  4838  002970  D008               	goto	l1022
  4839  002972  0E0E               	movlw	14
  4840  002974  6015               	cpfslt	isspace@c,c
  4841  002976  D003               	goto	u4040
  4842  002978  0E09               	movlw	9
  4843  00297A  6015               	cpfslt	isspace@c,c
  4844  00297C  D002               	goto	l1022
  4845  00297E                     u4040:
  4846  00297E  0E00               	movlw	0
  4847  002980  6E14               	movwf	_isspace$1721,c
  4848  002982                     l1022:
  4849  002982  C014  F013         	movff	_isspace$1721,??_isspace
  4850  002986  3013               	rrcf	??_isspace,w,c
  4851  002988  0012               	return	
  4852  00298A                     __end_of_isspace:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           postdec1	equ	0xFE5
  4864                           plusw1	equ	0xFE3
  4865                           fsr1l	equ	0xFE1
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           postdec2	equ	0xFDD
  4869                           plusw2	equ	0xFDB
  4870                           fsr2h	equ	0xFDA
  4871                           fsr2l	equ	0xFD9
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function _isdigit *****************
  4875 ;; Defined at:
  4876 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  c               1    wreg     unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  c               1   20[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;		None               void
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;Total ram usage:        3 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    3
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_strtod
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text19
  4905  002A36                     __ptext19:
  4906                           	opt stack 0
  4907  002A36                     _isdigit:
  4908                           	opt stack 24
  4909                           
  4910                           ;incstack = 0
  4911                           ;isdigit@c stored from wreg
  4912  002A36  6E15               	movwf	isdigit@c,c
  4913  002A38  0E00               	movlw	0
  4914  002A3A  6E14               	movwf	_isdigit$1718,c
  4915  002A3C  0E3A               	movlw	58
  4916  002A3E  6015               	cpfslt	isdigit@c,c
  4917  002A40  D005               	goto	l1017
  4918  002A42  0E2F               	movlw	47
  4919  002A44  6415               	cpfsgt	isdigit@c,c
  4920  002A46  D002               	goto	l1017
  4921  002A48  0E01               	movlw	1
  4922  002A4A  6E14               	movwf	_isdigit$1718,c
  4923  002A4C                     l1017:
  4924  002A4C  C014  F013         	movff	_isdigit$1718,??_isdigit
  4925  002A50  3013               	rrcf	??_isdigit,w,c
  4926  002A52  0012               	return	
  4927  002A54                     __end_of_isdigit:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodh	equ	0xFF4
  4934                           prodl	equ	0xFF3
  4935                           intcon	equ	0xFF2
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           postdec1	equ	0xFE5
  4939                           plusw1	equ	0xFE3
  4940                           fsr1l	equ	0xFE1
  4941                           indf2	equ	0xFDF
  4942                           postinc2	equ	0xFDE
  4943                           postdec2	equ	0xFDD
  4944                           plusw2	equ	0xFDB
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function ___lmul *****************
  4950 ;; Defined at:
  4951 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  multiplier      4   18[COMRAM] unsigned long 
  4954 ;;  multiplicand    4   22[COMRAM] unsigned long 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  product         4   26[COMRAM] unsigned long 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  4   18[COMRAM] unsigned long 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;Total ram usage:       12 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    3
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_strtod
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text20
  4981  002688                     __ptext20:
  4982                           	opt stack 0
  4983  002688                     ___lmul:
  4984                           	opt stack 24
  4985                           
  4986                           ;incstack = 0
  4987  002688  0E00               	movlw	0
  4988  00268A  6E1B               	movwf	___lmul@product,c
  4989  00268C  0E00               	movlw	0
  4990  00268E  6E1C               	movwf	___lmul@product+1,c
  4991  002690  0E00               	movlw	0
  4992  002692  6E1D               	movwf	___lmul@product+2,c
  4993  002694  0E00               	movlw	0
  4994  002696  6E1E               	movwf	___lmul@product+3,c
  4995  002698  A013               	btfss	___lmul@multiplier,0,c
  4996  00269A  D008               	goto	l625
  4997  00269C  5017               	movf	___lmul@multiplicand,w,c
  4998  00269E  261B               	addwf	___lmul@product,f,c
  4999  0026A0  5018               	movf	___lmul@multiplicand+1,w,c
  5000  0026A2  221C               	addwfc	___lmul@product+1,f,c
  5001  0026A4  5019               	movf	___lmul@multiplicand+2,w,c
  5002  0026A6  221D               	addwfc	___lmul@product+2,f,c
  5003  0026A8  501A               	movf	___lmul@multiplicand+3,w,c
  5004  0026AA  221E               	addwfc	___lmul@product+3,f,c
  5005  0026AC                     l625:
  5006  0026AC  90D8               	bcf	status,0,c
  5007  0026AE  3617               	rlcf	___lmul@multiplicand,f,c
  5008  0026B0  3618               	rlcf	___lmul@multiplicand+1,f,c
  5009  0026B2  3619               	rlcf	___lmul@multiplicand+2,f,c
  5010  0026B4  361A               	rlcf	___lmul@multiplicand+3,f,c
  5011  0026B6  90D8               	bcf	status,0,c
  5012  0026B8  3216               	rrcf	___lmul@multiplier+3,f,c
  5013  0026BA  3215               	rrcf	___lmul@multiplier+2,f,c
  5014  0026BC  3214               	rrcf	___lmul@multiplier+1,f,c
  5015  0026BE  3213               	rrcf	___lmul@multiplier,f,c
  5016  0026C0  5013               	movf	___lmul@multiplier,w,c
  5017  0026C2  1014               	iorwf	___lmul@multiplier+1,w,c
  5018  0026C4  1015               	iorwf	___lmul@multiplier+2,w,c
  5019  0026C6  1016               	iorwf	___lmul@multiplier+3,w,c
  5020  0026C8  A4D8               	btfss	status,2,c
  5021  0026CA  D7E6               	goto	l624
  5022  0026CC  C01B  F013         	movff	___lmul@product,?___lmul
  5023  0026D0  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5024  0026D4  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5025  0026D8  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5026  0026DC  0012               	return		;funcret
  5027  0026DE                     __end_of___lmul:
  5028                           	opt stack 0
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           prodh	equ	0xFF4
  5034                           prodl	equ	0xFF3
  5035                           intcon	equ	0xFF2
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           postdec1	equ	0xFE5
  5039                           plusw1	equ	0xFE3
  5040                           fsr1l	equ	0xFE1
  5041                           indf2	equ	0xFDF
  5042                           postinc2	equ	0xFDE
  5043                           postdec2	equ	0xFDD
  5044                           plusw2	equ	0xFDB
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function ___ftneg *****************
  5050 ;; Defined at:
  5051 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/ftneg.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  f1              3   18[COMRAM] float 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  3   18[COMRAM] float 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5065 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;Total ram usage:        3 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    3
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_strtod
  5076 ;;		_modf
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text21
  5081  0029AE                     __ptext21:
  5082                           	opt stack 0
  5083  0029AE                     ___ftneg:
  5084                           	opt stack 25
  5085                           
  5086                           ;incstack = 0
  5087  0029AE  5013               	movf	___ftneg@f1,w,c
  5088  0029B0  1014               	iorwf	___ftneg@f1+1,w,c
  5089  0029B2  1015               	iorwf	___ftneg@f1+2,w,c
  5090  0029B4  B4D8               	btfsc	status,2,c
  5091  0029B6  D006               	goto	l978
  5092  0029B8  0E00               	movlw	0
  5093  0029BA  1A13               	xorwf	___ftneg@f1,f,c
  5094  0029BC  0E00               	movlw	0
  5095  0029BE  1A14               	xorwf	___ftneg@f1+1,f,c
  5096  0029C0  0E80               	movlw	128
  5097  0029C2  1A15               	xorwf	___ftneg@f1+2,f,c
  5098  0029C4                     l978:
  5099  0029C4  C013  F013         	movff	___ftneg@f1,?___ftneg
  5100  0029C8  C014  F014         	movff	___ftneg@f1+1,?___ftneg+1
  5101  0029CC  C015  F015         	movff	___ftneg@f1+2,?___ftneg+2
  5102  0029D0  0012               	return		;funcret
  5103  0029D2                     __end_of___ftneg:
  5104                           	opt stack 0
  5105                           tblptru	equ	0xFF8
  5106                           tblptrh	equ	0xFF7
  5107                           tblptrl	equ	0xFF6
  5108                           tablat	equ	0xFF5
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postdec1	equ	0xFE5
  5115                           plusw1	equ	0xFE3
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           plusw2	equ	0xFDB
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function ___ftmul *****************
  5126 ;; Defined at:
  5127 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/ftmul.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  f1              3   26[COMRAM] float 
  5130 ;;  f2              3   29[COMRAM] float 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  5133 ;;  sign            1   40[COMRAM] unsigned char 
  5134 ;;  cntr            1   39[COMRAM] unsigned char 
  5135 ;;  exp             1   35[COMRAM] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  3   26[COMRAM] float 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5145 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5146 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;Total ram usage:       15 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    4
  5152 ;; This function calls:
  5153 ;;		___ftpack
  5154 ;; This function is called by:
  5155 ;;		_cvtGPStoDecimal
  5156 ;;		_strtod
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text22
  5161  002148                     __ptext22:
  5162                           	opt stack 0
  5163  002148                     ___ftmul:
  5164                           	opt stack 23
  5165                           
  5166                           ;incstack = 0
  5167  002148  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  5168  00214C  6A22               	clrf	(??___ftmul+1)& (0+255),c
  5169  00214E  6A23               	clrf	(??___ftmul+2)& (0+255),c
  5170  002150  341C               	rlcf	___ftmul@f1+1,w,c
  5171  002152  3621               	rlcf	??___ftmul& (0+255),f,c
  5172  002154  E301               	bnc	u3961
  5173  002156  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  5174  002158                     u3961:
  5175  002158  5021               	movf	??___ftmul,w,c
  5176  00215A  6E24               	movwf	___ftmul@exp,c
  5177  00215C  5024               	movf	___ftmul@exp,w,c
  5178  00215E  A4D8               	btfss	status,2,c
  5179  002160  D007               	goto	l967
  5180  002162  0E00               	movlw	0
  5181  002164  6E1B               	movwf	?___ftmul,c
  5182  002166  0E00               	movlw	0
  5183  002168  6E1C               	movwf	?___ftmul+1,c
  5184  00216A  0E00               	movlw	0
  5185  00216C  6E1D               	movwf	?___ftmul+2,c
  5186  00216E  0012               	return	
  5187  002170                     l967:
  5188  002170  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  5189  002174  6A22               	clrf	(??___ftmul+1)& (0+255),c
  5190  002176  6A23               	clrf	(??___ftmul+2)& (0+255),c
  5191  002178  341F               	rlcf	___ftmul@f2+1,w,c
  5192  00217A  3621               	rlcf	??___ftmul& (0+255),f,c
  5193  00217C  E301               	bnc	u3981
  5194  00217E  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  5195  002180                     u3981:
  5196  002180  5021               	movf	??___ftmul,w,c
  5197  002182  6E29               	movwf	___ftmul@sign,c
  5198  002184  5029               	movf	___ftmul@sign,w,c
  5199  002186  A4D8               	btfss	status,2,c
  5200  002188  D007               	goto	l969
  5201  00218A  0E00               	movlw	0
  5202  00218C  6E1B               	movwf	?___ftmul,c
  5203  00218E  0E00               	movlw	0
  5204  002190  6E1C               	movwf	?___ftmul+1,c
  5205  002192  0E00               	movlw	0
  5206  002194  6E1D               	movwf	?___ftmul+2,c
  5207  002196  0012               	return	
  5208  002198                     l969:
  5209  002198  5029               	movf	___ftmul@sign,w,c
  5210  00219A  0F7B               	addlw	123
  5211  00219C  2624               	addwf	___ftmul@exp,f,c
  5212  00219E  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  5213  0021A2  5020               	movf	___ftmul@f2+2,w,c
  5214  0021A4  1A29               	xorwf	___ftmul@sign,f,c
  5215  0021A6  0E80               	movlw	128
  5216  0021A8  1629               	andwf	___ftmul@sign,f,c
  5217  0021AA  8E1C               	bsf	___ftmul@f1+1,7,c
  5218  0021AC  8E1F               	bsf	___ftmul@f2+1,7,c
  5219  0021AE  0EFF               	movlw	255
  5220  0021B0  161E               	andwf	___ftmul@f2,f,c
  5221  0021B2  0EFF               	movlw	255
  5222  0021B4  161F               	andwf	___ftmul@f2+1,f,c
  5223  0021B6  0E00               	movlw	0
  5224  0021B8  1620               	andwf	___ftmul@f2+2,f,c
  5225  0021BA  0E00               	movlw	0
  5226  0021BC  6E25               	movwf	___ftmul@f3_as_product,c
  5227  0021BE  0E00               	movlw	0
  5228  0021C0  6E26               	movwf	___ftmul@f3_as_product+1,c
  5229  0021C2  0E00               	movlw	0
  5230  0021C4  6E27               	movwf	___ftmul@f3_as_product+2,c
  5231  0021C6  0E07               	movlw	7
  5232  0021C8  6E28               	movwf	___ftmul@cntr,c
  5233  0021CA  A01B               	btfss	___ftmul@f1,0,c
  5234  0021CC  D006               	goto	l971
  5235  0021CE  501E               	movf	___ftmul@f2,w,c
  5236  0021D0  2625               	addwf	___ftmul@f3_as_product,f,c
  5237  0021D2  501F               	movf	___ftmul@f2+1,w,c
  5238  0021D4  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  5239  0021D6  5020               	movf	___ftmul@f2+2,w,c
  5240  0021D8  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  5241  0021DA                     l971:
  5242  0021DA  90D8               	bcf	status,0,c
  5243  0021DC  321D               	rrcf	___ftmul@f1+2,f,c
  5244  0021DE  321C               	rrcf	___ftmul@f1+1,f,c
  5245  0021E0  321B               	rrcf	___ftmul@f1,f,c
  5246  0021E2  90D8               	bcf	status,0,c
  5247  0021E4  361E               	rlcf	___ftmul@f2,f,c
  5248  0021E6  361F               	rlcf	___ftmul@f2+1,f,c
  5249  0021E8  3620               	rlcf	___ftmul@f2+2,f,c
  5250  0021EA  2E28               	decfsz	___ftmul@cntr,f,c
  5251  0021EC  D7EE               	goto	l970
  5252  0021EE  0E09               	movlw	9
  5253  0021F0  6E28               	movwf	___ftmul@cntr,c
  5254  0021F2  A01B               	btfss	___ftmul@f1,0,c
  5255  0021F4  D006               	goto	l974
  5256  0021F6  501E               	movf	___ftmul@f2,w,c
  5257  0021F8  2625               	addwf	___ftmul@f3_as_product,f,c
  5258  0021FA  501F               	movf	___ftmul@f2+1,w,c
  5259  0021FC  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  5260  0021FE  5020               	movf	___ftmul@f2+2,w,c
  5261  002200  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  5262  002202                     l974:
  5263  002202  90D8               	bcf	status,0,c
  5264  002204  321D               	rrcf	___ftmul@f1+2,f,c
  5265  002206  321C               	rrcf	___ftmul@f1+1,f,c
  5266  002208  321B               	rrcf	___ftmul@f1,f,c
  5267  00220A  90D8               	bcf	status,0,c
  5268  00220C  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  5269  00220E  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  5270  002210  3225               	rrcf	___ftmul@f3_as_product,f,c
  5271  002212  2E28               	decfsz	___ftmul@cntr,f,c
  5272  002214  D7EE               	goto	l973
  5273  002216  C025  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  5274  00221A  C026  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5275  00221E  C027  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5276  002222  C024  F016         	movff	___ftmul@exp,___ftpack@exp
  5277  002226  C029  F017         	movff	___ftmul@sign,___ftpack@sign
  5278  00222A  EC91  F011         	call	___ftpack	;wreg free
  5279  00222E  C013  F01B         	movff	?___ftpack,?___ftmul
  5280  002232  C014  F01C         	movff	?___ftpack+1,?___ftmul+1
  5281  002236  C015  F01D         	movff	?___ftpack+2,?___ftmul+2
  5282  00223A  0012               	return	
  5283  00223C                     __end_of___ftmul:
  5284                           	opt stack 0
  5285                           tblptru	equ	0xFF8
  5286                           tblptrh	equ	0xFF7
  5287                           tblptrl	equ	0xFF6
  5288                           tablat	equ	0xFF5
  5289                           prodh	equ	0xFF4
  5290                           prodl	equ	0xFF3
  5291                           intcon	equ	0xFF2
  5292                           postinc0	equ	0xFEE
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           plusw1	equ	0xFE3
  5296                           fsr1l	equ	0xFE1
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           plusw2	equ	0xFDB
  5301                           fsr2h	equ	0xFDA
  5302                           fsr2l	equ	0xFD9
  5303                           status	equ	0xFD8
  5304                           
  5305 ;; *************** function ___ftge *****************
  5306 ;; Defined at:
  5307 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/ftge.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  ff1             3   18[COMRAM] float 
  5310 ;;  ff2             3   21[COMRAM] float 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;		None               void
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5322 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;Total ram usage:        9 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    3
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_strtod
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text23
  5337  0023D0                     __ptext23:
  5338                           	opt stack 0
  5339  0023D0                     ___ftge:
  5340                           	opt stack 24
  5341                           
  5342                           ;incstack = 0
  5343  0023D0  AE15               	btfss	___ftge@ff1+2,7,c
  5344  0023D2  D016               	goto	l960
  5345  0023D4  C013  F019         	movff	___ftge@ff1,??___ftge
  5346  0023D8  C014  F01A         	movff	___ftge@ff1+1,??___ftge+1
  5347  0023DC  C015  F01B         	movff	___ftge@ff1+2,??___ftge+2
  5348  0023E0  1E19               	comf	??___ftge,f,c
  5349  0023E2  1E1A               	comf	??___ftge+1,f,c
  5350  0023E4  1E1B               	comf	??___ftge+2,f,c
  5351  0023E6  2A19               	incf	??___ftge,f,c
  5352  0023E8  0E00               	movlw	0
  5353  0023EA  221A               	addwfc	??___ftge+1,f,c
  5354  0023EC  221B               	addwfc	??___ftge+2,f,c
  5355  0023EE  0E00               	movlw	0
  5356  0023F0  2419               	addwf	??___ftge,w,c
  5357  0023F2  6E13               	movwf	___ftge@ff1,c
  5358  0023F4  0E00               	movlw	0
  5359  0023F6  201A               	addwfc	??___ftge+1,w,c
  5360  0023F8  6E14               	movwf	___ftge@ff1+1,c
  5361  0023FA  0E80               	movlw	128
  5362  0023FC  201B               	addwfc	??___ftge+2,w,c
  5363  0023FE  6E15               	movwf	___ftge@ff1+2,c
  5364  002400                     l960:
  5365  002400  AE18               	btfss	___ftge@ff2+2,7,c
  5366  002402  D016               	goto	l961
  5367  002404  C016  F019         	movff	___ftge@ff2,??___ftge
  5368  002408  C017  F01A         	movff	___ftge@ff2+1,??___ftge+1
  5369  00240C  C018  F01B         	movff	___ftge@ff2+2,??___ftge+2
  5370  002410  1E19               	comf	??___ftge,f,c
  5371  002412  1E1A               	comf	??___ftge+1,f,c
  5372  002414  1E1B               	comf	??___ftge+2,f,c
  5373  002416  2A19               	incf	??___ftge,f,c
  5374  002418  0E00               	movlw	0
  5375  00241A  221A               	addwfc	??___ftge+1,f,c
  5376  00241C  221B               	addwfc	??___ftge+2,f,c
  5377  00241E  0E00               	movlw	0
  5378  002420  2419               	addwf	??___ftge,w,c
  5379  002422  6E16               	movwf	___ftge@ff2,c
  5380  002424  0E00               	movlw	0
  5381  002426  201A               	addwfc	??___ftge+1,w,c
  5382  002428  6E17               	movwf	___ftge@ff2+1,c
  5383  00242A  0E80               	movlw	128
  5384  00242C  201B               	addwfc	??___ftge+2,w,c
  5385  00242E  6E18               	movwf	___ftge@ff2+2,c
  5386  002430                     l961:
  5387  002430  0E00               	movlw	0
  5388  002432  1A13               	xorwf	___ftge@ff1,f,c
  5389  002434  0E00               	movlw	0
  5390  002436  1A14               	xorwf	___ftge@ff1+1,f,c
  5391  002438  0E80               	movlw	128
  5392  00243A  1A15               	xorwf	___ftge@ff1+2,f,c
  5393  00243C  0E00               	movlw	0
  5394  00243E  1A16               	xorwf	___ftge@ff2,f,c
  5395  002440  0E00               	movlw	0
  5396  002442  1A17               	xorwf	___ftge@ff2+1,f,c
  5397  002444  0E80               	movlw	128
  5398  002446  1A18               	xorwf	___ftge@ff2+2,f,c
  5399  002448  5016               	movf	___ftge@ff2,w,c
  5400  00244A  5C13               	subwf	___ftge@ff1,w,c
  5401  00244C  5017               	movf	___ftge@ff2+1,w,c
  5402  00244E  5814               	subwfb	___ftge@ff1+1,w,c
  5403  002450  5018               	movf	___ftge@ff2+2,w,c
  5404  002452  5815               	subwfb	___ftge@ff1+2,w,c
  5405  002454  B0D8               	btfsc	status,0,c
  5406  002456  D002               	goto	l3883
  5407  002458  90D8               	bcf	status,0,c
  5408  00245A  0012               	return	
  5409  00245C                     l3883:
  5410  00245C  80D8               	bsf	status,0,c
  5411  00245E  0012               	return	
  5412  002460                     __end_of___ftge:
  5413                           	opt stack 0
  5414                           tblptru	equ	0xFF8
  5415                           tblptrh	equ	0xFF7
  5416                           tblptrl	equ	0xFF6
  5417                           tablat	equ	0xFF5
  5418                           prodh	equ	0xFF4
  5419                           prodl	equ	0xFF3
  5420                           intcon	equ	0xFF2
  5421                           postinc0	equ	0xFEE
  5422                           wreg	equ	0xFE8
  5423                           postdec1	equ	0xFE5
  5424                           plusw1	equ	0xFE3
  5425                           fsr1l	equ	0xFE1
  5426                           indf2	equ	0xFDF
  5427                           postinc2	equ	0xFDE
  5428                           postdec2	equ	0xFDD
  5429                           plusw2	equ	0xFDB
  5430                           fsr2h	equ	0xFDA
  5431                           fsr2l	equ	0xFD9
  5432                           status	equ	0xFD8
  5433                           
  5434 ;; *************** function ___ftdiv *****************
  5435 ;; Defined at:
  5436 ;;		line 54 in file "/opt/microchip/xc8/v1.45/sources/common/ftdiv.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  f1              3   41[COMRAM] float 
  5439 ;;  f2              3   44[COMRAM] float 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  f3              3   51[COMRAM] float 
  5442 ;;  sign            1   55[COMRAM] unsigned char 
  5443 ;;  exp             1   54[COMRAM] unsigned char 
  5444 ;;  cntr            1   50[COMRAM] unsigned char 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  3   41[COMRAM] float 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5454 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5455 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;Total ram usage:       15 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    4
  5461 ;; This function calls:
  5462 ;;		___ftpack
  5463 ;; This function is called by:
  5464 ;;		_cvtGPStoDecimal
  5465 ;;		_strtod
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text24
  5470  00223C                     __ptext24:
  5471                           	opt stack 0
  5472  00223C                     ___ftdiv:
  5473                           	opt stack 23
  5474                           
  5475                           ;incstack = 0
  5476  00223C  C02C  F030         	movff	___ftdiv@f1+2,??___ftdiv
  5477  002240  6A31               	clrf	(??___ftdiv+1)& (0+255),c
  5478  002242  6A32               	clrf	(??___ftdiv+2)& (0+255),c
  5479  002244  342B               	rlcf	___ftdiv@f1+1,w,c
  5480  002246  3630               	rlcf	??___ftdiv& (0+255),f,c
  5481  002248  E301               	bnc	u3911
  5482  00224A  8031               	bsf	(??___ftdiv+1)& (0+255),0,c
  5483  00224C                     u3911:
  5484  00224C  5030               	movf	??___ftdiv,w,c
  5485  00224E  6E37               	movwf	___ftdiv@exp,c
  5486  002250  5037               	movf	___ftdiv@exp,w,c
  5487  002252  A4D8               	btfss	status,2,c
  5488  002254  D007               	goto	l952
  5489  002256  0E00               	movlw	0
  5490  002258  6E2A               	movwf	?___ftdiv,c
  5491  00225A  0E00               	movlw	0
  5492  00225C  6E2B               	movwf	?___ftdiv+1,c
  5493  00225E  0E00               	movlw	0
  5494  002260  6E2C               	movwf	?___ftdiv+2,c
  5495  002262  0012               	return	
  5496  002264                     l952:
  5497  002264  C02F  F030         	movff	___ftdiv@f2+2,??___ftdiv
  5498  002268  6A31               	clrf	(??___ftdiv+1)& (0+255),c
  5499  00226A  6A32               	clrf	(??___ftdiv+2)& (0+255),c
  5500  00226C  342E               	rlcf	___ftdiv@f2+1,w,c
  5501  00226E  3630               	rlcf	??___ftdiv& (0+255),f,c
  5502  002270  E301               	bnc	u3931
  5503  002272  8031               	bsf	(??___ftdiv+1)& (0+255),0,c
  5504  002274                     u3931:
  5505  002274  5030               	movf	??___ftdiv,w,c
  5506  002276  6E38               	movwf	___ftdiv@sign,c
  5507  002278  5038               	movf	___ftdiv@sign,w,c
  5508  00227A  A4D8               	btfss	status,2,c
  5509  00227C  D007               	goto	l954
  5510  00227E  0E00               	movlw	0
  5511  002280  6E2A               	movwf	?___ftdiv,c
  5512  002282  0E00               	movlw	0
  5513  002284  6E2B               	movwf	?___ftdiv+1,c
  5514  002286  0E00               	movlw	0
  5515  002288  6E2C               	movwf	?___ftdiv+2,c
  5516  00228A  0012               	return	
  5517  00228C                     l954:
  5518  00228C  0E00               	movlw	0
  5519  00228E  6E34               	movwf	___ftdiv@f3,c
  5520  002290  0E00               	movlw	0
  5521  002292  6E35               	movwf	___ftdiv@f3+1,c
  5522  002294  0E00               	movlw	0
  5523  002296  6E36               	movwf	___ftdiv@f3+2,c
  5524  002298  5038               	movf	___ftdiv@sign,w,c
  5525  00229A  0F89               	addlw	137
  5526  00229C  5E37               	subwf	___ftdiv@exp,f,c
  5527  00229E  C02C  F038         	movff	___ftdiv@f1+2,___ftdiv@sign
  5528  0022A2  502F               	movf	___ftdiv@f2+2,w,c
  5529  0022A4  1A38               	xorwf	___ftdiv@sign,f,c
  5530  0022A6  0E80               	movlw	128
  5531  0022A8  1638               	andwf	___ftdiv@sign,f,c
  5532  0022AA  8E2B               	bsf	___ftdiv@f1+1,7,c
  5533  0022AC  0EFF               	movlw	255
  5534  0022AE  162A               	andwf	___ftdiv@f1,f,c
  5535  0022B0  0EFF               	movlw	255
  5536  0022B2  162B               	andwf	___ftdiv@f1+1,f,c
  5537  0022B4  0E00               	movlw	0
  5538  0022B6  162C               	andwf	___ftdiv@f1+2,f,c
  5539  0022B8  8E2E               	bsf	___ftdiv@f2+1,7,c
  5540  0022BA  0EFF               	movlw	255
  5541  0022BC  162D               	andwf	___ftdiv@f2,f,c
  5542  0022BE  0EFF               	movlw	255
  5543  0022C0  162E               	andwf	___ftdiv@f2+1,f,c
  5544  0022C2  0E00               	movlw	0
  5545  0022C4  162F               	andwf	___ftdiv@f2+2,f,c
  5546  0022C6  0E18               	movlw	24
  5547  0022C8  6E33               	movwf	___ftdiv@cntr,c
  5548  0022CA  90D8               	bcf	status,0,c
  5549  0022CC  3634               	rlcf	___ftdiv@f3,f,c
  5550  0022CE  3635               	rlcf	___ftdiv@f3+1,f,c
  5551  0022D0  3636               	rlcf	___ftdiv@f3+2,f,c
  5552  0022D2  502D               	movf	___ftdiv@f2,w,c
  5553  0022D4  5C2A               	subwf	___ftdiv@f1,w,c
  5554  0022D6  502E               	movf	___ftdiv@f2+1,w,c
  5555  0022D8  582B               	subwfb	___ftdiv@f1+1,w,c
  5556  0022DA  502F               	movf	___ftdiv@f2+2,w,c
  5557  0022DC  582C               	subwfb	___ftdiv@f1+2,w,c
  5558  0022DE  A0D8               	btfss	status,0,c
  5559  0022E0  D007               	goto	l956
  5560  0022E2  502D               	movf	___ftdiv@f2,w,c
  5561  0022E4  5E2A               	subwf	___ftdiv@f1,f,c
  5562  0022E6  502E               	movf	___ftdiv@f2+1,w,c
  5563  0022E8  5A2B               	subwfb	___ftdiv@f1+1,f,c
  5564  0022EA  502F               	movf	___ftdiv@f2+2,w,c
  5565  0022EC  5A2C               	subwfb	___ftdiv@f1+2,f,c
  5566  0022EE  8034               	bsf	___ftdiv@f3,0,c
  5567  0022F0                     l956:
  5568  0022F0  90D8               	bcf	status,0,c
  5569  0022F2  362A               	rlcf	___ftdiv@f1,f,c
  5570  0022F4  362B               	rlcf	___ftdiv@f1+1,f,c
  5571  0022F6  362C               	rlcf	___ftdiv@f1+2,f,c
  5572  0022F8  2E33               	decfsz	___ftdiv@cntr,f,c
  5573  0022FA  D7E7               	goto	l955
  5574  0022FC  C034  F013         	movff	___ftdiv@f3,___ftpack@arg
  5575  002300  C035  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5576  002304  C036  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5577  002308  C037  F016         	movff	___ftdiv@exp,___ftpack@exp
  5578  00230C  C038  F017         	movff	___ftdiv@sign,___ftpack@sign
  5579  002310  EC91  F011         	call	___ftpack	;wreg free
  5580  002314  C013  F02A         	movff	?___ftpack,?___ftdiv
  5581  002318  C014  F02B         	movff	?___ftpack+1,?___ftdiv+1
  5582  00231C  C015  F02C         	movff	?___ftpack+2,?___ftdiv+2
  5583  002320  0012               	return	
  5584  002322                     __end_of___ftdiv:
  5585                           	opt stack 0
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           intcon	equ	0xFF2
  5593                           postinc0	equ	0xFEE
  5594                           wreg	equ	0xFE8
  5595                           postdec1	equ	0xFE5
  5596                           plusw1	equ	0xFE3
  5597                           fsr1l	equ	0xFE1
  5598                           indf2	equ	0xFDF
  5599                           postinc2	equ	0xFDE
  5600                           postdec2	equ	0xFDD
  5601                           plusw2	equ	0xFDB
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function ___altoft *****************
  5607 ;; Defined at:
  5608 ;;		line 42 in file "/opt/microchip/xc8/v1.45/sources/common/altoft.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  c               4   26[COMRAM] long 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  sign            1   35[COMRAM] unsigned char 
  5613 ;;  exp             1   34[COMRAM] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  3   26[COMRAM] float 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5626 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5627 ;;Total ram usage:       10 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    4
  5630 ;; This function calls:
  5631 ;;		___ftpack
  5632 ;; This function is called by:
  5633 ;;		_strtod
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text25
  5638  002460                     __ptext25:
  5639                           	opt stack 0
  5640  002460                     ___altoft:
  5641                           	opt stack 23
  5642                           
  5643                           ;incstack = 0
  5644  002460  0E00               	movlw	0
  5645  002462  6E24               	movwf	___altoft@sign,c
  5646  002464  0E8E               	movlw	142
  5647  002466  6E23               	movwf	___altoft@exp,c
  5648  002468  AE1E               	btfss	___altoft@c+3,7,c
  5649  00246A  D011               	goto	l697
  5650  00246C  1E1E               	comf	___altoft@c+3,f,c
  5651  00246E  1E1D               	comf	___altoft@c+2,f,c
  5652  002470  1E1C               	comf	___altoft@c+1,f,c
  5653  002472  6C1B               	negf	___altoft@c,c
  5654  002474  0E00               	movlw	0
  5655  002476  221C               	addwfc	___altoft@c+1,f,c
  5656  002478  221D               	addwfc	___altoft@c+2,f,c
  5657  00247A  221E               	addwfc	___altoft@c+3,f,c
  5658  00247C  0E01               	movlw	1
  5659  00247E  6E24               	movwf	___altoft@sign,c
  5660  002480  D006               	goto	l697
  5661  002482  90D8               	bcf	status,0,c
  5662  002484  321E               	rrcf	___altoft@c+3,f,c
  5663  002486  321D               	rrcf	___altoft@c+2,f,c
  5664  002488  321C               	rrcf	___altoft@c+1,f,c
  5665  00248A  321B               	rrcf	___altoft@c,f,c
  5666  00248C  2A23               	incf	___altoft@exp,f,c
  5667  00248E                     l697:
  5668  00248E  0E00               	movlw	0
  5669  002490  141B               	andwf	___altoft@c,w,c
  5670  002492  6E1F               	movwf	??___altoft& (0+255),c
  5671  002494  0E00               	movlw	0
  5672  002496  141C               	andwf	___altoft@c+1,w,c
  5673  002498  6E20               	movwf	(??___altoft+1)& (0+255),c
  5674  00249A  0E00               	movlw	0
  5675  00249C  141D               	andwf	___altoft@c+2,w,c
  5676  00249E  6E21               	movwf	(??___altoft+2)& (0+255),c
  5677  0024A0  0EFF               	movlw	255
  5678  0024A2  141E               	andwf	___altoft@c+3,w,c
  5679  0024A4  6E22               	movwf	(??___altoft+3)& (0+255),c
  5680  0024A6  501F               	movf	??___altoft,w,c
  5681  0024A8  1020               	iorwf	??___altoft+1,w,c
  5682  0024AA  1021               	iorwf	??___altoft+2,w,c
  5683  0024AC  1022               	iorwf	??___altoft+3,w,c
  5684  0024AE  A4D8               	btfss	status,2,c
  5685  0024B0  D7E8               	goto	l698
  5686  0024B2  C01B  F013         	movff	___altoft@c,___ftpack@arg
  5687  0024B6  C01C  F014         	movff	___altoft@c+1,___ftpack@arg+1
  5688  0024BA  C01D  F015         	movff	___altoft@c+2,___ftpack@arg+2
  5689  0024BE  C023  F016         	movff	___altoft@exp,___ftpack@exp
  5690  0024C2  C024  F017         	movff	___altoft@sign,___ftpack@sign
  5691  0024C6  EC91  F011         	call	___ftpack	;wreg free
  5692  0024CA  C013  F01B         	movff	?___ftpack,?___altoft
  5693  0024CE  C014  F01C         	movff	?___ftpack+1,?___altoft+1
  5694  0024D2  C015  F01D         	movff	?___ftpack+2,?___altoft+2
  5695  0024D6  0012               	return	
  5696  0024D8                     __end_of___altoft:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           postdec1	equ	0xFE5
  5708                           plusw1	equ	0xFE3
  5709                           fsr1l	equ	0xFE1
  5710                           indf2	equ	0xFDF
  5711                           postinc2	equ	0xFDE
  5712                           postdec2	equ	0xFDD
  5713                           plusw2	equ	0xFDB
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function ___ftpack *****************
  5719 ;; Defined at:
  5720 ;;		line 62 in file "/opt/microchip/xc8/v1.45/sources/common/float.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  arg             3   18[COMRAM] unsigned um
  5723 ;;  exp             1   21[COMRAM] unsigned char 
  5724 ;;  sign            1   22[COMRAM] unsigned char 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  3   18[COMRAM] float 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5736 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;Total ram usage:        8 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    3
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		___altoft
  5747 ;;		___attoft
  5748 ;;		___ftadd
  5749 ;;		___ftdiv
  5750 ;;		___ftmul
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text26
  5755  002322                     __ptext26:
  5756                           	opt stack 0
  5757  002322                     ___ftpack:
  5758                           	opt stack 24
  5759                           
  5760                           ;incstack = 0
  5761  002322  5016               	movf	___ftpack@exp,w,c
  5762  002324  B4D8               	btfsc	status,2,c
  5763  002326  D005               	goto	u3800
  5764  002328  5013               	movf	___ftpack@arg,w,c
  5765  00232A  1014               	iorwf	___ftpack@arg+1,w,c
  5766  00232C  1015               	iorwf	___ftpack@arg+2,w,c
  5767  00232E  A4D8               	btfss	status,2,c
  5768  002330  D00C               	goto	l888
  5769  002332                     u3800:
  5770  002332  0E00               	movlw	0
  5771  002334  6E13               	movwf	?___ftpack,c
  5772  002336  0E00               	movlw	0
  5773  002338  6E14               	movwf	?___ftpack+1,c
  5774  00233A  0E00               	movlw	0
  5775  00233C  6E15               	movwf	?___ftpack+2,c
  5776  00233E  0012               	return	
  5777  002340  2A16               	incf	___ftpack@exp,f,c
  5778  002342  90D8               	bcf	status,0,c
  5779  002344  3215               	rrcf	___ftpack@arg+2,f,c
  5780  002346  3214               	rrcf	___ftpack@arg+1,f,c
  5781  002348  3213               	rrcf	___ftpack@arg,f,c
  5782  00234A                     l888:
  5783  00234A  0E00               	movlw	0
  5784  00234C  1413               	andwf	___ftpack@arg,w,c
  5785  00234E  6E18               	movwf	??___ftpack& (0+255),c
  5786  002350  0E00               	movlw	0
  5787  002352  1414               	andwf	___ftpack@arg+1,w,c
  5788  002354  6E19               	movwf	(??___ftpack+1)& (0+255),c
  5789  002356  0EFE               	movlw	254
  5790  002358  1415               	andwf	___ftpack@arg+2,w,c
  5791  00235A  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  5792  00235C  5018               	movf	??___ftpack,w,c
  5793  00235E  1019               	iorwf	??___ftpack+1,w,c
  5794  002360  101A               	iorwf	??___ftpack+2,w,c
  5795  002362  B4D8               	btfsc	status,2,c
  5796  002364  D00C               	goto	l891
  5797  002366  D7EC               	goto	l889
  5798  002368  2A16               	incf	___ftpack@exp,f,c
  5799  00236A  0E01               	movlw	1
  5800  00236C  2613               	addwf	___ftpack@arg,f,c
  5801  00236E  0E00               	movlw	0
  5802  002370  2214               	addwfc	___ftpack@arg+1,f,c
  5803  002372  0E00               	movlw	0
  5804  002374  2215               	addwfc	___ftpack@arg+2,f,c
  5805  002376  90D8               	bcf	status,0,c
  5806  002378  3215               	rrcf	___ftpack@arg+2,f,c
  5807  00237A  3214               	rrcf	___ftpack@arg+1,f,c
  5808  00237C  3213               	rrcf	___ftpack@arg,f,c
  5809  00237E                     l891:
  5810  00237E  0E00               	movlw	0
  5811  002380  1413               	andwf	___ftpack@arg,w,c
  5812  002382  6E18               	movwf	??___ftpack& (0+255),c
  5813  002384  0E00               	movlw	0
  5814  002386  1414               	andwf	___ftpack@arg+1,w,c
  5815  002388  6E19               	movwf	(??___ftpack+1)& (0+255),c
  5816  00238A  0EFF               	movlw	255
  5817  00238C  1415               	andwf	___ftpack@arg+2,w,c
  5818  00238E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  5819  002390  5018               	movf	??___ftpack,w,c
  5820  002392  1019               	iorwf	??___ftpack+1,w,c
  5821  002394  101A               	iorwf	??___ftpack+2,w,c
  5822  002396  B4D8               	btfsc	status,2,c
  5823  002398  D006               	goto	l894
  5824  00239A  D7E6               	goto	l892
  5825  00239C  0616               	decf	___ftpack@exp,f,c
  5826  00239E  90D8               	bcf	status,0,c
  5827  0023A0  3613               	rlcf	___ftpack@arg,f,c
  5828  0023A2  3614               	rlcf	___ftpack@arg+1,f,c
  5829  0023A4  3615               	rlcf	___ftpack@arg+2,f,c
  5830  0023A6                     l894:
  5831  0023A6  BE14               	btfsc	___ftpack@arg+1,7,c
  5832  0023A8  D003               	goto	u3840
  5833  0023AA  0E02               	movlw	2
  5834  0023AC  6016               	cpfslt	___ftpack@exp,c
  5835  0023AE  D7F6               	goto	l895
  5836  0023B0                     u3840:
  5837  0023B0  A016               	btfss	___ftpack@exp,0,c
  5838  0023B2  9E14               	bcf	___ftpack@arg+1,7,c
  5839  0023B4  90D8               	bcf	status,0,c
  5840  0023B6  3216               	rrcf	___ftpack@exp,f,c
  5841  0023B8  5016               	movf	___ftpack@exp,w,c
  5842  0023BA  1215               	iorwf	___ftpack@arg+2,f,c
  5843  0023BC  5017               	movf	___ftpack@sign,w,c
  5844  0023BE  A4D8               	btfss	status,2,c
  5845  0023C0  8E15               	bsf	___ftpack@arg+2,7,c
  5846  0023C2  C013  F013         	movff	___ftpack@arg,?___ftpack
  5847  0023C6  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  5848  0023CA  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  5849  0023CE  0012               	return	
  5850  0023D0                     __end_of___ftpack:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postdec1	equ	0xFE5
  5862                           plusw1	equ	0xFE3
  5863                           fsr1l	equ	0xFE1
  5864                           indf2	equ	0xFDF
  5865                           postinc2	equ	0xFDE
  5866                           postdec2	equ	0xFDD
  5867                           plusw2	equ	0xFDB
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _SYSTEM_Initialize *****************
  5873 ;; Defined at:
  5874 ;;		line 112 in file "mcc_generated_files/mcc.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    5
  5895 ;; This function calls:
  5896 ;;		_EUSART1_Initialize
  5897 ;;		_INTERRUPT_Initialize
  5898 ;;		_OSCILLATOR_Initialize
  5899 ;;		_PIN_MANAGER_Initialize
  5900 ;;		_TMR0_Initialize
  5901 ;; This function is called by:
  5902 ;;		_main
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text27
  5907  002A6C                     __ptext27:
  5908                           	opt stack 0
  5909  002A6C                     _SYSTEM_Initialize:
  5910                           	opt stack 25
  5911                           
  5912                           ;mcc.c: 114: INTERRUPT_Initialize();
  5913                           
  5914                           ;incstack = 0
  5915  002A6C  EC4F  F015         	call	_INTERRUPT_Initialize	;wreg free
  5916                           
  5917                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  5918  002A70  EC9E  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  5919                           
  5920                           ;mcc.c: 116: OSCILLATOR_Initialize();
  5921  002A74  EC41  F015         	call	_OSCILLATOR_Initialize	;wreg free
  5922                           
  5923                           ;mcc.c: 117: TMR0_Initialize();
  5924  002A78  ECFB  F014         	call	_TMR0_Initialize	;wreg free
  5925                           
  5926                           ;mcc.c: 118: EUSART1_Initialize();
  5927  002A7C  EC19  F014         	call	_EUSART1_Initialize	;wreg free
  5928  002A80  0012               	return		;funcret
  5929  002A82                     __end_of_SYSTEM_Initialize:
  5930                           	opt stack 0
  5931                           tblptru	equ	0xFF8
  5932                           tblptrh	equ	0xFF7
  5933                           tblptrl	equ	0xFF6
  5934                           tablat	equ	0xFF5
  5935                           prodh	equ	0xFF4
  5936                           prodl	equ	0xFF3
  5937                           intcon	equ	0xFF2
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           postdec1	equ	0xFE5
  5941                           plusw1	equ	0xFE3
  5942                           fsr1l	equ	0xFE1
  5943                           indf2	equ	0xFDF
  5944                           postinc2	equ	0xFDE
  5945                           postdec2	equ	0xFDD
  5946                           plusw2	equ	0xFDB
  5947                           fsr2h	equ	0xFDA
  5948                           fsr2l	equ	0xFD9
  5949                           status	equ	0xFD8
  5950                           
  5951 ;; *************** function _TMR0_Initialize *****************
  5952 ;; Defined at:
  5953 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;Total ram usage:        0 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    4
  5974 ;; This function calls:
  5975 ;;		_TMR0_SetInterruptHandler
  5976 ;; This function is called by:
  5977 ;;		_SYSTEM_Initialize
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text28
  5982  0029F6                     __ptext28:
  5983                           	opt stack 0
  5984  0029F6                     _TMR0_Initialize:
  5985                           	opt stack 25
  5986                           
  5987                           ;tmr0.c: 71: TMR0H = 0x00;
  5988                           
  5989                           ;incstack = 0
  5990  0029F6  0E00               	movlw	0
  5991  0029F8  6ED7               	movwf	4055,c	;volatile
  5992                           
  5993                           ;tmr0.c: 74: TMR0L = 0x3D;
  5994  0029FA  0E3D               	movlw	61
  5995  0029FC  6ED6               	movwf	4054,c	;volatile
  5996                           
  5997                           ;tmr0.c: 78: timer0ReloadVal = 61;
  5998  0029FE  0E3D               	movlw	61
  5999  002A00  6E4B               	movwf	_timer0ReloadVal,c	;volatile
  6000                           
  6001                           ;tmr0.c: 81: INTCONbits.TMR0IF = 0;
  6002  002A02  94F2               	bcf	intcon,2,c	;volatile
  6003                           
  6004                           ;tmr0.c: 84: INTCONbits.TMR0IE = 1;
  6005  002A04  8AF2               	bsf	intcon,5,c	;volatile
  6006                           
  6007                           ;tmr0.c: 87: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  6008  002A06  0EA6               	movlw	low _TMR0_DefaultInterruptHandler
  6009  002A08  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  6010  002A0A  0E2A               	movlw	high _TMR0_DefaultInterruptHandler
  6011  002A0C  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  6012  002A0E  EC4A  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  6013                           
  6014                           ;tmr0.c: 90: T0CON = 0xD7;
  6015  002A12  0ED7               	movlw	215
  6016  002A14  6ED5               	movwf	4053,c	;volatile
  6017  002A16  0012               	return		;funcret
  6018  002A18                     __end_of_TMR0_Initialize:
  6019                           	opt stack 0
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           prodh	equ	0xFF4
  6025                           prodl	equ	0xFF3
  6026                           intcon	equ	0xFF2
  6027                           postinc0	equ	0xFEE
  6028                           wreg	equ	0xFE8
  6029                           postdec1	equ	0xFE5
  6030                           plusw1	equ	0xFE3
  6031                           fsr1l	equ	0xFE1
  6032                           indf2	equ	0xFDF
  6033                           postinc2	equ	0xFDE
  6034                           postdec2	equ	0xFDD
  6035                           plusw2	equ	0xFDB
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _TMR0_SetInterruptHandler *****************
  6041 ;; Defined at:
  6042 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  6045 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6061 ;;Total ram usage:        2 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    3
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_TMR0_Initialize
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text29
  6072  002A94                     __ptext29:
  6073                           	opt stack 0
  6074  002A94                     _TMR0_SetInterruptHandler:
  6075                           	opt stack 25
  6076                           
  6077                           ;tmr0.c: 147: TMR0_InterruptHandler = InterruptHandler;
  6078                           
  6079                           ;incstack = 0
  6080  002A94  C013  F048         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6081  002A98  C014  F049         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6082  002A9C  0012               	return		;funcret
  6083  002A9E                     __end_of_TMR0_SetInterruptHandler:
  6084                           	opt stack 0
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           intcon	equ	0xFF2
  6092                           postinc0	equ	0xFEE
  6093                           wreg	equ	0xFE8
  6094                           postdec1	equ	0xFE5
  6095                           plusw1	equ	0xFE3
  6096                           fsr1l	equ	0xFE1
  6097                           indf2	equ	0xFDF
  6098                           postinc2	equ	0xFDE
  6099                           postdec2	equ	0xFDD
  6100                           plusw2	equ	0xFDB
  6101                           fsr2h	equ	0xFDA
  6102                           fsr2l	equ	0xFD9
  6103                           status	equ	0xFD8
  6104                           
  6105 ;; *************** function _PIN_MANAGER_Initialize *****************
  6106 ;; Defined at:
  6107 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;		None
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      void 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6125 ;;Total ram usage:        0 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    3
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_SYSTEM_Initialize
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text30
  6136  00293C                     __ptext30:
  6137                           	opt stack 0
  6138  00293C                     _PIN_MANAGER_Initialize:
  6139                           	opt stack 26
  6140                           
  6141                           ;pin_manager.c: 57: LATA = 0x00;
  6142                           
  6143                           ;incstack = 0
  6144  00293C  0E00               	movlw	0
  6145  00293E  6E89               	movwf	3977,c	;volatile
  6146                           
  6147                           ;pin_manager.c: 58: LATB = 0x00;
  6148  002940  0E00               	movlw	0
  6149  002942  6E8A               	movwf	3978,c	;volatile
  6150                           
  6151                           ;pin_manager.c: 59: LATC = 0x00;
  6152  002944  0E00               	movlw	0
  6153  002946  6E8B               	movwf	3979,c	;volatile
  6154                           
  6155                           ;pin_manager.c: 64: TRISA = 0xEF;
  6156  002948  0EEF               	movlw	239
  6157  00294A  6E92               	movwf	3986,c	;volatile
  6158                           
  6159                           ;pin_manager.c: 65: TRISB = 0xFB;
  6160  00294C  0EFB               	movlw	251
  6161  00294E  6E93               	movwf	3987,c	;volatile
  6162                           
  6163                           ;pin_manager.c: 66: TRISC = 0xFF;
  6164  002950  6894               	setf	3988,c	;volatile
  6165                           
  6166                           ;pin_manager.c: 71: ANCON0 = 0x1F;
  6167  002952  0E1F               	movlw	31
  6168  002954  010F               	movlb	15	; () banked
  6169  002956  6F5D               	movwf	93,b	;volatile
  6170                           
  6171                           ;pin_manager.c: 72: ANCON1 = 0x07;
  6172  002958  0E07               	movlw	7
  6173  00295A  6F5C               	movwf	92,b	;volatile
  6174                           
  6175                           ;pin_manager.c: 77: WPUB = 0x00;
  6176  00295C  0E00               	movlw	0
  6177  00295E  6F5B               	movwf	91,b	;volatile
  6178                           
  6179                           ; BSR set to: 15
  6180                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 1;
  6181  002960  8EF1               	bsf	intcon2,7,c	;volatile
  6182                           
  6183                           ; BSR set to: 15
  6184  002962  0012               	return		;funcret
  6185  002964                     __end_of_PIN_MANAGER_Initialize:
  6186                           	opt stack 0
  6187                           tblptru	equ	0xFF8
  6188                           tblptrh	equ	0xFF7
  6189                           tblptrl	equ	0xFF6
  6190                           tablat	equ	0xFF5
  6191                           prodh	equ	0xFF4
  6192                           prodl	equ	0xFF3
  6193                           intcon	equ	0xFF2
  6194                           intcon2	equ	0xFF1
  6195                           postinc0	equ	0xFEE
  6196                           wreg	equ	0xFE8
  6197                           postdec1	equ	0xFE5
  6198                           plusw1	equ	0xFE3
  6199                           fsr1l	equ	0xFE1
  6200                           indf2	equ	0xFDF
  6201                           postinc2	equ	0xFDE
  6202                           postdec2	equ	0xFDD
  6203                           plusw2	equ	0xFDB
  6204                           fsr2h	equ	0xFDA
  6205                           fsr2l	equ	0xFD9
  6206                           status	equ	0xFD8
  6207                           
  6208 ;; *************** function _OSCILLATOR_Initialize *****************
  6209 ;; Defined at:
  6210 ;;		line 122 in file "mcc_generated_files/mcc.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    3
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_SYSTEM_Initialize
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text31
  6239  002A82                     __ptext31:
  6240                           	opt stack 0
  6241  002A82                     _OSCILLATOR_Initialize:
  6242                           	opt stack 26
  6243                           
  6244                           ;mcc.c: 125: OSCCON = 0x62;
  6245                           
  6246                           ; BSR set to: 15
  6247                           ;incstack = 0
  6248  002A82  0E62               	movlw	98
  6249  002A84  6ED3               	movwf	4051,c	;volatile
  6250                           
  6251                           ;mcc.c: 127: OSCCON2 = 0x00;
  6252  002A86  0E00               	movlw	0
  6253  002A88  6ED2               	movwf	4050,c	;volatile
  6254                           
  6255                           ;mcc.c: 129: OSCTUNE = 0x00;
  6256  002A8A  0E00               	movlw	0
  6257  002A8C  6E9B               	movwf	3995,c	;volatile
  6258                           
  6259                           ;mcc.c: 131: REFOCON = 0x00;
  6260  002A8E  0E00               	movlw	0
  6261  002A90  6E9A               	movwf	3994,c	;volatile
  6262  002A92  0012               	return		;funcret
  6263  002A94                     __end_of_OSCILLATOR_Initialize:
  6264                           	opt stack 0
  6265                           tblptru	equ	0xFF8
  6266                           tblptrh	equ	0xFF7
  6267                           tblptrl	equ	0xFF6
  6268                           tablat	equ	0xFF5
  6269                           prodh	equ	0xFF4
  6270                           prodl	equ	0xFF3
  6271                           intcon	equ	0xFF2
  6272                           intcon2	equ	0xFF1
  6273                           postinc0	equ	0xFEE
  6274                           wreg	equ	0xFE8
  6275                           postdec1	equ	0xFE5
  6276                           plusw1	equ	0xFE3
  6277                           fsr1l	equ	0xFE1
  6278                           indf2	equ	0xFDF
  6279                           postinc2	equ	0xFDE
  6280                           postdec2	equ	0xFDD
  6281                           plusw2	equ	0xFDB
  6282                           fsr2h	equ	0xFDA
  6283                           fsr2l	equ	0xFD9
  6284                           status	equ	0xFD8
  6285                           
  6286 ;; *************** function _INTERRUPT_Initialize *****************
  6287 ;; Defined at:
  6288 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		None
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_SYSTEM_Initialize
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text32
  6317  002A9E                     __ptext32:
  6318                           	opt stack 0
  6319  002A9E                     _INTERRUPT_Initialize:
  6320                           	opt stack 26
  6321                           
  6322                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  6323                           
  6324                           ;incstack = 0
  6325  002A9E  9ED0               	bcf	4048,7,c	;volatile
  6326  002AA0  0012               	return		;funcret
  6327  002AA2                     __end_of_INTERRUPT_Initialize:
  6328                           	opt stack 0
  6329                           tblptru	equ	0xFF8
  6330                           tblptrh	equ	0xFF7
  6331                           tblptrl	equ	0xFF6
  6332                           tablat	equ	0xFF5
  6333                           prodh	equ	0xFF4
  6334                           prodl	equ	0xFF3
  6335                           intcon	equ	0xFF2
  6336                           intcon2	equ	0xFF1
  6337                           postinc0	equ	0xFEE
  6338                           wreg	equ	0xFE8
  6339                           postdec1	equ	0xFE5
  6340                           plusw1	equ	0xFE3
  6341                           fsr1l	equ	0xFE1
  6342                           indf2	equ	0xFDF
  6343                           postinc2	equ	0xFDE
  6344                           postdec2	equ	0xFDD
  6345                           plusw2	equ	0xFDB
  6346                           fsr2h	equ	0xFDA
  6347                           fsr2l	equ	0xFD9
  6348                           status	equ	0xFD8
  6349                           
  6350 ;; *************** function _EUSART1_Initialize *****************
  6351 ;; Defined at:
  6352 ;;		line 72 in file "mcc_generated_files/eusart1.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6370 ;;Total ram usage:        0 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    3
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_SYSTEM_Initialize
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text33
  6381  002832                     __ptext33:
  6382                           	opt stack 0
  6383  002832                     _EUSART1_Initialize:
  6384                           	opt stack 26
  6385                           
  6386                           ;eusart1.c: 75: PIE1bits.RC1IE = 0;
  6387                           
  6388                           ;incstack = 0
  6389  002832  9A9D               	bcf	3997,5,c	;volatile
  6390                           
  6391                           ;eusart1.c: 76: PIE1bits.TX1IE = 0;
  6392  002834  989D               	bcf	3997,4,c	;volatile
  6393                           
  6394                           ;eusart1.c: 80: BAUDCON1 = 0x0A;
  6395  002836  0E0A               	movlw	10
  6396  002838  6EA7               	movwf	4007,c	;volatile
  6397                           
  6398                           ;eusart1.c: 83: RCSTA1 = 0x90;
  6399  00283A  0E90               	movlw	144
  6400  00283C  6EAB               	movwf	4011,c	;volatile
  6401                           
  6402                           ;eusart1.c: 86: TXSTA1 = 0x04;
  6403  00283E  0E04               	movlw	4
  6404  002840  6EAC               	movwf	4012,c	;volatile
  6405                           
  6406                           ;eusart1.c: 89: SPBRG1 = 0xCF;
  6407  002842  0ECF               	movlw	207
  6408  002844  6EAF               	movwf	4015,c	;volatile
  6409                           
  6410                           ;eusart1.c: 92: SPBRGH1 = 0x00;
  6411  002846  0E00               	movlw	0
  6412  002848  6E7D               	movwf	3965,c	;volatile
  6413                           
  6414                           ;eusart1.c: 96: eusart1TxHead = 0;
  6415  00284A  0E00               	movlw	0
  6416  00284C  6E47               	movwf	_eusart1TxHead,c	;volatile
  6417                           
  6418                           ;eusart1.c: 97: eusart1TxTail = 0;
  6419  00284E  0E00               	movlw	0
  6420  002850  6E46               	movwf	_eusart1TxTail,c	;volatile
  6421                           
  6422                           ;eusart1.c: 98: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  6423  002852  0E08               	movlw	8
  6424  002854  6E4A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  6425                           
  6426                           ;eusart1.c: 100: eusart1RxHead = 0;
  6427  002856  0E00               	movlw	0
  6428  002858  6E45               	movwf	_eusart1RxHead,c	;volatile
  6429                           
  6430                           ;eusart1.c: 101: eusart1RxTail = 0;
  6431  00285A  0E00               	movlw	0
  6432  00285C  6E44               	movwf	_eusart1RxTail,c	;volatile
  6433                           
  6434                           ;eusart1.c: 102: eusart1RxCount = 0;
  6435  00285E  0E00               	movlw	0
  6436  002860  6E43               	movwf	_eusart1RxCount,c	;volatile
  6437                           
  6438                           ;eusart1.c: 105: PIE1bits.RC1IE = 1;
  6439  002862  8A9D               	bsf	3997,5,c	;volatile
  6440  002864  0012               	return		;funcret
  6441  002866                     __end_of_EUSART1_Initialize:
  6442                           	opt stack 0
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           prodh	equ	0xFF4
  6448                           prodl	equ	0xFF3
  6449                           intcon	equ	0xFF2
  6450                           intcon2	equ	0xFF1
  6451                           postinc0	equ	0xFEE
  6452                           wreg	equ	0xFE8
  6453                           postdec1	equ	0xFE5
  6454                           plusw1	equ	0xFE3
  6455                           fsr1l	equ	0xFE1
  6456                           indf2	equ	0xFDF
  6457                           postinc2	equ	0xFDE
  6458                           postdec2	equ	0xFDD
  6459                           plusw2	equ	0xFDB
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function _CAN_transmit *****************
  6465 ;; Defined at:
  6466 ;;		line 158 in file "mcc_generated_files/ecan.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  tempCanMsg      2   36[COMRAM] PTR struct .
  6469 ;;		 -> main@gpsMSG(2), 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  tempSIDL        1   42[COMRAM] unsigned char 
  6472 ;;  tempSIDH        1   41[COMRAM] unsigned char 
  6473 ;;  tempEIDL        1   40[COMRAM] unsigned char 
  6474 ;;  tempEIDH        1   39[COMRAM] unsigned char 
  6475 ;;  returnValue     1   38[COMRAM] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      unsigned char 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6486 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;Total ram usage:        7 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    4
  6492 ;; This function calls:
  6493 ;;		_convertCANid2Reg
  6494 ;; This function is called by:
  6495 ;;		_main
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text34
  6500  0017E4                     __ptext34:
  6501                           	opt stack 0
  6502  0017E4                     _CAN_transmit:
  6503                           	opt stack 26
  6504                           
  6505                           ;ecan.c: 159: unsigned char tempEIDH = 0;
  6506                           
  6507                           ;incstack = 0
  6508  0017E4  0E00               	movlw	0
  6509  0017E6  6E28               	movwf	CAN_transmit@tempEIDH,c
  6510                           
  6511                           ;ecan.c: 160: unsigned char tempEIDL = 0;
  6512  0017E8  0E00               	movlw	0
  6513  0017EA  6E29               	movwf	CAN_transmit@tempEIDL,c
  6514                           
  6515                           ;ecan.c: 161: unsigned char tempSIDH = 0;
  6516  0017EC  0E00               	movlw	0
  6517  0017EE  6E2A               	movwf	CAN_transmit@tempSIDH,c
  6518                           
  6519                           ;ecan.c: 162: unsigned char tempSIDL = 0;
  6520  0017F0  0E00               	movlw	0
  6521  0017F2  6E2B               	movwf	CAN_transmit@tempSIDL,c
  6522                           
  6523                           ;ecan.c: 164: unsigned char returnValue = 0;
  6524  0017F4  0E00               	movlw	0
  6525  0017F6  6E27               	movwf	CAN_transmit@returnValue,c
  6526                           
  6527                           ;ecan.c: 166: if (TXB0CONbits.TXREQ != 1)
  6528  0017F8  010F               	movlb	15	; () banked
  6529  0017FA  B720               	btfsc	32,3,b	;volatile
  6530  0017FC  D079               	goto	l448
  6531                           
  6532                           ; BSR set to: 15
  6533                           ;ecan.c: 167: {
  6534                           ;ecan.c: 168: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  6535  0017FE  EE20 F001          	lfsr	2,1
  6536  001802  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6537  001804  26D9               	addwf	fsr2l,f,c
  6538  001806  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6539  001808  22DA               	addwfc	fsr2h,f,c
  6540  00180A  CFDE F013          	movff	postinc2,convertCANid2Reg@tempPassedInID
  6541  00180E  CFDE F014          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  6542  001812  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  6543  001816  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  6544  00181A  C025  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  6545  00181E  C026  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  6546  001822  50DF               	movf	indf2,w,c
  6547  001824  6E17               	movwf	convertCANid2Reg@canIdType,c
  6548  001826  0E28               	movlw	low CAN_transmit@tempEIDH
  6549  001828  6E18               	movwf	convertCANid2Reg@passedInEIDH,c
  6550  00182A  0E00               	movlw	high CAN_transmit@tempEIDH
  6551  00182C  6E19               	movwf	convertCANid2Reg@passedInEIDH+1,c
  6552  00182E  0E29               	movlw	low CAN_transmit@tempEIDL
  6553  001830  6E1A               	movwf	convertCANid2Reg@passedInEIDL,c
  6554  001832  0E00               	movlw	high CAN_transmit@tempEIDL
  6555  001834  6E1B               	movwf	convertCANid2Reg@passedInEIDL+1,c
  6556  001836  0E2A               	movlw	low CAN_transmit@tempSIDH
  6557  001838  6E1C               	movwf	convertCANid2Reg@passedInSIDH,c
  6558  00183A  0E00               	movlw	high CAN_transmit@tempSIDH
  6559  00183C  6E1D               	movwf	convertCANid2Reg@passedInSIDH+1,c
  6560  00183E  0E2B               	movlw	low CAN_transmit@tempSIDL
  6561  001840  6E1E               	movwf	convertCANid2Reg@passedInSIDL,c
  6562  001842  0E00               	movlw	high CAN_transmit@tempSIDL
  6563  001844  6E1F               	movwf	convertCANid2Reg@passedInSIDL+1,c
  6564  001846  EC5B  F00F         	call	_convertCANid2Reg	;wreg free
  6565                           
  6566                           ;ecan.c: 170: TXB0EIDH = tempEIDH;
  6567  00184A  C028  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  6568                           
  6569                           ;ecan.c: 171: TXB0EIDL = tempEIDL;
  6570  00184E  C029  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  6571                           
  6572                           ;ecan.c: 172: TXB0SIDH = tempSIDH;
  6573  001852  C02A  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  6574                           
  6575                           ;ecan.c: 173: TXB0SIDL = tempSIDL;
  6576  001856  C02B  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  6577                           
  6578                           ;ecan.c: 174: TXB0DLC = tempCanMsg->frame.dlc;
  6579  00185A  EE20 F005          	lfsr	2,5
  6580  00185E  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6581  001860  26D9               	addwf	fsr2l,f,c
  6582  001862  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6583  001864  22DA               	addwfc	fsr2h,f,c
  6584  001866  50DF               	movf	indf2,w,c
  6585  001868  010F               	movlb	15	; () banked
  6586  00186A  6F25               	movwf	37,b	;volatile
  6587                           
  6588                           ; BSR set to: 15
  6589                           ;ecan.c: 175: TXB0D0 = tempCanMsg->frame.data0;
  6590  00186C  EE20 F006          	lfsr	2,6
  6591  001870  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6592  001872  26D9               	addwf	fsr2l,f,c
  6593  001874  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6594  001876  22DA               	addwfc	fsr2h,f,c
  6595  001878  50DF               	movf	indf2,w,c
  6596  00187A  6F26               	movwf	38,b	;volatile
  6597                           
  6598                           ; BSR set to: 15
  6599                           ;ecan.c: 176: TXB0D1 = tempCanMsg->frame.data1;
  6600  00187C  EE20 F007          	lfsr	2,7
  6601  001880  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6602  001882  26D9               	addwf	fsr2l,f,c
  6603  001884  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6604  001886  22DA               	addwfc	fsr2h,f,c
  6605  001888  50DF               	movf	indf2,w,c
  6606  00188A  6F27               	movwf	39,b	;volatile
  6607                           
  6608                           ; BSR set to: 15
  6609                           ;ecan.c: 177: TXB0D2 = tempCanMsg->frame.data2;
  6610  00188C  EE20 F008          	lfsr	2,8
  6611  001890  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6612  001892  26D9               	addwf	fsr2l,f,c
  6613  001894  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6614  001896  22DA               	addwfc	fsr2h,f,c
  6615  001898  50DF               	movf	indf2,w,c
  6616  00189A  6F28               	movwf	40,b	;volatile
  6617                           
  6618                           ; BSR set to: 15
  6619                           ;ecan.c: 178: TXB0D3 = tempCanMsg->frame.data3;
  6620  00189C  EE20 F009          	lfsr	2,9
  6621  0018A0  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6622  0018A2  26D9               	addwf	fsr2l,f,c
  6623  0018A4  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6624  0018A6  22DA               	addwfc	fsr2h,f,c
  6625  0018A8  50DF               	movf	indf2,w,c
  6626  0018AA  6F29               	movwf	41,b	;volatile
  6627                           
  6628                           ; BSR set to: 15
  6629                           ;ecan.c: 179: TXB0D4 = tempCanMsg->frame.data4;
  6630  0018AC  EE20 F00A          	lfsr	2,10
  6631  0018B0  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6632  0018B2  26D9               	addwf	fsr2l,f,c
  6633  0018B4  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6634  0018B6  22DA               	addwfc	fsr2h,f,c
  6635  0018B8  50DF               	movf	indf2,w,c
  6636  0018BA  6F2A               	movwf	42,b	;volatile
  6637                           
  6638                           ; BSR set to: 15
  6639                           ;ecan.c: 180: TXB0D5 = tempCanMsg->frame.data5;
  6640  0018BC  EE20 F00B          	lfsr	2,11
  6641  0018C0  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6642  0018C2  26D9               	addwf	fsr2l,f,c
  6643  0018C4  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6644  0018C6  22DA               	addwfc	fsr2h,f,c
  6645  0018C8  50DF               	movf	indf2,w,c
  6646  0018CA  6F2B               	movwf	43,b	;volatile
  6647                           
  6648                           ; BSR set to: 15
  6649                           ;ecan.c: 181: TXB0D6 = tempCanMsg->frame.data6;
  6650  0018CC  EE20 F00C          	lfsr	2,12
  6651  0018D0  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6652  0018D2  26D9               	addwf	fsr2l,f,c
  6653  0018D4  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6654  0018D6  22DA               	addwfc	fsr2h,f,c
  6655  0018D8  50DF               	movf	indf2,w,c
  6656  0018DA  6F2C               	movwf	44,b	;volatile
  6657                           
  6658                           ; BSR set to: 15
  6659                           ;ecan.c: 182: TXB0D7 = tempCanMsg->frame.data7;
  6660  0018DC  EE20 F00D          	lfsr	2,13
  6661  0018E0  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6662  0018E2  26D9               	addwf	fsr2l,f,c
  6663  0018E4  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6664  0018E6  22DA               	addwfc	fsr2h,f,c
  6665  0018E8  50DF               	movf	indf2,w,c
  6666  0018EA  6F2D               	movwf	45,b	;volatile
  6667                           
  6668                           ; BSR set to: 15
  6669                           ;ecan.c: 184: TXB0CONbits.TXREQ = 1;
  6670  0018EC  8720               	bsf	32,3,b	;volatile
  6671  0018EE  D0F5               	goto	l3529
  6672  0018F0                     l448:
  6673                           
  6674                           ; BSR set to: 15
  6675                           ;ecan.c: 188: else if (TXB1CONbits.TXREQ != 1)
  6676  0018F0  B710               	btfsc	16,3,b	;volatile
  6677  0018F2  D079               	goto	l450
  6678                           
  6679                           ; BSR set to: 15
  6680                           ;ecan.c: 189: {
  6681                           ;ecan.c: 191: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  6682  0018F4  EE20 F001          	lfsr	2,1
  6683  0018F8  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6684  0018FA  26D9               	addwf	fsr2l,f,c
  6685  0018FC  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6686  0018FE  22DA               	addwfc	fsr2h,f,c
  6687  001900  CFDE F013          	movff	postinc2,convertCANid2Reg@tempPassedInID
  6688  001904  CFDE F014          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  6689  001908  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  6690  00190C  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  6691  001910  C025  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  6692  001914  C026  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  6693  001918  50DF               	movf	indf2,w,c
  6694  00191A  6E17               	movwf	convertCANid2Reg@canIdType,c
  6695  00191C  0E28               	movlw	low CAN_transmit@tempEIDH
  6696  00191E  6E18               	movwf	convertCANid2Reg@passedInEIDH,c
  6697  001920  0E00               	movlw	high CAN_transmit@tempEIDH
  6698  001922  6E19               	movwf	convertCANid2Reg@passedInEIDH+1,c
  6699  001924  0E29               	movlw	low CAN_transmit@tempEIDL
  6700  001926  6E1A               	movwf	convertCANid2Reg@passedInEIDL,c
  6701  001928  0E00               	movlw	high CAN_transmit@tempEIDL
  6702  00192A  6E1B               	movwf	convertCANid2Reg@passedInEIDL+1,c
  6703  00192C  0E2A               	movlw	low CAN_transmit@tempSIDH
  6704  00192E  6E1C               	movwf	convertCANid2Reg@passedInSIDH,c
  6705  001930  0E00               	movlw	high CAN_transmit@tempSIDH
  6706  001932  6E1D               	movwf	convertCANid2Reg@passedInSIDH+1,c
  6707  001934  0E2B               	movlw	low CAN_transmit@tempSIDL
  6708  001936  6E1E               	movwf	convertCANid2Reg@passedInSIDL,c
  6709  001938  0E00               	movlw	high CAN_transmit@tempSIDL
  6710  00193A  6E1F               	movwf	convertCANid2Reg@passedInSIDL+1,c
  6711  00193C  EC5B  F00F         	call	_convertCANid2Reg	;wreg free
  6712                           
  6713                           ;ecan.c: 193: TXB1EIDH = tempEIDH;
  6714  001940  C028  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  6715                           
  6716                           ;ecan.c: 194: TXB1EIDL = tempEIDL;
  6717  001944  C029  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  6718                           
  6719                           ;ecan.c: 195: TXB1SIDH = tempSIDH;
  6720  001948  C02A  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  6721                           
  6722                           ;ecan.c: 196: TXB1SIDL = tempSIDL;
  6723  00194C  C02B  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  6724                           
  6725                           ;ecan.c: 197: TXB1DLC = tempCanMsg->frame.dlc;
  6726  001950  EE20 F005          	lfsr	2,5
  6727  001954  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6728  001956  26D9               	addwf	fsr2l,f,c
  6729  001958  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6730  00195A  22DA               	addwfc	fsr2h,f,c
  6731  00195C  50DF               	movf	indf2,w,c
  6732  00195E  010F               	movlb	15	; () banked
  6733  001960  6F15               	movwf	21,b	;volatile
  6734                           
  6735                           ; BSR set to: 15
  6736                           ;ecan.c: 198: TXB1D0 = tempCanMsg->frame.data0;
  6737  001962  EE20 F006          	lfsr	2,6
  6738  001966  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6739  001968  26D9               	addwf	fsr2l,f,c
  6740  00196A  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6741  00196C  22DA               	addwfc	fsr2h,f,c
  6742  00196E  50DF               	movf	indf2,w,c
  6743  001970  6F16               	movwf	22,b	;volatile
  6744                           
  6745                           ; BSR set to: 15
  6746                           ;ecan.c: 199: TXB1D1 = tempCanMsg->frame.data1;
  6747  001972  EE20 F007          	lfsr	2,7
  6748  001976  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6749  001978  26D9               	addwf	fsr2l,f,c
  6750  00197A  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6751  00197C  22DA               	addwfc	fsr2h,f,c
  6752  00197E  50DF               	movf	indf2,w,c
  6753  001980  6F17               	movwf	23,b	;volatile
  6754                           
  6755                           ; BSR set to: 15
  6756                           ;ecan.c: 200: TXB1D2 = tempCanMsg->frame.data2;
  6757  001982  EE20 F008          	lfsr	2,8
  6758  001986  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6759  001988  26D9               	addwf	fsr2l,f,c
  6760  00198A  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6761  00198C  22DA               	addwfc	fsr2h,f,c
  6762  00198E  50DF               	movf	indf2,w,c
  6763  001990  6F18               	movwf	24,b	;volatile
  6764                           
  6765                           ; BSR set to: 15
  6766                           ;ecan.c: 201: TXB1D3 = tempCanMsg->frame.data3;
  6767  001992  EE20 F009          	lfsr	2,9
  6768  001996  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6769  001998  26D9               	addwf	fsr2l,f,c
  6770  00199A  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6771  00199C  22DA               	addwfc	fsr2h,f,c
  6772  00199E  50DF               	movf	indf2,w,c
  6773  0019A0  6F19               	movwf	25,b	;volatile
  6774                           
  6775                           ; BSR set to: 15
  6776                           ;ecan.c: 202: TXB1D4 = tempCanMsg->frame.data4;
  6777  0019A2  EE20 F00A          	lfsr	2,10
  6778  0019A6  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6779  0019A8  26D9               	addwf	fsr2l,f,c
  6780  0019AA  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6781  0019AC  22DA               	addwfc	fsr2h,f,c
  6782  0019AE  50DF               	movf	indf2,w,c
  6783  0019B0  6F1A               	movwf	26,b	;volatile
  6784                           
  6785                           ; BSR set to: 15
  6786                           ;ecan.c: 203: TXB1D5 = tempCanMsg->frame.data5;
  6787  0019B2  EE20 F00B          	lfsr	2,11
  6788  0019B6  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6789  0019B8  26D9               	addwf	fsr2l,f,c
  6790  0019BA  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6791  0019BC  22DA               	addwfc	fsr2h,f,c
  6792  0019BE  50DF               	movf	indf2,w,c
  6793  0019C0  6F1B               	movwf	27,b	;volatile
  6794                           
  6795                           ; BSR set to: 15
  6796                           ;ecan.c: 204: TXB1D6 = tempCanMsg->frame.data6;
  6797  0019C2  EE20 F00C          	lfsr	2,12
  6798  0019C6  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6799  0019C8  26D9               	addwf	fsr2l,f,c
  6800  0019CA  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6801  0019CC  22DA               	addwfc	fsr2h,f,c
  6802  0019CE  50DF               	movf	indf2,w,c
  6803  0019D0  6F1C               	movwf	28,b	;volatile
  6804                           
  6805                           ; BSR set to: 15
  6806                           ;ecan.c: 205: TXB1D7 = tempCanMsg->frame.data7;
  6807  0019D2  EE20 F00D          	lfsr	2,13
  6808  0019D6  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6809  0019D8  26D9               	addwf	fsr2l,f,c
  6810  0019DA  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6811  0019DC  22DA               	addwfc	fsr2h,f,c
  6812  0019DE  50DF               	movf	indf2,w,c
  6813  0019E0  6F1D               	movwf	29,b	;volatile
  6814                           
  6815                           ; BSR set to: 15
  6816                           ;ecan.c: 207: TXB1CONbits.TXREQ = 1;
  6817  0019E2  8710               	bsf	16,3,b	;volatile
  6818  0019E4  D07A               	goto	l3529
  6819  0019E6                     l450:
  6820                           
  6821                           ; BSR set to: 15
  6822                           ;ecan.c: 210: else if (TXB2CONbits.TXREQ != 1)
  6823  0019E6  B700               	btfsc	0,3,b	;volatile
  6824  0019E8  D07A               	goto	l452
  6825                           
  6826                           ; BSR set to: 15
  6827                           ;ecan.c: 211: {
  6828                           ;ecan.c: 213: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  6829  0019EA  EE20 F001          	lfsr	2,1
  6830  0019EE  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6831  0019F0  26D9               	addwf	fsr2l,f,c
  6832  0019F2  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6833  0019F4  22DA               	addwfc	fsr2h,f,c
  6834  0019F6  CFDE F013          	movff	postinc2,convertCANid2Reg@tempPassedInID
  6835  0019FA  CFDE F014          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  6836  0019FE  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  6837  001A02  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  6838  001A06  C025  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  6839  001A0A  C026  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  6840  001A0E  50DF               	movf	indf2,w,c
  6841  001A10  6E17               	movwf	convertCANid2Reg@canIdType,c
  6842  001A12  0E28               	movlw	low CAN_transmit@tempEIDH
  6843  001A14  6E18               	movwf	convertCANid2Reg@passedInEIDH,c
  6844  001A16  0E00               	movlw	high CAN_transmit@tempEIDH
  6845  001A18  6E19               	movwf	convertCANid2Reg@passedInEIDH+1,c
  6846  001A1A  0E29               	movlw	low CAN_transmit@tempEIDL
  6847  001A1C  6E1A               	movwf	convertCANid2Reg@passedInEIDL,c
  6848  001A1E  0E00               	movlw	high CAN_transmit@tempEIDL
  6849  001A20  6E1B               	movwf	convertCANid2Reg@passedInEIDL+1,c
  6850  001A22  0E2A               	movlw	low CAN_transmit@tempSIDH
  6851  001A24  6E1C               	movwf	convertCANid2Reg@passedInSIDH,c
  6852  001A26  0E00               	movlw	high CAN_transmit@tempSIDH
  6853  001A28  6E1D               	movwf	convertCANid2Reg@passedInSIDH+1,c
  6854  001A2A  0E2B               	movlw	low CAN_transmit@tempSIDL
  6855  001A2C  6E1E               	movwf	convertCANid2Reg@passedInSIDL,c
  6856  001A2E  0E00               	movlw	high CAN_transmit@tempSIDL
  6857  001A30  6E1F               	movwf	convertCANid2Reg@passedInSIDL+1,c
  6858  001A32  EC5B  F00F         	call	_convertCANid2Reg	;wreg free
  6859                           
  6860                           ;ecan.c: 215: TXB2EIDH = tempEIDH;
  6861  001A36  C028  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  6862                           
  6863                           ;ecan.c: 216: TXB2EIDL = tempEIDL;
  6864  001A3A  C029  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  6865                           
  6866                           ;ecan.c: 217: TXB2SIDH = tempSIDH;
  6867  001A3E  C02A  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  6868                           
  6869                           ;ecan.c: 218: TXB2SIDL = tempSIDL;
  6870  001A42  C02B  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  6871                           
  6872                           ;ecan.c: 219: TXB2DLC = tempCanMsg->frame.dlc;
  6873  001A46  EE20 F005          	lfsr	2,5
  6874  001A4A  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6875  001A4C  26D9               	addwf	fsr2l,f,c
  6876  001A4E  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6877  001A50  22DA               	addwfc	fsr2h,f,c
  6878  001A52  50DF               	movf	indf2,w,c
  6879  001A54  010F               	movlb	15	; () banked
  6880  001A56  6F05               	movwf	5,b	;volatile
  6881                           
  6882                           ; BSR set to: 15
  6883                           ;ecan.c: 220: TXB2D0 = tempCanMsg->frame.data0;
  6884  001A58  EE20 F006          	lfsr	2,6
  6885  001A5C  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6886  001A5E  26D9               	addwf	fsr2l,f,c
  6887  001A60  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6888  001A62  22DA               	addwfc	fsr2h,f,c
  6889  001A64  50DF               	movf	indf2,w,c
  6890  001A66  6F06               	movwf	6,b	;volatile
  6891                           
  6892                           ; BSR set to: 15
  6893                           ;ecan.c: 221: TXB2D1 = tempCanMsg->frame.data1;
  6894  001A68  EE20 F007          	lfsr	2,7
  6895  001A6C  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6896  001A6E  26D9               	addwf	fsr2l,f,c
  6897  001A70  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6898  001A72  22DA               	addwfc	fsr2h,f,c
  6899  001A74  50DF               	movf	indf2,w,c
  6900  001A76  6F07               	movwf	7,b	;volatile
  6901                           
  6902                           ; BSR set to: 15
  6903                           ;ecan.c: 222: TXB2D2 = tempCanMsg->frame.data2;
  6904  001A78  EE20 F008          	lfsr	2,8
  6905  001A7C  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6906  001A7E  26D9               	addwf	fsr2l,f,c
  6907  001A80  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6908  001A82  22DA               	addwfc	fsr2h,f,c
  6909  001A84  50DF               	movf	indf2,w,c
  6910  001A86  6F08               	movwf	8,b	;volatile
  6911                           
  6912                           ; BSR set to: 15
  6913                           ;ecan.c: 223: TXB2D3 = tempCanMsg->frame.data3;
  6914  001A88  EE20 F009          	lfsr	2,9
  6915  001A8C  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6916  001A8E  26D9               	addwf	fsr2l,f,c
  6917  001A90  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6918  001A92  22DA               	addwfc	fsr2h,f,c
  6919  001A94  50DF               	movf	indf2,w,c
  6920  001A96  6F09               	movwf	9,b	;volatile
  6921                           
  6922                           ; BSR set to: 15
  6923                           ;ecan.c: 224: TXB2D4 = tempCanMsg->frame.data4;
  6924  001A98  EE20 F00A          	lfsr	2,10
  6925  001A9C  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6926  001A9E  26D9               	addwf	fsr2l,f,c
  6927  001AA0  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6928  001AA2  22DA               	addwfc	fsr2h,f,c
  6929  001AA4  50DF               	movf	indf2,w,c
  6930  001AA6  6F0A               	movwf	10,b	;volatile
  6931                           
  6932                           ; BSR set to: 15
  6933                           ;ecan.c: 225: TXB2D5 = tempCanMsg->frame.data5;
  6934  001AA8  EE20 F00B          	lfsr	2,11
  6935  001AAC  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6936  001AAE  26D9               	addwf	fsr2l,f,c
  6937  001AB0  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6938  001AB2  22DA               	addwfc	fsr2h,f,c
  6939  001AB4  50DF               	movf	indf2,w,c
  6940  001AB6  6F0B               	movwf	11,b	;volatile
  6941                           
  6942                           ; BSR set to: 15
  6943                           ;ecan.c: 226: TXB2D6 = tempCanMsg->frame.data6;
  6944  001AB8  EE20 F00C          	lfsr	2,12
  6945  001ABC  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6946  001ABE  26D9               	addwf	fsr2l,f,c
  6947  001AC0  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6948  001AC2  22DA               	addwfc	fsr2h,f,c
  6949  001AC4  50DF               	movf	indf2,w,c
  6950  001AC6  6F0C               	movwf	12,b	;volatile
  6951                           
  6952                           ; BSR set to: 15
  6953                           ;ecan.c: 227: TXB2D7 = tempCanMsg->frame.data7;
  6954  001AC8  EE20 F00D          	lfsr	2,13
  6955  001ACC  5025               	movf	CAN_transmit@tempCanMsg,w,c
  6956  001ACE  26D9               	addwf	fsr2l,f,c
  6957  001AD0  5026               	movf	CAN_transmit@tempCanMsg+1,w,c
  6958  001AD2  22DA               	addwfc	fsr2h,f,c
  6959  001AD4  50DF               	movf	indf2,w,c
  6960  001AD6  6F0D               	movwf	13,b	;volatile
  6961                           
  6962                           ; BSR set to: 15
  6963                           ;ecan.c: 229: TXB2CONbits.TXREQ = 1;
  6964  001AD8  8700               	bsf	0,3,b	;volatile
  6965  001ADA                     l3529:
  6966                           
  6967                           ; BSR set to: 15
  6968                           ;ecan.c: 230: returnValue = 1;
  6969  001ADA  0E01               	movlw	1
  6970  001ADC  6E27               	movwf	CAN_transmit@returnValue,c
  6971  001ADE                     l452:
  6972                           
  6973                           ; BSR set to: 15
  6974                           ;ecan.c: 231: }
  6975                           ;ecan.c: 233: return (returnValue);
  6976                           
  6977                           ; BSR set to: 15
  6978                           
  6979                           ; BSR set to: 15
  6980                           
  6981                           ; BSR set to: 15
  6982  001ADE  5027               	movf	CAN_transmit@returnValue,w,c
  6983  001AE0  0012               	return	
  6984  001AE2                     __end_of_CAN_transmit:
  6985                           	opt stack 0
  6986                           tblptru	equ	0xFF8
  6987                           tblptrh	equ	0xFF7
  6988                           tblptrl	equ	0xFF6
  6989                           tablat	equ	0xFF5
  6990                           prodh	equ	0xFF4
  6991                           prodl	equ	0xFF3
  6992                           intcon	equ	0xFF2
  6993                           intcon2	equ	0xFF1
  6994                           postinc0	equ	0xFEE
  6995                           wreg	equ	0xFE8
  6996                           postdec1	equ	0xFE5
  6997                           plusw1	equ	0xFE3
  6998                           fsr1l	equ	0xFE1
  6999                           indf2	equ	0xFDF
  7000                           postinc2	equ	0xFDE
  7001                           postdec2	equ	0xFDD
  7002                           plusw2	equ	0xFDB
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8
  7006                           
  7007 ;; *************** function _convertCANid2Reg *****************
  7008 ;; Defined at:
  7009 ;;		line 401 in file "mcc_generated_files/ecan.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  tempPassedIn    4   18[COMRAM] unsigned long 
  7012 ;;  canIdType       1   22[COMRAM] unsigned char 
  7013 ;;  passedInEIDH    2   23[COMRAM] PTR unsigned char 
  7014 ;;		 -> CAN_transmit@tempEIDH(1), 
  7015 ;;  passedInEIDL    2   25[COMRAM] PTR unsigned char 
  7016 ;;		 -> CAN_transmit@tempEIDL(1), 
  7017 ;;  passedInSIDH    2   27[COMRAM] PTR unsigned char 
  7018 ;;		 -> CAN_transmit@tempSIDH(1), 
  7019 ;;  passedInSIDL    2   29[COMRAM] PTR unsigned char 
  7020 ;;		 -> CAN_transmit@tempSIDL(1), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  wipSIDL         1   35[COMRAM] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7032 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;Total ram usage:       18 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    3
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_CAN_transmit
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text35
  7047  001EB6                     __ptext35:
  7048                           	opt stack 0
  7049  001EB6                     _convertCANid2Reg:
  7050                           	opt stack 26
  7051                           
  7052                           ;ecan.c: 403: unsigned char wipSIDL = 0;
  7053                           
  7054                           ; BSR set to: 15
  7055                           ;incstack = 0
  7056  001EB6  0E00               	movlw	0
  7057  001EB8  6E24               	movwf	convertCANid2Reg@wipSIDL,c
  7058                           
  7059                           ;ecan.c: 405: if (canIdType == 2) {
  7060  001EBA  0E02               	movlw	2
  7061  001EBC  1817               	xorwf	convertCANid2Reg@canIdType,w,c
  7062  001EBE  A4D8               	btfss	status,2,c
  7063  001EC0  D081               	goto	l489
  7064                           
  7065                           ;ecan.c: 408: *passedInEIDL = 0xFF & tempPassedInID;
  7066  001EC2  C01A  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  7067  001EC6  C01B  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  7068  001ECA  C013  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  7069                           
  7070                           ;ecan.c: 409: tempPassedInID = tempPassedInID >> 8;
  7071  001ECE  C013  F020         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  7072  001ED2  C014  F021         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  7073  001ED6  C015  F022         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  7074  001EDA  C016  F023         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  7075  001EDE  C021  F020         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  7076  001EE2  C022  F021         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  7077  001EE6  C023  F022         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  7078  001EEA  6A23               	clrf	??_convertCANid2Reg+3,c
  7079  001EEC  C020  F013         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  7080  001EF0  C021  F014         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  7081  001EF4  C022  F015         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  7082  001EF8  C023  F016         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  7083                           
  7084                           ;ecan.c: 412: *passedInEIDH = 0xFF & tempPassedInID;
  7085  001EFC  C018  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  7086  001F00  C019  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  7087  001F04  C013  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  7088                           
  7089                           ;ecan.c: 413: tempPassedInID = tempPassedInID >> 8;
  7090  001F08  C013  F020         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  7091  001F0C  C014  F021         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  7092  001F10  C015  F022         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  7093  001F14  C016  F023         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  7094  001F18  C021  F020         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  7095  001F1C  C022  F021         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  7096  001F20  C023  F022         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  7097  001F24  6A23               	clrf	??_convertCANid2Reg+3,c
  7098  001F26  C020  F013         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  7099  001F2A  C021  F014         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  7100  001F2E  C022  F015         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  7101  001F32  C023  F016         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  7102                           
  7103                           ;ecan.c: 417: wipSIDL = 0x03 & tempPassedInID;
  7104  001F36  5013               	movf	convertCANid2Reg@tempPassedInID,w,c
  7105  001F38  0B03               	andlw	3
  7106  001F3A  6E24               	movwf	convertCANid2Reg@wipSIDL,c
  7107                           
  7108                           ;ecan.c: 418: tempPassedInID = tempPassedInID << 3;
  7109  001F3C  C013  F020         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  7110  001F40  C014  F021         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  7111  001F44  C015  F022         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  7112  001F48  C016  F023         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  7113  001F4C  0E03               	movlw	3
  7114  001F4E                     u3025:
  7115  001F4E  90D8               	bcf	status,0,c
  7116  001F50  3620               	rlcf	??_convertCANid2Reg,f,c
  7117  001F52  3621               	rlcf	??_convertCANid2Reg+1,f,c
  7118  001F54  3622               	rlcf	??_convertCANid2Reg+2,f,c
  7119  001F56  3623               	rlcf	??_convertCANid2Reg+3,f,c
  7120  001F58  2EE8               	decfsz	wreg,f,c
  7121  001F5A  D7F9               	goto	u3025
  7122  001F5C  C020  F013         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  7123  001F60  C021  F014         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  7124  001F64  C022  F015         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  7125  001F68  C023  F016         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  7126                           
  7127                           ;ecan.c: 419: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  7128  001F6C  5013               	movf	convertCANid2Reg@tempPassedInID,w,c
  7129  001F6E  0BE0               	andlw	224
  7130  001F70  2424               	addwf	convertCANid2Reg@wipSIDL,w,c
  7131  001F72  6E24               	movwf	convertCANid2Reg@wipSIDL,c
  7132                           
  7133                           ;ecan.c: 420: wipSIDL = (unsigned char)(wipSIDL + 0x08);
  7134  001F74  5024               	movf	convertCANid2Reg@wipSIDL,w,c
  7135  001F76  0F08               	addlw	8
  7136  001F78  6E24               	movwf	convertCANid2Reg@wipSIDL,c
  7137                           
  7138                           ;ecan.c: 421: *passedInSIDL = (unsigned char)(0xEB & wipSIDL);
  7139  001F7A  5024               	movf	convertCANid2Reg@wipSIDL,w,c
  7140  001F7C  0BEB               	andlw	235
  7141  001F7E  C01E  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  7142  001F82  C01F  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  7143  001F86  6EDF               	movwf	indf2,c
  7144                           
  7145                           ;ecan.c: 424: tempPassedInID = tempPassedInID >> 8;
  7146  001F88  C013  F020         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  7147  001F8C  C014  F021         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  7148  001F90  C015  F022         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  7149  001F94  C016  F023         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  7150  001F98  C021  F020         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  7151  001F9C  C022  F021         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  7152  001FA0  C023  F022         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  7153  001FA4  6A23               	clrf	??_convertCANid2Reg+3,c
  7154  001FA6  C020  F013         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  7155  001FAA  C021  F014         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  7156  001FAE  C022  F015         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  7157  001FB2  C023  F016         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  7158                           
  7159                           ;ecan.c: 425: *passedInSIDH = 0xFF & tempPassedInID;
  7160  001FB6  C01C  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  7161  001FBA  C01D  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  7162  001FBE  C013  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  7163                           
  7164                           ;ecan.c: 426: }
  7165  001FC2  0012               	return	
  7166  001FC4                     l489:
  7167                           
  7168                           ;ecan.c: 427: else
  7169                           ;ecan.c: 428: {
  7170                           ;ecan.c: 429: *passedInEIDH = 0;
  7171  001FC4  C018  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  7172  001FC8  C019  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  7173  001FCC  0E00               	movlw	0
  7174  001FCE  6EDF               	movwf	indf2,c
  7175                           
  7176                           ;ecan.c: 430: *passedInEIDL = 0;
  7177  001FD0  C01A  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  7178  001FD4  C01B  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  7179  001FD8  0E00               	movlw	0
  7180  001FDA  6EDF               	movwf	indf2,c
  7181                           
  7182                           ;ecan.c: 431: tempPassedInID = tempPassedInID << 5;
  7183  001FDC  C013  F020         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  7184  001FE0  C014  F021         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  7185  001FE4  C015  F022         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  7186  001FE8  C016  F023         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  7187  001FEC  0E05               	movlw	5
  7188  001FEE                     u3035:
  7189  001FEE  90D8               	bcf	status,0,c
  7190  001FF0  3620               	rlcf	??_convertCANid2Reg,f,c
  7191  001FF2  3621               	rlcf	??_convertCANid2Reg+1,f,c
  7192  001FF4  3622               	rlcf	??_convertCANid2Reg+2,f,c
  7193  001FF6  3623               	rlcf	??_convertCANid2Reg+3,f,c
  7194  001FF8  2EE8               	decfsz	wreg,f,c
  7195  001FFA  D7F9               	goto	u3035
  7196  001FFC  C020  F013         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  7197  002000  C021  F014         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  7198  002004  C022  F015         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  7199  002008  C023  F016         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  7200                           
  7201                           ;ecan.c: 432: *passedInSIDL = 0xFF & tempPassedInID;
  7202  00200C  C01E  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  7203  002010  C01F  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  7204  002014  C013  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  7205                           
  7206                           ;ecan.c: 433: tempPassedInID = tempPassedInID >> 8;
  7207  002018  C013  F020         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  7208  00201C  C014  F021         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  7209  002020  C015  F022         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  7210  002024  C016  F023         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  7211  002028  C021  F020         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  7212  00202C  C022  F021         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  7213  002030  C023  F022         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  7214  002034  6A23               	clrf	??_convertCANid2Reg+3,c
  7215  002036  C020  F013         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  7216  00203A  C021  F014         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  7217  00203E  C022  F015         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  7218  002042  C023  F016         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  7219                           
  7220                           ;ecan.c: 434: *passedInSIDH = 0xFF & tempPassedInID;
  7221  002046  C01C  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  7222  00204A  C01D  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  7223  00204E  C013  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  7224  002052  0012               	return	
  7225  002054                     __end_of_convertCANid2Reg:
  7226                           	opt stack 0
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           intcon	equ	0xFF2
  7234                           intcon2	equ	0xFF1
  7235                           postinc0	equ	0xFEE
  7236                           wreg	equ	0xFE8
  7237                           postdec1	equ	0xFE5
  7238                           plusw1	equ	0xFE3
  7239                           fsr1l	equ	0xFE1
  7240                           indf2	equ	0xFDF
  7241                           postinc2	equ	0xFDE
  7242                           postdec2	equ	0xFDD
  7243                           plusw2	equ	0xFDB
  7244                           fsr2h	equ	0xFDA
  7245                           fsr2l	equ	0xFD9
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function _INTERRUPT_InterruptManager *****************
  7249 ;; Defined at:
  7250 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7266 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7267 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7268 ;;Total ram usage:       18 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    2
  7271 ;; This function calls:
  7272 ;;		_ECAN_ISR_ECAN_TXB0I
  7273 ;;		_EUSART1_Receive_ISR
  7274 ;;		_EUSART1_Transmit_ISR
  7275 ;;		_TMR0_ISR
  7276 ;; This function is called by:
  7277 ;;		Interrupt level 2
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	intcode
  7282  000008                     __pintcode:
  7283                           	opt stack 0
  7284  000008                     _INTERRUPT_InterruptManager:
  7285                           	opt stack 23
  7286                           
  7287                           ;incstack = 0
  7288  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7289  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7290  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7291  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  7292  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  7293  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  7294  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  7295  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  7296  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  7297  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  7298  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  7299  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  7300  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  7301  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  7302  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  7303  000042  C04C  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  7304  000046  C04D  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  7305  00004A  C04E  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  7306  00004E  C04F  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  7307                           
  7308                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  7309  000052  BAF2               	btfsc	intcon,5,c	;volatile
  7310  000054  A4F2               	btfss	intcon,2,c	;volatile
  7311  000056  D003               	goto	i2l124
  7312                           
  7313                           ;interrupt_manager.c: 61: {
  7314                           ;interrupt_manager.c: 62: TMR0_ISR();
  7315  000058  ECE9  F014         	call	_TMR0_ISR	;wreg free
  7316                           
  7317                           ;interrupt_manager.c: 63: }
  7318  00005C  D013               	goto	i2l131
  7319  00005E                     i2l124:
  7320                           
  7321                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1)
  7322  00005E  ACF2               	btfss	intcon,6,c	;volatile
  7323  000060  D011               	goto	i2l131
  7324                           
  7325                           ;interrupt_manager.c: 65: {
  7326                           ;interrupt_manager.c: 66: if(PIE5bits.TXB0IE == 1 && PIR5bits.TXB0IF == 1)
  7327  000062  B476               	btfsc	3958,2,c	;volatile
  7328  000064  A477               	btfss	3959,2,c	;volatile
  7329  000066  D003               	goto	i2l127
  7330                           
  7331                           ;interrupt_manager.c: 67: {
  7332                           ;interrupt_manager.c: 68: ECAN_ISR_ECAN_TXB0I();
  7333  000068  EC51  F015         	call	_ECAN_ISR_ECAN_TXB0I	;wreg free
  7334                           
  7335                           ;interrupt_manager.c: 69: }
  7336  00006C  D00B               	goto	i2l131
  7337  00006E                     i2l127:
  7338                           
  7339                           ;interrupt_manager.c: 70: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7340  00006E  B89D               	btfsc	3997,4,c	;volatile
  7341  000070  A89E               	btfss	3998,4,c	;volatile
  7342  000072  D003               	goto	i2l129
  7343                           
  7344                           ;interrupt_manager.c: 71: {
  7345                           ;interrupt_manager.c: 72: EUSART1_Transmit_ISR();
  7346  000074  EC33  F014         	call	_EUSART1_Transmit_ISR	;wreg free
  7347                           
  7348                           ;interrupt_manager.c: 73: }
  7349  000078  D005               	goto	i2l131
  7350  00007A                     i2l129:
  7351                           
  7352                           ;interrupt_manager.c: 74: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  7353  00007A  BA9D               	btfsc	3997,5,c	;volatile
  7354  00007C  AA9E               	btfss	3998,5,c	;volatile
  7355  00007E  D002               	goto	i2l131
  7356                           
  7357                           ;interrupt_manager.c: 75: {
  7358                           ;interrupt_manager.c: 76: EUSART1_Receive_ISR();
  7359  000080  EC60  F014         	call	_EUSART1_Receive_ISR	;wreg free
  7360  000084                     i2l131:
  7361                           
  7362                           ;interrupt_manager.c: 83: else
  7363                           ;interrupt_manager.c: 84: {
  7364                           
  7365                           ;interrupt_manager.c: 81: }
  7366                           ;interrupt_manager.c: 82: }
  7367                           
  7368                           ;interrupt_manager.c: 78: else
  7369                           ;interrupt_manager.c: 79: {
  7370  000084  C012  F04F         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  7371  000088  C011  F04E         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  7372  00008C  C010  F04D         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  7373  000090  C00F  F04C         	movff	??_INTERRUPT_InterruptManager+14,btemp
  7374  000094  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  7375  000098  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  7376  00009C  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  7377  0000A0  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  7378  0000A4  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  7379  0000A8  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  7380  0000AC  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  7381  0000B0  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  7382  0000B4  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  7383  0000B8  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  7384  0000BC  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  7385  0000C0  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  7386  0000C4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7387  0000C8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7388  0000CC  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7389  0000CE  0011               	retfie		f
  7390  0000D0                     __end_of_INTERRUPT_InterruptManager:
  7391                           	opt stack 0
  7392                           pclatu	equ	0xFFB
  7393                           pclath	equ	0xFFA
  7394                           tblptru	equ	0xFF8
  7395                           tblptrh	equ	0xFF7
  7396                           tblptrl	equ	0xFF6
  7397                           tablat	equ	0xFF5
  7398                           prodh	equ	0xFF4
  7399                           prodl	equ	0xFF3
  7400                           intcon	equ	0xFF2
  7401                           intcon2	equ	0xFF1
  7402                           postinc0	equ	0xFEE
  7403                           fsr0h	equ	0xFEA
  7404                           fsr0l	equ	0xFE9
  7405                           wreg	equ	0xFE8
  7406                           postdec1	equ	0xFE5
  7407                           plusw1	equ	0xFE3
  7408                           fsr1h	equ	0xFE2
  7409                           fsr1l	equ	0xFE1
  7410                           indf2	equ	0xFDF
  7411                           postinc2	equ	0xFDE
  7412                           postdec2	equ	0xFDD
  7413                           plusw2	equ	0xFDB
  7414                           fsr2h	equ	0xFDA
  7415                           fsr2l	equ	0xFD9
  7416                           status	equ	0xFD8
  7417                           
  7418 ;; *************** function _TMR0_ISR *****************
  7419 ;; Defined at:
  7420 ;;		line 128 in file "mcc_generated_files/tmr0.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    1
  7441 ;; This function calls:
  7442 ;;		Absolute function
  7443 ;;		_TMR0_DefaultInterruptHandler
  7444 ;; This function is called by:
  7445 ;;		_INTERRUPT_InterruptManager
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text37
  7450  0029D2                     __ptext37:
  7451                           	opt stack 0
  7452  0029D2                     _TMR0_ISR:
  7453                           	opt stack 23
  7454                           
  7455                           ;tmr0.c: 132: INTCONbits.TMR0IF = 0;
  7456                           
  7457                           ;incstack = 0
  7458  0029D2  94F2               	bcf	intcon,2,c	;volatile
  7459                           
  7460                           ;tmr0.c: 135: TMR0L = timer0ReloadVal;
  7461  0029D4  C04B  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7462                           
  7463                           ;tmr0.c: 137: if(TMR0_InterruptHandler)
  7464  0029D8  5048               	movf	_TMR0_InterruptHandler,w,c
  7465  0029DA  1049               	iorwf	_TMR0_InterruptHandler+1,w,c
  7466  0029DC  B4D8               	btfsc	status,2,c
  7467  0029DE  0012               	return	
  7468                           
  7469                           ;tmr0.c: 138: {
  7470                           ;tmr0.c: 139: TMR0_InterruptHandler();
  7471  0029E0  D801               	call	i2u110_48
  7472  0029E2  0012               	return	
  7473  0029E4                     i2u110_48:
  7474  0029E4  0005               	push	
  7475  0029E6  6EFA               	movwf	pclath,c
  7476  0029E8  5048               	movf	_TMR0_InterruptHandler,w,c
  7477  0029EA  6EFD               	movwf	tosl,c
  7478  0029EC  5049               	movf	_TMR0_InterruptHandler+1,w,c
  7479  0029EE  6EFE               	movwf	tosh,c
  7480  0029F0  6AFF               	clrf	tosu,c
  7481  0029F2  50FA               	movf	pclath,w,c
  7482  0029F4  0012               	return		;indir
  7483  0029F6                     __end_of_TMR0_ISR:
  7484                           	opt stack 0
  7485                           tosu	equ	0xFFF
  7486                           tosh	equ	0xFFE
  7487                           tosl	equ	0xFFD
  7488                           pclatu	equ	0xFFB
  7489                           pclath	equ	0xFFA
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           intcon	equ	0xFF2
  7497                           intcon2	equ	0xFF1
  7498                           postinc0	equ	0xFEE
  7499                           fsr0h	equ	0xFEA
  7500                           fsr0l	equ	0xFE9
  7501                           wreg	equ	0xFE8
  7502                           postdec1	equ	0xFE5
  7503                           plusw1	equ	0xFE3
  7504                           fsr1h	equ	0xFE2
  7505                           fsr1l	equ	0xFE1
  7506                           indf2	equ	0xFDF
  7507                           postinc2	equ	0xFDE
  7508                           postdec2	equ	0xFDD
  7509                           plusw2	equ	0xFDB
  7510                           fsr2h	equ	0xFDA
  7511                           fsr2l	equ	0xFD9
  7512                           status	equ	0xFD8
  7513                           
  7514 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7515 ;; Defined at:
  7516 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		None
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_TMR0_Initialize
  7540 ;;		_TMR0_ISR
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text38
  7545  002AA6                     __ptext38:
  7546                           	opt stack 0
  7547  002AA6                     _TMR0_DefaultInterruptHandler:
  7548                           	opt stack 23
  7549                           
  7550                           ;incstack = 0
  7551  002AA6  0012               	return		;funcret
  7552  002AA8                     __end_of_TMR0_DefaultInterruptHandler:
  7553                           	opt stack 0
  7554                           tosu	equ	0xFFF
  7555                           tosh	equ	0xFFE
  7556                           tosl	equ	0xFFD
  7557                           pclatu	equ	0xFFB
  7558                           pclath	equ	0xFFA
  7559                           tblptru	equ	0xFF8
  7560                           tblptrh	equ	0xFF7
  7561                           tblptrl	equ	0xFF6
  7562                           tablat	equ	0xFF5
  7563                           prodh	equ	0xFF4
  7564                           prodl	equ	0xFF3
  7565                           intcon	equ	0xFF2
  7566                           intcon2	equ	0xFF1
  7567                           postinc0	equ	0xFEE
  7568                           fsr0h	equ	0xFEA
  7569                           fsr0l	equ	0xFE9
  7570                           wreg	equ	0xFE8
  7571                           postdec1	equ	0xFE5
  7572                           plusw1	equ	0xFE3
  7573                           fsr1h	equ	0xFE2
  7574                           fsr1l	equ	0xFE1
  7575                           indf2	equ	0xFDF
  7576                           postinc2	equ	0xFDE
  7577                           postdec2	equ	0xFDD
  7578                           plusw2	equ	0xFDB
  7579                           fsr2h	equ	0xFDA
  7580                           fsr2l	equ	0xFD9
  7581                           status	equ	0xFD8
  7582                           
  7583 ;; *************** function _EUSART1_Transmit_ISR *****************
  7584 ;; Defined at:
  7585 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;		None
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;Total ram usage:        0 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_INTERRUPT_InterruptManager
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text39
  7613  002866                     __ptext39:
  7614                           	opt stack 0
  7615  002866                     _EUSART1_Transmit_ISR:
  7616                           	opt stack 24
  7617                           
  7618                           ;eusart1.c: 165: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  7619                           
  7620                           ;incstack = 0
  7621  002866  0E08               	movlw	8
  7622  002868  604A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  7623  00286A  D012               	goto	i2l191
  7624                           
  7625                           ;eusart1.c: 166: {
  7626                           ;eusart1.c: 167: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  7627  00286C  5046               	movf	_eusart1TxTail,w,c	;volatile
  7628  00286E  0D01               	mullw	1
  7629  002870  0E3B               	movlw	low _eusart1TxBuffer
  7630  002872  24F3               	addwf	prodl,w,c
  7631  002874  6ED9               	movwf	fsr2l,c
  7632  002876  0E00               	movlw	high _eusart1TxBuffer
  7633  002878  20F4               	addwfc	prodh,w,c
  7634  00287A  6EDA               	movwf	fsr2h,c
  7635  00287C  50DF               	movf	indf2,w,c
  7636  00287E  6EAD               	movwf	4013,c	;volatile
  7637  002880  2A46               	incf	_eusart1TxTail,f,c	;volatile
  7638                           
  7639                           ;eusart1.c: 168: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  7640  002882  0E07               	movlw	7
  7641  002884  6446               	cpfsgt	_eusart1TxTail,c	;volatile
  7642  002886  D002               	goto	i2l192
  7643                           
  7644                           ;eusart1.c: 169: {
  7645                           ;eusart1.c: 170: eusart1TxTail = 0;
  7646  002888  0E00               	movlw	0
  7647  00288A  6E46               	movwf	_eusart1TxTail,c	;volatile
  7648  00288C                     i2l192:
  7649                           
  7650                           ;eusart1.c: 171: }
  7651                           ;eusart1.c: 172: eusart1TxBufferRemaining++;
  7652  00288C  2A4A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  7653                           
  7654                           ;eusart1.c: 173: }
  7655  00288E  0012               	return	
  7656  002890                     i2l191:
  7657                           
  7658                           ;eusart1.c: 174: else
  7659                           ;eusart1.c: 175: {
  7660                           ;eusart1.c: 176: PIE1bits.TX1IE = 0;
  7661  002890  989D               	bcf	3997,4,c	;volatile
  7662  002892  0012               	return	
  7663  002894                     __end_of_EUSART1_Transmit_ISR:
  7664                           	opt stack 0
  7665                           tosu	equ	0xFFF
  7666                           tosh	equ	0xFFE
  7667                           tosl	equ	0xFFD
  7668                           pclatu	equ	0xFFB
  7669                           pclath	equ	0xFFA
  7670                           tblptru	equ	0xFF8
  7671                           tblptrh	equ	0xFF7
  7672                           tblptrl	equ	0xFF6
  7673                           tablat	equ	0xFF5
  7674                           prodh	equ	0xFF4
  7675                           prodl	equ	0xFF3
  7676                           intcon	equ	0xFF2
  7677                           intcon2	equ	0xFF1
  7678                           postinc0	equ	0xFEE
  7679                           fsr0h	equ	0xFEA
  7680                           fsr0l	equ	0xFE9
  7681                           wreg	equ	0xFE8
  7682                           postdec1	equ	0xFE5
  7683                           plusw1	equ	0xFE3
  7684                           fsr1h	equ	0xFE2
  7685                           fsr1l	equ	0xFE1
  7686                           indf2	equ	0xFDF
  7687                           postinc2	equ	0xFDE
  7688                           postdec2	equ	0xFDD
  7689                           plusw2	equ	0xFDB
  7690                           fsr2h	equ	0xFDA
  7691                           fsr2l	equ	0xFD9
  7692                           status	equ	0xFD8
  7693                           
  7694 ;; *************** function _EUSART1_Receive_ISR *****************
  7695 ;; Defined at:
  7696 ;;		line 180 in file "mcc_generated_files/eusart1.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1    wreg      void 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7714 ;;Total ram usage:        0 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; This function calls:
  7717 ;;		Nothing
  7718 ;; This function is called by:
  7719 ;;		_INTERRUPT_InterruptManager
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text40
  7724  0028C0                     __ptext40:
  7725                           	opt stack 0
  7726  0028C0                     _EUSART1_Receive_ISR:
  7727                           	opt stack 24
  7728                           
  7729                           ;eusart1.c: 183: if(1 == RCSTA1bits.OERR)
  7730                           
  7731                           ;incstack = 0
  7732  0028C0  A2AB               	btfss	4011,1,c	;volatile
  7733  0028C2  D002               	goto	i2l197
  7734                           
  7735                           ;eusart1.c: 184: {
  7736                           ;eusart1.c: 187: RCSTA1bits.CREN = 0;
  7737  0028C4  98AB               	bcf	4011,4,c	;volatile
  7738                           
  7739                           ;eusart1.c: 188: RCSTA1bits.CREN = 1;
  7740  0028C6  88AB               	bsf	4011,4,c	;volatile
  7741  0028C8                     i2l197:
  7742                           
  7743                           ;eusart1.c: 189: }
  7744                           ;eusart1.c: 192: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7745  0028C8  5045               	movf	_eusart1RxHead,w,c	;volatile
  7746  0028CA  0D01               	mullw	1
  7747  0028CC  0EB7               	movlw	low _eusart1RxBuffer
  7748  0028CE  24F3               	addwf	prodl,w,c
  7749  0028D0  6ED9               	movwf	fsr2l,c
  7750  0028D2  0E00               	movlw	high _eusart1RxBuffer
  7751  0028D4  20F4               	addwfc	prodh,w,c
  7752  0028D6  6EDA               	movwf	fsr2h,c
  7753  0028D8  CFAE FFDF          	movff	4014,indf2	;volatile
  7754  0028DC  2A45               	incf	_eusart1RxHead,f,c	;volatile
  7755                           
  7756                           ;eusart1.c: 193: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7757  0028DE  0E07               	movlw	7
  7758  0028E0  6445               	cpfsgt	_eusart1RxHead,c	;volatile
  7759  0028E2  D002               	goto	i2l198
  7760                           
  7761                           ;eusart1.c: 194: {
  7762                           ;eusart1.c: 195: eusart1RxHead = 0;
  7763  0028E4  0E00               	movlw	0
  7764  0028E6  6E45               	movwf	_eusart1RxHead,c	;volatile
  7765  0028E8                     i2l198:
  7766                           
  7767                           ;eusart1.c: 196: }
  7768                           ;eusart1.c: 197: eusart1RxCount++;
  7769  0028E8  2A43               	incf	_eusart1RxCount,f,c	;volatile
  7770  0028EA  0012               	return		;funcret
  7771  0028EC                     __end_of_EUSART1_Receive_ISR:
  7772                           	opt stack 0
  7773                           tosu	equ	0xFFF
  7774                           tosh	equ	0xFFE
  7775                           tosl	equ	0xFFD
  7776                           pclatu	equ	0xFFB
  7777                           pclath	equ	0xFFA
  7778                           tblptru	equ	0xFF8
  7779                           tblptrh	equ	0xFF7
  7780                           tblptrl	equ	0xFF6
  7781                           tablat	equ	0xFF5
  7782                           prodh	equ	0xFF4
  7783                           prodl	equ	0xFF3
  7784                           intcon	equ	0xFF2
  7785                           intcon2	equ	0xFF1
  7786                           postinc0	equ	0xFEE
  7787                           fsr0h	equ	0xFEA
  7788                           fsr0l	equ	0xFE9
  7789                           wreg	equ	0xFE8
  7790                           postdec1	equ	0xFE5
  7791                           plusw1	equ	0xFE3
  7792                           fsr1h	equ	0xFE2
  7793                           fsr1l	equ	0xFE1
  7794                           indf2	equ	0xFDF
  7795                           postinc2	equ	0xFDE
  7796                           postdec2	equ	0xFDD
  7797                           plusw2	equ	0xFDB
  7798                           fsr2h	equ	0xFDA
  7799                           fsr2l	equ	0xFD9
  7800                           status	equ	0xFD8
  7801                           
  7802 ;; *************** function _ECAN_ISR_ECAN_TXB0I *****************
  7803 ;; Defined at:
  7804 ;;		line 59 in file "mcc_generated_files/ecan.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      void 
  7811 ;; Registers used:
  7812 ;;		None
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;Total ram usage:        0 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_INTERRUPT_InterruptManager
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text41
  7832  002AA2                     __ptext41:
  7833                           	opt stack 0
  7834  002AA2                     _ECAN_ISR_ECAN_TXB0I:
  7835                           	opt stack 24
  7836                           
  7837                           ;ecan.c: 63: PIR5bits.TXB0IF = 0;
  7838                           
  7839                           ;incstack = 0
  7840  002AA2  9477               	bcf	3959,2,c	;volatile
  7841  002AA4  0012               	return		;funcret
  7842  002AA6                     __end_of_ECAN_ISR_ECAN_TXB0I:
  7843                           	opt stack 0
  7844                           tosu	equ	0xFFF
  7845                           tosh	equ	0xFFE
  7846                           tosl	equ	0xFFD
  7847                           pclatu	equ	0xFFB
  7848                           pclath	equ	0xFFA
  7849                           tblptru	equ	0xFF8
  7850                           tblptrh	equ	0xFF7
  7851                           tblptrl	equ	0xFF6
  7852                           tablat	equ	0xFF5
  7853                           prodh	equ	0xFF4
  7854                           prodl	equ	0xFF3
  7855                           intcon	equ	0xFF2
  7856                           intcon2	equ	0xFF1
  7857                           postinc0	equ	0xFEE
  7858                           fsr0h	equ	0xFEA
  7859                           fsr0l	equ	0xFE9
  7860                           wreg	equ	0xFE8
  7861                           postdec1	equ	0xFE5
  7862                           plusw1	equ	0xFE3
  7863                           fsr1h	equ	0xFE2
  7864                           fsr1l	equ	0xFE1
  7865                           indf2	equ	0xFDF
  7866                           postinc2	equ	0xFDE
  7867                           postdec2	equ	0xFDD
  7868                           plusw2	equ	0xFDB
  7869                           fsr2h	equ	0xFDA
  7870                           fsr2l	equ	0xFD9
  7871                           status	equ	0xFD8
  7872                           tosu	equ	0xFFF
  7873                           tosh	equ	0xFFE
  7874                           tosl	equ	0xFFD
  7875                           pclatu	equ	0xFFB
  7876                           pclath	equ	0xFFA
  7877                           tblptru	equ	0xFF8
  7878                           tblptrh	equ	0xFF7
  7879                           tblptrl	equ	0xFF6
  7880                           tablat	equ	0xFF5
  7881                           prodh	equ	0xFF4
  7882                           prodl	equ	0xFF3
  7883                           intcon	equ	0xFF2
  7884                           intcon2	equ	0xFF1
  7885                           postinc0	equ	0xFEE
  7886                           fsr0h	equ	0xFEA
  7887                           fsr0l	equ	0xFE9
  7888                           wreg	equ	0xFE8
  7889                           postdec1	equ	0xFE5
  7890                           plusw1	equ	0xFE3
  7891                           fsr1h	equ	0xFE2
  7892                           fsr1l	equ	0xFE1
  7893                           indf2	equ	0xFDF
  7894                           postinc2	equ	0xFDE
  7895                           postdec2	equ	0xFDD
  7896                           plusw2	equ	0xFDB
  7897                           fsr2h	equ	0xFDA
  7898                           fsr2l	equ	0xFD9
  7899                           status	equ	0xFD8
  7900                           
  7901                           	psect	text42
  7902  000000                     __ptext42:
  7903                           	opt stack 0
  7904                           tosu	equ	0xFFF
  7905                           tosh	equ	0xFFE
  7906                           tosl	equ	0xFFD
  7907                           pclatu	equ	0xFFB
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           intcon2	equ	0xFF1
  7917                           postinc0	equ	0xFEE
  7918                           fsr0h	equ	0xFEA
  7919                           fsr0l	equ	0xFE9
  7920                           wreg	equ	0xFE8
  7921                           postdec1	equ	0xFE5
  7922                           plusw1	equ	0xFE3
  7923                           fsr1h	equ	0xFE2
  7924                           fsr1l	equ	0xFE1
  7925                           indf2	equ	0xFDF
  7926                           postinc2	equ	0xFDE
  7927                           postdec2	equ	0xFDD
  7928                           plusw2	equ	0xFDB
  7929                           fsr2h	equ	0xFDA
  7930                           fsr2l	equ	0xFD9
  7931                           status	equ	0xFD8
  7932                           
  7933                           	psect	rparam
  7934  0000                     tosu	equ	0xFFF
  7935                           tosh	equ	0xFFE
  7936                           tosl	equ	0xFFD
  7937                           pclatu	equ	0xFFB
  7938                           pclath	equ	0xFFA
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           intcon2	equ	0xFF1
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           postdec1	equ	0xFE5
  7952                           plusw1	equ	0xFE3
  7953                           fsr1h	equ	0xFE2
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           plusw2	equ	0xFDB
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963                           	psect	temp
  7964  00004C                     btemp:
  7965                           	opt stack 0
  7966  00004C                     	ds	1
  7967  0000                     int$flags	set	btemp
  7968  0000                     wtemp6	set	btemp+1
  7969                           tosu	equ	0xFFF
  7970                           tosh	equ	0xFFE
  7971                           tosl	equ	0xFFD
  7972                           pclatu	equ	0xFFB
  7973                           pclath	equ	0xFFA
  7974                           tblptru	equ	0xFF8
  7975                           tblptrh	equ	0xFF7
  7976                           tblptrl	equ	0xFF6
  7977                           tablat	equ	0xFF5
  7978                           prodh	equ	0xFF4
  7979                           prodl	equ	0xFF3
  7980                           intcon	equ	0xFF2
  7981                           intcon2	equ	0xFF1
  7982                           postinc0	equ	0xFEE
  7983                           fsr0h	equ	0xFEA
  7984                           fsr0l	equ	0xFE9
  7985                           wreg	equ	0xFE8
  7986                           postdec1	equ	0xFE5
  7987                           plusw1	equ	0xFE3
  7988                           fsr1h	equ	0xFE2
  7989                           fsr1l	equ	0xFE1
  7990                           indf2	equ	0xFDF
  7991                           postinc2	equ	0xFDE
  7992                           postdec2	equ	0xFDD
  7993                           plusw2	equ	0xFDB
  7994                           fsr2h	equ	0xFDA
  7995                           fsr2l	equ	0xFD9
  7996                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        23
    BSS         21
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      75
    BANK0           160     64      95
    BANK1           256    131     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    strcmp@s2	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    strcmp@s1	PTR const unsigned char  size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 

    modf@iptr	PTR  size(2) Largest target is 3
		 -> cvtGPStoDecimal@intPart(BANK0[3]), 

    memset@p1	PTR void  size(2) Largest target is 60
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), main@rawData(BANK1[60]), 

    memset@p	PTR unsigned char  size(2) Largest target is 60
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), main@rawData(BANK1[60]), 

    memcpy@d1	PTR void  size(2) Largest target is 12
		 -> cvtGPStoDecimal@tempStr_1459(BANK0[12]), cvtGPStoDecimal@tempStr(BANK0[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 12
		 -> cvtGPStoDecimal@tempStr_1459(BANK0[12]), cvtGPStoDecimal@tempStr(BANK0[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 12
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 12
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 12
		 -> cvtGPStoDecimal@tempStr_1459(BANK0[12]), cvtGPStoDecimal@tempStr(BANK0[11]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 12
		 -> cvtGPStoDecimal@tempStr_1459(BANK0[12]), cvtGPStoDecimal@tempStr(BANK0[11]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 12
		 -> cvtGPStoDecimal@tempStr_1459(BANK0[12]), cvtGPStoDecimal@tempStr(BANK0[11]), 

    cvtGPStoDecimal@inputGPS	PTR const unsigned char  size(2) Largest target is 12
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), 

    fillString@outputString	PTR unsigned char  size(2) Largest target is 12
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), 

    fillString@stringSource	PTR const unsigned char  size(2) Largest target is 60
		 -> main@rawData(BANK1[60]), 

    getString@testString	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    sp__memset	PTR void  size(2) Largest target is 60
		 -> main@lati_data(BANK1[12]), main@longi_data(BANK1[12]), main@rawData(BANK1[60]), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(COMRAM[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(COMRAM[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(COMRAM[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(COMRAM[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 3
		 -> main@gpsMSG(BANK1[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_cvtGPStoDecimal
    _strcmp->_getString
    _isalnum->_isalpha
    _isalpha->_isupper
    _getString->_strlen
    _modf->___ftadd
    ___ftadd->___ftpack
    ___attoft->___fttol
    _atof->_strtod
    _strtod->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___altoft->___ftpack
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_cvtGPStoDecimal
    _cvtGPStoDecimal->_atof
    _atof->_strtod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               139   139      0   49234
                                             58 BANK0      6     6      0
                                              0 BANK1    131   131      0
                       _CAN_transmit
                       _EUSART1_Read
                  _SYSTEM_Initialize
                            ___fttol
                    _cvtGPStoDecimal
                         _fillString
                          _getString
                            _isalnum
                             _memset
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               8     2      6     243
                                             32 COMRAM     8     2      6
                          _getString (ARG)
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     780
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _isalnum                                              3     3      0     248
                                             24 COMRAM     3     3      0
                            _isalpha
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              3     3      0     158
                                             21 COMRAM     3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (3) _isupper                                              3     3      0      68
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getString                                            8     6      2     426
                                             24 COMRAM     8     6      2
                       _EUSART1_Read
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         3     3      0      48
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _fillString                                          13     7      6     661
                                             18 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (1) _cvtGPStoDecimal                                     45    42      3   40166
                                             57 COMRAM     1     1      0
                                             14 BANK0     44    41      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                               _atof
                             _memcpy
                               _modf
 ---------------------------------------------------------------------------------
 (2) _modf                                                 5     0      5    9023
                                             38 COMRAM     5     0      5
                           ___attoft
                            ___ftadd
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     480
                                             18 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    4818
                                             26 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___attoft                                             4     1      3    3176
                                             33 COMRAM     4     1      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     599
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _atof                                                 3     0      3   15817
                                             11 BANK0      3     0      3
                             _strtod
 ---------------------------------------------------------------------------------
 (3) _strtod                                              12     8      4   15426
                                             56 COMRAM     1     1      0
                                              0 BANK0     11     7      4
                           ___altoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              3     3      0     130
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     245
                                             18 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4481
                                             26 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     558
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    4233
                                             41 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    3247
                                             26 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2953
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    3304
                                             36 COMRAM     7     5      2
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    1928
                                             18 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                _ECAN_ISR_ECAN_TXB0I
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ECAN_ISR_ECAN_TXB0I                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_transmit
     _convertCANid2Reg
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   ___fttol
   _cvtGPStoDecimal
     ___ftadd
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     _atof
       _strtod
         ___altoft
           ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___ftpack
         ___ftneg
         ___lmul
         _isdigit
         _isspace
     _memcpy
     _modf
       ___attoft
         ___ftpack
         ___fttol (ARG)
       ___ftadd
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg
       ___fttol
   _fillString
   _getString
     _EUSART1_Read
     _strlen
   _isalnum
     _isalpha
       _isupper
   _memset
   _strcmp
     _getString (ARG)
       _EUSART1_Read
       _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _ECAN_ISR_ECAN_TXB0I
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     83      83       8       51.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      5F       5       59.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4B       1       79.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12D       6        0.0%
DATA                 0      0     12D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr  5 17:13:04 2018

                            ___altoft@exp 0023                  _eusart1TxBufferRemaining 004A  
                     _ECAN_ISR_ECAN_TXB0I 2AA2                             ___altoft@sign 0024  
                             __CFG_BORV$3 000000                           _timer0ReloadVal 004B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                            ___ftadd@exp1 0026                              ___ftadd@exp2 0025  
                            ___ftadd@sign 0024                                       l175 26EC  
                                     l176 26FE                                       l450 19E6  
                                     l602 1B48                                       l611 1C38  
                                     l179 2724                                       l531 0F4C  
                                     l452 1ADE                                       l604 1B8A  
                                     l605 1C44                                       l542 138C  
                                     l551 10F4                                       l543 104E  
                                     l448 18F0                                       l624 2698  
                                     l800 1558                                       l560 11D2  
                                     l528 0F28                                       l625 26AC  
                                     l609 1BF6                                       l545 1170  
                                     l529 0F82                                       l810 16FE  
                                     l538 0FDA                                       l811 167E  
                                     l563 1216                                       l812 1650  
                                     l548 10B0                                       l821 1738  
                                     l805 15EA                                       l822 170A  
                                     l814 16B6                                       l806 15F0  
                                     l590 258A                                       l815 168A  
                                     l807 160E                                       l591 259E  
                                     l567 129C                                       l824 176C  
                                     l808 1648                                       l576 2670  
                                     l489 1FC4                                       l825 1740  
                                     l577 264E                                       l569 134C  
                                     l818 16F0                                       l827 17B4  
                                     l923 1D86                                       l595 25BC  
                                     l828 17A6                                       l780 1418  
                                     l588 25A2                                       l829 17D6  
                                     l837 280C                                       l933 1DE2  
                                     l589 256C                                       l790 14FC  
                                     l782 1448                                       l942 1E20  
                                     l934 1DD8                                       l598 1B98  
                                     l943 1E16                                       l919 1D5C  
                                     l952 2264                                       l960 2400  
                                     l784 1454                                       l928 1DEC  
                                     l697 248E                                       l961 2430  
                                     l793 1500                                       l785 146C  
                                     l945 1E44                                       l698 2482  
                                     l954 228C                                       l970 21CA  
                                     l786 1484                                       l946 1E60  
                                     l891 237E                                       l955 22CA  
                                     l971 21DA                                       l779 141E  
                                     l947 1E90                                       l892 2368  
                                     l956 22F0                                       l973 21F2  
                                     l797 1544                                       l789 1506  
                                     l894 23A6                                       l974 2202  
                                     l990 20F6                                       l895 239C  
                                     l967 2170                                       l991 20E6  
                                     l888 234A                                       l889 2340  
                                     l969 2198                                       l978 29C4  
                                     l996 211A                                       l988 2080  
                                     l997 210E                                       l999 2136  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                      ?_ECAN_ISR_ECAN_TXB0I 0001  
                            ___ftdiv@cntr 0033                              ___ftdiv@sign 0038  
                                    l1012 2934                                      l1005 290C  
                                    l1022 2982                                      l1017 2A4C  
                                    l1130 2760                                      l1131 2740  
                                    l1027 2A2E                                      l1136 28AE  
                                    l1137 289E                                      l1273 27C2  
                                    l1265 25D8                                      l1274 27BE  
                                    l1266 25C0                                      l3375 2740  
                                    l3529 1ADA                                      l3643 289E  
                                    l4523 11FE                                      l4525 1206  
                                    l4509 11C2                                      l4471 10DC  
                                    l4439 100E                                      l4473 10E4  
                                    l4457 10A0                                      l4539 1242  
                                    l4555 12AA                                      l4487 1120  
                                    l3883 245C                                      STR_1 0F01  
                                    STR_2 0F01                               main@gpsByte 0160  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u3025 1F4E  
                                    u3210 28FE                                      u3035 1FEE  
                                    u3070 2926                                      u4111 1D1A  
                                    u4040 297E                                      u3160 261C  
                                    u5000 11FE                                      u4121 1D2E  
                                    u4210 1DB6                                      u5020 1230  
                                    u4150 1D4E                                      u5110 1388  
                                    u5030 1232                                      u4250 1DF4  
                                    u5050 1242                                      u4180 1D78  
                                    u2900 209E                                      u4430 152C  
                                    u4350 1450                                      u5070 1298  
                                    u5127 1370                                      u3800 2332  
                                    u4280 1E28                                      u2905 2096  
                                    u5137 13EC                                      u4450 1554  
                                    u5090 12AA                                      u2940 2120  
                                    u3911 224C                                      u3840 23B0  
                                    u4800 1076                                      u4720 0F5C  
                                    u2881 2064                                      u3931 2274  
                                    u4900 1120                                      u4820 10CA  
                                    u4830 10CC                                      u4750 0FEA  
                                    u4671 1AF4                                      u4760 100E  
                                    u3961 2158                                      u4850 10DC  
                                    u4691 1BA2                                      u4780 104C  
                                    u3981 2180                                      u4950 1198  
                                    u4870 110E                                      u4880 1110  
                                    u4970 11EC                                      u4980 11EE  
                                    _WPUB 000F5B                               main@rawData 011D  
                             main@longDec 0164                                      _atof 298A  
                                    _main 0F0A                              ___ftpack@arg 0013  
            convertCANid2Reg@passedInEIDH 0018              convertCANid2Reg@passedInEIDL 001A  
                                    _modf 24D8                             ?_EUSART1_Read 0001  
                            ___ftpack@exp 0016                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                             main@testCan 015E                                      btemp 004C  
            convertCANid2Reg@passedInSIDH 001C              convertCANid2Reg@passedInSIDL 001E  
                             main@testInt 0159                   CAN_transmit@returnValue 0027  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                           __CFG_FOSC$HS1 000000                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 0028                              ___param_bank 000000  
                            ___ftmul@sign 0029                              ___fttol@exp1 0021  
                            ___fttol@lval 001D                  __size_of_cvtGPStoDecimal 0228  
                 __end_of_TMR0_Initialize 2A18                             ___attoft@sign 0025  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 2A94                                     ?_atof 006B  
                                   ?_main 0001                                     ?_modf 0027  
                         __end_of___ftadd 1EB6                           __end_of___ftdiv 2322  
                         __end_of___ftneg 29D2                           __end_of___ftmul 223C  
                                   _T0CON 000FD5                           __end_of___fttol 2148  
                                   i2l131 0084                                     i2l124 005E  
                                   i2l127 006E                                     i2l129 007A  
                                   i2l191 2890                                     i2l192 288C  
                                   i2l197 28C8                                     i2l198 28E8  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                            main@latitude 0179                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                    _cvtGPStoDecimal$2126 0091                      _cvtGPStoDecimal$1460 008B  
                    _cvtGPStoDecimal$1457 0088         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                       ___lmul@multiplicand 0017  
               ?_TMR0_SetInterruptHandler 0013                             __CFG_WRT3$OFF 000000  
                            main@rawCycle 017F                      _EUSART1_Transmit_ISR 2866  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 29F6  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                     ??_ECAN_ISR_ECAN_TXB0I 0001  
                          __CFG_EBTRB$OFF 000000                      __end_of_CAN_transmit 1AE2  
                         __end_of_isalpha 293C                           __end_of_isdigit 2A54  
                         __end_of_isalnum 2914                             ___ftpack@sign 0017  
                                   atof@s 006B                                     main@i 0100  
                         __end_of_isspace 298A                              main@testSize 0102  
                         __end_of_isupper 2A36                                     pclath 000FFA  
                                   tablat 000FF5                            ??_EUSART1_Read 0013  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   status 000FD8                                     wtemp6 004D  
                    CAN_transmit@tempEIDH 0028                      CAN_transmit@tempEIDL 0029  
                    CAN_transmit@tempSIDH 002A                      CAN_transmit@tempSIDL 002B  
                         __initialization 2772                             main@dataCount 0181  
                            __end_of_atof 29AE                __end_of_EUSART1_Initialize 2866  
                            __end_of_main 13FC                              __end_of_modf 254E  
             ?_INTERRUPT_InterruptManager 0001                                    ??_atof 003A  
                                  ??_main 009A                             ___fttol@sign1 001C  
                                  ??_modf 002C                             __activetblptr 000003  
                          __CFG_RETEN$OFF 000000                     ?_EUSART1_Transmit_ISR 0001  
                        __end_of___altoft 24D8                                    _CANCON 000F6F  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
                        __end_of___attoft 2832                          __end_of___ftpack 23D0  
                           main@lati_data 0110                           __CFG_BBSIZ$BB2K 000000  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAE  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  _RXB0D0 000F66                                    _RXB0D1 000F67  
                                  _RXB0D2 000F68                                    _RXB0D3 000F69  
                                  _RXB0D4 000F6A                                    _RXB1D0 000F36  
                                  _RXB0D5 000F6B                                    _RXB1D1 000F37  
                                  _RXB0D6 000F6C                                    _RXB1D2 000F38  
                                  _RXB0D7 000F6D                                    _RXB1D3 000F39  
                                  _RXB1D4 000F3A                                    _RXB1D5 000F3B  
                                  _RXB1D6 000F3C                                    _RXB1D7 000F3D  
                                  _SPBRG1 000FAF                                    _TXB0D0 000F26  
                                  _TXB0D1 000F27                                    _TXB0D2 000F28  
                                  _TXB0D3 000F29                                    _TXB0D4 000F2A  
                                  _TXB1D0 000F16                                    _TXB0D5 000F2B  
                                  _TXB1D1 000F17                                    _TXB0D6 000F2C  
                                  _TXB1D2 000F18                                    _TXB0D7 000F2D  
                                  _TXB1D3 000F19                                    _TXB1D4 000F1A  
                                  _TXB2D0 000F06                                    _TXB1D5 000F1B  
                                  _TXB2D1 000F07                                    _TXB1D6 000F1C  
                                  _TXB2D2 000F08                                    _TXB1D7 000F1D  
                                  _TXB2D3 000F09                                    _TXB2D4 000F0A  
                                  _TXB2D5 000F0B                                    _TXB2D6 000F0C  
                                  _TXB2D7 000F0D                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                    cvtGPStoDecimal@decPart 008E  
                          __CFG_XINST$OFF 000000                                    ___ftge 23D0  
                                  ___lmul 2688                                 ??___ftadd 0021  
                          __CFG_STVREN$ON 000000                             main@longitude 016B  
                               ??___ftdiv 0030                                 ??___ftneg 0016  
                  cvtGPStoDecimal@latMode 0070                                 ??___ftmul 0021  
                               ??___fttol 0017                    cvtGPStoDecimal@intPart 0094  
                                  _memcpy 272E                          ?_TMR0_Initialize 0001  
                                  _memset 2894                                    clear_0 2798  
                                  clear_1 27A4                    cvtGPStoDecimal@tempStr 007D  
                                  _strcmp 25BE                                    _strlen 27B4  
                                  _strtod 13FC                     ___ftmul@f3_as_product 0025  
                               ??_isalpha 0016                                 ??_isdigit 0013  
                               ??_isalnum 0019                         ??_cvtGPStoDecimal 003A  
                            __mediumconst 0000                                 ??_isspace 0013  
               __size_of_convertCANid2Reg 019E                                    tblptrh 000FF7  
                               ??_isupper 0013                                    tblptrl 000FF6  
                                  tblptru 000FF8  TMR0_SetInterruptHandler@InterruptHandler 0013  
                         _eusart1RxBuffer 00B7             __size_of_INTERRUPT_Initialize 0004  
                         _eusart1TxBuffer 003B                         _SYSTEM_Initialize 2A6C  
                              __accesstop 0060                   __end_of__initialization 27AA  
                              ___altoft@c 001B                                ___ftadd@f1 001B  
                              ___ftadd@f2 001E                                ___ftge@ff1 0013  
                              ___ftge@ff2 0016               cvtGPStoDecimal@convertedGPS 0097  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              ___ftdiv@f1 002A                                ___ftdiv@f2 002D  
                              ___ftdiv@f3 0034                                ___attoft@c 0022  
                              ___ftneg@f1 0013                                ___ftmul@f1 001B  
                              ___ftmul@f2 001E                                ___fttol@f1 0013  
                          __pcstackCOMRAM 0001                              __pidataBANK0 2A54  
                     ??_SYSTEM_Initialize 0015                                 ?_TMR0_ISR 0001  
                    __end_of_EUSART1_Read 272E                     __size_of_CAN_transmit 02FE  
                  ??_EUSART1_Transmit_ISR 0001               __end_of_EUSART1_Receive_ISR 28EC  
                      __size_of_getString 0060                 __end_of_SYSTEM_Initialize 2A82  
                           _eusart1RxHead 0045                             _eusart1TxHead 0047  
                           _eusart1RxTail 0044                                __pbssBANK0 00B7  
                           _eusart1TxTail 0046                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0048                                   ?___ftge 0013  
        __end_of_TMR0_SetInterruptHandler 2A9E                                   ?___lmul 0013  
                            _CAN_transmit 17E4                                ??_TMR0_ISR 0001  
                               ?___altoft 001B                                   ?_memcpy 0013  
                          main@count_1418 0169                                   _ECANCON 000F72  
                                 ?_memset 0013                            ___lmul@product 001B  
                               ?___attoft 0022                                   _CANSTAT 000F6E  
                               ?___ftpack 0013                                   _BRGCON1 000E43  
                                 _BRGCON2 000E44                                   _BRGCON3 000E45  
                                 ?_strcmp 0021                                   ?_strlen 0013  
                                 ?_strtod 0060                          __CFG_CANMX$PORTB 000000  
                              _fillString 254E                                   _REFOCON 000F9A  
                       getString@testSize 0019                                   _OSCCON2 000FD2  
                                 _RXB0DLC 000F65                                   _RXB1DLC 000F35  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000F7D  
                                 _TXB0DLC 000F25                                   _TXB1DLC 000F15  
                                 _TXB2DLC 000F05                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                       __end_of_getString 2688                           __size_of___ftge 0090  
                         __size_of___lmul 0056                                   ___ftadd 1D0A  
                          main@longi_data 0104                                   ___ftdiv 223C  
                                 ___ftneg 29AE                                   ___ftmul 2148  
                                 ___fttol 2054                              __psmallconst 0F00  
                              ??___altoft 001F                                ??___attoft 0025  
                                 __pcinit 2772                           __size_of_memcpy 0044  
                              ??___ftpack 0018                           __size_of_memset 002C  
                                 __ramtop 0F00                                   __ptext0 0F0A  
                                 __ptext1 25BE                                   __ptext2 2894  
                                 __ptext3 28EC                                   __ptext4 2914  
                                 __ptext5 2A18                                   __ptext6 2628  
                                 __ptext7 27B4                                   __ptext8 26DE  
                                 __ptext9 254E                                 _T0CONbits 000FD5  
             __end_of_ECAN_ISR_ECAN_TXB0I 2AA6                           __size_of_strcmp 006A  
                         __size_of_strlen 0040                           __size_of_strtod 03E8  
                   _OSCILLATOR_Initialize 2A82                                   _isalpha 2914  
                                 _isdigit 2A36                                   _isalnum 28EC  
                 cvtGPStoDecimal@inputGPS 006E                        _EUSART1_Initialize 2832  
                        _convertCANid2Reg 1EB6                  ??_PIN_MANAGER_Initialize 0013  
                                 _isspace 2964                         __CFG_MSSPMSK$MSK7 000000  
                                 _isupper 2A18                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 27AA                       ?_EUSART1_Initialize 0001  
                                 memcpy@d 0019                                   memcpy@n 0017  
                                 memcpy@s 001B                                   memset@c 0015  
                                 memset@n 0017                                   memset@p 0019  
                          main@testString 015D                    fillString@startOfCycle 0017  
                     getString@testString 001F                                   postdec1 000FE5  
                                 postdec2 000FDD                           _cvtGPStoDecimal 1AE2  
                                 postinc0 000FEE                                   postinc2 000FDE  
                   __size_of_EUSART1_Read 0050                      ??_EUSART1_Initialize 0013  
                                 strcmp@r 0028                                   strlen@s 0013  
                                 strtod@s 0060                  _TMR0_SetInterruptHandler 2A94  
                     main@testString_1422 0176                       main@testString_1426 0177  
                             ?_fillString 0013                    CAN_transmit@tempCanMsg 0025  
                              main@i_1423 016E                                main@i_1424 0170  
                              main@i_1427 0172                                main@i_1428 0174  
                              main@latDec 0161                                main@gotGPS 0178  
                             ___ftdiv@exp 0037                                main@gpsMSG 017D  
                            _EUSART1_Read 26DE                  EUSART1_Read@timeOutCount 0013  
                             ___ftmul@exp 0024                    fillString@outputString 0013  
            __end_of_INTERRUPT_Initialize 2AA2                     fillString@currentChar 001F  
                          __end_of___ftge 2460                            __end_of___lmul 26DE  
                       __size_of_TMR0_ISR 0024                            __end_of_memcpy 2772  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_memset 28C0  
                   cvtGPStoDecimal@F15316 00AC                     cvtGPStoDecimal@F15319 00A0  
                          __end_of_strcmp 2628                            __end_of_strlen 27F4  
                          __end_of_strtod 17E4                       start_initialization 2772  
                __size_of_TMR0_Initialize 0022           __size_of_PIN_MANAGER_Initialize 0028  
                  fillString@stringSource 0015               cvtGPStoDecimal@tempStr_1459 0071  
                 __end_of_cvtGPStoDecimal 1D0A                       __size_of_fillString 0070  
                                ??___ftge 0019                                  ??___lmul 001B  
                             __pdataBANK0 00A0                                  ??_memcpy 0019  
                                ??_memset 0019                                  ??_strcmp 0027  
                                ??_strlen 0015                                  ??_strtod 0039  
                          _eusart1RxCount 0043                         __size_of___altoft 0078  
                       __size_of___attoft 003E                         __size_of___ftpack 00AE  
                             __pbssCOMRAM 003B             __size_of_EUSART1_Transmit_ISR 002E  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                            _isalpha$1715 0017                              _isdigit$1718 0014  
                            _isalnum$1707 001A              __size_of_EUSART1_Receive_ISR 002C  
                   _TMR0_InterruptHandler 0048                    _PIN_MANAGER_Initialize 293C  
                __end_of_convertCANid2Reg 2054                                 __pintcode 0008  
                                ?___ftadd 001B                                  ?___ftdiv 002A  
                                ?___ftneg 0013                                  ?___ftmul 001B  
                                ?___fttol 0013                                 _getString 2628  
            ??_INTERRUPT_InterruptManager 0001                               __smallconst 0F00  
                                _BAUDCON1 000FA7                               _COMSTATbits 000F71  
                                ?_isalpha 0001                                  ?_isdigit 0001  
                                ?_isalnum 0001                                  ?_isspace 0001  
                                ?_isupper 0001            convertCANid2Reg@tempPassedInID 0013  
                    _INTERRUPT_Initialize 2A9E                         ??_TMR0_Initialize 0015  
                    fillString@commaFound 001B                          ?_cvtGPStoDecimal 006E  
                                _PIE1bits 000F9D                        getString@testCycle 001D  
                                _PIE5bits 000F76                                  i2u110_48 29E4  
     __size_of_INTERRUPT_InterruptManager 00C8                ??_TMR0_SetInterruptHandler 0015  
                                _PIR1bits 000F9E                                  _PIR5bits 000F77  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RXB1EIDH 000F33                                  _RXB1EIDL 000F34  
                                _RCONbits 000FD0                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXB1SIDH 000F31  
                                _RXF0EIDH 000EE2                                  _RXB1SIDL 000F32  
                                _RXF0EIDL 000EE3                                  _RXF1EIDH 000EE6  
                                _RXF1EIDL 000EE7                                  _RXF2EIDH 000EEA  
                                _RXF2EIDL 000EEB                                  _RXF3EIDH 000EEE  
                                _RXF3EIDL 000EEF                                  _RXF4EIDH 000EF2  
                                _RXF4EIDL 000EF3                                  _RXF5EIDH 000EF6  
                                _RXF5EIDL 000EF7                                  _RXF0SIDH 000EE0  
                                _RXF0SIDL 000EE1                                  _TXB0EIDH 000F23  
                                _RXF1SIDH 000EE4                                  _TXB0EIDL 000F24  
                                _RXF1SIDL 000EE5                                  _TXB1EIDH 000F13  
                                _RXF2SIDH 000EE8                                  _TXB1EIDL 000F14  
                                _RXF2SIDL 000EE9                                  _TXB2EIDH 000F03  
                                _RXF3SIDH 000EEC                                  _TXB2EIDL 000F04  
                                _RXF3SIDL 000EED                                  _RXF4SIDH 000EF0  
                                _RXF4SIDL 000EF1                                  _TMR0_ISR 29D2  
                                _RXF5SIDH 000EF4                                  _RXF5SIDL 000EF5  
                                _RXM0EIDH 000EFA                                  _RXM0EIDL 000EFB  
                                _TXB0SIDH 000F21                                  _RXM1EIDH 000EFE  
                                _TXB0SIDL 000F22                                  _RXM1EIDL 000EFF  
                                _TXB1SIDH 000F11                                  _TXB1SIDL 000F12  
                             strtod@flags 0065                                  _TXB2SIDH 000F01  
                                _TXB2SIDL 000F02                                  _RXM0SIDH 000EF8  
                                _RXM0SIDL 000EF9                                  _RXM1SIDH 000EFC  
                                _RXM1SIDL 000EFD                               strtod@expon 0066  
                              ?_getString 0019                          __CFG_SOSCSEL$DIG 000000  
                            ??_fillString 0019                                 main@count 0167  
                               main@value 011C                              _isspace$1721 0014  
                        main@testInt_1429 015B              __size_of_ECAN_ISR_ECAN_TXB0I 0004  
                       ___lmul@multiplier 0013                               _INTCON2bits 000FF1  
                               copy_data0 2786                     ?_INTERRUPT_Initialize 0001  
                   EUSART1_Read@readValue 0015                                  __Hrparam 0000  
                               memcpy@tmp 001D                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                        __end_of_fillString 25BE  
                               modf@value 0027                 convertCANid2Reg@canIdType 0017  
                 ??_OSCILLATOR_Initialize 0013                          __size_of___ftadd 01AC  
                        __size_of___ftdiv 00E6                          __size_of___ftneg 0024  
                                ___altoft 2460                          __size_of___ftmul 00F4  
                        __size_of___fttol 00F4               __size_of_EUSART1_Initialize 0034  
                                ___attoft 27F4                                  ___ftpack 2322  
                            _isupper$1724 0014                   convertCANid2Reg@wipSIDL 0024  
                        __size_of_isalpha 0028                          __size_of_isdigit 001E  
                        __size_of_isalnum 0028                          __size_of_isspace 0026  
                                __ptext10 1AE2                                  __ptext11 24D8  
                                __ptext20 2688                                  __ptext12 2054  
                                __ptext21 29AE                                  __ptext13 1D0A  
                                __ptext30 293C                                  __ptext22 2148  
                                __ptext14 27F4                                  __ptext31 2A82  
                                __ptext23 23D0                                  __ptext15 272E  
                                __ptext40 28C0                                  __ptext32 2A9E  
                                __ptext24 223C                                  __ptext16 298A  
                                __ptext41 2AA2                                  __ptext33 2832  
                                __ptext25 2460                                  __ptext17 13FC  
                                __ptext42 0000                                  __ptext34 17E4  
                                __ptext26 2322                                  __ptext18 2964  
                                __ptext35 1EB6                                  __ptext27 2A6C  
                                __ptext19 2A36                                  __ptext28 29F6  
                                __ptext37 29D2                                  __ptext29 2A94  
                                __ptext38 2AA6                                  __ptext39 2866  
                        __size_of_isupper 001E                             __size_of_atof 0024  
                           __size_of_main 04F2                       fillString@findCycle 001D  
                           __size_of_modf 0076                       fillString@fillCycle 0019  
    __end_of_TMR0_DefaultInterruptHandler 2AA8     __size_of_TMR0_DefaultInterruptHandler 0002  
            _TMR0_DefaultInterruptHandler 2AA6                             ?_CAN_transmit 0025  
                              strtod@eexp 0064                                  int$flags 004C  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                             ??_getString 001B                                  main@data 017C  
                     __CFG_INTOSCSEL$HIGH 000000                       _EUSART1_Receive_ISR 28C0  
                             _RXB0CONbits 000F60                               _RXB1CONbits 000F30  
                              _INTCONbits 000FF2                                  memcpy@d1 0013  
                                memcpy@s1 0015                                  modf@iptr 002A  
                                isalpha@c 0018                                  isdigit@c 0015  
                  ??_INTERRUPT_Initialize 0013                                  memset@p1 0013  
                                isalnum@c 001B                                  intlevel2 0000  
                    ?_EUSART1_Receive_ISR 0001                                  isspace@c 0015  
                 ?_PIN_MANAGER_Initialize 0001                               _TXB0CONbits 000F20  
                              _RCSTA1bits 000FAB                               _TXB1CONbits 000F10  
                                isupper@c 0015              __end_of_EUSART1_Transmit_ISR 2894  
                             _TXB2CONbits 000F00             ?_TMR0_DefaultInterruptHandler 0001  
                          ??_CAN_transmit 0027                         ?_convertCANid2Reg 0013  
                               strtod@res 0062                        __CFG_WDTPS$1048576 000000  
                      ??_convertCANid2Reg 0020                                  strcmp@s1 0021  
                                strcmp@s2 0024                           _TMR0_Initialize 29F6  
                                strlen@cp 0017                                  strtod@_u 0067  
                   ??_EUSART1_Receive_ISR 0001            __end_of_PIN_MANAGER_Initialize 2964  
                     __CFG_BORPWR$ZPBORMV 000000  
